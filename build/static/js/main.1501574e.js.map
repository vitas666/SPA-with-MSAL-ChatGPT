{"version":3,"file":"static/js/main.1501574e.js","mappings":"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,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,OAAO,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,KAAK,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,OAAO,OAAO,OAAO,OAAO,KAAK,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,KAAK,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,KAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,KAAK,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,KAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,KAAK,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,KAAK,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,OAAO,OAAO,KAAK,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,KAAK,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,IAAI,IAAI,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAC36nl/phw3I,iBAAizjxxvlhD,OAAS,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,K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UA,IAAIu4D,EAAY,CACd,CACE,UAAa,CACX,CACE,OAAU,CACR,oBACA,QACA,QAEF,KAAQ,UAGZ,QAAW,gBAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,MACA,QACA,WACA,UAEF,KAAQ,UAEV,CACE,OAAU,CACR,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEF,KAAQ,cAEV,CACE,OAAU,CACR,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEF,KAAQ,cAEV,CACE,OAAU,CACR,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEF,KAAQ,cAEV,CACE,OAAU,CACR,qBACA,WACA,aACA,aACA,YACA,WACA,aACA,mBAEF,KAAQ,cAEV,CACE,OAAU,CACR,SACA,WACA,cACA,cACA,mBACA,WACA,aACA,eACA,eACA,aACA,YACA,WACA,aACA,mBAEF,KAAQ,cAEV,CACE,OAAU,CACR,kBACA,WACA,WACA,QACA,SACA,aACA,aACA,YACA,WACA,aACA,kBACA,gBAEF,KAAQ,cAEV,CACE,OAAU,CACR,cACA,mBACA,SACA,aACA,eACA,aACA,YACA,WACA,aACA,kBACA,UAEF,KAAQ,cAEV,CACE,OAAU,CACR,cACA,eACA,WAEF,KAAQ,gBAEV,CACE,OAAU,CACR,cACA,cACA,aACA,aACA,YACA,KACA,UAEF,KAAQ,eAEV,CACE,OAAU,CACR,cACA,aACA,aAEF,KAAQ,eAEV,CACE,OAAU,CACR,cACA,aACA,aAEF,KAAQ,eAEV,CACE,OAAU,CACR,cACA,cACA,aACA,YACA,cACA,MAEF,KAAQ,eAEV,CACE,OAAU,CACR,eAEF,KAAQ,eAEV,CACE,OAAU,CACR,UACA,MACA,OACA,SACA,UAEF,KAAQ,UAEV,CACE,OAAU,CACR,UACA,UAEF,KAAQ,UAEV,CACE,OAAU,CACR,cACA,MACA,YACA,eAEF,KAAQ,aAEV,CACE,OAAU,CACR,UACA,cACA,aACA,YACA,UACA,eAEF,KAAQ,eAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,iBACA,QACA,SACA,QACA,cACA,SACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,SACA,WACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,SACA,eACA,YAEF,KAAQ,gBAEV,CACE,OAAU,CACR,iBACA,mBAEF,KAAQ,mBAGZ,QAAW,gCAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,UACA,WACA,kBACA,SACA,UACA,aACA,MACA,YACA,SAEF,KAAQ,OAEV,CACE,OAAU,CACR,WAEF,KAAQ,YAGZ,QAAW,oDAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,OACA,aACA,UACA,SACA,YAEF,KAAQ,SAGZ,QAAW,qDAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,sBACA,SACA,YAEF,KAAQ,UAEV,CACE,OAAU,CACR,cACA,eAEF,KAAQ,eAEV,CACE,OAAU,CACR,aACA,QACA,WACA,YACA,YACA,OACA,cACA,UAEF,KAAQ,cAGZ,QAAW,wCAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,UACA,gBACA,SACA,aACA,SACA,iBACA,iBACA,UACA,WACA,eAEF,KAAQ,WAGZ,QAAW,sCAEb,CACE,UAAa,CACX,CACE,OAAU,CACR,cACA,aACA,cACA,kBACA,eAEF,KAAQ,eAEV,CACE,OAAU,CACR,YAEF,KAAQ,YAEV,CACE,OAAU,CACR,SACA,YAEF,KAAQ,YAEV,CACE,OAAU,CACR,kBAEF,KAAQ,mBAGZ,QAAW,mCAMXD,EAAoB,CAAC,EACzBC,EAAUz8E,SAAQ,SAAS08E,GACzBA,EAASD,UAAUz8E,SAAQ,SAASu7E,GAClCA,EAASoB,OAAO38E,SAAQ,SAASkkB,GAC/Bs4D,EAAkBt4D,GAASq3D,CAC7B,GACF,GACF,IAIA,IAiIIqB,EA4BAC,EA7JAC,EAAW,CAAC,EAEZC,EAAW,CAAC,EAYhB,SAASC,EAAkBC,EAASvmG,GAClC,OAAKA,GACEA,EAAMumG,IADM,IAErB,CAQA,SAASC,EAAgBZ,EAAY5lG,GACnC,IAAIumG,EAAUvmG,EAAM+U,QAAQ6wF,GAC5B,OAAoB,IAAbW,EAAiB,KAAOA,CACjC,CAMA,SAASvmG,EAAMW,GACb,KAAM,qBAAsBitC,GAC1B,MAAMlxC,MAAM,yEAGd,OAAOkxC,EAAO,oBAAoBjtC,EACpC,CA2Hc,IAAI8lG,EAAmB,QAUrC,SAAS/oG,EAAY8vC,EAAOpxC,GAE1B,KAAMwS,gBAAgBlR,GACpB,MAAMiP,UAAU,+CAClB6gC,OAAkBvxC,IAAVuxC,EAAsBzmC,OAAOymC,GAASi5D,EAC9CrqG,EAAU2oG,EAAa3oG,GAQvBwS,KAAK83F,UAAY,KAEjB93F,KAAK+3F,SAAW,KAEhB/3F,KAAKg4F,YAAa,EAElBh4F,KAAKi4F,UAAW,EAEhBj4F,KAAKk4F,YAAc,cAEnBl4F,KAAKm4F,eAAgB,EAKrB,IAAIlC,EAAWgB,EAAYr4D,GAG3B,GAAiB,OAAbq3D,GAAuC,gBAAlBA,EAASlkG,KAChC,MAAMhE,WAAW,qBAAuB6wC,GAC1C,IAAK64D,EAASxB,EAASlkG,MACrB,MAAMjE,MAAM,6EAKd,IAAIsqG,EAAMp4F,KAuBV,OApBAo4F,EAAIN,UAAY7B,EAIZj/C,QAAQxpD,EAAe,SACzB4qG,EAAIF,YAAc,SAIhBlhD,QAAQxpD,EAAmB,aAC7B4qG,EAAIJ,YAAa,GAGdz/F,OAAO0Q,iBACVjJ,KAAKi2F,SAAWmC,EAAIN,UAAU/lG,KAAKzE,cACnC0S,KAAK62F,MAA4B,UAApBuB,EAAIF,YACjBl4F,KAAKq4F,UAAYD,EAAIJ,YAIhBI,CACT,CA+JA,SAASx2F,EAAYg9B,EAAOpxC,GAE1B,KAAMwS,gBAAgB4B,GACpB,MAAM7D,UAAU,+CAClBvQ,EAAU2oG,EAAa3oG,GAKvBwS,KAAK83F,UAAY,KAEjB93F,KAAKs4F,SAAW,KAIhBt4F,KAAKm4F,eAAgB,EAErBn4F,KAAKu4F,OAASvhD,QAAQxpD,EAAe,OAAK,QAAU,cAGpD,IAAIgrG,EAAMx4F,KAGV,GAAIg3C,QAAQxpD,EAAyC,iCAAI,CAGvD,IAAIyoG,EAAWgB,EADfr4D,OAAkBvxC,IAAVuxC,EAAsBzmC,OAAOymC,GAASi5D,GAE9C,GAAiB,OAAb5B,GAAuC,gBAAlBA,EAASlkG,KAChC,MAAMhE,WAAW,qBAAuB6wC,GAC1C,IAAK44D,EAASvB,EAASlkG,MACrB,MAAMjE,MAAM,6EAGd0qG,EAAIV,UAAY7B,CAClB,MAEEuC,EAAIV,UAAYb,EAAY,cAEd5pG,IAAVuxC,GAAuB,YAAaI,GACtCjzC,QAAQmI,KAAK,yEAUjB,OAJKqE,OAAO0Q,iBACVjJ,KAAKi2F,SAAWuC,EAAIV,UAAU/lG,KAAKzE,eAG9BkrG,CACT,CAmFA,SAASC,EAAYjrG,GACnB,IAAIqpG,EAAQrpG,EAAQqpG,MAMM6B,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAsB,IACtBC,EAAsB,IAShD94F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAAuC,IAAtBsC,EAE5B,OADAA,EAAoB,EACbhC,EAAaC,GAItB,GAAIkC,IAASzC,EACX,OAAOK,EAGT,GAA0B,IAAtBiC,EAAyB,CAG3B,GAAI1C,EAAQ6C,EAAM,EAAM,KAEtB,OAAOA,EAIJ,GAAI7C,EAAQ6C,EAAM,IAAM,KAE3BH,EAAoB,EAGpBF,EAAyB,GAAPK,OAIf,GAAI7C,EAAQ6C,EAAM,IAAM,KAEd,MAATA,IACFF,EAAsB,KAEX,MAATE,IACFD,EAAsB,KAExBF,EAAoB,EAEpBF,EAAyB,GAAPK,MAIf,KAAI7C,EAAQ6C,EAAM,IAAM,KAgB3B,OAAOnC,EAAaC,GAdP,MAATkC,IACFF,EAAsB,KAEX,MAATE,IACFD,EAAsB,KAExBF,EAAoB,EAEpBF,EAAyB,EAAPK,CAOpB,CAGA,OAAO,IACT,CAIA,IAAK7C,EAAQ6C,EAAMF,EAAqBC,GAatC,OARAJ,EAAkBE,EAAoBD,EAAkB,EACxDE,EAAsB,IACtBC,EAAsB,IAGtB/1F,EAAO2zF,QAAQqC,GAGRnC,EAAaC,GAiBtB,GAZAgC,EAAsB,IACtBC,EAAsB,IAItBJ,EAAmBA,GAAmB,EAAa,GAAPK,GAG5CJ,GAAmB,KAIKC,EACtB,OAAO,KAGT,IAAI5B,EAAa0B,EAOjB,OAHAA,EAAkBE,EAAoBD,EAAkB,EAGjD3B,CACT,CACF,CAQA,SAASgC,EAAYxrG,GACPA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAGT,IAAInD,EAAO3mG,EAEPgpG,EAAQc,EAAY,IAAQ,OAE9BnD,EAAQ,EACR3mG,EAAS,KAGFgpG,EAAQc,EAAY,KAAQ,QAEnCnD,EAAQ,EACR3mG,EAAS,KAGFgpG,EAAQc,EAAY,MAAS,WAEpCnD,EAAQ,EACR3mG,EAAS,KAQX,IAHA,IAAIqV,EAAQ,EAAEy0F,GAAe,EAAInD,GAAU3mG,GAGpC2mG,EAAQ,GAAG,CAGhB,IAAIoF,EAAOjC,GAAe,GAAKnD,EAAQ,GAGvCtxF,EAAM1V,KAAK,IAAe,GAAPosG,GAGnBpF,GAAS,CACX,CAGA,OAAOtxF,CACT,CACF,CAsBA,SAAS22F,EAAkB9nG,EAAO5D,GAChC,IAAIqpG,EAAQrpG,EAAQqpG,MAQpB72F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAE9B,GAAIA,IAASzC,EACX,OAAOK,EAIT,GAAIP,EAAY2C,GACd,OAAOA,EAIT,IAAI/B,EAAa5lG,EAAM2nG,EAAO,KAG9B,OAAmB,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CACF,CASA,SAASmC,EAAkB/nG,EAAO5D,GACpBA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAIT,IAAIW,EAAUC,EAAgBZ,EAAY5lG,GAO1C,OAJgB,OAAZumG,GACFZ,EAAaC,GAGRW,EAAU,GACnB,CACF,CAmDA,SAASyB,EAAe5rG,GACtB,IAAIqpG,EAAQrpG,EAAQqpG,MAGMwC,EAAgB,EAChBC,EAAiB,EACjBC,EAAgB,EAQ1Cv5F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAAmC,IAAlB+C,GACP,IAAnBC,GAA6C,IAAlBC,EAC7B,OAAO5C,EAaT,IAAIK,EAEJ,GAVI+B,IAASzC,GACU,IAAlB+C,GAA6C,IAAnBC,GACR,IAAlBC,IACHF,EAAgB,EAChBC,EAAiB,EACjBC,EAAgB,EAChB3C,EAAaC,IAIO,IAAlB0C,EAAwB,CAE1BvC,EAAa,KAKTd,EAAQ6C,EAAM,GAAM,MACtB/B,EA91BR,SAAwCW,GAGtC,GAAKA,EAAU,OAASA,EAAU,OAAYA,EAAU,QACtD,OAAO,KAGT,GAAgB,OAAZA,EAAkB,OAAO,MAK7B,IAGI/qG,EAHAM,EAAS,EACTssG,EAAoB,EACpBC,EAAMroG,EAAM,kBAEhB,IAAKxE,EAAI,EAAGA,EAAI6sG,EAAIrsG,SAAUR,EAAG,CAE/B,IAAI2b,EAAQkxF,EAAI7sG,GAChB,KAAI2b,EAAM,IAAMovF,GAId,MAHAzqG,EAASqb,EAAM,GACfixF,EAAoBjxF,EAAM,EAI9B,CAIA,OAAOixF,EAAoB7B,EAAUzqG,CACvC,CAg0BqBwsG,CAEgB,IADgC,KAA9B,IAAxBL,EAAgB,KAAaC,EAAiB,IAChDC,EAAgB,KAAaR,EAAO,KAK3C,IAAIx3F,EAAS,CAAC+3F,EAAgBC,EAAeR,GAU7C,OANAM,EAAgB,EAChBC,EAAiB,EACjBC,EAAgB,EAIG,OAAfvC,GACFj0F,EAAO2zF,QAAQn1F,GACRq1F,EAAaC,IAIfG,CACT,CAGA,GAAuB,IAAnBsC,EAIF,OAAIpD,EAAQ6C,EAAM,IAAM,MACtBQ,EAAgBR,EACT,OAKTh2F,EAAO2zF,QAAQ,CAAC4C,EAAgBP,IAChCM,EAAgB,EAChBC,EAAiB,EACV1C,EAAaC,IAItB,GAAsB,IAAlBwC,EAAwB,CAI1B,GAAInD,EAAQ6C,EAAM,GAAM,IAEtB,OADAO,EAAiBP,EACV,KAKT,IAAIY,EAAON,EACP1B,EAAU,KACd0B,EAAgB,EAIhB,IAAInsG,EAAS6rG,EAAO,IAAO,GAAO,GAmBlC,OAdI7C,EAAQ6C,EAAM,GAAM,MAAS7C,EAAQ6C,EAAM,IAAM,QACnDpB,EAA0B,KAAfgC,EAAO,MAAeZ,EAAO7rG,IASvB,QALnB8pG,EAAyB,OAAZW,EAAmB,KAC5BD,EAAkBC,EAASvmG,EAAM,cAIVglG,EAAY2C,IACrCh2F,EAAO2zF,QAAQqC,GAGE,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CAIA,OAAIZ,EAAY2C,GACPA,EAGI,MAATA,EACK,KAIL7C,EAAQ6C,EAAM,IAAM,MACtBM,EAAgBN,EACT,MAIFnC,EAAaC,EACtB,CACF,CASA,SAAS+C,EAAepsG,EAASqsG,GACnBrsG,EAAQqpG,MAOpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAGT,GAAmB,QAAfA,EACF,OAAOD,EAAaC,GAItB,GAAI6C,GAA2B,OAAf7C,EACd,OAAO,IAIT,IAAIW,EAAUC,EAAgBZ,EAAY5lG,EAAM,YAGhD,GAAgB,OAAZumG,EAAkB,CAGpB,IAGImC,EAAQnC,EAAU,IAMtB,MAAO,CATI3yC,EAAM2yC,EAAU,KAAO,IASpBmC,GAHDA,EAAQ,GAAO,GAAO,IAIrC,CAGA,GAAID,EACF,OAAO9C,EAAaC,GAItBW,EAl+BJ,SAAsCX,GAEpC,GAAmB,QAAfA,EAAuB,OAAO,KAKlC,IAGIpqG,EAHAM,EAAS,EACT6sG,EAAiB,EACjBN,EAAMroG,EAAM,kBAEhB,IAAKxE,EAAI,EAAGA,EAAI6sG,EAAIrsG,SAAUR,EAAG,CAE/B,IAAI2b,EAAQkxF,EAAI7sG,GAChB,KAAI2b,EAAM,IAAMyuF,GAId,MAHA9pG,EAASqb,EAAM,GACfwxF,EAAiBxxF,EAAM,EAI3B,CAIA,OAAOwxF,EAAiB/C,EAAa9pG,CACvC,CAy8Bc8sG,CAA6BhD,GAGvC,IAAIiD,EAAQj1C,EAAM2yC,EAAU,GAAK,IAAM,IAMnCuC,EAAQl1C,GAHZ2yC,GAA4B,GAARsC,EAAa,IAAM,IAGX,GAAK,KAM7BE,EAAQn1C,GAHZ2yC,GAA4B,GAARuC,EAAa,KAGL,IAO5B,MAAO,CAACD,EAAQ,IACRC,EAAQ,GACRC,EAAQ,IANJxC,EAAkB,GAARwC,EAON,GAClB,CACF,CAwBA,SAASC,EAAY5sG,GACnB,IAAIqpG,EAAQrpG,EAAQqpG,MAEMwD,EAAY,EAStCr6F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAA+B,IAAd+D,EAE5B,OADAA,EAAY,EACLzD,EAAaC,GAKtB,GAAIkC,IAASzC,GAA+B,IAAd+D,EAC5B,OAAO1D,EAKT,GAAkB,IAAd0D,EAAoB,CACtB,IAAIV,EAAOU,EACP1C,EAAU,KACd0C,EAAY,EAIZ,IAAIntG,EAAS6rG,EAAO,IAAO,GAAO,GAiBlC,QAZI7C,EAAQ6C,EAAM,GAAM,MAAS7C,EAAQ6C,EAAM,IAAM,QACnDpB,EAA0B,KAAfgC,EAAO,MAAeZ,EAAO7rG,IAWlCyqG,GACN,KAAK,KAAM,MAAO,CAAC,IAAQ,KAC3B,KAAK,KAAM,MAAO,CAAC,IAAQ,KAC3B,KAAK,KAAM,MAAO,CAAC,IAAQ,KAC3B,KAAK,KAAM,MAAO,CAAC,IAAQ,KAK7B,IAAIX,EAA0B,OAAZW,EAAoB,KAClCD,EAAkBC,EAASvmG,EAAM,SAQrC,OAJmB,OAAf4lG,GAAuBZ,EAAY2C,IACrCh2F,EAAO2zF,QAAQqC,GAGE,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CAIA,OAAIZ,EAAY2C,GACPA,EAIL7C,EAAQ6C,EAAM,IAAM,MACtBsB,EAAYtB,EACL,MAIFnC,EAAaC,EACtB,CACF,CAQA,SAASyD,EAAY9sG,GACPA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAGT,IAAIW,EAtlCR,SAA6BX,GAE3BO,EAAsBA,GACpBnmG,EAAM,QAAQF,KAAI,SAAS8lG,EAAYW,GACrC,OAAQA,EAAU,KAAuB,KAAOX,CAClD,IACF,IAAIuD,EAAShD,EAKb,OAAmB,OAAfP,GAAwC,OAAfA,GACV,OAAfA,GAAwC,OAAfA,GACV,QAAfA,GAAwC,QAAfA,EACpBuD,EAAO74E,YAAYs1E,GAIrBY,EAAgBZ,EAAYuD,EACrC,CAmkCkBC,CAAoBxD,GAGlC,GAAgB,OAAZW,EACF,OAAOZ,EAAaC,GAGtB,IAAI2C,EAAO30C,EAAM2yC,EAAU,KAAO,IAGlC,GAAIgC,EAAO,IACT,OAAO5C,EAAaC,GAGtB,IAAI8C,EAAQnC,EAAU,IAOtB,MAAO,CAACgC,EAAMG,GAHDA,EAAQ,GAAO,GAAO,IAIrC,CACF,CAwBA,SAASW,EAAajtG,GACpB,IAAIqpG,EAAQrpG,EAAQqpG,MAIO6D,GAAqB,EACtBC,EAAa,EASvC36F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAAgC,IAAfqE,EAE5B,OADAA,EAAa,EACN/D,EAAaC,GAKtB,GAAIkC,IAASzC,GAAgC,IAAfqE,EAC5B,OAAOhE,EAKT,GAAmB,MAAfgE,GAAuBzE,EAAQ6C,EAAM,IAAM,KAE7C,OADA4B,EAAa,EACN,MAAgB5B,EAMzB,GAAmB,MAAf4B,GAAuBzE,EAAQ6C,EAAM,IAAM,KAG7C,OAFA2B,GAAqB,EACrBC,EAAa5B,EACN,KAKT,GAAmB,IAAf4B,EAAqB,CACvB,IAAIhB,EAAOgB,EACXA,EAAa,EAGb,IAAI3D,EAAa,KAqBjB,OAfId,EAAQyD,EAAM,IAAM,MAASzD,EAAQ6C,EAAM,IAAM,OACnD/B,EAAaU,EACK,IAAfiC,EAAO,MAAcZ,EAAO,KAC7B3nG,EAAOspG,EAAiC,UAAZ,aAIhCA,GAAqB,EAIhBxE,EAAQ6C,EAAM,IAAM,MACvBh2F,EAAO2zF,QAAQqC,GAGE,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CAIA,OAAIZ,EAAY2C,GACPA,EAII,MAATA,GAA0B,MAATA,GAAiB7C,EAAQ6C,EAAM,IAAM,MACxD4B,EAAa5B,EACN,MAIFnC,EAAaC,EACtB,CACF,CAQA,SAAS+D,EAAaptG,GACRA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAGT,GAAmB,MAAfA,EACF,OAAO,GAGT,GAAmB,OAAfA,EACF,OAAO,IAKT,GAAId,EAAQc,EAAY,MAAQ,OAC9B,MAAO,CAAC,IAAMA,EAAa,MAAS,KAGnB,OAAfA,IACFA,EAAa,OAIf,IAAIW,EAAUC,EAAgBZ,EAAY5lG,EAAM,YAGhD,OAAgB,OAAZumG,EACKZ,EAAaC,GASf,CANIhyC,EAAM2yC,EAAU,IAAM,IAGrBA,EAAU,GAAK,IAI7B,CACF,CAmBA,SAASkD,EAAiBrtG,GACxB,IAAIqpG,EAAQrpG,EAAQqpG,MAEhBiE,EACK,EADLA,EAEK,EAFLA,EAGQ,EAHRA,EAIQ,EAJRA,EAKS,EALTA,EAMW,EANXA,EAOM,EAMgBC,EAA0BD,EAC1BE,EAAiCF,EACjCG,EAAiB,EAChBC,GAAwB,EAQnDl7F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAE9B,OAAQgC,GACR,QACA,KAAKD,EAKH,OAAa,KAAT/B,GAGFgC,EAA0BD,EACnB,MAIL5E,EAAQ6C,EAAM,EAAM,MAAkB,KAATA,GACjB,KAATA,GAA0B,KAATA,GAGtBmC,GAAwB,EACjBnC,GAILA,IAASzC,EAEJK,GAKTuE,GAAwB,EACjBtE,EAAaC,IAEtB,KAAKiE,EAKH,OAAa,KAAT/B,GAGFgC,EAA0BD,EACnB,MAII,KAAT/B,GAGFmC,GAAwB,EACjB,KAII,MAATnC,GAGFmC,GAAwB,EACjB,MAILhF,EAAQ6C,EAAM,EAAM,MAAkB,KAATA,GAA0B,KAATA,GAClC,KAATA,GAA0B,KAATA,GAA0B,MAATA,GAGvCmC,GAAwB,EACjBnC,GAILA,IAASzC,EAEJK,GAKTuE,GAAwB,EACjBtE,EAAaC,IAEtB,KAAKiE,EAKH,OAAa,KAAT/B,GAGFgC,EAA0BD,EACnB,MAIL5E,EAAQ6C,EAAM,GAAM,KAGtBmC,GAAwB,EACjB,MAAgBnC,GAIrBA,IAASzC,EAEJK,GAKTuE,GAAwB,EACjBtE,EAAaC,IAEtB,KAAKiE,EAKH,OAAa,KAAT/B,GAGFgC,EAA0BD,EACnB,MAIL5E,EAAQ6C,EAAM,GAAM,MAItBmC,GAAwB,EACxBD,EAAiBlC,EACjBgC,EAA0BD,EACnB,MAIL/B,IAASzC,EAEJK,GAKTuE,GAAwB,EACjBtE,EAAaC,IAEtB,KAAKiE,EAKH,GAAa,KAAT/B,EAIF,OADAgC,EAA0BD,EACnBlE,EAAaC,GAItB,GAAIX,EAAQ6C,EAAM,GAAM,KAAO,CAE7BgC,EAA0BD,EAG1B,IAII9D,EAAaU,EAJuB,IAAzBuD,EAAiB,IAAalC,EAAO,GAIR3nG,EAAM,YAGlD,OAAmB,OAAf4lG,EACKJ,EAAaC,GAGfG,CACT,CAGA,OAAI+B,IAASzC,GAGXyE,EAA0BD,EAC1B/3F,EAAO2zF,QAAQqC,GACRnC,EAAaC,KAMtBkE,EAA0BD,EACnBlE,EAAaC,IAEtB,KAAKiE,EAMH,OAAa,KAAT/B,GAA0B,KAATA,GACnBkC,EAAiBlC,EACjBgC,EAA0BD,EACnB,OAIT/3F,EAAO2zF,QAAQqC,GAKfmC,GAAwB,EACxBH,EAA0BC,EACnBpE,EAAaC,IAEtB,KAAKiE,EAKH,IAAInB,EAAOsB,EACXA,EAAiB,EAGjB,IAAIn4E,EAAQ,KAoBZ,GAjBa,KAAT62E,GAA0B,KAATZ,IACnBj2E,EAAQg4E,GAGG,KAATnB,GAA0B,KAATZ,IACnBj2E,EAAQg4E,GAGG,KAATnB,GAA0B,KAATZ,IACnBj2E,EAAQg4E,GAIG,KAATnB,GAA2B,KAATZ,GAA0B,KAATA,IACrCj2E,EAAQg4E,GAGI,OAAVh4E,EAAgB,CAGlBi4E,EAA0BA,EAA0Bj4E,EAGpD,IAAIq4E,EAAcD,EAOlB,OAJAA,GAAwB,EAIhBC,EAAqBvE,EAAaC,GAApB,IACxB,CAUA,OAPA9zF,EAAO2zF,QAAQ,CAACiD,EAAMZ,IAKtBmC,GAAwB,EACxBH,EAA0BC,EACnBpE,EAAaC,GAExB,CACF,CAQA,SAASuE,EAAiB5tG,GACZA,EAAQqpG,MAApB,IAKIiE,EACK,EADLA,EAEK,EAFLA,EAGO,EAEeO,EAAkBP,EAM5C96F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAK9B,GAAIA,IAAeV,GACf+E,IAAoBP,EAGtB,OAFA/3F,EAAO2zF,QAAQM,GACfqE,EAAkBP,EACX,CAAC,GAAM,GAAM,IAKtB,GAAI9D,IAAeV,GAAiB+E,IAAoBP,EACtD,OAAOnE,EAIT,IAAK0E,IAAoBP,GACpBO,IAAoBP,KACL,KAAf9D,GAAwC,KAAfA,GACV,KAAfA,GACH,OAAOD,EAAa,OAKtB,GAAIsE,IAAoBP,GACpBzE,EAAiBW,GACnB,OAAOA,EAKT,GAAIqE,IAAoBP,IAClBzE,EAAiBW,IACH,KAAfA,GAAwC,MAAfA,GACX,KAAdA,GAAsC,MAAdA,GAAwB,CAInD,GAAIX,EAAiBW,GACnB,OAAOA,EAGT,GAAmB,MAAfA,EACF,OAAO,GAGT,GAAmB,OAAfA,EACF,OAAO,GACX,CAMA,GAAIX,EAAiBW,IACjBqE,IAAoBP,EAGtB,OAFA/3F,EAAO2zF,QAAQM,GACfqE,EAAkBP,EACX,CAAC,GAAM,GAAM,IAOtB,IAAoB,MAAf9D,GAAwC,OAAfA,IAC1BqE,IAAoBP,EAGtB,OAFA/3F,EAAO2zF,QAAQM,GACfqE,EAAkBP,EACX,CAAC,GAAM,GAAM,IAIH,OAAf9D,IACFA,EAAa,OAIf,IAAIW,EAAUC,EAAgBZ,EAAY5lG,EAAM,YAGhD,OAAgB,OAAZumG,EACKZ,EAAaC,GAKlBqE,IAAoBP,GACtB/3F,EAAO2zF,QAAQM,GACfqE,EAAkBP,EACX,CAAC,GAAM,GAAM,KAUf,CANI91C,EAAM2yC,EAAU,IAAM,GAGrBA,EAAU,GAAK,GAI7B,CACF,CAmBA,SAAS2D,EAAgB9tG,GACvB,IAAIqpG,EAAQrpG,EAAQqpG,MAGM0E,EAAiB,EAQ3Cv7F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAAoC,IAAnBiF,EAE5B,OADAA,EAAiB,EACV3E,EAAaC,GAKtB,GAAIkC,IAASzC,GAAoC,IAAnBiF,EAC5B,OAAO5E,EAKT,GAAuB,IAAnB4E,EAAyB,CAC3B,IAAI5B,EAAO4B,EACP5D,EAAU,KACd4D,EAAiB,EAIjB,IAAIruG,EAAU6rG,EAAO,IAAQ,GAAO,GAIhCyC,EAAe7B,EAAO,IAAQ,IAAO,IAUzC,IALIzD,EAAQ6C,EAAM,GAAM,MAAS7C,EAAQ6C,EAAM,IAAM,QACnDpB,EAAiC,KAAtBgC,EAAO6B,GAAqBzC,EAAO7rG,GAI5CgpG,EAAQyB,EAAS,KAAM,OACzB,OAAO,MAAgBA,EAIzB,IAAIX,EAA0B,OAAZW,EAAoB,KAChCD,EAAkBC,EAASvmG,EAAM,YAQvC,OAJmB,OAAf4lG,GAAuBZ,EAAY2C,IACrCh2F,EAAO2zF,QAAQqC,GAGE,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CAIA,OAAIZ,EAAY2C,IAAkB,MAATA,EAChBA,EAIL7C,EAAQ6C,EAAM,IAAM,KACf,MAAgBA,EAKrB7C,EAAQ6C,EAAM,IAAM,MAAS7C,EAAQ6C,EAAM,IAAM,MACnDwC,EAAiBxC,EACV,MAIFnC,EAAaC,EACtB,CACF,CAQA,SAAS4E,EAAgBjuG,GACXA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,IAA8B,MAAfA,EAClC,OAAOA,EAGT,GAAmB,MAAfA,EACF,OAAO,GAGT,GAAmB,OAAfA,EACF,OAAO,IAIT,GAAId,EAAQc,EAAY,MAAQ,OAC9B,OAAOA,EAAa,MAAS,IAGZ,OAAfA,IACFA,EAAa,OAGf,IAAIW,EAh5DR,SAAiCX,GAU/B,OAPAM,EAAkBA,GAChBlmG,EAAM,WAAWF,KAAI,SAAS8lG,EAAYW,GACxC,OAAOzB,EAAQyB,EAAS,KAAM,MAAQ,KAAOX,CAC/C,IACWM,EAGCnxF,QAAQ6wF,EACxB,CAq4DkB0E,CAAwB1E,GAGtC,GAAgB,OAAZW,EACF,OAAOZ,EAAaC,GAGtB,IAAI2C,EAAO30C,EAAM2yC,EAAU,KAOvBmC,EAAQnC,EAAU,IAQtB,MAAO,CAACgC,GAXWA,EAAO,GAAQ,IAAO,KAWbG,GAJdA,EAAQ,GAAQ,GAAO,IAKvC,CACF,CAuBA,SAAS6B,EAAanuG,GACpB,IAAIqpG,EAAQrpG,EAAQqpG,MAGM+E,EAAa,EAQvC57F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAG9B,GAAIA,IAASzC,GAAgC,IAAfsF,EAE5B,OADAA,EAAa,EACNhF,EAAaC,GAKtB,GAAIkC,IAASzC,GAAgC,IAAfsF,EAC5B,OAAOjF,EAKT,GAAmB,IAAfiF,EAAqB,CACvB,IAAIjC,EAAOiC,EACPjE,EAAU,KACdiE,EAAa,EAIT1F,EAAQ6C,EAAM,GAAM,OACtBpB,EAA0B,KAAfgC,EAAO,MAAeZ,EAAO,KAI1C,IAAI/B,EAA0B,OAAZW,EACV,KAAOD,EAAkBC,EAASvmG,EAAM,WAQhD,OAJgB,OAAZumG,GAAoBvB,EAAY2C,IAClCh2F,EAAO2zF,QAAQqC,GAGE,OAAf/B,EACKJ,EAAaC,GAGfG,CACT,CAIA,OAAIZ,EAAY2C,GACPA,EAIL7C,EAAQ6C,EAAM,IAAM,MACtB6C,EAAa7C,EACN,MAIFnC,EAAaC,EACtB,CACF,CAQA,SAASgF,EAAaruG,GACRA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAIT,GAAIN,EAAiBW,GACnB,OAAOA,EAIT,IAAIW,EAAUC,EAAgBZ,EAAY5lG,EAAM,WAGhD,OAAgB,OAAZumG,EACKZ,EAAaC,GASf,CANIhyC,EAAM2yC,EAAU,KAAO,IAGrBA,EAAU,IAAO,GAIhC,CACF,CA2BA,SAASmE,EAAuBC,EAAWC,GAEzC,IAAI/B,EAAQ8B,GAAa,EAGrB7B,EAAoB,IAAZ6B,EAIZ,OAAIC,EACK,CAAC/B,EAAOC,GAEV,CAACA,EAAOD,EACjB,CASA,SAASgC,EAAaC,EAAU1uG,GAC9B,IAAIqpG,EAAQrpG,EAAQqpG,MACOsF,EAAkB,KAClBC,EAAuB,KAQlDp8F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAI9B,GAAIA,IAASzC,IAAsC,OAApB6F,GACoB,OAAzBC,GACxB,OAAOxF,EAAaC,GAKtB,GAAIkC,IAASzC,GAAqC,OAApB6F,GACD,OAAzBC,EACF,OAAOzF,EAKT,GAAwB,OAApBwF,EAEF,OADAA,EAAkBpD,EACX,KAIT,IAAIgD,EAgBJ,GAZEA,EAHEG,GAGWC,GAAmB,GAAKpD,GAIxBA,GAAQ,GAAKoD,EAG5BA,EAAkB,KAKW,OAAzBC,EAA+B,CACjC,IAAIC,EAAiBD,EAMrB,OALAA,EAAuB,KAKnBlG,EAAQ6F,EAAW,MAAQ,OACtB,MAAsC,MAA3BM,EAAiB,QAC9BN,EAAY,QAMnBh5F,EAAO2zF,QAAQoF,EAAuBC,EAAWG,IAC1CtF,EAAaC,GACtB,CAIA,OAAIX,EAAQ6F,EAAW,MAAQ,QAC7BK,EAAuBL,EAChB,MAKL7F,EAAQ6F,EAAW,MAAQ,OACtBnF,EAAaC,GAGfkF,CACT,CACF,CASA,SAASO,EAAaJ,EAAU1uG,GAClBA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,GAAIA,IAAeV,EACjB,OAAOK,EAKT,GAAIT,EAAQc,EAAY,EAAQ,OAC9B,OAAO8E,EAAuB9E,EAAYkF,GAI5C,IAAIvC,EAAOmC,EACwB,OAA/B9E,EAAa,OAAY,IAAckF,GAIvCpC,EAAQgC,EACyB,OAAjC9E,EAAa,MAAW,MAAiBkF,GAG7C,OAAOvC,EAAK1mE,OAAO6mE,EACrB,CACF,CAkCA,SAASyC,EAAoB/uG,GACfA,EAAQqpG,MAQpB72F,KAAKuyB,QAAU,SAASxvB,EAAQg2F,GAE9B,OAAIA,IAASzC,EACJK,EAILP,EAAY2C,GACPA,EAGF,MAASA,EAAO,GACzB,CACF,CAQA,SAASyD,EAAoBhvG,GACfA,EAAQqpG,MAMpB72F,KAAKuyB,QAAU,SAASxvB,EAAQi0F,GAE9B,OAAIA,IAAeV,EACVK,EAILN,EAAiBW,GACZA,EAILd,EAAQc,EAAY,MAAQ,OACvBA,EAAa,MAAS,IAGxBD,EAAaC,EACtB,CACF,CA9rEIz+F,OAAO0Q,iBAET1Q,OAAO0Q,eAAena,EAAY0J,UAAW,WAAY,CAEvDsE,IAAK,WAAa,OAAOkD,KAAK83F,UAAU/lG,KAAKzE,aAAe,IAK9DiL,OAAO0Q,eAAena,EAAY0J,UAAW,QAAS,CAEpDsE,IAAK,WAAa,MAA4B,UAArBkD,KAAKk4F,WAAyB,IAKzD3/F,OAAO0Q,eAAena,EAAY0J,UAAW,YAAa,CAExDsE,IAAK,WAAa,OAAOkD,KAAKg4F,UAAY,KAS9ClpG,EAAY0J,UAAUzJ,OAAS,SAAgBgC,EAAOvD,GACpD,IAAI+U,EAEFA,EADmB,kBAAVxR,GAAsBA,aAAiB4Q,YACxC,IAAIjV,WAAWqE,GACG,kBAAVA,GAAsB,WAAYA,GACzCA,EAAMwQ,kBAAkBI,YACzB,IAAIjV,WAAWqE,EAAMwQ,OACNxQ,EAAM0rG,WACN1rG,EAAM4a,YAErB,IAAIjf,WAAW,GAGzBc,EAAU2oG,EAAa3oG,GAKlBwS,KAAKm4F,gBACRn4F,KAAK+3F,SAAWN,EAASz3F,KAAK83F,UAAU/lG,MAAM,CAC5C8kG,MAA4B,UAArB72F,KAAKk4F,cACdl4F,KAAKi4F,UAAW,GAKlBj4F,KAAKm4F,cAAgBnhD,QAAQxpD,EAAgB,QAa7C,IATA,IAMI2V,EANAu5F,EAAe,IAAI94F,EAAOrB,GAG1Bo6F,EAAS,KAMA,CAEX,IAAI1wC,EAAQywC,EAAaxtG,OAKzB,GAAI+8D,IAAUqqC,EACZ,MASF,IAHAnzF,EAASnD,KAAK+3F,SAASxlE,QAAQmqE,EAAczwC,MAG9B0qC,EACb,MAEa,OAAXxzF,IACEzK,MAAMC,QAAQwK,GAChBw5F,EAAO9vG,KAAKiN,MAAM6iG,EAAqCx5F,GAEvDw5F,EAAO9vG,KAAKsW,GAOlB,CAEA,IAAKnD,KAAKm4F,cAAe,CACvB,EAAG,CAED,IADAh1F,EAASnD,KAAK+3F,SAASxlE,QAAQmqE,EAAcA,EAAaxtG,WAC3CynG,EACb,MACa,OAAXxzF,IAEAzK,MAAMC,QAAQwK,GAChBw5F,EAAO9vG,KAAKiN,MAAM6iG,EAAqCx5F,GAEvDw5F,EAAO9vG,KAAKsW,GAChB,QAAUu5F,EAAajG,eACvBz2F,KAAK+3F,SAAW,IAClB,CAmCA,OA1BA,SAAyBh1F,GA7mC3B,IAAkBlK,EAAOmY,EAooCrB,OApoCcnY,EAmnCD,CAAC,QAAS,WAAY,YAnnCdmY,EAmnC2BhR,KAAK83F,UAAU/lG,MAlnCjC,IAAzB8G,EAAMsN,QAAQ6K,IAmnCdhR,KAAKg4F,YAAeh4F,KAAKi4F,WACxBl1F,EAAO3V,OAAS,GAAmB,QAAd2V,EAAO,IAE9B/C,KAAKi4F,UAAW,EAChBl1F,EAAOsC,SACEtC,EAAO3V,OAAS,IAGzB4S,KAAKi4F,UAAW,IArhCxB,SAA4B2E,GAE1B,IADA,IAAI1sD,EAAI,GACCtjD,EAAI,EAAGA,EAAIgwG,EAAYxvG,SAAUR,EAAG,CAC3C,IAAIiwG,EAAKD,EAAYhwG,GACjBiwG,GAAM,MACR3sD,GAAK/3C,OAAO43E,aAAa8sB,IAEzBA,GAAM,MACN3sD,GAAK/3C,OAAO43E,aAA0B,OAAZ8sB,GAAM,IACQ,OAAT,KAALA,IAE9B,CACA,OAAO3sD,CACT,CAghCW4sD,CAAmB/5F,EAC5B,EAEuB7H,KAAK8E,KAAM28F,EACpC,EA6DIpkG,OAAO0Q,gBAET1Q,OAAO0Q,eAAerH,EAAYpJ,UAAW,WAAY,CAEvDsE,IAAK,WAAa,OAAOkD,KAAK83F,UAAU/lG,KAAKzE,aAAe,IAShEsU,EAAYpJ,UAAUiC,OAAS,SAAgBsiG,EAAYvvG,GACzDuvG,OAA4B1vG,IAAf0vG,EAA2B,GAAK5kG,OAAO4kG,GACpDvvG,EAAU2oG,EAAa3oG,GAKlBwS,KAAKm4F,gBACRn4F,KAAKs4F,SAAWd,EAASx3F,KAAK83F,UAAU/lG,MAAM,CAC5C8kG,MAAuB,UAAhB72F,KAAKu4F,UAChBv4F,KAAKm4F,cAAgBnhD,QAAQxpD,EAAgB,QAW7C,IARA,IAMI2V,EANApS,EAAQ,IAAI6S,EA3sClB,SAA4B5I,GAgB1B,IAZA,IAAIk1C,EAAI/3C,OAAO6C,GAGXgY,EAAIk9B,EAAE9iD,OAGNR,EAAI,EAGJokD,EAAI,GAGDpkD,EAAIomB,GAAG,CAGZ,IAAIvX,EAAIy0C,EAAEx0C,WAAW9O,GAKrB,GAAI6O,EAAI,OAAUA,EAAI,MAEpBu1C,EAAEnkD,KAAK4O,QAIJ,GAAI,OAAUA,GAAKA,GAAK,MAE3Bu1C,EAAEnkD,KAAK,YAIJ,GAAI,OAAU4O,GAAKA,GAAK,MAG3B,GAAI7O,IAAMomB,EAAI,EACZg+B,EAAEnkD,KAAK,WAGJ,CAEH,IAAIojD,EAAIC,EAAEx0C,WAAW9O,EAAI,GAGzB,GAAI,OAAUqjD,GAAKA,GAAK,MAAQ,CAE9B,IAAI7T,EAAQ,KAAJ3gC,EAGJ4gC,EAAQ,KAAJ4T,EAIRe,EAAEnkD,KAAK,OAAWuvC,GAAK,IAAMC,GAG7BzvC,GAAK,CACP,MAKEokD,EAAEnkD,KAAK,MAEX,CAIFD,GAAK,CACP,CAGA,OAAOokD,CACT,CA8nCyBgsD,CAAmBD,IAGtCJ,EAAS,KAKA,CAEX,IAAI1wC,EAAQl7D,EAAM7B,OAClB,GAAI+8D,IAAUqqC,EACZ,MAIF,IADAnzF,EAASnD,KAAKs4F,SAAS/lE,QAAQxhC,EAAOk7D,MACvB0qC,EACb,MACEj+F,MAAMC,QAAQwK,GAChBw5F,EAAO9vG,KAAKiN,MAAM6iG,EAAqCx5F,GAEvDw5F,EAAO9vG,KAAKsW,EAChB,CAEA,IAAKnD,KAAKm4F,cAAe,CACvB,MACEh1F,EAASnD,KAAKs4F,SAAS/lE,QAAQxhC,EAAOA,EAAM7B,WAC7BynG,GAEXj+F,MAAMC,QAAQwK,GAChBw5F,EAAO9vG,KAAKiN,MAAM6iG,EAAqCx5F,GAEvDw5F,EAAO9vG,KAAKsW,GAEhBnD,KAAKs4F,SAAW,IAClB,CAIA,OAAO,IAAI5rG,WAAWiwG,EACxB,EAyNAnF,EAAS,SAAW,SAAShqG,GAC3B,OAAO,IAAIwrG,EAAYxrG,EACzB,EAEAiqG,EAAS,SAAW,SAASjqG,GAC3B,OAAO,IAAIirG,EAAYjrG,EACzB,EAmFQ,qBAAsBwxC,GAE5Bm4D,EAAUz8E,SAAQ,SAAS08E,GACA,iCAArBA,EAAS6F,SAEb7F,EAASD,UAAUz8E,SAAQ,SAASu7E,GAClC,IAAIlkG,EAAOkkG,EAASlkG,KAChB0nG,EAAMroG,EAAMW,EAAKzE,eAErBmqG,EAAS1lG,GAAQ,SAASvE,GACxB,OAAO,IAAI0rG,EAAkBO,EAAKjsG,EACpC,EAEAgqG,EAASzlG,GAAQ,SAASvE,GACxB,OAAO,IAAI2rG,EAAkBM,EAAKjsG,EACpC,CACF,GACF,IAYFiqG,EAAc,IAAI,SAASjqG,GACzB,OAAO,IAAI4rG,EAAe5rG,EAC5B,EAKAgqG,EAAc,IAAI,SAAShqG,GACzB,OAAO,IAAIosG,EAAepsG,GAAS,EACrC,EA2PAgqG,EAAkB,QAAI,SAAShqG,GAC7B,OAAO,IAAIosG,EAAepsG,EAC5B,EAEAiqG,EAAkB,QAAI,SAASjqG,GAC7B,OAAO,IAAI4rG,EAAe5rG,EAC5B,EA+JAgqG,EAAe,KAAI,SAAShqG,GAC1B,OAAO,IAAI8sG,EAAY9sG,EACzB,EAEAiqG,EAAe,KAAI,SAASjqG,GAC1B,OAAO,IAAI4sG,EAAY5sG,EACzB,EA6KAgqG,EAAS,UAAY,SAAShqG,GAC5B,OAAO,IAAIotG,EAAaptG,EAC1B,EAEAiqG,EAAS,UAAY,SAASjqG,GAC5B,OAAO,IAAIitG,EAAajtG,EAC1B,EA6bAgqG,EAAS,eAAiB,SAAShqG,GACjC,OAAO,IAAI4tG,EAAiB5tG,EAC9B,EAEAiqG,EAAS,eAAiB,SAASjqG,GACjC,OAAO,IAAIqtG,EAAiBrtG,EAC9B,EA2KAgqG,EAAoB,UAAI,SAAShqG,GAC/B,OAAO,IAAIiuG,EAAgBjuG,EAC7B,EAEAiqG,EAAoB,UAAI,SAASjqG,GAC/B,OAAO,IAAI8tG,EAAgB9tG,EAC7B,EAkIAgqG,EAAS,UAAY,SAAShqG,GAC5B,OAAO,IAAIquG,EAAaruG,EAC1B,EAEAiqG,EAAS,UAAY,SAASjqG,GAC5B,OAAO,IAAImuG,EAAanuG,EAC1B,EA0KAgqG,EAAS,YAAc,SAAShqG,GAC9B,OAAO,IAAI8uG,GAAa,EAAM9uG,EAChC,EAGAiqG,EAAS,YAAc,SAASjqG,GAC9B,OAAO,IAAIyuG,GAAa,EAAMzuG,EAChC,EAKAgqG,EAAS,YAAc,SAAShqG,GAC9B,OAAO,IAAI8uG,GAAa,EAAO9uG,EACjC,EAGAiqG,EAAS,YAAc,SAASjqG,GAC9B,OAAO,IAAIyuG,GAAa,EAAOzuG,EACjC,EAoEAgqG,EAAS,kBAAoB,SAAShqG,GACpC,OAAO,IAAIgvG,EAAoBhvG,EACjC,EAEAiqG,EAAS,kBAAoB,SAASjqG,GACpC,OAAO,IAAI+uG,EAAoB/uG,EACjC,EAEKwxC,EAAoB,cACvBA,EAAoB,YAAIp9B,GACrBo9B,EAAoB,cACvBA,EAAoB,YAAIlwC,GAEWqmE,EAAOnlB,UAC1CmlB,EAAOnlB,QAAU,CACfpuC,YAAao9B,EAAoB,YACjClwC,YAAakwC,EAAoB,YACjCk+D,gBAAiBl+D,EAAO,qBAM7B,CAzuGA,CAyuGCh/B,MAAQ,CAAC,iDChvGX,OAOC,WACA,aAEA,IAAIuR,EAAS,CAAC,EAAE9Y,eAEhB,SAASpB,IAGR,IAFA,IAAID,EAAU,GAELxK,EAAI,EAAGA,EAAIO,UAAUC,OAAQR,IAAK,CAC1C,IAAIknB,EAAM3mB,UAAUP,GAChBknB,IACH1c,EAAU+lG,EAAY/lG,EAASgmG,EAAWtpF,IAE5C,CAEA,OAAO1c,CACR,CAEA,SAASgmG,EAAYtpF,GACpB,GAAmB,kBAARA,GAAmC,kBAARA,EACrC,OAAOA,EAGR,GAAmB,kBAARA,EACV,MAAO,GAGR,GAAIpb,MAAMC,QAAQmb,GACjB,OAAOzc,EAAWyC,MAAM,KAAMga,GAG/B,GAAIA,EAAIhnB,WAAayL,OAAOC,UAAU1L,WAAagnB,EAAIhnB,SAASA,WAAWgc,SAAS,iBACnF,OAAOgL,EAAIhnB,WAGZ,IAAIsK,EAAU,GAEd,IAAK,IAAIsC,KAAOoa,EACXvC,EAAOrW,KAAK4Y,EAAKpa,IAAQoa,EAAIpa,KAChCtC,EAAU+lG,EAAY/lG,EAASsC,IAIjC,OAAOtC,CACR,CAEA,SAAS+lG,EAAahuG,EAAOkuG,GAC5B,OAAKA,EAIDluG,EACIA,EAAQ,IAAMkuG,EAGfluG,EAAQkuG,EAPPluG,CAQT,CAEqCgmE,EAAOnlB,SAC3C34C,EAAW85D,QAAU95D,EACrB89D,EAAOnlB,QAAU34C,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CArEA,wECCY,MAAAimG,EACJ,MADIA,EAEH,OCkBGC,EAEH,oBCzBH,MAAMC,EAA0B,6BAC1BC,EAAuB,0BACvBC,EAAoB,sBACpBC,EAAmB,sBACnBC,EAA0B,6BAC1BC,EAAe,gBACfC,EAAoB,sBACpBC,EAAsB,wBACtBC,EAAe,gBACfC,EAAgB,iBAChBC,EAAgB,kBAChBC,EAAgB,iBAChBC,EAAmB,sBACnBC,EAAmB,qBACnBC,EAAyB,2BACzBC,EAA2B,6BAC3BC,EAA8B,gCAC9BC,EAAsB,yBACtBC,EAAyB,4BACzBC,EAAuB,yBACvBC,EAAqB,uBACrBC,EAA6B,gCAC7BC,EAAoB,sBACpBC,EAAyB,4BACzBC,EAA2B,+BAC3BC,EAAqB,uBACrBC,EAA0B,4BAC1BC,EAAiB,mBACjBC,EAAiB,mBACjBC,EAA2B,6BAC3BC,EAAmB,oBACnBC,EAA0B,4BAC1BC,EAAuB,yBACvBC,EAAqB,uBACrBC,EACT,0CACSC,EACT,kDACSC,EAAuB,0BACvBC,EACT,qCACSC,EAAe,iBACfC,EAAwB,0BACxBC,EAAe,gBACfC,EAAuB,0BACvBC,EAAuB,yBACvBC,EAA8B,kCCtC9BC,EAA0B,CACnC,CAAC5C,GACG,wDACJ,CAACC,GAA4C,4BAC7C,CAACC,GAAyC,yBAC1C,CAACC,GAAwC,6BACzC,CAACC,GACG,+BACJ,CAACC,GAAoC,yBACrC,CAACC,GACG,8IACJ,CAACC,GACG,gDACJ,CAACC,GAAoC,oCACrC,CAACC,GAAqC,uBACtC,CAACC,GAAqC,kBACtC,CAACC,GAAqC,uBACtC,CAACC,GACG,+NAGJ,CAACC,GACG,4FACJ,CAACC,GACG,oJAEJ,CAACC,GACG,4HACJ,CAACC,GACG,mIACJ,CAACC,GACG,4EACJ,CAACC,GACG,kDACJ,CAACC,GAA4C,yBAC7C,CAACC,GACG,2CACJ,CAACC,GACG,kHACJ,CAACC,GAAyC,0BAC1C,CAACC,GACG,mDACJ,CAACC,GACG,0FACJ,CAACC,GACG,6CACJ,CAACC,GACG,4DACJ,CAACC,GACG,2CACJ,CAACC,GAAsC,6BACvC,CAACC,GACG,8BACJ,CAACC,GACG,2FACJ,CAACC,GACG,iKACJ,CAACC,GACG,qOACJ,CAACC,GACG,uDACJ,CAACC,GACG,kEACJ,CAACC,GACG,oEACJ,CAACC,GACG,8DACJ,CAACC,GACG,iDACJ,CAACC,GACG,wIACJ,CAACC,GACG,2DACJ,CAACC,GAAoC,2BACrC,CAACC,GACG,oHACJ,CAACC,GACG,uCACJ,CAACC,GACG,0CAqOF,MAAOE,WAAwBC,EAAAA,GACjCtjG,WAAAA,CAAYujG,EAAmBC,GAC3B1gG,MACIygG,EACAC,EACM,GAAGJ,EAAwBG,OAAeC,IAC1CJ,EAAwBG,IAElCvgG,KAAKjO,KAAO,kBAEZwG,OAAOi9B,eAAex1B,KAAMqgG,GAAgB7nG,YAIpC,SAAAioG,GACZF,EACAC,GAEA,OAAO,IAAIH,GAAgBE,EAAWC,EAC1C,CCtPa,MAAAE,GAAyC,CAClDC,cAAeA,KACX,MAAMF,GAAsBP,EAA0C,EAE1EU,aAAcA,KACV,MAAMH,GAAsBP,EAA0C,EAE1EW,aAAcA,KACV,MAAMJ,GAAsBP,EAA0C,EAE1EY,gBAAiBA,KACb,MAAML,GAAsBP,EAA0C,EAE1Ea,UAAWA,KACP,MAAMN,GAAsBP,EAA0C,EAE1E,4BAAMc,GACF,MAAMP,GAAsBP,IAEhC,2BAAMe,GACF,MAAMR,GAAsBP,IAEhC,mBAAMgB,GACF,MAAMT,GAAsBP,IAEhC,aAAMiB,GACF,MAAMV,GAAsBP,IAEhC,gBAAMkB,GACF,MAAMX,GAAsBP,KC1HvBnuG,GAAO,qBACPggB,GAAU,UCcP,SAAAsvF,GACZC,EACAV,GAEA,MAAMW,EAiBJ,SAAwBC,GAC1B,IAAKA,EACD,MAAMf,GAAsB9C,GAEhC,MACM99D,EADkB,uCACQptB,KAAK+uF,GACrC,IAAK3hE,GAAWA,EAAQzyC,OAAS,EAC7B,MAAMqzG,GAAsB/C,GAUhC,OAAO79D,EAAQ,EACnB,CAnCuB4hE,CAAcH,GAGjC,IAEI,MAAMI,EAAgBd,EAAaW,GACnC,OAAO3yG,KAAKC,MAAM6yG,EACrB,CAAC,MAAO77F,GACL,MAAM46F,GAAsB/C,EAC/B,CACL,CA8BgB,SAAAiE,GAAYC,EAAkBC,GAO1C,GAAe,IAAXA,GAAgB/pG,KAAK8X,MADF,IAC2BgyF,EAAWC,EACzD,MAAMpB,GAAsBpC,EAEpC,UC1DgByD,KAEZ,OAAO9xF,KAAKm1C,OAAM,IAAIrtD,MAAO24C,UAAY,IAC7C,CAMgB,SAAAsxD,GAAeC,EAAmB90G,GAE9C,MAAM+0G,EAAgBzyF,OAAOwyF,IAAc,EAI3C,OAH6BF,KAAe50G,EAGd+0G,CAClC,CCUM,SAAUC,GACZC,GAUA,MARsB,CAClBC,GAAkBD,GAClBE,GAAqBF,GACrBG,GAAeH,GACfI,GAAmBJ,GACnBK,GAAeL,IAGEvmG,KAAK6mG,EAAAA,GAAWC,qBAAqBp1G,aAC9D,CASM,SAAUq1G,GACZC,EACAC,EACAC,EACA/vG,EACAgwG,GAWA,MATqC,CACjCC,eAAgBC,EAAAA,GAAeC,SAC/BN,cAAeA,EACfC,YAAaA,EACb9vG,SAAUA,EACVijE,OAAQ8sC,EACRK,MAAOJ,EAIf,CAagB,SAAAK,GACZR,EACAC,EACAvwG,EACAS,EACAgwG,EACAjxG,EACAkwG,EACAqB,EACAzC,EACA0C,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAA8B,CAChChB,cAAeA,EACfI,eAAgBC,EAAAA,GAAeY,aAC/B7tC,OAAQ1jE,EACRwxG,SAAUhC,KAAuBh1G,WACjCk1G,UAAWA,EAAUl1G,WACrBi3G,kBAAmBV,EAAav2G,WAChC+1G,YAAaA,EACb9vG,SAAUA,EACVowG,MAAOJ,EACPrxG,OAAQI,EACRyxG,UAAWA,GAAaS,EAAAA,GAAqBC,QAoBjD,GAjBIT,IACAI,EAASJ,kBAAoBA,GAG7BF,IACAM,EAASN,UAAYA,EAAUx2G,YAG/B42G,IACAE,EAASF,gBAAkBA,EAC3BE,EAASD,oBAAsBA,GAQ/BC,EAASL,WAAWj2G,gBACpB02G,EAAAA,GAAqBC,OAAO32G,cAG5B,OADAs2G,EAASZ,eAAiBC,EAAAA,GAAeiB,8BACjCN,EAASL,WACb,KAAKS,EAAAA,GAAqBG,IAEtB,MAAMv0E,EAAkCyxE,GACpC/uG,EACAsuG,GAEJ,IAAKhxE,GAAaw0E,KAAKC,IACnB,MAAM5D,GACFf,GAGRkE,EAASH,MAAQ7zE,EAAYw0E,IAAIC,IACjC,MACJ,KAAKL,EAAAA,GAAqBM,IACtBV,EAASH,MAAQA,EAI7B,OAAOG,CACX,CASgB,SAAAW,GACZ3B,EACAC,EACAtwG,EACAQ,EACAyxG,EACAhB,EACAxB,GAEA,MAAMyC,EAA+B,CACjCzB,eAAgBC,EAAAA,GAAeyB,cAC/B9B,cAAeA,EACfC,YAAaA,EACb9vG,SAAUA,EACVijE,OAAQzjE,GAeZ,OAZIixG,IACAiB,EAASjB,kBAAoBA,GAG7BgB,IACAC,EAASD,SAAWA,GAGpBxC,IACAyC,EAASzC,UAAYA,EAAUl1G,YAG5B23G,CACX,CAEM,SAAUE,GAAmBC,GAC/B,OACIA,EAAOnsG,eAAe,kBACtBmsG,EAAOnsG,eAAe,gBACtBmsG,EAAOnsG,eAAe,mBACtBmsG,EAAOnsG,eAAe,aACtBmsG,EAAOnsG,eAAe,SAE9B,CAMM,SAAUosG,GAAoBD,GAChC,QAAKA,IAKDD,GAAmBC,IACnBA,EAAOnsG,eAAe,UACtBmsG,EAAOnsG,eAAe,YACrBmsG,EAAuB,iBAAM3B,EAAAA,GAAeY,cACzCe,EAAuB,iBACnB3B,EAAAA,GAAeiB,+BAE/B,CAMM,SAAUY,GAAgBF,GAC5B,QAAKA,IAKDD,GAAmBC,IACnBA,EAAOnsG,eAAe,UACtBmsG,EAAuB,iBAAM3B,EAAAA,GAAeC,SAEpD,CAMM,SAAU6B,GAAqBH,GACjC,QAAKA,IAKDD,GAAmBC,IACnBA,EAAuB,iBAAM3B,EAAAA,GAAeyB,cAEpD,CAKA,SAAStC,GAAkBD,GAKvB,MAJiC,CAC7BA,EAAiBS,cACjBT,EAAiBU,aAEJjnG,KAAK6mG,EAAAA,GAAWC,qBAAqBp1G,aAC1D,CAKA,SAAS+0G,GAAqBF,GAC1B,MAAM6C,EACF7C,EAAiBa,iBAAmBC,EAAAA,GAAeyB,eAC7CvC,EAAiBqC,UACjBrC,EAAiBpvG,SAO3B,MANoC,CAChCovG,EAAiBa,eACjBgC,EACA7C,EAAiBgB,OAAS,IAGVvnG,KAAK6mG,EAAAA,GAAWC,qBAAqBp1G,aAC7D,CAKA,SAASg1G,GAAeH,GACpB,OAAQA,EAAiBzwG,QAAU,IAAIpE,aAC3C,CAKA,SAASi1G,GAAmBJ,GACxB,OAAQA,EAAiBwB,qBAAuB,IAAIr2G,aACxD,CAKA,SAASk1G,GAAeL,GAKpB,OAAOA,EAAiBoB,WACpBpB,EAAiBoB,UAAUj2G,gBACvB02G,EAAAA,GAAqBC,OAAO32G,cAC9B60G,EAAiBoB,UAAUj2G,cAC3B,EACV,UAyGgB23G,KACZ,OACInD,KACAoD,EAAAA,GAA6BC,oBAErC,UAEgBC,GACZC,EACAC,EACAC,GAEAF,EAAkBG,uBACdF,EAAcE,uBAClBH,EAAkBI,eAAiBH,EAAcG,eACjDJ,EAAkBK,qBAAuBJ,EAAcI,qBACvDL,EAAkBM,OAASL,EAAcK,OACzCN,EAAkBO,qBAAuBL,EACzCF,EAAkBQ,SAAWP,EAAcO,QAC/C,UAEgBC,GACZT,EACAC,EACAC,GAEAF,EAAkBU,QAAUT,EAAcS,QAC1CV,EAAkBW,gBAAkBV,EAAcU,gBAClDX,EAAkBY,kBAAoBX,EAAcW,kBACpDZ,EAAkBa,mBAAqBX,CAC3C,CAKM,SAAUY,GACZC,GAEA,OAAOA,EAASC,WAAavE,IACjC,CCzcO,MAAMwE,GAAmB,qBACnBC,GAA4B,+BAC5BC,GAAuB,yBACvBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GAAwB,2BACxBC,GAAqB,uBACrBC,GAAgB,iBAChBC,GAAoB,sBACpBC,GAAqB,uBACrBC,GAA6B,gCAC7BC,GAAoB,sBACpBC,GAAgC,mCAChCC,GAA2B,6BAC3BC,GAAqB,sBACrBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GACT,sCACSC,GAA8B,gCAC9BC,GAAuB,yBACvBC,GAA0B,6BAC1BC,GAAoB,qBClBpBC,GAAmC,CAC5C,CAACtB,IACG,mEACJ,CAACC,IACG,mDACJ,CAACC,IACG,4NACJ,CAACC,IACG,qDACJ,CAACC,IAA8C,yBAC/C,CAACC,IACG,iHACJ,CAACC,IACG,uLACJ,CAACC,IACG,4DACJ,CAACC,IACG,kDACJ,CAACC,IACG,4CACJ,CAACC,IACG,gFACJ,CAACC,IACG,sGACJ,CAACC,IACG,sIACJ,CAACC,IACG,0IACJ,CAACC,IACG,6HACJ,CAACC,IACG,8HACJ,CAACC,IACG,wJACJ,CAACC,IACG,iLACJ,CAACC,IACG,yCACJ,CAACC,IACG,8GACJ,CAACC,IACG,gFACJ,CAACC,IACG,oPAiJF,MAAOE,WAAiCvH,EAAAA,GAC1CtjG,WAAAA,CAAYujG,GACRzgG,MAAMygG,EAAWqH,GAAiCrH,IAClDvgG,KAAKjO,KAAO,2BACZwG,OAAOi9B,eAAex1B,KAAM6nG,GAAyBrvG,YAIvD,SAAUsvG,GACZvH,GAEA,OAAO,IAAIsH,GAAyBtH,EACxC,OCzMawH,GAKT,iBAAOx5F,CAAWy5F,GACd,GAAIA,EACA,IACI,MAAMtrG,EAAM9N,KAAKC,MAAMm5G,GACvB,OAAmC,IAA5BzvG,OAAO+E,KAAKZ,GAAKtP,MAC3B,CAAC,MAAOqE,GAAI,CAEjB,OAAO,EAGX,iBAAOiT,CAAW9J,EAAa4T,GAC3B,OAA+B,IAAxB5T,EAAIuL,QAAQqI,GAGvB,eAAOzI,CAASnL,EAAa4T,GACzB,OACI5T,EAAIxN,QAAUohB,EAAOphB,QACrBwN,EAAI8mB,YAAYlT,KAAY5T,EAAIxN,OAASohB,EAAOphB,OASxD,0BAAO66G,CAAuBn8F,GAC1B,MAAMpP,EAAU,CAAC,EACXkU,EAAS9E,EAAM/E,MAAM,KACrBhY,EAAUmhD,GAAcsW,mBAAmBtW,EAAE93C,QAAQ,MAAO,MASlE,OARAwY,EAAO8J,SAASwtF,IACZ,GAAIA,EAAKt2G,OAAQ,CACb,MAAO8H,EAAKvK,GAAS+4G,EAAKnhG,MAAM,SAAU,GACtCrN,GAAOvK,IACPuN,EAAI3N,EAAO2K,IAAQ3K,EAAOI,GAEjC,KAEEuN,EAQX,uBAAOyrG,CAAiBl7G,GACpB,OAAOA,EAAIiE,KAAKqX,GAAUA,EAAM3W,SAOpC,kCAAOw2G,CAA4Bn7G,GAC/B,OAAOA,EAAIsP,QAAQgM,KACNA,IAQjB,sBAAO8/F,CAAmBztG,GACtB,IACI,OAAOhM,KAAKC,MAAM+L,EACrB,CAAC,MAAOnJ,GACL,OAAO,IACV,EAQL,mBAAO62G,CAAa/1F,EAAiBxhB,GAajC,OAPsB,IAAI+5C,OACtBv4B,EACKna,QAAQ,MAAO,QACfA,QAAQ,MAAO,SACfA,QAAQ,MAAO,QAGX2a,KAAKhiB,UClFbw3G,GAITvrG,WAAAA,CAAYwrG,GAER,MAAMC,EAAWD,EACXT,GAAYI,iBAAiB,IAAIK,IACjC,GACAE,EAAgBD,EAChBV,GAAYK,4BAA4BK,GACxC,GAGNzoG,KAAK2oG,oBAAoBD,GAEzB1oG,KAAKlO,OAAS,IAAI4R,IAClBglG,EAAchuF,SAASkuF,GAAU5oG,KAAKlO,OAAOsxC,IAAIwlE,KASrD,iBAAOC,CAAWC,GACd,MACMN,GADcM,GAAoBC,EAAAA,GAAUC,cACHjiG,MAAM,KACrD,OAAO,IAAIwhG,GAASC,GAQxB,yBAAOS,CAAmBH,GACtB,MAAMI,EAAW,IAAIX,GAASO,GAO9B,OANKI,EAASC,yBAGVD,EAASE,YAAYL,EAAAA,GAAUM,sBAF/BH,EAASI,mBAKNJ,EAQHP,mBAAAA,CAAoBH,GAExB,IAAKA,GAAeA,EAAYp7G,OAAS,EACrC,MAAM06G,GACFnB,IASZ4C,aAAAA,CAAcX,GACV,MAAMY,EAAkBxpG,KAAKypG,uBAAuB1iG,MAAM,KACpD2iG,EAAqB,IAAInB,GAASiB,GAExC,QAAOZ,GACDc,EAAmB53G,OAAOsH,IAAIwvG,EAAMt7G,eAQ9Cq8G,gBAAAA,CAAiBT,GACb,SAAKA,GAAYA,EAASp3G,OAAOiF,MAAQ,KAKrCiJ,KAAKlO,OAAOiF,MAAQmyG,EAASp3G,OAAOiF,MACpCmyG,EAASU,UAAUv4F,OAAOu3F,GAAU5oG,KAAKupG,cAAcX,MAO/DO,sBAAAA,GACI,IAAIU,EAAoB,EAOxB,OANAC,EAAAA,GAAYpvF,SAASqvF,IACb/pG,KAAKupG,cAAcQ,KACnBF,GAAqB,EACxB,IAGE7pG,KAAKlO,OAAOiF,OAAS8yG,EAOhCG,WAAAA,CAAYC,GACJA,GACAjqG,KAAKlO,OAAOsxC,IAAI6mE,EAASr4G,QAQjCs4G,YAAAA,CAAaC,GACT,IACIA,EAAUzvF,SAASuvF,GAAajqG,KAAKgqG,YAAYC,IACpD,CAAC,MAAOx4G,GACL,MAAMgvG,GACF9B,EAEP,EAOLyK,WAAAA,CAAYR,GACR,IAAKA,EACD,MAAMnI,GACF/B,GAGR1+F,KAAKlO,OAAOuZ,OAAOu9F,EAAMh3G,QAO7B03G,gBAAAA,GACIQ,EAAAA,GAAYpvF,SAASqvF,IACjB/pG,KAAKlO,OAAOuZ,OAAO0+F,EAAa,IAQxCK,cAAAA,CAAeC,GACX,IAAKA,EACD,MAAM5J,GACF7B,GAGR,MAAM0L,EAAc,IAAI5mG,IAKxB,OAJA2mG,EAAYv4G,OAAO4oB,SAASkuF,GACxB0B,EAAYlnE,IAAIwlE,EAAMt7G,iBAE1B0S,KAAKlO,OAAO4oB,SAASkuF,GAAU0B,EAAYlnE,IAAIwlE,EAAMt7G,iBAC9Cg9G,EAOXC,qBAAAA,CAAsBF,GAClB,IAAKA,EACD,MAAM5J,GACF7B,GAKHyL,EAAYlB,0BACbkB,EAAYf,mBAEhB,MAAMgB,EAActqG,KAAKoqG,eAAeC,GAClCG,EAAkBH,EAAYI,gBAC9BC,EAAiB1qG,KAAKyqG,gBAE5B,OADwBH,EAAYvzG,KACX2zG,EAAiBF,EAM9CC,aAAAA,GACI,OAAOzqG,KAAKlO,OAAOiF,KAMvB6yG,OAAAA,GACI,MAAM/wG,EAAuB,GAE7B,OADAmH,KAAKlO,OAAO4oB,SAASzhB,GAAQJ,EAAMhM,KAAKoM,KACjCJ,EAMX8xG,WAAAA,GACI,GAAI3qG,KAAKlO,OAAQ,CAEb,OADiBkO,KAAK4pG,UACNhuG,KAAK,IACxB,CACD,OAAOmtG,EAAAA,GAAUC,aAMrBS,oBAAAA,GACI,OAAOzpG,KAAK2qG,cAAcr9G,eC3NlB,SAAAs9G,GACZC,EACAjK,GAEA,IAAKiK,EACD,MAAMpK,GAAsBhD,GAGhC,IACI,MAAMqN,EAA4BlK,EAAaiK,GAC/C,OAAOj8G,KAAKC,MAAMi8G,EACrB,CAAC,MAAOr5G,GACL,MAAMgvG,GACFjD,EAEP,CACL,CAMM,SAAUuN,GACZnI,GAEA,IAAKA,EACD,MAAMnC,GACFjD,GAGR,MAAMwN,EAA4BpI,EAAc77F,MAC5C07F,EAAAA,GAAWwI,sBACX,GAEJ,MAAO,CACHC,IAAKF,EAAgB,GACrBG,KACIH,EAAgB59G,OAAS,EACnB27G,EAAAA,GAAUC,aACVgC,EAAgB,GAElC,CCCgB,SAAAI,GACZrI,EACAH,GAEA,QACMG,KACAH,GACFG,IAAaH,EAAc77F,MAAM,KAAK,EAE9C,CAUM,SAAUskG,GACZzI,EACA0I,EACAvI,EACA13G,GAEA,GAAIA,EAAe,CACf,MAAM,IAAEklC,EAAG,IAAEM,EAAG,IAAEL,EAAG,KAAEz+B,EAAI,IAAEw5G,EAAG,IAAEC,GAAQngH,EAQpC03G,EAAWvyE,GAAO+6E,GAAOC,GAAO,GAEtC,MAAO,CACHzI,SAAUA,EACVuI,eAAgB/6E,GAAOM,GAAO,GAC9B9+B,KAAMA,EACN05G,aAAcL,GAA0BrI,EAAUH,GAEzD,CACG,MAAO,CACHG,WACAuI,iBACAG,aAAcL,GAA0BrI,EAAUH,GAG9D,CAQM,SAAU8I,GACZC,EACAC,EACAvgH,EACAwgH,GAEA,IAAIC,EAAqBH,EAEzB,GAAIC,EAAe,CAEf,MAAM,aAAEH,KAAiBM,GAA0BH,EACnDE,EAAqB,IAAKH,KAAoBI,EACjD,CAGD,GAAI1gH,EAAe,CAGf,MAAM,aAAEogH,KAAiBO,GACrBX,GACIM,EAAgB/I,cAChB+I,EAAgBL,eAChBK,EAAgB5I,SAChB13G,GAUR,OAPAygH,EAAqB,IACdA,KACAE,EACH3gH,cAAeA,EACfy3G,QAAS+I,GAGNC,CACV,CAED,OAAOA,CACX,CCxJa,MAAAG,GACA,EADAA,GAEH,EAFGA,GAGH,EAHGA,GAIH,EC4EJ,SAAUC,GACZ7gH,GAEA,GAAIA,EAAe,CAGf,OADIA,EAAcmlC,KAAOnlC,EAAckgH,KAAOlgH,EAAcmgH,KACzC,IACtB,CACD,OAAO,IACX,OChDaW,GAmBT/J,iBAAAA,GAEI,MADiC,CAACpiG,KAAK4iG,cAAe5iG,KAAK6iG,aAC1CjnG,KAAK6mG,EAAAA,GAAWC,qBAAqBp1G,cAM1D8+G,kBAAAA,GACI,OAAOD,GAAcE,wBAAwB,CACzCzJ,cAAe5iG,KAAK4iG,cACpBC,YAAa7iG,KAAK6iG,YAClBE,SAAU/iG,KAAKmjG,MACfjxG,SAAU8N,KAAK9N,SACfo5G,eAAgBtrG,KAAKsrG,iBAO7BgB,cAAAA,GACI,MAAO,CACH1J,cAAe5iG,KAAK4iG,cACpBC,YAAa7iG,KAAK6iG,YAClBE,SAAU/iG,KAAKmjG,MACfjxG,SAAU8N,KAAK9N,SACfo5G,eAAgBtrG,KAAKsrG,eACrBv5G,KAAMiO,KAAKjO,KACXw6G,gBAAiBvsG,KAAKusG,gBACtBC,cAAexsG,KAAKwsG,cAEpBC,eAAgB,IAAIltE,KACfv/B,KAAKysG,gBAAkB,IAAIv7G,KAAK06G,GACtB,CAACA,EAAc7I,SAAU6I,OAShDc,cAAAA,GACI,OAAQ1sG,KAAKysG,eAOjB,8BAAOJ,CAAwBM,GAC3B,MAAMC,EAAeD,EAAiB/J,cAAc77F,MAAM,KAAK,GAO/D,MANmB,CACf4lG,EAAiB/J,cACjB+J,EAAiB9J,aAAe,GAChC+J,GAAgBD,EAAiB5J,UAAY,IAG/BnnG,KAAK6mG,EAAAA,GAAWC,qBAAqBp1G,cAO3D,oBAAOu/G,CACHC,EAUA95G,EACA4tG,GAEA,MAAM1xD,EAAyB,IAAIi9D,GAUnC,IAAIY,EARA/5G,EAAUw5G,gBAAkBP,GAC5B/8D,EAAQs9D,cAAgBQ,EAAAA,GAAiBC,kBAClCj6G,EAAUk6G,eAAiB5P,EAClCpuD,EAAQs9D,cAAgBQ,EAAAA,GAAiBG,mBAEzCj+D,EAAQs9D,cAAgBQ,EAAAA,GAAiBI,qBAKzCN,EAAeC,YAAcnM,IAC7BmM,EAAanC,GACTkC,EAAeC,WACfnM,IAIR1xD,EAAQ69D,WAAaD,EAAeC,WACpC79D,EAAQ0zD,cAAgBkK,EAAelK,cACvC1zD,EAAQq9D,gBAAkBO,EAAeP,gBAEzC,MAAMp5F,EACF25F,EAAejK,aACd7vG,GAAaA,EAAUq6G,oBAE5B,IAAKl6F,EACD,MAAMstF,GACFvB,GAIRhwD,EAAQ2zD,YAAc1vF,EAEtB+7B,EAAQi0D,MACJ4J,GAAY5B,MACZe,GAA6BY,EAAezhH,gBAC5C,GAGJ6jD,EAAQo8D,eACJyB,GAAY7B,KACZ4B,EAAezhH,eAAeklC,KAC9Bu8E,EAAezhH,eAAewlC,KAC9B,GAOJ,MAAMy8E,EACFR,EAAezhH,eAAeglC,oBAC9By8E,EAAezhH,eAAeolC,IAC5BC,EAAQo8E,EAAezhH,eAAekiH,OACtCT,EAAezhH,cAAckiH,OAAO,GACpC,KAQN,GANAr+D,EAAQh9C,SAAWo7G,GAAqB58E,GAAS,GACjDwe,EAAQn9C,KAAO+6G,EAAezhH,eAAe0G,MAAQ,GAErDm9C,EAAQs+D,mBAAqBV,EAAeU,mBAC5Ct+D,EAAQu+D,YAAcX,EAAeW,YAEjCX,EAAeL,eACfv9D,EAAQu9D,eAAiBK,EAAeL,mBACrC,CACH,MAAMb,EAAgBP,GAClByB,EAAelK,cACf1zD,EAAQo8D,eACRp8D,EAAQi0D,MACR2J,EAAezhH,eAEnB6jD,EAAQu9D,eAAiB,CAACb,EAC7B,CAED,OAAO18D,EAUX,4BAAOw+D,CACHC,EACAH,EACAC,GAEA,MAAMv+D,EAAyB,IAAIi9D,GAqBnC,OAnBAj9D,EAAQs9D,cACJmB,EAAYnB,eAAiBQ,EAAAA,GAAiBI,qBAClDl+D,EAAQ0zD,cAAgB+K,EAAY/K,cACpC1zD,EAAQo8D,eAAiBqC,EAAYrC,eACrCp8D,EAAQq9D,gBAAkBoB,EAAYpB,gBAEtCr9D,EAAQi0D,MAAQwK,EAAY5K,SAC5B7zD,EAAQ2zD,YAAc8K,EAAY9K,YAElC3zD,EAAQh9C,SAAWy7G,EAAYz7G,SAC/Bg9C,EAAQn9C,KAAO47G,EAAY57G,KAE3Bm9C,EAAQs+D,mBAAqBA,EAC7Bt+D,EAAQu+D,YAAcA,EAEtBv+D,EAAQu9D,eAAiB/zG,MAAM+J,KAC3BkrG,EAAYlB,gBAAgBrvG,UAAY,IAGrC8xC,EAQX,4BAAO0+D,CACHC,EACAC,EACAC,EACAC,EACA3iH,GAGA,GAEQyiH,IAAa7B,IACb6B,IAAa7B,GAEnB,CAEE,GAAI4B,EACA,IACI,MAAMd,EAAanC,GACfiD,EACAG,EAAUpN,cAEd,GAAImM,EAAW7B,KAAO6B,EAAW5B,KAC7B,MAAO,GAAG4B,EAAW7B,OAAO6B,EAAW5B,MAE9C,CAAC,MAAO15G,GAAI,CAEjBs8G,EAAOE,QAAQ,6BAClB,CAGD,OAAO5iH,GAAewlC,KAAO,GAOjC,sBAAOq9E,CAAgBtJ,GACnB,QAAKA,IAKDA,EAAOnsG,eAAe,kBACtBmsG,EAAOnsG,eAAe,gBACtBmsG,EAAOnsG,eAAe,UACtBmsG,EAAOnsG,eAAe,mBACtBmsG,EAAOnsG,eAAe,aACtBmsG,EAAOnsG,eAAe,kBAU9B,yBAAO01G,CACHC,EACAC,EACAC,GAEA,IAAKF,IAAaC,EACd,OAAO,EAGX,IAAIE,GAAc,EAClB,GAAID,EAAe,CACf,MAAME,EAAkBJ,EAAS/iH,eAC7B,CAAC,EACCojH,EAAkBJ,EAAShjH,eAC7B,CAAC,EAGLkjH,EACIC,EAAet+E,MAAQu+E,EAAev+E,KACtCs+E,EAAel+E,QAAUm+E,EAAen+E,KAC/C,CAED,OACI89E,EAASxL,gBAAkByL,EAASzL,eACpCwL,EAAS9C,iBAAmB+C,EAAS/C,gBACrC8C,EAASl8G,WAAam8G,EAASn8G,UAC/Bk8G,EAASrL,WAAasL,EAAStL,UAC/BqL,EAASvL,cAAgBwL,EAASxL,aAClCuL,EAAS7B,kBAAoB8B,EAAS9B,iBACtCgC,GCrVN,SAAUG,GAAwBC,GACpC,OAAIA,EAAejqG,WAAW,MACnBiqG,EAAe3oG,UAAU,GAEhC2oG,EAAejqG,WAAW,MAC1BiqG,EAAejqG,WAAW,KAEnBiqG,EAAe3oG,UAAU,GAG7B2oG,CACX,CAKM,SAAUC,GACZD,GAGA,IAAKA,GAAkBA,EAAexoG,QAAQ,KAAO,EACjD,OAAO,KAEX,IAEI,MAAM0oG,EAAqBH,GAAwBC,GAE7CG,EACFv2G,OAAO0U,YAAY,IAAIg1C,gBAAgB4sD,IAG3C,GACIC,EAAiB5uG,MACjB4uG,EAAiBhjH,OACjBgjH,EAAiBC,mBACjBD,EAAiBhsF,MAEjB,OAAOgsF,CAEd,CAAC,MAAOr9G,GACL,MAAMgvG,GAAsB1C,EAC/B,CAED,OAAO,IACX,OC1CaiR,GAGT,aAAWC,GACP,OAAOjvG,KAAKkvG,WAGhBlyG,WAAAA,CAAY0C,GAER,GADAM,KAAKkvG,WAAaxvG,GACbM,KAAKkvG,WAEN,MAAMpH,GACFpB,IAIHhnG,EAAIoJ,SAAS,OACd9I,KAAKkvG,WAAaF,GAAUG,gBAAgBzvG,IAQpD,sBAAOyvG,CAAgBzvG,GACnB,GAAIA,EAAK,CACL,IAAI0vG,EAAe1vG,EAAIpS,cAYvB,OAVIy6G,GAAYhiG,SAASqpG,EAAc,KACnCA,EAAeA,EAAariH,MAAM,GAAI,GAC/Bg7G,GAAYhiG,SAASqpG,EAAc,QAC1CA,EAAeA,EAAariH,MAAM,GAAI,IAGrCg7G,GAAYhiG,SAASqpG,EAAc,OACpCA,GAAgB,KAGbA,CACV,CAED,OAAO1vG,EAMX2vG,aAAAA,GAEI,IAAIC,EACJ,IACIA,EAAatvG,KAAKuvG,kBACrB,CAAC,MAAO99G,GACL,MAAMq2G,GACFrB,GAEP,CAGD,IAAK6I,EAAWE,kBAAoBF,EAAWG,aAC3C,MAAM3H,GACFrB,IAKR,IACK6I,EAAWI,UAC0B,WAAtCJ,EAAWI,SAASpiH,cAEpB,MAAMw6G,GACFtB,IAUZ,wBAAOmJ,CAAkBjwG,EAAakwG,GAClC,OAAKA,EAIElwG,EAAIyG,QAAQ,KAAO,EACpB,GAAGzG,KAAOkwG,IACV,GAAGlwG,KAAOkwG,IALLlwG,EAYf,wBAAOmwG,CAAkBnwG,GACrB,OAAOsvG,GAAUG,gBAAgBzvG,EAAIqH,MAAM,KAAK,IAQpD+oG,iBAAAA,CAAkB/M,GACd,MAAMgN,EAAY/vG,KAAKuvG,mBACjBS,EAAYD,EAAUN,aAS5B,OAPI1M,GACqB,IAArBiN,EAAU5iH,QACT4iH,EAAU,KAAOC,EAAAA,GAAsBC,QACpCF,EAAU,KAAOC,EAAAA,GAAsBE,gBAE3CH,EAAU,GAAKjN,GAEZiM,GAAUoB,gCAAgCL,GAOrDR,gBAAAA,GAEI,MAAMc,EAAQvlE,OACV,8DAIEt4B,EAAQxS,KAAKivG,UAAUz8F,MAAM69F,GACnC,IAAK79F,EACD,MAAMs1F,GACFrB,IAKR,MAAM6J,EAAgB,CAClBZ,SAAUl9F,EAAM,GAChBg9F,gBAAiBh9F,EAAM,GACvB+9F,aAAc/9F,EAAM,GACpBg+F,YAAah+F,EAAM,IAGvB,IAAIi+F,EAAeH,EAAcC,aAAaxpG,MAAM,KAapD,OAZA0pG,EAAeA,EAAal0G,QAAQtD,GAAQA,GAAOA,EAAI7L,OAAS,IAChEkjH,EAAcb,aAAegB,EAGzBH,EAAcE,aACdF,EAAcE,YAAYzqG,SAAS,OAEnCuqG,EAAcE,YAAcF,EAAcE,YAAYxqG,UAClD,EACAsqG,EAAcE,YAAYpjH,OAAS,IAGpCkjH,EAGX,uBAAOI,CAAiBhxG,GACpB,MAAM2wG,EAAQvlE,OAAO,4BAEft4B,EAAQ9S,EAAI8S,MAAM69F,GAExB,IAAK79F,EACD,MAAMs1F,GACFrB,IAIR,OAAOj0F,EAAM,GAGjB,qBAAOm+F,CAAeC,EAAqBr/C,GACvC,GAAIq/C,EAAY,KAAO7H,EAAAA,GAAU8H,cAAe,CAC5C,MACMC,EADM,IAAI9B,GAAUz9C,GACCg+C,mBAE3B,OACIuB,EAAepB,SACf,KACAoB,EAAetB,gBACfoB,CAEP,CAED,OAAOA,EAGX,sCAAOR,CAAgCL,GACnC,OAAO,IAAIf,GACPe,EAAUL,SACN,KACAK,EAAUP,gBACV,IACAO,EAAUN,aAAa7zG,KAAK,MAQxC,kCAAOm1G,CAA4BriH,GAC/B,QAASkgH,GAAiClgH,IC7MrC,MAgFAsiH,GA/ES,CACd,4BAA6B,CACzBvL,eACI,iEACJI,SACI,mEACJF,OAAQ,oDACRH,uBACI,qEACJE,qBACI,mEAER,yBAA0B,CACtBD,eACI,8DACJI,SACI,gEACJF,OAAQ,2DACRH,uBACI,kEACJE,qBACI,gEAER,2BAA4B,CACxBD,eACI,gEACJI,SACI,kEACJF,OAAQ,mDACRH,uBACI,oEACJE,qBACI,mEAgDHuL,GA7CkB,CACvBC,0BACI,qEACJ9K,SAAU,CACN,CACIH,kBAAmB,4BACnBD,gBAAiB,oBACjBD,QAAS,CACL,4BACA,oBACA,sBACA,oBAGR,CACIE,kBAAmB,mCACnBD,gBAAiB,mCACjBD,QAAS,CACL,mCACA,2BAGR,CACIE,kBAAmB,2BACnBD,gBAAiB,2BACjBD,QAAS,CAAC,6BAEd,CACIE,kBAAmB,2BACnBD,gBAAiB,2BACjBD,QAAS,CACL,2BACA,4BAGR,CACIE,kBAAmB,+BACnBD,gBAAiB,+BACjBD,QAAS,CAAC,mCAUboL,GAAgD,IAAIztG,IAkD3D,SAAU0tG,GACZC,EACAC,EACAx1D,EACAiyD,GAGA,GADAA,GAAQwD,MAAM,8CAA8Cz1D,KACxDu1D,GAAiBC,EAAwB,CACzC,MAAMlL,EAAWoL,GACbF,EACAD,GAGJ,GAAIjL,EAIA,OAHA2H,GAAQwD,MACJ,6DAA6Dz1D,wBAE1DsqD,EAASL,QAEhBgI,GAAQwD,MACJ,oEAAoEz1D,IAG/E,CAED,OAAO,IACX,CAoBgB,SAAA01D,GACZ9iH,EACA2iH,GAEA,IAAK,IAAIzkH,EAAI,EAAGA,EAAI8B,EAAStB,OAAQR,IAAK,CACtC,MAAMw5G,EAAW13G,EAAS9B,GAC1B,GAAIw5G,EAASL,QAAQj9F,SAASuoG,GAC1B,OAAOjL,CAEd,CAED,OAAO,IACX,CA3GA6K,GAA0B7K,SAAS1rF,SAC9B+2F,IACGA,EAAc1L,QAAQrrF,SAASg3F,IAC3BP,GAAiC/tE,IAAIsuE,EAAM,GAC7C,ICtGH,MAAMC,GAA8B,uBAC9BC,GAAwB,sBCExBC,GAAqB,CAC9B,CAACF,IACG,mCACJ,CAACC,IACG,uDAMF,MAAOE,WAAmBhkH,MAW5BkP,WAAAA,CAAYujG,EAAmBwR,GAC3B,MAAM3jH,EACF2jH,IACCF,GAAmBtR,GACdsR,GAAmBtR,GACnBsR,GAAmBD,KAE7B9xG,MAAM,GAAGygG,MAAcnyG,KACvBmK,OAAOi9B,eAAex1B,KAAM8xG,GAAWt5G,WAEvCwH,KAAKjO,KAAO,aACZiO,KAAKugG,UAAYA,EACjBvgG,KAAK+xG,aAAe3jH,SCoBN4jH,GAOlBh1G,WAAAA,CACIjK,EACAk/G,EACAlE,EACAmE,GAEAlyG,KAAKjN,SAAWA,EAChBiN,KAAKiyG,WAAaA,EAClBjyG,KAAKmyG,aAAepE,EAAOqE,MAAMrgH,GAAMggB,IACvC/R,KAAKkyG,uBAAyBA,EAgLlCxjE,cAAAA,CAAe2jE,GACX,OAAOryG,KAAKsyG,oBACRtyG,KAAKuyG,sBAAsBF,GAAiB,CAAC,GAC7CA,GAORG,wBAAAA,CAAyBH,GACrB,MAAMI,EAAczyG,KAAK0uC,eAAe2jE,GACxC,GAAII,EAAYrlH,OAAS,EAAG,CAKxB,OAHuBqlH,EAAYj2G,MAAM0yC,GAC9BA,EAAQ7jD,eAAiB,EAAI,IAElB,EACzB,CAAM,OAA2B,IAAvBonH,EAAYrlH,OAEZqlH,EAAY,GAEZ,KASfC,kBAAAA,CAAmBL,GACf,MAAMM,EAAkB3yG,KAAKuyG,sBAAsBF,GACnD,OAAIM,EAAgBvlH,OAAS,EAClBulH,EAAgB,GAAGrG,iBAEnB,KAWPgG,mBAAAA,CACJM,EACAP,GAEA,OAAOO,EAAeC,SAASC,GACpB9yG,KAAK+yG,mCACRD,EACAT,GAAetP,SACfsP,KAKJW,8BAAAA,CACJrF,EACAsF,EACArH,EACAsH,GAEA,IACI7nH,EADA8nH,EAA0C,KAG9C,GAAID,IAEKlzG,KAAKozG,2BACFxH,EACAsH,GAGJ,OAAO,KAIf,MAAMpQ,EAAU9iG,KAAKqzG,WACjB1F,EACAsF,EACArH,EAAc7I,UAGlB,OAAID,IACAz3G,EAAgBg2G,GACZyB,EAAQ9sC,OACRh2D,KAAKiyG,WAAWrR,eAIf5gG,KAAKszG,sCACFjoH,EACA6nH,IAIG,MAKfC,EAAsBzH,GAClBiC,EACA/B,EACAvgH,EACAy3G,GAAS9sC,QAGNm9C,GAGHJ,kCAAAA,CACJD,EACAS,EACAL,GAEA,MAAMvF,EAAcmF,EAAcxG,iBAClC,IAAIkH,EACA7F,EAAYlB,gBAAkB,IAAIltE,IACtC,MAAM0zE,EAAYjzG,KAAKyzG,eAGvB,GAAIF,EAAgB,CAChB,MAAM3H,EAAgB4H,EAAqB12G,IAAIy2G,GAC/C,IAAI3H,EAOA,MAAO,GALP4H,EAAuB,IAAIj0E,IAA2B,CAClD,CAACg0E,EAAgB3H,IAM5B,CAED,MAAM8H,EAAwC,GAa9C,OAZAF,EAAqB94F,SAASkxF,IAC1B,MAAMuH,EAAsBnzG,KAAKgzG,+BAC7BrF,EACAsF,EACArH,EACAsH,GAEAC,GACAO,EAAuB7mH,KAAKsmH,EAC/B,IAGEO,EAGHN,0BAAAA,CACJxH,EACAsH,GAEA,QACMA,EAAoB5H,iBACrBtrG,KAAK2zG,qCACF/H,EACAsH,EAAoB5H,qBAOtB4H,EAAoBnhH,MACpB65G,EAAc75G,OAASmhH,EAAoBnhH,aAMR1E,IAArC6lH,EAAoBzH,cAClBG,EAAcH,eAAiByH,EAAoBzH,eAQrD6H,qCAAAA,CACJjoH,EACA6nH,GAGA,GAAIA,EAAqB,CACrB,GACMA,EAAoB5H,iBACrBtrG,KAAK4zG,mCACFvoH,EACA6nH,EAAoB5H,gBAGxB,OAAO,EAGX,GACM4H,EAAoBW,YACrB7zG,KAAK8zG,8BACFzoH,EACA6nH,EAAoBW,WAGxB,OAAO,EAGX,GACMX,EAAoBhhH,WACrB8N,KAAK+zG,cACF1oH,EAAcglC,mBACd6iF,EAAoBhhH,UAGxB,OAAO,EAGX,GACMghH,EAAoBnhH,OACrBiO,KAAKg0G,UAAU3oH,EAAe6nH,EAAoBnhH,MAEnD,OAAO,EAGX,GACMmhH,EAAoBtiF,MACrB5wB,KAAKi0G,SAAS5oH,EAAe6nH,EAAoBtiF,KAElD,OAAO,CAEd,CAED,OAAO,EASX,qBAAMsjF,CACFC,EACAC,EACAC,GAEA,IAAKF,EACD,MAAM1T,GACFxB,GAIR,IACUkV,EAAYjlE,SACdlvC,KAAKs0G,WAAWH,EAAYjlE,SAG1BilE,EAAYrR,UAAqC,IAA1BsR,GAActR,SACvC9iG,KAAKu0G,qBAAqBJ,EAAYrR,SAIpCqR,EAAY7hH,cACgB,IAA9B8hH,GAAc9hH,mBAER0N,KAAKw0G,gBAAgBL,EAAY7hH,aAIrC6hH,EAAY5hH,eACiB,IAA/B6hH,GAAc7hH,cAEdyN,KAAKy0G,0BAA0BN,EAAY5hH,cAGzC4hH,EAAYO,aACd10G,KAAK20G,eAAeR,EAAYO,YAEvC,CAAC,MAAOjjH,GAEL,MADAuO,KAAKmyG,cAAcrmH,MAAM,wCACrB2F,aAAa3D,OACbkS,KAAKmyG,cAAcyC,SACf,iCAAiCnjH,EAAErD,UACnCimH,GAIW,uBAAX5iH,EAAEM,MACS,+BAAXN,EAAEM,MACFN,EAAErD,QAAQ0a,SAAS,uBAEnB9I,KAAKmyG,cAAcrmH,MACf,uDACAuoH,GAEE,IAAIvC,GACNH,KAGE,IAAIG,GAAWrgH,EAAEM,KAAMN,EAAErD,WAGnC4R,KAAKmyG,cAAcyC,SACf,iCAAiCnjH,IACjC4iH,GAEE,IAAIvC,GAAWF,IAE5B,EAOG,qBAAM4C,CACVK,GAEA,MAAMC,EAAsC,CACxC/hH,SAAU8hH,EAAW9hH,SACrBiwG,eAAgB6R,EAAW7R,eAC3BH,YAAagS,EAAWhS,YACxBD,cAAeiS,EAAWjS,cAC1BO,MAAO0R,EAAW1R,MAClBI,UAAWsR,EAAWtR,UACtBI,oBAAqBkR,EAAWlR,qBAG9BsP,EAAYjzG,KAAKyzG,eACjBsB,EAAgBxM,GAASM,WAAWgM,EAAWnjH,QAE/CsjH,EAA4C,GAClD/B,EAAU3gH,YAAYooB,SAAShhB,IAC3B,IACKsG,KAAKi1G,4BAA4Bv7G,EAAKo7G,GAAmB,GAE1D,OAGJ,MAAMI,EAAcl1G,KAAKm1G,yBAAyBz7G,GAElD,GACIw7G,GACAl1G,KAAKo1G,wBAAwBF,EAAaJ,GAC5C,CACwBvM,GAASM,WAAWqM,EAAYxjH,QACpC64G,sBAAsBwK,IACpCC,EAAoBnoH,KAAKmT,KAAKq1G,kBAAkB37G,GAEvD,WAECuO,QAAQC,IAAI8sG,GAClBh1G,KAAKs1G,yBAAyBT,GAQlCtC,qBAAAA,CAAsBF,GAClB,MAAMkD,EAAiBv1G,KAAKw1G,iBACtBC,EAAoC,GAsF1C,OArFAF,EAAe76F,SAASg7F,IACpB,IAAK11G,KAAK21G,aAAaD,EAAUrD,EAAczP,eAE3C,OAGJ,MAAMgC,EAA+B5kG,KAAK41G,WACtCF,EACA11G,KAAKmyG,cAKT,IAAKvN,EACD,OAGJ,GACMyN,EAAczP,gBACf5iG,KAAK61G,mBAAmBjR,EAAQyN,EAAczP,eAE/C,OAGJ,GACMyP,EAAcngH,WACf8N,KAAK+zG,cAAcnP,EAAO1yG,SAAUmgH,EAAcngH,UAEnD,OAGJ,GACMmgH,EAAcxP,cACf7iG,KAAK81G,iBAAiBlR,EAAQyN,EAAcxP,aAE7C,OAGJ,GACMwP,EAAclP,QACfnjG,KAAK+1G,WAAWnR,EAAQyN,EAAclP,OAEvC,OAGJ,GACMkP,EAAc9F,kBACfvsG,KAAKg2G,qBACFpR,EACAyN,EAAc9F,iBAGlB,OAGJ,GACM8F,EAAc7F,gBACfxsG,KAAKi2G,mBAAmBrR,EAAQyN,EAAc7F,eAE/C,OAIJ,MAAM0G,EAA2C,CAC7C5H,eAAgB+G,GAAe/G,eAC/Bv5G,KAAMsgH,GAAetgH,MAGnB2hH,EAAyB9O,EAAO6H,gBAAgBlwG,QACjDqvG,GACU5rG,KAAKozG,2BACRxH,EACAsH,KAKRQ,GAA4D,IAAlCA,EAAuBtmH,QAKrDqoH,EAAiB5oH,KAAK+3G,EAAO,IAG1B6Q,EAUXE,YAAAA,CACIj8G,EACAkpG,EACAG,GAEA,QAAIrpG,EAAIqN,MAAM07F,EAAAA,GAAWC,qBAAqBt1G,OAAS,OAMnDw1G,IACClpG,EAAIpM,cAAcwb,SAAS85F,EAAct1G,mBAK1Cy1G,IAAarpG,EAAIpM,cAAcwb,SAASi6F,EAASz1G,iBAazD4oH,eAAAA,CAAgBx8G,GACZ,GAAIA,EAAIqN,MAAM07F,EAAAA,GAAWC,qBAAqBt1G,OAAS,EAEnD,OAAO,EAGX,MAAM+oH,EAAez8G,EAAIpM,cAEzB,IAES,IADL6oH,EAAahwG,QAAQ88F,EAAAA,GAAeC,SAAS51G,iBAGxC,IADL6oH,EAAahwG,QAAQ88F,EAAAA,GAAeY,aAAav2G,iBAI1C,IAFP6oH,EAAahwG,QACT88F,EAAAA,GAAeiB,8BAA8B52G,iBAG5C,IADL6oH,EAAahwG,QAAQ88F,EAAAA,GAAeyB,cAAcp3G,eAGlD,OAAO,EAGX,GACI6oH,EAAahwG,QAAQ88F,EAAAA,GAAeyB,cAAcp3G,gBACjD,EACH,CAEE,MAAM8oH,EAAqB,GAAGnT,EAAAA,GAAeyB,gBAAgBjC,EAAAA,GAAWC,sBAAsB1iG,KAAKjN,WAAW0vG,EAAAA,GAAWC,sBACnH2T,EAAqB,GAAGpT,EAAAA,GAAeyB,gBAAgBjC,EAAAA,GAAWC,sBAAsB4T,EAAAA,KAAgB7T,EAAAA,GAAWC,sBACzH,IACgE,IAA5DyT,EAAahwG,QAAQiwG,EAAmB9oH,iBACoB,IAA5D6oH,EAAahwG,QAAQkwG,EAAmB/oH,eAExC,OAAO,CAEd,MAAM,IAA2D,IAAvD6oH,EAAahwG,QAAQnG,KAAKjN,SAASzF,eAE1C,OAAO,EAGX,OAAO,EASX8nH,uBAAAA,CACIxQ,EACAroG,GAEA,GAAMA,EAAOxJ,WAAaiN,KAAKu2G,cAAc3R,EAAQroG,EAAOxJ,UACxD,OAAO,EAGX,GACMwJ,EAAOinG,oBACRxjG,KAAKw2G,uBAAuB5R,EAAQroG,EAAOinG,mBAE5C,OAAO,EAOX,GACoC,kBAAzBjnG,EAAOqmG,gBACb5iG,KAAK61G,mBAAmBjR,EAAQroG,EAAOqmG,eAExC,OAAO,EAGX,GACMrmG,EAAOsmG,cACR7iG,KAAK81G,iBAAiBlR,EAAQroG,EAAOsmG,aAEtC,OAAO,EAGX,GAAMtmG,EAAO4mG,QAAUnjG,KAAK+1G,WAAWnR,EAAQroG,EAAO4mG,OAClD,OAAO,EAGX,GACM5mG,EAAOymG,iBACRhjG,KAAKy2G,oBAAoB7R,EAAQroG,EAAOymG,gBAEzC,OAAO,EAGX,GAAMzmG,EAAOioG,WAAaxkG,KAAK02G,cAAc9R,EAAQroG,EAAOioG,UACxD,OAAO,EAOX,GAAMjoG,EAAO7K,SAAWsO,KAAK22G,YAAY/R,EAAQroG,EAAO7K,QACpD,OAAO,EAIX,IAAI6K,EAAOonG,qBAAuBiB,EAAOjB,sBAEjCiB,EAAOjB,sBAAwBpnG,EAAOonG,oBACtC,OAAO,EAKf,GACIiB,EAAO5B,iBACPC,EAAAA,GAAeiB,8BACjB,CACE,GACM3nG,EAAOgnG,YACRvjG,KAAK42G,eAAehS,EAAQroG,EAAOgnG,WAEpC,OAAO,EAIX,GAAIhnG,EAAOgnG,YAAcS,EAAAA,GAAqBM,KACtC/nG,EAAOknG,QAAUzjG,KAAK62G,WAAWjS,EAAQroG,EAAOknG,OAChD,OAAO,CAGlB,CAED,OAAO,EAOXqT,wBAAAA,CAAyBv6G,GACrB,MAAMw6G,EAAe/2G,KAAKg3G,UACpBC,EAAwC,CAAC,EAgC/C,OA9BAF,EAAar8F,SAASg7F,IAElB,IAAK11G,KAAKk3G,cAAcxB,GACpB,OAIJ,MAAM9Q,EAAS5kG,KAAKm3G,eAAezB,GAE9B9Q,IAKCroG,EAAOsmG,cACR7iG,KAAK81G,iBAAiBlR,EAAQroG,EAAOsmG,cAMpCtmG,EAAOxJ,WACRiN,KAAKu2G,cAAc3R,EAAQroG,EAAOxJ,YAKvCkkH,EAAoBvB,GAAY9Q,GAAM,IAGnCqS,EAOXG,2BAAAA,CAA4BljE,GACxB,MAAM6iE,EAAe/2G,KAAKq3G,2BAC1B,IAAIC,EAAgB,KAyBpB,OAvBAP,EAAar8F,SAASg7F,IAElB,IACK11G,KAAKu3G,oBAAoB7B,KACW,IAArCA,EAASvvG,QAAQnG,KAAKjN,UAEtB,OAIJ,MAAM6xG,EAAS5kG,KAAKw3G,qBAAqB9B,GAEpC9Q,IAIiC,IAAlCA,EAAOmB,QAAQ5/F,QAAQ+tC,KAI3BojE,EAAgB1S,EAAM,IAGnB0S,EAMX,uBAAMG,GACF,MAAMlC,EAAiBv1G,KAAKw1G,iBACtBkC,EAAwC,GAE9CnC,EAAe76F,SAASg7F,IACpBgC,EAAgB7qH,KAAKmT,KAAK23G,cAAcjC,GAAU,UAGhDztG,QAAQC,IAAIwvG,GAOtB,mBAAMC,CAAcC,GAChB,MAAM1oE,EAAUlvC,KAAK41G,WAAWgC,EAAY53G,KAAKmyG,cAC5CjjE,UAGClvC,KAAK63G,qBAAqB3oE,GAChClvC,KAAK83G,WAAWF,IAOpB,0BAAMC,CAAqB3oE,GACvB,MAAM6oE,EAAe/3G,KAAKyzG,eACpBuE,EAAY9oE,EAAQkzD,oBACpB6V,EAA2C,GAEjDF,EAAajV,QAAQpoF,SAAShhB,IACK,IAA3BA,EAAIyM,QAAQ6xG,IACZh4G,KAAKk4G,cAAcx+G,EACtB,IAGLq+G,EAAazlH,YAAYooB,SAAShhB,IACC,IAA3BA,EAAIyM,QAAQ6xG,IACZC,EAAmBprH,KAAKmT,KAAKq1G,kBAAkB37G,GAClD,IAGLq+G,EAAaxlH,aAAamoB,SAAShhB,IACA,IAA3BA,EAAIyM,QAAQ6xG,IACZh4G,KAAKm4G,mBAAmBz+G,EAC3B,UAGCuO,QAAQC,IAAI+vG,GAWZG,2BAAAA,CACNR,EACA9E,EACA/E,GAGA,GAAI+E,GAAiBA,EAAcpG,iBAAkB,CACjD1sG,KAAKmyG,cAAckG,QACf,uIAIJ,MAAMC,EAAsBt4G,KAAKw1G,iBAAiBj5G,QAC7C7C,GACUA,EAAIgL,WAAWouG,EAAclQ,iBAKtC2V,EAAmC,GACzCD,EAAoB59F,SAAShhB,IACzB,MAAMw1C,EAAUlvC,KAAKw4G,uBAAuB9+G,GACxCw1C,GACAqpE,EAAgB1rH,KAAKqiD,EACxB,IAIL,MAAMupE,EACFF,EAAgB/8F,MAAM0zB,GACXk8D,GACHl8D,EAAQi0D,MACRj0D,EAAQ0zD,kBAEV2V,EAAgB,GAG1BE,EAAYhM,eAAiB8L,EAAgBrnH,KACxCg+C,IACU,CACH6zD,SAAU7zD,EAAQi0D,MAClBmI,eAAgBp8D,EAAQo8D,eACxBv5G,KAAMm9C,EAAQn9C,KACd05G,aAAcL,GACVl8D,EAAQi0D,MACRj0D,EAAQ0zD,mBAMxB,MAAM8V,EAAiB1G,GAAa2G,SAAS,IAAIxM,GAAiB,IAC3DsM,IAGDG,EAAgBF,EAAetM,qBAYrC,OATAkM,EAAoB59F,SAAShhB,IACrBA,IAAQk/G,GACR54G,KAAK64G,sBAAsBjB,EAC9B,IAIL53G,KAAKs0G,WAAWoE,GAChB3K,GAAQsK,QAAQ,mDACTK,CACV,CAGD,OAAO5F,EAOX,uBAAMuC,CAAkB37G,GACpB,MAAMm7G,EAAa70G,KAAKm1G,yBAAyBz7G,GACjD,GAAKm7G,EAAL,CAKA,GACIA,EAAW7R,eAAe11G,gBAC1B21G,EAAAA,GAAeiB,8BAA8B52G,eAEzCunH,EAAWtR,YAAcS,EAAAA,GAAqBG,IAAK,CACnD,MAEME,EADFwQ,EACwCpR,MAE5C,GAAIY,EACA,UACUrkG,KAAKiyG,WAAWhR,sBAAsBoD,EAC/C,CAAC,MAAOv4G,GACL,MAAM20G,GACFb,EAEP,CAER,CAGL,OAAO5/F,KAAK83G,WAAWp+G,EAxBtB,EA8BLo/G,iBAAAA,GAQI,OAPqB94G,KAAKg3G,UACbt8F,SAASg7F,IACd11G,KAAKk3G,cAAcxB,IACnB11G,KAAK83G,WAAWpC,EACnB,KAGE,EAOXqD,oBAAAA,CAAqB7pE,GACjB,MAAM0oE,EACFzL,GAAcE,wBAAwBn9D,GAC1C,OAAOlvC,KAAK41G,WAAWgC,EAAY53G,KAAKmyG,cAW5CkB,UAAAA,CACInkE,EACA+jE,EACA+F,EACAC,EACA5E,GAEAr0G,KAAKmyG,aAAaZ,MAAM,oCACxB,MAAM2H,EAAkC,CACpCtW,cAAe1zD,EAAQ0zD,cACvBC,YAAa3zD,EAAQ2zD,YACrBG,eAAgBC,EAAAA,GAAeC,SAC/BnwG,SAAUiN,KAAKjN,SACfowG,MAAO6V,GAGLG,EAAyCn5G,KAAKo5G,oBAChDF,EACAjG,GAGEoG,EAAcF,EAAWpiH,KAE/B,GAAIsiH,EAAc,EAEd,OADAr5G,KAAKmyG,aAAar+G,KAAK,4CAChB,KACJ,GAAIulH,EAAc,EAAG,CACxB,IAAIC,EAAgDH,EAEpD,IAAKH,EAAa,CACd,MAAMO,EAA6C,IAAIh6E,IAIvD45E,EAAWz+F,SAAQ,CAACooF,EAASppG,KACrBopG,EAAQK,QAAUj0D,EAAQ6zD,UAC1BwW,EAAe57G,IAAIjE,EAAKopG,EAC3B,IAEL,MAAM0W,EAAkBD,EAAexiH,KACvC,GAAIyiH,EAAkB,EAIlB,OAHAx5G,KAAKmyG,aAAar+G,KACd,kIAEGqlH,EAAW/7G,SAAS8F,OAAO/T,MAC/B,GAAwB,IAApBqqH,EAIP,OAHAx5G,KAAKmyG,aAAar+G,KACd,qGAEGylH,EAAen8G,SAAS8F,OAAO/T,MAGtCmqH,EAAoBC,CAE3B,CAcD,OAZAv5G,KAAKmyG,aAAar+G,KACd,8EAEJwlH,EAAkB5+F,SAAQ,CAACooF,EAASppG,KAChCsG,KAAKk4G,cAAcx+G,EAAI,IAEvBu/G,GAAqB5E,GACrB4E,EAAkBQ,UACd,CAAEC,eAAgBP,EAAWpiH,MAC7Bs9G,GAGD,IACV,CAGD,OADAr0G,KAAKmyG,aAAar+G,KAAK,gDAChBqlH,EAAW/7G,SAAS8F,OAAO/T,MAQtCiqH,mBAAAA,CACI78G,EACA02G,GAEA,MAAM0G,EACD1G,GAAaA,EAAUnQ,SAAY9iG,KAAKyzG,eAAe3Q,QAEtD8W,EAAuC,IAAIr6E,IAmBjD,OAfAo6E,EAAYj/F,SAAShhB,IACjB,IACKsG,KAAK65G,wBAAwBngH,EAAK,CAC/B3G,SAAUiN,KAAKjN,YACZwJ,IAGP,OAEJ,MAAMumG,EAAU9iG,KAAK85G,qBAAqBpgH,GACtCopG,GAAW9iG,KAAKo1G,wBAAwBtS,EAASvmG,IACjDq9G,EAASj8G,IAAIjE,EAAKopG,EACrB,IAGE8W,EASXC,uBAAAA,CACIE,EACAx9G,GAEA,MAAM7C,EAAMqgH,EAASzsH,cACrB,QACIiP,EAAOxJ,WACyC,IAAhD2G,EAAIyM,QAAQ5J,EAAOxJ,SAASzF,mBAM5BiP,EAAOqmG,gBAC8C,IAArDlpG,EAAIyM,QAAQ5J,EAAOqmG,cAAct1G,gBAYzC4qH,aAAAA,CAAcx+G,GACVsG,KAAK83G,WAAWp+G,GAOpBy+G,kBAAAA,CAAmBz+G,GACfsG,KAAK83G,WAAWp+G,GAWpBsgH,cAAAA,CACI9qE,EACAr9C,EACAohH,EACA+F,EACAC,EACA5E,GAEAr0G,KAAKmyG,aAAaZ,MAAM,wCACxB,MAAMz/G,EAASy2G,GAASU,mBAAmBp3G,EAAQC,QAC7CmoH,EACFpoH,EAAQqoH,sBAAwBlW,EAAAA,GAAqBC,OAKnDjB,EACFiX,GACAA,EAAW3sH,gBACP02G,EAAAA,GAAqBC,OAAO32G,cAC1B21G,EAAAA,GAAeiB,8BACfjB,EAAAA,GAAeY,aAEnBiR,EAAsC,CACxClS,cAAe1zD,EAAQ0zD,cACvBC,YAAa3zD,EAAQ2zD,YACrBG,eAAgBA,EAChBjwG,SAAUiN,KAAKjN,SACfowG,MAAO6V,GAAe9pE,EAAQ6zD,SAC9BrxG,OAAQI,EACRyxG,UAAW0W,EACXxW,MAAO5xG,EAAQsoH,OACfxW,oBAAqB9xG,EAAQ8xG,qBAG3ByW,EACDnH,GAAaA,EAAU3gH,aACxB0N,KAAKyzG,eAAenhH,YAClB+nH,EAAoC,GAE1CD,EAAgB1/F,SAAShhB,IAErB,GACIsG,KAAKi1G,4BAA4Bv7G,EAAKo7G,GAAmB,GAC3D,CACE,MAAMxiH,EAAc0N,KAAKm1G,yBAAyBz7G,GAI9CpH,GACA0N,KAAKo1G,wBAAwB9iH,EAAawiH,IAE1CuF,EAAaxtH,KAAKyF,EAEzB,KAGL,MAAMgoH,EAAkBD,EAAajtH,OACrC,OAAIktH,EAAkB,GAClBt6G,KAAKmyG,aAAar+G,KACd,gDAEG,MACAwmH,EAAkB,GACzBt6G,KAAKmyG,aAAar+G,KACd,6EAEJumH,EAAa3/F,SAASpoB,IACb0N,KAAKq1G,kBAAkBnT,GAAsB5vG,GAAa,IAE/D2mH,GAAqB5E,GACrB4E,EAAkBQ,UACd,CAAEc,eAAgBF,EAAajtH,QAC/BinH,GAGD,OAGXr0G,KAAKmyG,aAAar+G,KACd,wDAEGumH,EAAa,IAUxBpF,2BAAAA,CACI8E,EACAx9G,EACAi+G,GAEA,MAAM9gH,EAAMqgH,EAASzsH,cACrB,GACIiP,EAAOxJ,WACyC,IAAhD2G,EAAIyM,QAAQ5J,EAAOxJ,SAASzF,eAE5B,OAAO,EAGX,GACIiP,EAAOqmG,gBAC8C,IAArDlpG,EAAIyM,QAAQ5J,EAAOqmG,cAAct1G,eAEjC,OAAO,EAGX,GAAIiP,EAAO4mG,QAAsD,IAA7CzpG,EAAIyM,QAAQ5J,EAAO4mG,MAAM71G,eACzC,OAAO,EAGX,GACIiP,EAAOonG,sBACoD,IAA3DjqG,EAAIyM,QAAQ5J,EAAOonG,oBAAoBr2G,eAEvC,OAAO,EAGX,GAAIiP,EAAO7K,OAAQ,CACf,MAAMI,EAASyK,EAAO7K,OAAOk4G,UAC7B,IAAK,IAAIh9G,EAAI,EAAGA,EAAIkF,EAAO1E,OAAQR,IAAK,CACpC,GACI4tH,IACC9gH,EAAIoP,SAAShX,EAAOlF,GAAGU,eAGxB,OAAO,EACJ,IACFktH,GACD9gH,EAAIoP,SAAShX,EAAOlF,GAAGU,eAGvB,OAAO,CAEd,CACJ,CAED,OAAO,EAQXmtH,uBAAAA,CAAwBl+G,GACpB,MAAM02G,EAAYjzG,KAAKyzG,eAEjB4G,EAAoC,GAe1C,OAdApH,EAAU3gH,YAAYooB,SAAShhB,IAC3B,IAAKsG,KAAKi1G,4BAA4Bv7G,EAAK6C,GAAQ,GAC/C,OAGJ,MAAMjK,EAAc0N,KAAKm1G,yBAAyBz7G,GAE9CpH,GACA0N,KAAKo1G,wBAAwB9iH,EAAaiK,IAE1C89G,EAAaxtH,KAAKyF,EACrB,IAGE+nH,EAWXK,eAAAA,CACIxrE,EACAyrE,EACA1H,EACAgG,EACA5E,GAEAr0G,KAAKmyG,aAAaZ,MAAM,yCACxB,MAAMp8F,EAAKwlG,EAAWrE,EAAAA,QAAgBjpH,EAChCutH,EAAuC,CACzChY,cAAe1zD,EAAQ0zD,cACvBC,YAAa3zD,EAAQ2zD,YACrBG,eAAgBC,EAAAA,GAAeyB,cAC/B3xG,SAAUiN,KAAKjN,SACfyxG,SAAUrvF,GAGR0lG,EACD5H,GAAaA,EAAU1gH,cACxByN,KAAKyzG,eAAelhH,aAClBuoH,EAAsC,GAE5CD,EAAiBngG,SAAShhB,IAEtB,GAAIsG,KAAK+6G,6BAA6BrhH,EAAKkhH,GAAqB,CAC5D,MAAMroH,EAAeyN,KAAKg7G,0BAA0BthH,GAGhDnH,GACAyN,KAAKo1G,wBACD7iH,EACAqoH,IAGJE,EAAcjuH,KAAK0F,EAE1B,KAGL,MAAM0oH,EAAmBH,EAAc1tH,OACvC,OAAI6tH,EAAmB,GACnBj7G,KAAKmyG,aAAar+G,KACd,0DAEG,OAIPmnH,EAAmB,GAAKhC,GAAqB5E,GAC7C4E,EAAkBQ,UACd,CAAEyB,eAAgBD,GAClB5G,GAIRr0G,KAAKmyG,aAAar+G,KACd,0DAEGgnH,EAAc,IAQzBC,4BAAAA,CACIhB,EACAx9G,GAEA,MAAM7C,EAAMqgH,EAASzsH,cACrB,QACIiP,EAAOioG,WACyC,IAAhD9qG,EAAIyM,QAAQ5J,EAAOioG,SAASl3G,qBAO3BiP,EAAOioG,UACRjoG,EAAOxJ,WACyC,IAAhD2G,EAAIyM,QAAQ5J,EAAOxJ,SAASzF,mBAM5BiP,EAAOqmG,gBAC8C,IAArDlpG,EAAIyM,QAAQ5J,EAAOqmG,cAAct1G,iBAWzC6tH,wBAAAA,CAAyBtY,GACrB,MAAMuY,EAAuC,CACzCvY,cACA9vG,SAAUiN,KAAKjN,UAGb2hH,EACF10G,KAAK82G,yBAAyBsE,GAC5BC,EAA0C9iH,OAAO+E,KACnDo3G,GACFxjH,KAAKwI,GAAQg7G,EAAYh7G,KAErB4hH,EAAiBD,EAAmBjuH,OAC1C,GAAIkuH,EAAiB,EACjB,OAAO,KACJ,GAAIA,EAAiB,EACxB,MAAM7a,GACFjC,GAIR,OAAO6c,EAAmB,GAQ9BE,iBAAAA,CAAkB1Y,GACd,MAAM6R,EAAc10G,KAAKm7G,yBAAyBtY,GAClD,SAAU6R,GAAeA,EAAYlQ,WAAa8R,EAAAA,IAQ9CT,kBAAAA,CACJjR,EACAhC,GAEA,QACoC,kBAAzBgC,EAAOhC,eACdA,IAAkBgC,EAAOhC,eAUzBgR,kCAAAA,CACJhkF,EACA07E,GAGA,OAAOA,KADuB17E,EAAYW,KAAOX,EAAYiB,KAIzD8iF,oCAAAA,CACJ/H,EACAN,GAEA,OAAOM,EAAcN,iBAAmBA,EASpC0I,SAAAA,CAAUnkF,EAAqB99B,GACnC,QAAUA,EAAKzE,gBAAkBuiC,EAAO99B,MAAMzE,eAS1CymH,aAAAA,CACJyH,EACAC,GAEA,SACID,GAC0B,kBAAnBA,GACPC,GAAgBnuH,gBAAkBkuH,EAAeluH,eASjDkpH,sBAAAA,CACJ5R,EACApB,GAEA,SACIoB,EAAOpB,mBACPA,IAAsBoB,EAAOpB,mBAS7BsS,gBAAAA,CACJlR,EACA/B,GAGA,GAAI7iG,KAAKkyG,uBAAwB,CAC7B,MAAMwJ,EHxkDF,SACZxJ,EACAnE,GAEA,IAAI2N,EACJ,MAAMC,EAAqBzJ,EAAuByJ,mBAClD,GAAIA,EAAoB,CACpB,MAAMtK,EAAgB,IAAIrC,GACtB2M,GACFpM,mBAAmBC,gBACrBkM,EACItK,GACIC,EACAa,EAAuBZ,wBAAwBlL,SAC/CwV,EAAAA,GAAwBC,OACxB9N,IAEJqD,GACIC,EACAJ,GAA0B7K,SAC1BwV,EAAAA,GAAwBE,iBACxB/N,IAEJmE,EAAuB6J,gBAC9B,CAED,OAAOL,GAAiB,EAC5B,CG6iDkCM,CAClBh8G,KAAKkyG,uBACLlyG,KAAKmyG,cAET,GACIuJ,EAAc5yG,SAAS+5F,IACvB6Y,EAAc5yG,SAAS87F,EAAO/B,aAE9B,OAAO,CAEd,CAGD,MAAMoZ,EAAgBj8G,KAAKo3G,4BAA4BvU,GACvD,SACIoZ,GACAA,EAAclW,QAAQ5/F,QAAQy+F,EAAO/B,cAAgB,GAYrD4T,mBAAAA,CACJ7R,EACA5B,GAEA,OACI4B,EAAO5B,gBACPA,EAAe11G,gBAAkBs3G,EAAO5B,eAAe11G,cASvDipH,aAAAA,CACJ3R,EACA7xG,GAEA,SAAU6xG,EAAO7xG,UAAYA,IAAa6xG,EAAO7xG,UAQ7C2jH,aAAAA,CACJ9R,EACAJ,GAEA,SAAUI,EAAOJ,UAAYA,IAAaI,EAAOJ,UAQ7CuR,UAAAA,CACJnR,EACAzB,GAEA,QAAUyB,EAAOzB,OAAO71G,gBAAkB61G,EAAM71G,eAS5C0oH,oBAAAA,CACJpR,EACA2H,GAEA,SACI3H,EAAO2H,iBAAmBA,IAAoB3H,EAAO2H,iBAarDuH,6BAAAA,CACJlkF,EACAikF,GAEA,OAAIjkF,EAAYssF,aAAerI,IAI3BjkF,EAAYS,qBAAuBwjF,GAInCjkF,EAAYa,MAAQojF,GAapBI,QAAAA,CAAS5oH,EAA4BulC,GACzC,OAAOvlC,EAAculC,MAAQA,EAGzBqlF,kBAAAA,CACJrR,EACA4H,GAEA,SACI5H,EAAO4H,eACPA,EAAcl/G,gBAAkBs3G,EAAO4H,cAAcl/G,eASrDqpH,WAAAA,CAAY/R,EAA0BlzG,GAM1C,GAJIkzG,EAAO5B,iBAAmBC,EAAAA,GAAeY,cACzCe,EAAO5B,iBACHC,EAAAA,GAAeiB,gCAEYU,EAAOlzG,OACtC,OAAO,EAKX,OAFiC62G,GAASM,WAAWjE,EAAOlzG,QAEtCi4G,iBAAiBj4G,GAQnCklH,cAAAA,CACJhS,EACArB,GAEA,SAAUqB,EAAOrB,WAAaqB,EAAOrB,YAAcA,GAQ/CsT,UAAAA,CAAWjS,EAA0BnB,GACzC,SAAUmB,EAAOnB,OAASmB,EAAOnB,QAAUA,GAOvCyT,aAAAA,CAAcx9G,GAClB,OAAsC,IAA/BA,EAAIyM,QAAQg2G,EAAAA,IAOb5E,mBAAAA,CAAoB79G,GAC1B,OAAgE,IAAzDA,EAAIyM,QAAQ++F,EAAAA,GAA6BkX,WAMpDC,iCAAAA,CAAkCrpH,GAC9B,MAAO,GAAGkyG,EAAAA,GAA6BkX,aAAap8G,KAAKjN,YAAYC,IAQzE,eAAO2lH,CAAYj8G,EAAQqM,GACvB,IAAK,MAAMuwD,KAAgBvwD,EACvBrM,EAAI48D,GAAgBvwD,EAAKuwD,GAE7B,OAAO58D,GAKT,MAAO4/G,WAA4BtK,GACrCsC,UAAAA,GACI,MAAM7T,GAAsBP,GAEhC0V,UAAAA,GACI,MAAMnV,GAAsBP,GAEhCsY,sBAAAA,GACI,MAAM/X,GAAsBP,GAEhCqU,oBAAAA,GACI,MAAM9T,GAAsBP,GAEhC4Z,oBAAAA,GACI,MAAMrZ,GAAsBP,GAEhCoV,wBAAAA,GACI,MAAM7U,GAAsBP,GAEhCiV,wBAAAA,GACI,MAAM1U,GAAsBP,GAEhCuU,yBAAAA,GACI,MAAMhU,GAAsBP,GAEhC8a,yBAAAA,GACI,MAAMva,GAAsBP,GAEhCyU,cAAAA,GACI,MAAMlU,GAAsBP,GAEhCiX,cAAAA,GACI,MAAM1W,GAAsBP,GAEhCqc,kBAAAA,GACI,MAAM9b,GAAsBP,GAEhCsc,kBAAAA,GACI,MAAM/b,GAAsBP,GAEhCuc,oBAAAA,GACI,MAAMhc,GAAsBP,GAEhCsX,oBAAAA,GACI,MAAM/W,GAAsBP,GAEhCmX,wBAAAA,GACI,MAAM5W,GAAsBP,GAEhCwc,kBAAAA,GACI,MAAMjc,GAAsBP,GAEhCyc,kBAAAA,GACI,MAAMlc,GAAsBP,GAEhC4X,UAAAA,GACI,MAAMrX,GAAsBP,GAEhC8W,OAAAA,GACI,MAAMvW,GAAsBP,GAEhCsV,cAAAA,GACI,MAAM/U,GAAsBP,GAEhCuT,YAAAA,GACI,MAAMhT,GAAsBP,GAEhC,WAAMx+C,GACF,MAAM++C,GAAsBP,GAEhC0c,wBAAAA,GACI,MAAMnc,GAAsBP,GAEhC2Y,qBAAAA,GACI,MAAMpY,GAAsBP,IC5zDvB,MAAA2c,GAAkD,CAC3DC,0BAA2BC,EAAAA,GAC3BC,sBAAsB,GAGpBC,GAAyD,CAC3DxpH,eAAgBA,OAGhBypH,mBAAmB,EACnBC,SAAUvpH,EAAAA,EAASC,KACnBwgH,cAAetL,EAAAA,GAAUC,cAGvBoU,GAAgD,CAClDC,2BAA2B,GAGzBC,GAAiD,CACnD,yBAAMC,GACF,MAAM9c,GAAsBP,IAEhC,0BAAMsd,GACF,MAAM/c,GAAsBP,KAI9Bud,GAAoC,CACtCC,IAAK3U,EAAAA,GAAU4U,IACf5rG,QAASA,GACT6rG,IAAK7U,EAAAA,GAAUC,aACfp3F,GAAIm3F,EAAAA,GAAUC,cAGZ6U,GAAgD,CAClDC,aAAc/U,EAAAA,GAAUC,aACxB+U,qBAAiB1wH,GAGf2wH,GAAiD,CACnDC,mBAAoB1gB,EACpB2gB,OAAQ,GAAGnV,EAAAA,GAAUoV,yBAGnBC,GAAwD,CAC1DC,YAAa,CACTC,QAAS,GACTC,WAAY,KAwEd,SAAUC,GAAmBpuH,GAC/B,OACIA,EAAOquH,YAAYzrH,UAAUxF,QAAQ0/G,eAAiB5P,CAE9D,CC7Oa,MAAAohB,GAAuC,CAChDnB,oBAAqBA,IACVt1G,QAAQsR,OACXknF,GAAsBP,IAG9Bsd,qBAAsBA,IACXv1G,QAAQsR,OACXknF,GAAsBP,KC7CrBye,GAAoB,CAK7BC,mBAAoB,qBAMpBC,2BAA4B,6BAM5BC,mBAAoB,qBAMpBC,wBAAyB,0BAMzBC,kBAAmB,oBAOnBC,wBAAyB,0BAOzBC,qBAAsB,uBAMtBC,iCAAkC,mCAMlCC,kBAAmB,oBAMnBC,8BAA+B,gCAM/BC,+BAAgC,iCAChCC,sBAAuB,wBAMvBC,gCAAiC,kCAMjCC,UAAW,YAMXC,gDACI,kDAMJC,+BAAgC,iCAMhCC,oCAAqC,sCAIrCC,oCAAqC,sCAIrCC,6CACI,+CACJC,kDACI,oDAIJC,iBAAkB,kBAIlBC,mCAAoC,qCAIpCC,qBAAsB,uBAKtBC,sCACI,wCAKJC,+BAAgC,iCAKhCC,qDACI,uDAKJC,6CACI,+CAKJC,yCACI,2CAMJC,sBAAuB,wBACvBC,mCAAoC,qCACpCC,8CACI,gDAMJC,2BAA4B,6BAK5BC,sBAAuB,wBAKvBC,wBAAyB,0BAEzBC,4BAA6B,8BAK7BC,8BAA+B,gCAK/BC,iCAAkC,mCAClCC,kCAAmC,oCACnCC,uBAAwB,yBACxBC,2BAA4B,6BAK5BC,8CACI,gDACJC,gDACI,kDACJC,wDACI,0DACJC,4DACI,8DAKJC,eAAgB,iBAKhBC,6BAA8B,+BAC9BC,mBAAoB,qBACpBC,6BAA8B,+BAK9BC,uBAAwB,yBACxBC,8BAA+B,gCAC/BC,iCAAkC,mCAClCC,4BAA6B,8BAK7BC,oBAAqB,sBACrBC,oBAAqB,sBAKrBC,0BAA2B,4BAC3BC,oBAAqB,sBAKrBC,yCACI,2CACJC,+BAAgC,iCAChCC,0CACI,4CACJC,8CACI,gDACJC,sCACI,wCACJC,wCACI,0CACJC,gCAAiC,kCACjCC,+CACI,iDAKJC,4BAA6B,8BAC7BC,iCAAkC,mCAClCC,iCAAkC,mCAElCC,wBAAyB,0BAEzBC,+BAAgC,iCAChCC,gDACI,kDAEJC,iCAAkC,wBAClCC,uCAAwC,8BAExCC,wCACI,0CAEJC,mCAAoC,qCAEpCC,8BAA+B,gCAE/BC,yBAA0B,2BAE1BC,mBAAoB,qBAKpBC,6BAA8B,+BAC9BC,4BAA6B,8BAK7BC,kBAAmB,oBACnBC,qBAAsB,uBACtBC,kCAAmC,oCACnCC,aAAc,eACdC,gBAAiB,mBAsORC,IAhOT,IAAIzkF,IAAI,CACJ,CAACo/E,GAAkBC,mBAAoB,YACvC,CAACD,GAAkBE,2BAA4B,UAC/C,CAACF,GAAkBG,mBAAoB,OACvC,CAACH,GAAkBI,wBAAyB,YAC5C,CAACJ,GAAkBK,kBAAmB,WACtC,CAACL,GAAkBO,qBAAsB,cACzC,CACIP,GAAkBQ,iCAClB,oBAEJ,CAACR,GAAkBS,kBAAmB,iBACtC,CAACT,GAAkBU,8BAA+B,oBAClD,CAACV,GAAkBW,+BAAgC,qBACnD,CAACX,GAAkBa,gCAAiC,gBACpD,CAACb,GAAkBc,UAAW,UAC9B,CACId,GAAkBe,gDAClB,2BAEJ,CACIf,GAAkBgB,+BAClB,2BAEJ,CACIhB,GAAkBiB,oCAClB,kBAEJ,CACIjB,GAAkBkB,oCAClB,4BAEJ,CACIlB,GAAkBmB,6CAClB,oBAEJ,CACInB,GAAkBoB,kDAClB,0BAEJ,CAACpB,GAAkBqB,iBAAkB,mBACrC,CACIrB,GAAkBsB,mCAClB,kBAEJ,CAACtB,GAAkBuB,qBAAsB,cACzC,CACIvB,GAAkBwB,sCAClB,oBAEJ,CAACxB,GAAkByB,+BAAgC,cACnD,CACIzB,GAAkB0B,qDAClB,0BAEJ,CACI1B,GAAkB2B,6CAClB,kBAEJ,CACI3B,GAAkB4B,yCAClB,0BAEJ,CAAC5B,GAAkB6B,sBAAuB,eAC1C,CACI7B,GAAkB8B,mCAClB,yBAEJ,CACI9B,GAAkB+B,8CAClB,gCAEJ,CAAC/B,GAAkBgC,2BAA4B,iBAC/C,CAAChC,GAAkBiC,sBAAuB,eAC1C,CAACjC,GAAkBkC,wBAAyB,cAC5C,CACIlC,GAAkBmC,4BAClB,yBAEJ,CAACnC,GAAkBoC,8BAA+B,mBAClD,CACIpC,GAAkBqC,iCAClB,uBAEJ,CACIrC,GAAkBsC,kCAClB,kCAEJ,CAACtC,GAAkBuC,uBAAwB,qBAC3C,CAACvC,GAAkBwC,2BAA4B,yBAE/C,CACIxC,GAAkByC,8CAClB,oCAEJ,CACIzC,GAAkB0C,gDAClB,6BAEJ,CACI1C,GAAkB2C,wDAClB,2BAEJ,CACI3C,GAAkB4C,4DAClB,+BAGJ,CAAC5C,GAAkB6C,eAAgB,kBAEnC,CACI7C,GAAkB8C,6BAClB,2BAEJ,CAAC9C,GAAkB+C,mBAAoB,kBACvC,CAAC/C,GAAkBgD,6BAA8B,oBAEjD,CAAChD,GAAkBiD,uBAAwB,gBAC3C,CAACjD,GAAkBkD,8BAA+B,sBAClD,CACIlD,GAAkBmD,iCAClB,4BAEJ,CACInD,GAAkBoD,4BAClB,4BAEJ,CAACpD,GAAkBqD,oBAAqB,cACxC,CAACrD,GAAkBsD,oBAAqB,cACxC,CAACtD,GAAkBuD,0BAA2B,oBAC9C,CAACvD,GAAkBwD,oBAAqB,kBACxC,CACIxD,GAAkByD,yCAClB,0BAEJ,CACIzD,GAAkB0D,+BAClB,6BAEJ,CACI1D,GAAkB2D,0CAClB,iCAEJ,CACI3D,GAAkB4D,8CAClB,wBAEJ,CACI5D,GAAkB6D,sCAClB,iBAEJ,CACI7D,GAAkB8D,wCAClB,wBAEJ,CACI9D,GAAkB+D,gCAClB,uBAEJ,CACI/D,GAAkBgE,+CAClB,0BAEJ,CAAChE,GAAkBiE,4BAA6B,oBAChD,CACIjE,GAAkBkE,iCAClB,yBAEJ,CACIlE,GAAkBmE,iCAClB,wBAEJ,CAACnE,GAAkBoE,wBAAyB,iBAC5C,CACIpE,GAAkBqE,+BAClB,0BAEJ,CACIrE,GAAkBsE,gDAClB,oBAEJ,CACItE,GAAkBuE,iCAClB,yBAEJ,CACIvE,GAAkBwE,uCAClB,4BAEJ,CACIxE,GAAkByE,wCAClB,gBAEJ,CACIzE,GAAkB0E,mCAClB,oBAEJ,CACI1E,GAAkB2E,8BAClB,0BAEJ,CAAC3E,GAAkB4E,yBAA0B,iBAC7C,CAAC5E,GAAkB6E,mBAAoB,sBACvC,CACI7E,GAAkB8E,6BAClB,2BAEJ,CAAC9E,GAAkB+E,4BAA6B,qBAChD,CAAC/E,GAAkBgF,kBAAmB,gBACtC,CAAChF,GAAkBiF,qBAAsB,mBACzC,CACIjF,GAAkBkF,kCAClB,gCAEJ,CAAClF,GAAkBmF,aAAc,gBACjC,CAACnF,GAAkBoF,gBAAiB,qBAW5B,GAiT8B,IAAIrgH,IAAI,CAClD,kBACA,aACA,cACA,mBACA,iBACA,mBACA,eACA,cACA,SACA,iBACA,iBACA,yBC30BSugH,GACTC,gBAAAA,IAGAC,cAAAA,IAGAC,gBAAAA,GACI,OAAO,YAIFC,GACTC,UAAAA,GACI,MAAO,cAGXJ,gBAAAA,CACIK,EACAlQ,GAEA,MAAO,CACHhkE,IAAKA,IAAM,KACXm0E,QAASA,OACTphF,IAAKA,OACLqhF,UAAWA,OACX9/G,MAAO,CACH+/G,QAAS1kH,KAAKskH,aACdzkH,OAAQmkH,GACRhxH,UAAW,GACX2xH,YAAa,GACbC,eAAgB,GAChB7xH,SAAU,GACVhB,KAAMwyH,EACNM,YAAa/sH,KAAK8X,MAClBykG,cAAeA,GAAiB,IAEpCyQ,YAAa,IAAIb,IAIzBc,2BAAAA,GACI,OAAO,IAAId,GAEfe,mBAAAA,GACI,OAAO,EAGXC,mBAAAA,IAIAC,eAAAA,IAIAf,cAAAA,GACI,OAAO,KAGXgB,mBAAAA,IAIAC,yBAAAA,GACI,OAAO,EAGXC,sBAAAA,GACI,MAAO,GAGXC,UAAAA,IAIA7L,SAAAA,IAIA8L,eAAAA,IAIAC,yBAAAA,yBCxFSC,GAMTC,gBAAAA,CACIhmH,EACAlS,GAEA,OAAOi4H,GAAiBE,sBAAsBjmH,EAAKlS,GAQvDo4H,gBAAAA,CACIlmH,EACAlS,GAEA,OAAOi4H,GAAiBE,sBAAsBjmH,EAAKlS,GAQ/C,4BAAOm4H,CACXjmH,EACAlS,GAQA,OANIA,EAAQq4H,UACRr3F,OAAOk0B,SAAStqD,QAAQsH,GAExB8uB,OAAOk0B,SAASh+B,OAAOhlB,GAGpB,IAAIuI,SAASqB,IAChB0F,YAAW,KACP1F,GAAQ,EAAK,GACd9b,EAAQ4c,QAAQ,KC9CxB,MAAM07G,GAAiB,mBACjBC,GAAoB,qBACpBC,GAAmB,qBACnBC,GAAiB,mBACjBC,GAAgB,mBAChBC,GACT,yCACSC,GAAqB,wBACrBC,GAA+B,kCAC/BC,GAAwB,0BACxBC,GAAmB,qBACnBC,GAAmB,qBACnBC,GAAgB,iBAChBC,GAAsB,wBACtBC,GAAuB,yBACvBC,GAAmB,qBACnBC,GAAoB,sBACpBC,GAAoB,sBACpBC,GAA0B,4BAC1BC,GAA0B,4BAC1BC,GAAiB,mBACjBC,GAAyB,4BACzBC,GAA2B,+BAC3BC,GACT,4CACSC,GAAyB,4BACzBC,GAAyB,6BACzBC,GAAmB,qBACnBC,GAAwB,0BACxBC,GAAkB,oBAClB1nB,GAAwB,0BACxB2nB,GAAoB,sBACpBC,GAAmB,qBACnBC,GAAwB,2BACxBC,GAAoB,uBACpBC,GAAoB,uBACpBC,GAAmB,qBACnBC,GACT,wCACSC,GACT,uCACSC,GAAsB,uBACtBC,GACT,+CACSC,GAAyB,2BACzBC,GAA8B,iCAC9BC,GACT,oCACSC,GACT,0CACSC,GAA2B,8BAC3BC,GAAsB,wBACtBC,GAAyB,4BChDhCC,GAAY,+CAKLC,GAA2B,CACpC,CAAC9C,IACG,+DACJ,CAACC,IACG,kDACJ,CAACC,IACG,mEACJ,CAACC,IAAuC,qHAAqH0C,KAC7J,CAACzC,IACG,oFACJ,CAACC,IAA0D,0GAA0GwC,KACrK,CAACvC,IACG,8EACJ,CAACC,IACG,0EACJ,CAACC,IAA8C,qIAAqIqC,KACpL,CAACpC,IACG,2GACJ,CAACC,IACG,wDACJ,CAACC,IAAsC,2BACvC,CAACC,IAA4C,sDAAsDiC,KACnG,CAAChC,IAA6C,uDAAuDgC,KACrG,CAAC/B,IACG,wLACJ,CAACC,IAA0C,2FAA2F8B,KACtI,CAAC7B,IACG,sFACJ,CAACC,IACG,qDACJ,CAACC,IACG,kFACJ,CAACC,IACG,0JACJ,CAACC,IACG,iHACJ,CAACC,IACG,mCACJ,CAACC,IACG,gDACJ,CAACC,IACG,6BACJ,CAACC,IACG,iGACJ,CAACC,IAAyC,qBAC1C,CAACC,IACG,0EACJ,CAACC,IAAwC,wBACzC,CAAC1nB,IACG,2DACJ,CAAC2nB,IACG,4IACJ,CAACC,IACG,kFACJ,CAACC,IACG,yDACJ,CAACC,IAA0C,gCAC3C,CAACC,IACG,6DACJ,CAACC,IACG,+FACJ,CAACC,IACG,0EACJ,CAACC,IACG,8DACJ,CAACC,IACG,gMACJ,CAACC,IAA+D,kDAAkDQ,KAClH,CAACP,IACG,0EACJ,CAACC,IACG,kGACJ,CAACC,IAAuD,gIAAgIK,KACxL,CAACJ,IAA6D,kGAAkGI,KAChK,CAACH,IACG,oHACJ,CAACC,IACG,iCACJ,CAACC,IACG,4GA+PF,MAAOG,WAAyBvoB,EAAAA,GAClCtjG,WAAAA,CAAYujG,GACRzgG,MAAMygG,EAAWqoB,GAAyBroB,IAE1ChoG,OAAOi9B,eAAex1B,KAAM6oH,GAAiBrwH,WAC7CwH,KAAKjO,KAAO,oBAId,SAAU+2H,GAAuBvoB,GACnC,OAAO,IAAIsoB,GAAiBtoB,EAChC,OCnVawoB,GAOT,yBAAMxL,CACF79G,EACAlS,GAEA,IAAIkB,EACJ,IACIA,QAAiBC,MAAM+Q,EAAK,CACxBlR,OAAQw6H,GAAAA,GAAkBC,IAC1Bx6H,QAASuR,KAAKkpH,gBAAgB17H,IAErC,CAAC,MAAOiE,GACL,MAAI+8B,OAAOnc,UAAU82G,OACXL,GACFnB,IAGEmB,GACF/oB,GAGX,CAED,IACI,MAAO,CACHtxG,QAASuR,KAAKopH,cAAc16H,EAASD,SACrCO,WAAaN,EAASqa,OACtBlJ,OAAQnR,EAASmR,OAExB,CAAC,MAAOpO,GACL,MAAMq3H,GACFlB,GAEP,EASL,0BAAMpK,CACF99G,EACAlS,GAEA,MAAM67H,EAAW77H,GAAWA,EAAQwB,MAAS+5G,EAAAA,GAAUC,aAEvD,IAAIt6G,EACJ,IACIA,QAAiBC,MAAM+Q,EAAK,CACxBlR,OAAQw6H,GAAAA,GAAkBM,KAC1B76H,QAASuR,KAAKkpH,gBAAgB17H,GAC9BwB,KAAMq6H,GAEb,CAAC,MAAO53H,GACL,MAAI+8B,OAAOnc,UAAU82G,OACXL,GACFpB,IAGEoB,GACF/oB,GAGX,CAED,IACI,MAAO,CACHtxG,QAASuR,KAAKopH,cAAc16H,EAASD,SACrCO,WAAaN,EAASqa,OACtBlJ,OAAQnR,EAASmR,OAExB,CAAC,MAAOpO,GACL,MAAMq3H,GACFlB,GAEP,EAOGsB,eAAAA,CAAgB17H,GACpB,MAAMiB,EAAU,IAAIqQ,QACpB,IAAMtR,IAAWA,EAAQiB,QACrB,OAAOA,EAEX,MAAM86H,EAAiB/7H,EAAQiB,QAI/B,OAHA8J,OAAO+E,KAAKisH,GAAgB7uG,SAAShhB,IACjCjL,EAAQ4Z,OAAO3O,EAAK6vH,EAAe7vH,GAAK,IAErCjL,EAGH26H,aAAAA,CAAc36H,GAClB,MAAM+6H,EAAqC,CAAC,EAI5C,OAHA/6H,EAAQisB,SAAQ,CAACvrB,EAAeuK,KAC5B8vH,EAAW9vH,GAAOvK,CAAK,IAEpBq6H,GC7FR,MACMC,GAA4B,IClClC,MACM13G,GAAU,eCuBD23G,GAMR,qBAAOj2H,CAAeC,EAAiBtF,GAC7C,OAAQsF,GACJ,KAAKE,EAAAA,EAAS9F,MAGV,YADA/B,QAAQD,MAAMsC,GAElB,KAAKwF,EAAAA,EAASC,KAGV,YADA9H,QAAQ+H,KAAK1F,GAEjB,KAAKwF,EAAAA,EAASG,QAGV,YADAhI,QAAQiI,MAAM5F,GAElB,KAAKwF,EAAAA,EAASK,QAGV,YADAlI,QAAQmI,KAAK9F,GAEjB,QAGI,YADArC,QAAQC,IAAIoC,IAKxB4O,WAAAA,CAAY5M,GASR,IAAIu5H,EAHJ3pH,KAAK4pH,mBAAuC,qBAAXp7F,OACjCxuB,KAAK5P,OFwLP,SAA4BlE,EAO9B29H,GAA6B,IALzB/2H,KAAMg3H,EACN12H,MAAO22H,EACPx2H,OAAQy2H,EACRC,UAAWC,GACCh+H,EAIhB,MAAMi+H,EAA4C,CAC9Cp3H,SAAUg2G,EAAAA,GAAUC,aACpBh2G,UAAW,GAAG+1G,EAAAA,GAAUqhB,oBACxBrO,iBAAkB,GAClBzK,uBAAwBvI,EAAAA,GAAUC,aAClC3D,kBAAmB0D,EAAAA,GAAUC,aAC7B/1G,YAAa81G,EAAAA,GAAUC,aACvB91G,sBAAuB61G,EAAAA,GAAUC,aACjC71G,2BAA2B,EAC3Bk3H,mBAAoB,GACpBnd,aAAc5P,EACdgtB,YAAa,CACTC,mBAAoBC,EAAAA,GAAmBC,SACvCC,cAAe,CACX3hB,EAAAA,GAAU4hB,aACV5hB,EAAAA,GAAU6hB,cACV7hB,EAAAA,GAAUM,uBAGlBwhB,kBAAmB,CACf5M,mBAAoB1gB,EACpB2gB,OAAQnV,EAAAA,GAAUC,cAEtB8hB,4BAA4B,EAC5BC,uBAAuB,GAIrB3N,EAAgD,CAClD/pH,cAAe23H,GAAAA,GAAqBC,eACpCC,uBAAwBF,GAAAA,GAAqBC,eAC7C33H,wBAAwB,EACxB63H,eAAe,EAEfC,yBACIrB,GACAA,EAAe12H,gBAAkB23H,GAAAA,GAAqBK,cAG1DhO,2BAA2B,GAIzBiO,EAAwC,CAE1C73H,eAAgBA,OAGhB0pH,SAAUvpH,EAAAA,EAASC,KACnBqpH,mBAAmB,GA4BjBqO,EAAwD,IAxBS,IAChE1O,GACHrpH,cAAe83H,EACfE,cAAe3B,EACT,IAAId,GACJrK,GACN+M,iBAAkB,IAAIhG,GACtBiG,iBAAkB,EAElBC,kBACI3B,GAAiB0B,kBA9RW,IA+RhCE,kBACI5B,GAAiB0B,kBAAoBjC,GACzCoC,kBAAmB,EACnBC,0BAhSmC,IAiSnCC,aAAa,EACbC,uBAAuB,EACvBC,mBAAmB,EACnBC,6BACIlC,GAAiBkC,8BApS6B,IAsSlDC,yBAA0BC,GAAAA,GAAiBC,6BAKxCrC,EACHx2H,cAAew2H,GAAiBx2H,eAAiB83H,GAG/ClN,EAA+D,CACjEC,YAAa,CACTC,QAASvV,EAAAA,GAAUC,aACnBuV,WAAYxV,EAAAA,GAAUC,cAE1B54F,OAAQ,IAAIi0G,IAKZyF,GAAe5c,eAAiB5P,GAChCwsB,GAAeQ,aAEA,IAAIgC,EAAAA,EAAOf,EAAsB/3H,eACzCy6G,QACHr/G,KAAKiB,UACDi4G,GACIykB,MAOhB,GACIzC,GAAe5c,cACf4c,EAAc5c,eAAiB5P,GAC/BiuB,GAAuBU,kBAEvB,MAAMnkB,GACFykB,IAkBR,MAd8C,CAC1Cz5H,KAAM,IACCq3H,KACAL,EACHQ,YAAa,IACNH,EAAqBG,eACrBR,GAAeQ,cAG1Bl3H,MAAO,IAAKgqH,KAA0B2M,GACtCx2H,OAAQg4H,EACRtB,UAAW,IAAK7L,KAA8B8L,GAItD,CEtUsBsC,CAAmBp8H,EAAQ4P,KAAK4pH,oBAG9C,IACID,EAAiBn7F,OAAOw8F,GAAAA,GAAqBC,eAEhD,CAAC,MAAOx5H,GAAI,CAEb,MAAMg7H,EAAc9C,GAAgB+C,QAAQC,GAAAA,IACtCC,EAAgBjD,GAChB+C,QAAQG,GAAAA,KACRv/H,cAEA4vH,EACgB,SAAlB0P,GAEwB,UAAlBA,QAEAv/H,EACJmG,EAAgB,IAAKwM,KAAK5P,OAAOmD,OAAOC,eAExC2pH,EACFsP,GAAel0H,OAAO+E,KAAK1J,EAAAA,GAAUkV,SAAS2jH,GACxC74H,EAAAA,EAAS64H,QACTp/H,EACN8vH,IACA3pH,EAAcC,eAAiBi2H,GAAqBj2H,eACpDD,EAAc2pH,SAAWA,QAEH9vH,IAAtB6vH,IACA1pH,EAAc0pH,kBAAoBA,GAGtCl9G,KAAK+tG,OAAS,IAAIue,EAAAA,EAAO94H,ED/Fb,sBC+FkCue,IAC9C/R,KAAK8sH,WAAY,EAsBrBC,SAAAA,GACI,OAAO/sH,KAAK5P,OAOhB48H,SAAAA,GACI,OAAOhtH,KAAK+tG,OAGhBkf,WAAAA,GACI,OAAOjtH,KAAK8sH,UAGhBjD,oBAAAA,GACI,OAAO7pH,KAAK4pH,oBCjId,MAAOsD,WAAiCxD,GAiB1CyD,aAAAA,GACI,OAAOD,GAAyBE,YAOpCC,KAAAA,GACI,OAAOH,GAAyBI,GAQpC,gBAAMC,GAEF,OADAvtH,KAAK8sH,UAA8B,qBAAXt+F,OACjBxuB,KAAK8sH,WA/BAI,GAAWE,YAAW,GAKtBF,GAAEI,GAAW,2BCZ1B,MAAME,GAAkB,oBAClBC,GAAkB,oBCGlBC,GAA0B,CACnC,CAACF,IACG,qJACJ,CAACC,IACG,0JAMF,MAAOE,WAAwBrtB,EAAAA,GACjCtjG,WAAAA,CAAYujG,EAAmBwR,GAC3BjyG,MAAMygG,EAAWwR,GACjB/xG,KAAKjO,KAAO,kBAEZwG,OAAOi9B,eAAex1B,KAAM2tH,GAAgBn1H,YAK9C,SAAUo1H,GAAsB1tH,GAClC,OAAO,IAAIytH,GAAgBztH,EAAMwtH,GAAwBxtH,GAC7D,OCba2tH,GAKT7wH,WAAAA,CAAYxP,GACRwS,KAAK8tH,IAAMtgI,EAAQsgI,IACnB9tH,KAAK+tH,IAAMvgI,EAAQugI,IACnB/tH,KAAKqkG,IAAM72G,EAAQ62G,IAWvB,yBAAO2pB,CAAmBC,GAEtB,IAAKA,EAAiB5pB,IAClB,MAAMupB,GAAsBJ,IAIhC,IAAKS,EAAiBF,IAClB,MAAMH,GAAsBH,IAGhC,MAAMS,EAAY,IAAIL,GAAW,CAE7BC,IAAKG,EAAiBH,KAAOK,EAAAA,GAAkBC,IAC/C/pB,IAAK4pB,EAAiB5pB,IACtB0pB,IAAKE,EAAiBF,MAG1B,OAAOn/H,KAAKiB,UAAUq+H,ICzCxB,SAAUG,GAAUt9H,GACtB,OAAO6d,mBACHiyF,GAAa9vG,GACRqH,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,KAE5B,CAMM,SAAUk2H,GAAaC,GACzB,OAAOC,GAAaD,GACfn2H,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,CAMM,SAAUyoG,GAAa9vG,GACzB,OAAOy9H,IAAa,IAAI5sH,aAAcnH,OAAO1J,GACjD,CAMA,SAASy9H,GAAaC,GAClB,MAAMC,EAAYh2H,MAAM+J,KAAKgsH,GAAS5mH,GAAM1P,OAAOw2H,cAAc9mH,KAAIjM,KACjE,IAEJ,OAAO6rD,KAAKinE,EAChB,CChCM,SAAU9tB,GAAa7vG,GACzB,OAAO,IAAIjC,aAAcC,OAO7B,SAAwB6/H,GACpB,IAAIC,EAAgBD,EAAax2H,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClE,OAAQy2H,EAAczhI,OAAS,GAC3B,KAAK,EACD,MACJ,KAAK,EACDyhI,GAAiB,KACjB,MACJ,KAAK,EACDA,GAAiB,IACjB,MACJ,QACI,MAAM/F,GACFL,IAGZ,MAAMiG,EAAYI,KAAKD,GACvB,OAAOniI,WAAW+V,KAAKisH,GAAYzrF,GAAMA,EAAE8rF,YAAY,IAAM,GACjE,CAzBoCC,CAAej+H,GACnD,CCKA,MAEMk+H,GAAgB,UAIhBC,GAA8B,IAAIxiI,WAAW,CAAC,EAAM,EAAM,IAE1DyiI,GAAa,mBAEbC,GAAa,IAAIC,YAAY,GAE7BC,GAAgD,CAClDv9H,KAbyB,oBAczBm0D,KAAM+oE,GACNM,cAXmB,KAYnBC,eAAgBN,IAqBbhhI,eAAeuhI,GAClBC,EACAzW,EACA5E,GAEA4E,GAAmBgM,oBACftG,GAAkBmF,aAClBzP,GAEJ,MACMjlH,GADU,IAAIwS,aACCnH,OAAOi1H,GAC5B,OAAOlhG,OAAOliC,OAAOqjI,OAAOprC,OACxB0qC,GACA7/H,EAER,CAMM,SAAU5C,GAAgBojI,GAC5B,OAAOphG,OAAOliC,OAAOE,gBAAgBojI,EACzC,CAMA,SAASC,KAEL,OADArhG,OAAOliC,OAAOE,gBAAgB4iI,IACvBA,GAAW,EACtB,UAOgBzuB,KACZ,MAAMmvB,EAAmBh4H,KAAK8X,MACxBmgH,EAA+B,KAApBF,MAAiD,KAApBA,MAGxCttH,EAAQ,IAAI7V,WAAW,IAEvBsjI,EAAQhgH,KAAKigH,MAAMF,EAAW,GAAK,IAEnCG,EAAUH,EAAY,GAAK,GAAK,EAEhCI,EAAUN,KAEhBttH,EAAM,GAAKutH,EAAmB,GAAK,GACnCvtH,EAAM,GAAKutH,EAAmB,GAAK,GACnCvtH,EAAM,GAAKutH,EAAmB,GAAK,GACnCvtH,EAAM,GAAKutH,EAAmB,MAC9BvtH,EAAM,GAAKutH,EAAmB,IAC9BvtH,EAAM,GAAKutH,EACXvtH,EAAM,GAAK,IAAQytH,IAAU,EAC7BztH,EAAM,GAAKytH,EACXztH,EAAM,GAAK,IAAQ2tH,IAAY,GAC/B3tH,EAAM,GAAK2tH,IAAY,GACvB3tH,EAAM,IAAM2tH,IAAY,EACxB3tH,EAAM,IAAM2tH,EACZ3tH,EAAM,IAAM4tH,IAAY,GACxB5tH,EAAM,IAAM4tH,IAAY,GACxB5tH,EAAM,IAAM4tH,IAAY,EACxB5tH,EAAM,IAAM4tH,EAEZ,IAAI7+H,EAAO,GACX,IAAK,IAAI1E,EAAI,EAAGA,EAAI2V,EAAMnV,OAAQR,IAC9B0E,GAAQ69H,GAAWxzH,OAAO4G,EAAM3V,KAAO,GACvC0E,GAAQ69H,GAAWxzH,OAAkB,GAAX4G,EAAM3V,IACtB,IAANA,GAAiB,IAANA,GAAiB,IAANA,GAAiB,IAANA,IACjC0E,GAAQ,KAGhB,OAAOA,CACX,CAsBOpD,eAAekiI,GAAU12H,GAC5B,OAAO80B,OAAOliC,OAAOqjI,OAAOU,UACxBC,GAAAA,GACA52H,EAER,CA0COxL,eAAekzG,GAAWmvB,GAC7B,MAAMC,QAAgCf,GAAac,GAEnD,OAAOjC,GADW,IAAI5hI,WAAW8jI,GAErC,OC3LaC,GAOTzzH,WAAAA,GACIgD,KAAK0wH,OAASC,GAAAA,GACd3wH,KAAK+R,QAAU6+G,GAAAA,GACf5wH,KAAK6wH,UAAYC,GAAAA,GACjB9wH,KAAK+wH,QAAS,EAMlB,UAAM7oE,GACF,OAAO,IAAIjgD,SAAQ,CAACqB,EAASiQ,KACzB,MAAMy3G,EAASxiG,OAAOyiG,UAAU/oE,KAAKloD,KAAK0wH,OAAQ1wH,KAAK+R,SACvDi/G,EAAOjiH,iBACH,iBACCtd,IACiBA,EACRC,OAAOyR,OAAO+tH,kBAAkBlxH,KAAK6wH,UAAU,IAG7DG,EAAOjiH,iBAAiB,WAAYtd,IAChC,MAAMkT,EAAQlT,EACduO,KAAKu9D,GAAK54D,EAAMjT,OAAOyR,OACvBnD,KAAK+wH,QAAS,EACdznH,GAAS,IAEb0nH,EAAOjiH,iBAAiB,SAAS,IAC7BwK,EACIuvG,GACIZ,MAGX,IAQTiJ,eAAAA,GACI,MAAM5zD,EAAKv9D,KAAKu9D,GACZA,GAAMv9D,KAAK+wH,SACXxzD,EAAG53D,QACH3F,KAAK+wH,QAAS,GAOd,sBAAMK,GACV,IAAKpxH,KAAK+wH,OACN,OAAO/wH,KAAKkoD,OAQpB,aAAMwkE,CAAQhzH,GAEV,aADMsG,KAAKoxH,mBACJ,IAAInpH,SAAW,CAACqB,EAASiQ,KAE5B,IAAKvZ,KAAKu9D,GACN,OAAOhkD,EACHuvG,GACIrB,KAIZ,MAKM4J,EALcrxH,KAAKu9D,GAAG+zD,YACxB,CAACtxH,KAAK6wH,WACN,YAE4BU,YAAYvxH,KAAK6wH,WACvB/zH,IAAIpD,GAE9B23H,EAAMtiH,iBAAiB,WAAYtd,IAC/B,MAAMkT,EAAQlT,EACduO,KAAKmxH,kBACL7nH,EAAQ3E,EAAMjT,OAAOyR,OAAO,IAGhCkuH,EAAMtiH,iBAAiB,SAAUtd,IAC7BuO,KAAKmxH,kBACL53G,EAAO9nB,EAAE,GACX,IASV,aAAM+/H,CAAQ93H,EAAau1C,GAEvB,aADMjvC,KAAKoxH,mBACJ,IAAInpH,SAAc,CAACqB,EAAmBiQ,KAEzC,IAAKvZ,KAAKu9D,GACN,OAAOhkD,EACHuvG,GACIrB,KAIZ,MAOMgK,EAPczxH,KAAKu9D,GAAG+zD,YACxB,CAACtxH,KAAK6wH,WACN,aAG4BU,YAAYvxH,KAAK6wH,WAEvBzlH,IAAI6jC,EAASv1C,GAEvC+3H,EAAM1iH,iBAAiB,WAAW,KAC9B/O,KAAKmxH,kBACL7nH,GAAS,IAGbmoH,EAAM1iH,iBAAiB,SAAUtd,IAC7BuO,KAAKmxH,kBACL53G,EAAO9nB,EAAE,GACX,IAQV,gBAAMqmH,CAAWp+G,GAEb,aADMsG,KAAKoxH,mBACJ,IAAInpH,SAAc,CAACqB,EAAmBiQ,KACzC,IAAKvZ,KAAKu9D,GACN,OAAOhkD,EACHuvG,GACIrB,KAKZ,MAKMiK,EALc1xH,KAAKu9D,GAAG+zD,YACxB,CAACtxH,KAAK6wH,WACN,aAE4BU,YAAYvxH,KAAK6wH,WACpBxlH,OAAO3R,GAEpCg4H,EAAS3iH,iBAAiB,WAAW,KACjC/O,KAAKmxH,kBACL7nH,GAAS,IAGbooH,EAAS3iH,iBAAiB,SAAUtd,IAChCuO,KAAKmxH,kBACL53G,EAAO9nB,EAAE,GACX,IAOV,aAAMulH,GAEF,aADMh3G,KAAKoxH,mBACJ,IAAInpH,SAAkB,CAACqB,EAAmBiQ,KAC7C,IAAKvZ,KAAKu9D,GACN,OAAOhkD,EACHuvG,GACIrB,KAKZ,MAKMkK,EALc3xH,KAAKu9D,GAAG+zD,YACxB,CAACtxH,KAAK6wH,WACN,YAE4BU,YAAYvxH,KAAK6wH,WACnBe,aAE9BD,EAAU5iH,iBAAiB,WAAYtd,IACnC,MAAMkT,EAAQlT,EACduO,KAAKmxH,kBACL7nH,EAAQ3E,EAAMjT,OAAOyR,OAAO,IAGhCwuH,EAAU5iH,iBAAiB,SAAUtd,IACjCuO,KAAKmxH,kBACL53G,EAAO9nB,EAAE,GACX,IAQV,iBAAMogI,CAAYn4H,GAGd,aAFMsG,KAAKoxH,mBAEJ,IAAInpH,SAAiB,CAACqB,EAAmBiQ,KAC5C,IAAKvZ,KAAKu9D,GACN,OAAOhkD,EACHuvG,GACIrB,KAKZ,MAKMqK,EALc9xH,KAAKu9D,GAAG+zD,YACxB,CAACtxH,KAAK6wH,WACN,YAE4BU,YAAYvxH,KAAK6wH,WACfh9B,MAAMn6F,GAExCo4H,EAAc/iH,iBAAiB,WAAYtd,IACvC,MAAMkT,EAAQlT,EACduO,KAAKmxH,kBACL7nH,EAAgC,IAAxB3E,EAAMjT,OAAOyR,OAAa,IAGtC2uH,EAAc/iH,iBAAiB,SAAUtd,IACrCuO,KAAKmxH,kBACL53G,EAAO9nB,EAAE,GACX,IASV,oBAAMsgI,GAOF,OAJI/xH,KAAKu9D,IAAMv9D,KAAK+wH,QAChB/wH,KAAKmxH,kBAGF,IAAIlpH,SAAiB,CAACqB,EAAmBiQ,KAC5C,MAAMy4G,EAAkBxjG,OAAOyiG,UAAUc,eAAepB,GAAAA,IAClDx7G,EAAKnG,YAAW,IAAMuK,GAAO,IAAQ,KAC3Cy4G,EAAgBjjH,iBAAiB,WAAW,KACxCG,aAAaiG,GACN7L,GAAQ,MAEnB0oH,EAAgBjjH,iBAAiB,WAAW,KACxCG,aAAaiG,GACN7L,GAAQ,MAEnB0oH,EAAgBjjH,iBAAiB,SAAS,KACtCG,aAAaiG,GACNoE,GAAO,KAChB,WC9RD04G,GAGTj1H,WAAAA,GACIgD,KAAK5M,MAAQ,IAAImsC,IAGrBmtF,OAAAA,CAAQhzH,GACJ,OAAOsG,KAAK5M,MAAM0J,IAAIpD,IAAQ,KAGlC83H,OAAAA,CAAQ93H,EAAavK,GACjB6Q,KAAK5M,MAAMuK,IAAIjE,EAAKvK,GAGxB2oH,UAAAA,CAAWp+G,GACPsG,KAAK5M,MAAMiY,OAAO3R,GAGtBs9G,OAAAA,GACI,MAAMkb,EAAsB,GAI5B,OAHAlyH,KAAK5M,MAAMsnB,SAAQ,CAACvrB,EAAUuK,KAC1Bw4H,EAAUrlI,KAAK6M,EAAI,IAEhBw4H,EAGXL,WAAAA,CAAYn4H,GACR,OAAOsG,KAAK5M,MAAMgG,IAAIM,GAG1BgoD,KAAAA,GACI1hD,KAAK5M,MAAMsuD,eCrBNywE,GAKTn1H,WAAAA,CAAY+wG,GACR/tG,KAAKoyH,cAAgB,IAAIH,GACzBjyH,KAAKqyH,eAAiB,IAAI5B,GAC1BzwH,KAAK+tG,OAASA,EAGVukB,yBAAAA,CAA0BxmI,GAC9B,KACIA,aAAiB+8H,IACjB/8H,EAAMy0G,YAAc2nB,IAMpB,MAAMp8H,EAJNkU,KAAK+tG,OAAOjiH,MACR,+IAWZ,aAAM4gI,CAAQhzH,GACV,MAAMsX,EAAOhR,KAAKoyH,cAAc1F,QAAQhzH,GACxC,IAAKsX,EACD,IAII,OAHAhR,KAAK+tG,OAAOsK,QACR,qFAESr4G,KAAKqyH,eAAe3F,QAAQhzH,EAC5C,CAAC,MAAOjI,GACLuO,KAAKsyH,0BAA0B7gI,EAClC,CAEL,OAAOuf,EASX,aAAMwgH,CAAQ93H,EAAavK,GACvB6Q,KAAKoyH,cAAcZ,QAAQ93H,EAAKvK,GAChC,UACU6Q,KAAKqyH,eAAeb,QAAQ93H,EAAKvK,EAC1C,CAAC,MAAOsC,GACLuO,KAAKsyH,0BAA0B7gI,EAClC,EAOL,gBAAMqmH,CAAWp+G,GACbsG,KAAKoyH,cAActa,WAAWp+G,GAC9B,UACUsG,KAAKqyH,eAAeva,WAAWp+G,EACxC,CAAC,MAAOjI,GACLuO,KAAKsyH,0BAA0B7gI,EAClC,EAOL,aAAMulH,GACF,MAAMkb,EAAYlyH,KAAKoyH,cAAcpb,UACrC,GAAyB,IAArBkb,EAAU9kI,OACV,IAII,OAHA4S,KAAK+tG,OAAOsK,QACR,oEAESr4G,KAAKqyH,eAAerb,SACpC,CAAC,MAAOvlH,GACLuO,KAAKsyH,0BAA0B7gI,EAClC,CAEL,OAAOygI,EAOX,iBAAML,CAAYn4H,GACd,MAAMm4H,EAAc7xH,KAAKoyH,cAAcP,YAAYn4H,GACnD,IAAKm4H,EACD,IAII,OAHA7xH,KAAK+tG,OAAOsK,QACR,4EAESr4G,KAAKqyH,eAAeR,YAAYn4H,EAChD,CAAC,MAAOjI,GACLuO,KAAKsyH,0BAA0B7gI,EAClC,CAEL,OAAOogI,EAMXU,aAAAA,GAEIvyH,KAAK+tG,OAAOsK,QAAQ,+BACpBr4G,KAAKoyH,cAAc1wE,QACnB1hD,KAAK+tG,OAAOsK,QAAQ,8BAOxB,qBAAMma,GACF,IACIxyH,KAAK+tG,OAAOsK,QAAQ,gCACpB,MAAMoa,QAAkBzyH,KAAKqyH,eAAeN,iBAK5C,OAJIU,GACAzyH,KAAK+tG,OAAOsK,QAAQ,+BAGjBoa,CACV,CAAC,MAAOhhI,GAEL,OADAuO,KAAKsyH,0BAA0B7gI,IACxB,CACV,SCtHIihI,GAaT11H,WAAAA,CAAY+wG,EAAgBkL,GACxBj5G,KAAK+tG,OAASA,EJDhB,SAAkCA,GACpC,KAAI,WAAYv/E,QAIZ,MADAu/E,EAAOjiH,MAAM,kDACPg9H,GAAuB/C,IAH7BhY,EAAOsK,QAAQ,mDAKvB,CIJQsa,CAAsC5kB,GACtC/tG,KAAK5M,MAAQ,IAAI++H,GAAkCnyH,KAAK+tG,QACxD/tG,KAAKi5G,kBAAoBA,EAO7BtY,aAAAA,GACI,OAAOA,KAOXE,YAAAA,CAAa9vG,GACT,OAAO8vG,GAAa9vG,GAOxB6vG,YAAAA,CAAa7vG,GACT,OAAO6vG,GAAa7vG,GAOxB+vG,eAAAA,CAAgB/vG,GACZ,OAAOs9H,GAAUt9H,GAQrBgwG,SAAAA,CAAU6xB,GACN,OAAO5yH,KAAK8gG,gBAAgBlyG,KAAKiB,UAAU,CAAEw0G,IAAKuuB,KAOtD,4BAAM5xB,CACFnvG,GAEA,MAAMghI,EACF7yH,KAAKi5G,mBAAmBiL,iBACpBvF,GAAkBQ,iCAClBttH,EAAQwiH,eAIVye,QJqCP5kI,eACH6kI,EACAC,GAEA,OAAOxkG,OAAOliC,OAAOqjI,OAAOsD,YACxB3D,GACAyD,EACAC,EAER,CI9C6CE,CACjCR,GAAUS,YACVT,GAAUU,gBAIRC,QAAiCjD,GACnC0C,EAAQQ,WASNC,EACFC,GAPmC,CACnC/hI,EAAG4hI,EAAa5hI,EAChBgiI,IAAKJ,EAAaI,IAClBzgH,EAAGqgH,EAAargH,IAKd0gH,QAAsB1zH,KAAKohG,WAAWmyB,GAGtCI,QAAkCvD,GACpC0C,EAAQc,YAGNC,QJwCP3lI,eACHwL,EACAq5H,EACAC,GAEA,OAAOxkG,OAAOliC,OAAOqjI,OAAOmE,UACxBxD,GAAAA,GACA52H,EACA41H,GACAyD,EACAC,EAER,CInDkBe,CAAwBJ,GAAe,EAAO,CAAC,SAgBzD,aAbM3zH,KAAK5M,MAAMo+H,QAAQkC,EAAe,CACpCE,WAAYC,EACZP,UAAWR,EAAQQ,UACnBU,cAAeniI,EAAQoiI,sBACvBC,WAAYriI,EAAQsiI,qBAGpBtB,GACAA,EAA0BxiF,IAAI,CAC1B+jF,SAAS,IAIVV,EAOX,2BAAMzyB,CAAsBoD,SAClBrkG,KAAK5M,MAAM0kH,WAAWzT,GAE5B,aADuBrkG,KAAK5M,MAAMy+H,YAAYxtB,GAOlD,mBAAMnD,GAEFlhG,KAAK5M,MAAMm/H,gBAMX,IAEI,aADMvyH,KAAK5M,MAAMo/H,mBACV,CACV,CAAC,MAAO/gI,GAWL,OAVIA,aAAa3D,MACbkS,KAAK+tG,OAAOjiH,MACR,wCAAwC2F,EAAErD,WAG9C4R,KAAK+tG,OAAOjiH,MACR,gDAID,CACV,EAQL,aAAMq1G,CACFlyD,EACAo1D,EACAgwB,EACAhgB,GAEA,MAAMigB,EAAqBt0H,KAAKi5G,mBAAmBiL,iBAC/CvF,GAAkBS,kBAClB/K,GAEEkgB,QAAsBv0H,KAAK5M,MAAMs5H,QAAQroB,GAE/C,IAAKkwB,EACD,MAAMzL,GACFhB,IAKR,MAAMuL,QAAqBjD,GACvBmE,EAAcjB,WAEZkB,EAAqBhB,GAAsBH,GAE3CoB,EAAyBpG,GAAUz/H,KAAKiB,UAAU,CAAEw0G,IAAKA,KAQzDqwB,EAAmBrG,GANPR,GAAWG,mBAAmB,IACzCqG,GAAYnnH,OACf6gH,IAAKsF,EAAatF,IAClB1pB,IAAKowB,KAMTxlF,EAAQm1D,IAAM,CACVuwB,IAAK/lI,KAAKC,MAAM2lI,IAEpB,MAGMI,EAAc,GAAGF,KAHArG,GAAUz/H,KAAKiB,UAAUo/C,MAO1C4lF,GADU,IAAIjzH,aACQnH,OAAOm6H,GAC7BE,QJnDP5mI,eACHwL,EACAtK,GAEA,OAAOo/B,OAAOliC,OAAOqjI,OAAOoF,KACxBzF,GACA51H,EACAtK,EAER,CI0CsC2lI,CAC1BR,EAAcX,WACdiB,GAIEG,EAAY,GAAGJ,KAFItG,GAAa,IAAI5hI,WAAWooI,MAUrD,OANIR,GACAA,EAAmBjkF,IAAI,CACnB+jF,SAAS,IAIVY,EAOX,gBAAM5zB,CAAWmvB,GACb,OAAOnvB,GAAyBmvB,IAIxC,SAASiD,GAAsB92H,GAC3B,OAAO9N,KAAKiB,UAAU6M,EAAKnE,OAAO+E,KAAKZ,GAAKF,OAChD,CAtOmBk2H,GAAAU,eAAkC,CAAC,OAAQ,UAC3CV,GAAWS,aAAY,ECzBnC,MAAM8B,GAASA,CAClBr8F,EACAuB,EACA4zE,EACAmnB,EACA7gB,IAEO,WACHtG,EAAOwD,MAAM,sBAAsBp3E,KACnC,MAAMg7F,EAAkBD,GAAiBhR,iBACrC/pF,EACAk6E,GAEJ,GAAIA,EAAe,CAEf,MAAM+gB,EAAaj7F,EAAY,YAC/B+6F,GAAiB3P,gBACb,CAAE,CAAC6P,GAAa,GAChB/gB,EAEP,CACD,IACI,MAAMlxG,EAASy1B,KAASzrC,WAKxB,OAJAgoI,GAAiB9kF,IAAI,CACjB+jF,SAAS,IAEbrmB,EAAOwD,MAAM,yBAAyBp3E,KAC/Bh3B,CACV,CAAC,MAAO1R,GACLs8G,EAAOwD,MAAM,qBAAqBp3E,KAClC,IACI4zE,EAAOwD,MAAM3iH,KAAKiB,UAAU4B,GAC/B,CAAC,MAAOA,GACLs8G,EAAOwD,MAAM,iCAChB,CAOD,MANA4jB,GAAiB9kF,IACb,CACI+jF,SAAS,GAEb3iI,GAEEA,CACT,CACL,EAgBS4jI,GAAcA,CACvBz8F,EACAuB,EACA4zE,EACAmnB,EACA7gB,IAEO,WACHtG,EAAOwD,MAAM,sBAAsBp3E,KACnC,MAAMg7F,EAAkBD,GAAiBhR,iBACrC/pF,EACAk6E,GAEJ,GAAIA,EAAe,CAEf,MAAM+gB,EAAaj7F,EAAY,YAC/B+6F,GAAiB3P,gBACb,CAAE,CAAC6P,GAAa,GAChB/gB,EAEP,CAED,OADA6gB,GAAiBhQ,gBAAgB/qF,EAAWk6E,GACrCz7E,KAASzrC,WACXuc,MAAMhb,IACHq/G,EAAOwD,MAAM,yBAAyBp3E,KACtCg7F,GAAiB9kF,IAAI,CACjB+jF,SAAS,IAEN1lI,KAEV7C,OAAO4F,IACJs8G,EAAOwD,MAAM,qBAAqBp3E,KAClC,IACI4zE,EAAOwD,MAAM3iH,KAAKiB,UAAU4B,GAC/B,CAAC,MAAOA,GACLs8G,EAAOwD,MAAM,iCAChB,CAOD,MANA4jB,GAAiB9kF,IACb,CACI+jF,SAAS,GAEb3iI,GAEEA,CAAC,GAEnB,QCxGS6jI,GAgBTt4H,WAAAA,CACIu4H,EACAxnB,EACAkL,EACA5E,GAEAr0G,KAAKu1H,iBAAmBA,EACxBv1H,KAAK+tG,OAASA,EACd/tG,KAAKi5G,kBAAoBA,EACzBj5G,KAAKq0G,cAAgBA,EAQlB,kBAAMmhB,CACTC,EACAC,GAEA11H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBiE,4BAClB5iH,KAAKq0G,eAIT,IAAIshB,EAAyBF,EAG7B,GAAKE,EA6DDD,EAAwBE,cACpBC,EAAAA,GAAuBC,yBA9DF,CACzB,MAAMtoI,EAAU8nI,GAAgBS,aAEhC,IACI,MAAMC,QAAiCX,GACnCr1H,KAAKi2H,kBAAkB1pI,KAAKyT,MAC5B2+G,GAAkBkE,iCAClB7iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cAL8BghB,CAMrCtsB,EAAAA,GAAUmtB,aAAc1oI,GAW1B,GATIwoI,EAAyBn2H,SACzBs2H,EAAAA,GAAcC,cAEdT,EAAyBK,EAAyBhnI,KAClD0mI,EAAwBE,cACpBC,EAAAA,GAAuBQ,MAK3BL,EAAyBn2H,SACzBs2H,EAAAA,GAAcG,eAChB,CACE,MAAMC,QAA2BlB,GAC7Br1H,KAAKw2H,kBAAkBjqI,KAAKyT,MAC5B2+G,GAAkBmE,iCAClB9iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALwBghB,CAM/B7nI,GACF,IAAK+oI,EAGD,OAFAb,EAAwBE,cACpBC,EAAAA,GAAuBY,sBACpB,KAGX,MAAMC,QAAmCrB,GACrCr1H,KAAKi2H,kBAAkB1pI,KAAKyT,MAC5B2+G,GAAkBkE,iCAClB7iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALgCghB,CAMvCkB,EAAoB/oI,GAElBkpI,EAA2B72H,SAC3Bs2H,EAAAA,GAAcC,cAEdT,EACIe,EAA2B1nI,KAC/B0mI,EAAwBE,cACpBC,EAAAA,GAAuBQ,KAElC,CACJ,CAAC,MAAO5kI,GAGL,OAFAikI,EAAwBE,cACpBC,EAAAA,GAAuBY,sBACpB,IACV,CACJ,CAWD,OALKd,IACDD,EAAwBE,cACpBC,EAAAA,GAAuBY,uBAGxBd,GAA0B,KAS7B,uBAAMM,CACVlkH,EACAvkB,GAMA,OAJAwS,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBkE,iCAClB7iH,KAAKq0G,eAEFr0G,KAAKu1H,iBAAiBhY,oBACzB,GAAGxU,EAAAA,GAAU4tB,6BAA6B5kH,gBAC1CvkB,EACAu7G,EAAAA,GAAU6tB,cASV,uBAAMJ,CACVhpI,GAEAwS,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBmE,iCAClB9iH,KAAKq0G,eAET,IACI,MAAM3lH,QACIsR,KAAKu1H,iBAAiBhY,oBACxB,GAAGxU,EAAAA,GAAU4tB,4BACbnpI,GAIR,OACIkB,EAASmR,SAAWs2H,EAAAA,GAAcG,gBAClC5nI,EAASM,MACTN,EAASM,KAAK,oBACdN,EAASM,KAAK,mBAAmB5B,OAAS,EAEnCsB,EAASM,KAAK,mBAAmB,GAGrC,IACV,CAAC,MAAOyC,GACL,OAAO,IACV,GAnKY6jI,GAAAS,aAA4B,CACzCtnI,QAAS,CACLooI,SAAU,eCkCTC,GAkCT95H,WAAAA,CACIhK,EACAuiI,EACAwB,EACAC,EACAjpB,EACAsG,EACA4E,EACAge,GAEAj3H,KAAK27G,mBAAqB3oH,EAC1BgN,KAAKk3H,oBAAoB7nB,gBACzBrvG,KAAKu1H,iBAAmBA,EACxBv1H,KAAK+2H,aAAeA,EACpB/2H,KAAKg3H,iBAAmBA,EACxBh3H,KAAK01H,wBAA0B,CAC3ByB,iBAAa9pI,EACbuoI,mBAAevoI,EACf+pI,oBAAgB/pI,GAEpB2S,KAAK+tG,OAASA,EACd/tG,KAAKi5G,kBAAoBA,EACzBj5G,KAAKq0G,cAAgBA,EACrBr0G,KAAKi3H,gBAAkBA,IAAmB,EAC1Cj3H,KAAKq3H,gBAAkB,IAAI/B,GACvBC,EACAv1H,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,eASLijB,gBAAAA,CAAiBC,GAErB,GAAIA,EAAa/nB,gBAAgBzpG,SAASgjG,EAAAA,GAAUyuB,eAChD,OAAOvrB,GAGX,MAAMwE,EAAe8mB,EAAa9nB,aAClC,GAAIgB,EAAarjH,OACb,OAAQqjH,EAAa,GAAGnjH,eACpB,KAAKy7G,EAAAA,GAAU0uB,KACX,OAAOxrB,GACX,KAAKlD,EAAAA,GAAU2uB,KACX,OAAOzrB,GAKnB,OAAOA,GAIX,iBAAWO,GACP,OAAOxsG,KAAKs3H,iBAAiBt3H,KAAK23H,iCAMtC,gBAAWzqB,GACP,OAAOltG,KAAKg3H,iBAAiB9pB,aAMjC,WAAW1/G,GACP,OAAOwS,KAAKg3H,iBAMhB,sBAAWrb,GACP,OAAO37G,KAAKk3H,oBAAoBjoB,UAMpC,sBAAW0M,CAAmBj8G,GAC1BM,KAAKk3H,oBAAsB,IAAIloB,GAAUtvG,GACzCM,KAAKk3H,oBAAoB7nB,gBACzBrvG,KAAK43H,iCAAmC,KAM5C,mCAAWD,GAMP,OALK33H,KAAK43H,mCACN53H,KAAK43H,iCACD53H,KAAKk3H,oBAAoB3nB,oBAG1BvvG,KAAK43H,iCAMhB,mBAAWC,GACP,OAAO73H,KAAK23H,gCAAgCnoB,gBAAgBliH,cAMhE,UAAW4wH,GACP,OAAOl+G,KAAK23H,gCAAgCloB,aAAa,GAM7D,yBAAWqoB,GACP,GAAI93H,KAAK+3H,oBACL,OAAO/3H,KAAKg4H,YAAYh4H,KAAKomG,SAASZ,wBAEtC,MAAM/E,GACF7C,GAQZ,iBAAWq6B,GACP,GAAIj4H,KAAK+3H,oBACL,OAAO/3H,KAAKg4H,YAAYh4H,KAAKomG,SAASX,gBAEtC,MAAMhF,GACF7C,GAKZ,sBAAWs6B,GACP,GAAIl4H,KAAK+3H,oBACL,OAAO/3H,KAAKg4H,YACRh4H,KAAKomG,SAASX,eAAertG,QAAQ,SAAU,gBAGnD,MAAMqoG,GACF7C,GAQZ,sBAAWu6B,GACP,GAAIn4H,KAAK+3H,oBAAqB,CAE1B,IAAK/3H,KAAKomG,SAASV,qBACf,MAAMjF,GACFZ,GAGR,OAAO7/F,KAAKg4H,YAAYh4H,KAAKomG,SAASV,qBACzC,CACG,MAAMjF,GACF7C,GAQZ,yBAAWw6B,GACP,GAAIp4H,KAAK+3H,oBACL,OAAO/3H,KAAKg4H,YAAYh4H,KAAKomG,SAAST,QAEtC,MAAMlF,GACF7C,GAQZ,WAAWy6B,GACP,GAAIr4H,KAAK+3H,oBACL,OAAO/3H,KAAKg4H,YAAYh4H,KAAKomG,SAASP,UAEtC,MAAMpF,GACF7C,GAUJ06B,gBAAAA,CAAiBf,GACrB,OACyC,IAArCA,EAAa9nB,aAAariH,SACzB0pI,GAAUyB,sBAAsBn/H,IAC7Bm+H,EAAa9nB,aAAa,KAE9BzvG,KAAKs3H,iBAAiBC,KAAkBtrB,IACxCjsG,KAAKktG,eAAiB5P,EAQtBk7B,aAAAA,CAAcvpB,GAClB,OAAOA,EAAU72G,QAAQ,uBAAwB4H,KAAKk+G,QAOlD8Z,WAAAA,CAAY/oB,GAChB,IAAI16G,EAAW06G,EACf,MAGMwpB,EAHqB,IAAIzpB,GAC3BhvG,KAAKomG,SAASsyB,qBAGKnpB,mBACjBopB,EAAuBF,EAA6BhpB,aAiC1D,OA/BIzvG,KAAK23H,gCAAgCloB,aAEnB/0F,SAAQ,CAACk+G,EAAaxnI,KACxC,IAAIynI,EAAaF,EAAqBvnI,GACtC,GACc,IAAVA,GACA4O,KAAKs4H,iBAAiBG,GACxB,CACE,MAAM11B,EAAW,IAAIiM,GACjBhvG,KAAKomG,SAASZ,wBAChB+J,mBAAmBE,aAAa,GAM9BopB,IAAe91B,IACf/iG,KAAK+tG,OAAOsK,QACR,gCAAgCwgB,aAAsB91B,KAE1D81B,EAAa91B,EAEpB,CACG61B,IAAgBC,IAChBtkI,EAAWA,EAAS6D,QAChB,IAAIygI,KACJ,IAAID,MAEX,IAGE54H,KAAKw4H,cAAcjkI,GAM9B,sCAAcukI,GACV,MAAMC,EAAyB/4H,KAAK63H,gBACpC,OACI73H,KAAK27G,mBAAmB51G,SAAS,UACjC/F,KAAKwsG,gBAAkBP,IACtBjsG,KAAKktG,eAAiB5P,IAClBt9F,KAAKg5H,iCAAiCD,GAEpC,GAAG/4H,KAAK27G,qDAEZ,GAAG37G,KAAK27G,0DAMnBoc,iBAAAA,GACI,QAAS/3H,KAAKomG,SAOX,2BAAM6yB,GACTj5H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB0D,+BAClBriH,KAAKq0G,eAGT,MAAM6kB,EAAiBl5H,KAAKm5H,2BAEtBC,QAA6B/D,GAC/Br1H,KAAK8lG,6BAA6Bv5G,KAAKyT,MACvC2+G,GAAkB6D,sCAClBxiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cAL0BghB,CAMjC6D,GACFl5H,KAAK27G,mBAAqB37G,KAAK27G,mBAAmBvjH,QAC9C4H,KAAK63H,gBACLqB,EAAejzB,mBAEnB,MAAMozB,QAAuBhE,GACzBr1H,KAAKs5H,uBAAuB/sI,KAAKyT,MACjC2+G,GAAkB+D,gCAClB1iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALoBghB,CAM3B6D,GACFl5H,KAAKu5H,qBAAqBL,EAAgBE,EAAsB,CAC5Dt9E,OAAQu9E,IAEZr5H,KAAKi5G,mBAAmBQ,UACpB,CACI2f,qBAAsBA,EACtBI,wBAAyBH,GAE7Br5H,KAAKq0G,eASL8kB,wBAAAA,GACJ,IAAID,EACAl5H,KAAK+2H,aAAa3f,4BAA4Bp3G,KAAK63H,iBAkBvD,OAhBKqB,IACDA,EAAiB,CACbnzB,QAAS,GACTC,gBAAiBhmG,KAAK63H,gBACtB5xB,kBAAmBjmG,KAAK63H,gBACxBa,oBAAqB14H,KAAK27G,mBAC1BnW,uBAAwB,GACxBC,eAAgB,GAChBC,qBAAsB,GACtBC,OAAQ,GACRO,oBAAoB,EACpBN,sBAAsB,EACtBS,UAAWpB,KACXY,SAAU,KAGXqzB,EAUHK,oBAAAA,CACJL,EACAE,EACAK,GAMIL,IAAyBxd,EAAAA,GAAwB8d,OACjDD,GAAwB39E,SAAW8/D,EAAAA,GAAwB8d,QAG3DR,EAAe7yB,UACXpB,KACJi0B,EAAeR,oBAAsB14H,KAAK27G,oBAG9C,MAAMjG,EAAW11G,KAAK+2H,aAAa1a,kCAC/B6c,EAAelzB,iBAEnBhmG,KAAK+2H,aAAata,qBAAqB/G,EAAUwjB,GACjDl5H,KAAKomG,SAAW8yB,EAOZ,4BAAMI,CACVJ,GAEAl5H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB+D,gCAClB1iH,KAAKq0G,eAGT,MAAMslB,EACF35H,KAAK45H,uCAAuCV,GAGhD,GAAIS,EAAe,CACf,GACIA,EAAc79E,SACd8/D,EAAAA,GAAwBE,kBAIpB97G,KAAKg3H,iBAAiB6C,0BAA0BC,aAE5CH,EAAcvzB,SAAU,CAUxBhB,GACI8zB,QAV4B7D,GAC5Br1H,KAAK+5H,sCAAsCxtI,KACvCyT,MAEJ2+G,GAAkBgE,+CAClB3iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cAPuBghB,CAQ9BsE,EAAcvzB,WAIZ,GAEJ8yB,EAAeR,oBACX14H,KAAK27G,kBACZ,CAGT,OAAOge,EAAc79E,MACxB,CAGD,IAAIsqD,QAAiBivB,GACjBr1H,KAAKg6H,+BAA+BztI,KAAKyT,MACzC2+G,GAAkB8D,wCAClBziH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALYghB,GAOrB,GAAIjvB,EAiBA,OAfIpmG,KAAKg3H,iBAAiB6C,0BAA0BC,cAChD1zB,QAAiBivB,GACbr1H,KAAK+5H,sCAAsCxtI,KAAKyT,MAChD2+G,GAAkBgE,+CAClB3iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALQghB,CAMfjvB,IAGNhB,GACI8zB,EACA9yB,GACA,GAEGwV,EAAAA,GAAwBqe,QAG/B,MAAMx5B,GACF3C,EACA99F,KAAK84H,oCAWTc,sCAAAA,CACJV,GAKAl5H,KAAK+tG,OAAOsK,QACR,oEAEJ,MAAM6hB,EAAiBl6H,KAAKm6H,gCAC5B,GAAID,EASA,OARAl6H,KAAK+tG,OAAOsK,QACR,sDAEJjT,GACI8zB,EACAgB,GACA,GAEG,CACHp+E,OAAQ8/D,EAAAA,GAAwBC,QASxC,GALA77G,KAAK+tG,OAAOsK,QACR,kHAIAr4G,KAAKg3H,iBAAiBlM,2BACtB9qH,KAAK+tG,OAAOsK,QACR,+JAED,CACH,MAAM+hB,EACFp6H,KAAKq6H,yCACT,GAAID,EAMA,OALAh1B,GACI8zB,EACAkB,GACA,GAEG,CACHt+E,OAAQ8/D,EAAAA,GAAwBE,iBAChC1V,SAAUg0B,GAGdp6H,KAAK+tG,OAAOsK,QACR,6HAGX,CAGD,MAAMiiB,EACFn0B,GAAwC+yB,GAC5C,OACIl5H,KAAKu6H,oBAAoBrB,IACzBA,EAAetzB,uBACd00B,GAGDt6H,KAAK+tG,OAAOsK,QAAQ,yCACb,CAAEv8D,OAAQ8/D,EAAAA,GAAwB8d,SAClCY,GACPt6H,KAAK+tG,OAAOsK,QAAQ,mCAGjB,MASHkiB,mBAAAA,CACJrB,GAOA,OAL2B,IAAIlqB,GAC3BkqB,EAAeR,qBAEoBnpB,mBAAmBE,aAG1CriH,SACZ4S,KAAK23H,gCAAgCloB,aAAariH,OAOlD+sI,6BAAAA,GACJ,GAAIn6H,KAAKg3H,iBAAiB3xB,kBACtB,IACI,OAAOz2G,KAAKC,MACRmR,KAAKg3H,iBAAiB3xB,kBAE7B,CAAC,MAAO5zG,GACL,MAAMq2G,GACFX,GAEP,CAGL,OAAO,KAQH,oCAAM6yB,GACVh6H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB8D,wCAClBziH,KAAKq0G,eAGT,MAAM7mH,EAAuB,CAAC,EAOxBgtI,EACFx6H,KAAK84H,mCACT94H,KAAK+tG,OAAOsK,QACR,yFAAyFmiB,KAG7F,IACI,MAAM9rI,QACIsR,KAAKu1H,iBAAiBhY,oBACxBid,EACAhtI,GAEFitI,ECtsBZ,SAAiC/rI,GACnC,OACIA,EAAS+J,eAAe,2BACxB/J,EAAS+J,eAAe,mBACxB/J,EAAS+J,eAAe,WACxB/J,EAAS+J,eAAe,WAEhC,CD+rBoCiiI,CAAuBhsI,EAASM,MACxD,OAAIyrI,EACO/rI,EAASM,MAEhBgR,KAAK+tG,OAAOsK,QACR,8FAEG,KAEd,CAAC,MAAO5mH,GAIL,OAHAuO,KAAK+tG,OAAOsK,QACR,6CAA6C5mH,KAE1C,IACV,EAMG4oI,sCAAAA,GACJ,OAAIr6H,KAAK63H,mBAAmB7mB,GACjBA,GAAiBhxG,KAAK63H,iBAG1B,KAOH,2CAAMkC,CACV3zB,GAEApmG,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBgE,+CAClB3iH,KAAKq0G,eAGT,MAAMsmB,EACF36H,KAAKg3H,iBAAiB6C,0BAA0BC,YAEpD,GAAIa,EAA2B,CAC3B,GACIA,IACA5xB,EAAAA,GAAU6xB,gCAMV,OAJA56H,KAAK01H,wBAAwB0B,eACzByD,EAAAA,GAAwBC,6BAC5B96H,KAAK01H,wBAAwByB,YACzBwD,EACG7D,GAAUiE,+BACb30B,EACAu0B,GAIR,MAAMhF,QAA+BN,GACjCr1H,KAAKq3H,gBAAgB7B,aAAajpI,KAAKyT,KAAKq3H,iBAC5C1Y,GAAkBiE,4BAClB5iH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cAL4BghB,CAOjCr1H,KAAKg3H,iBAAiB6C,0BAChBpE,kBACNz1H,KAAK01H,yBAGT,GAAIC,EAKA,OAJA31H,KAAK01H,wBAAwB0B,eACzByD,EAAAA,GAAwBG,oCAC5Bh7H,KAAK01H,wBAAwByB,YACzBxB,EACGmB,GAAUiE,+BACb30B,EACAuvB,GAIR31H,KAAK01H,wBAAwB0B,eACzByD,EAAAA,GAAwBI,+BAC/B,CAED,OAAO70B,EASH,kCAAMN,CACVozB,GAEAl5H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB6D,sCAClBxiH,KAAKq0G,eAET,MAAM6mB,EACFl7H,KAAKm7H,6CAA6CjC,GACtD,GAAIgC,EACA,OAAOA,EAIX,MAAM90B,QAAiBivB,GACnBr1H,KAAKo7H,qCAAqC7uI,KAAKyT,MAC/C2+G,GAAkB4D,8CAClBviH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALcghB,GAQvB,GAAIjvB,EAMA,OALAN,GACIozB,EACA9yB,GACA,GAEGwV,EAAAA,GAAwBqe,QAInC,MAAMnyB,GACFV,IAIA+zB,4CAAAA,CACJjC,GAEAl5H,KAAK+tG,OAAOsK,QACR,4EAEJr4G,KAAK+tG,OAAOstB,WACR,sBACIr7H,KAAKg3H,iBAAiBjb,kBACtBhT,EAAAA,GAAUuyB,kBAGlBt7H,KAAK+tG,OAAOstB,WACR,uBACIr7H,KAAKg3H,iBAAiB3xB,mBACtB0D,EAAAA,GAAUuyB,kBAGlBt7H,KAAK+tG,OAAOstB,WACR,wBACInC,EAAeR,qBAAuB3vB,EAAAA,GAAUuyB,kBAGxD,MAAMl1B,EAAWpmG,KAAKu7H,sCACtB,GAAIn1B,EASA,OARApmG,KAAK+tG,OAAOsK,QACR,6DAEJvS,GACIozB,EACA9yB,GACA,GAEGwV,EAAAA,GAAwBC,OAQnC,GAJA77G,KAAK+tG,OAAOsK,QACR,gIAGAr4G,KAAKxS,QAAQs9H,2BACb9qH,KAAK+tG,OAAOsK,QACR,sLAED,CACH,MAAM+hB,G5B/sBd/oB,E4BitBgBrxG,KAAK63H,gB5B/sBJrmB,GACbP,GAA0B7K,SAC1BiL,I4B+sBI,GAAI+oB,EASA,OARAp6H,KAAK+tG,OAAOsK,QACR,yDAEJvS,GACIozB,EACAkB,GACA,GAEGxe,EAAAA,GAAwBE,iBAGnC97G,KAAK+tG,OAAOsK,QACR,2IAEP,C5BnuBH,IACFhH,E4BouBI,MAAMipB,EACFn0B,GAAwC+yB,GAC5C,OACIl5H,KAAKu6H,oBAAoBrB,IACzBA,EAAehzB,qBACdo0B,GAEDt6H,KAAK+tG,OAAOsK,QAAQ,gDAEbuD,EAAAA,GAAwB8d,QACxBY,GACPt6H,KAAK+tG,OAAOsK,QAAQ,mCAGjB,MAMHkjB,mCAAAA,GAEJ,GAAIv7H,KAAKwsG,gBAAkBP,GAIvB,OAHAjsG,KAAK+tG,OAAOsK,QACR,uGAEGye,GAAU0E,qCACbx7H,KAAK63H,iBAKb,GAAI73H,KAAKg3H,iBAAiB1lB,uBAAwB,CAC9CtxG,KAAK+tG,OAAOsK,QACR,wFAEJ,IACIr4G,KAAK+tG,OAAOsK,QACR,qDAEJ,MAGMjS,EAAWoL,GAHM5iH,KAAKC,MACxBmR,KAAKg3H,iBAAiB1lB,wBAGPlL,SACfpmG,KAAK63H,iBAGT,GADA73H,KAAK+tG,OAAOsK,QAAQ,wCAChBjS,EAIA,OAHApmG,KAAK+tG,OAAOsK,QACR,iFAEGjS,EAEPpmG,KAAK+tG,OAAOsK,QACR,wEAGX,CAAC,MAAO5mH,GAIL,MAHAuO,KAAK+tG,OAAOsK,QACR,kGAEEvQ,GACFZ,GAEP,CACJ,CAGD,OAAIlnG,KAAKy7H,wBACLz7H,KAAK+tG,OAAOsK,QACR,kGAEGye,GAAU0E,qCACbx7H,KAAK63H,kBAIN,KAQH,0CAAMuD,GACVp7H,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB4D,8CAClBviH,KAAKq0G,eAET,MAAMqnB,EAA4B,GAAG3yB,EAAAA,GAAU4yB,+BAA+B37H,KAAK27G,0CAC7EnuH,EAAuB,CAAC,EAO9B,IAAIglB,EAAQ,KACZ,IACI,MAAM9jB,QAAiBsR,KAAKu1H,iBAAiBhY,oBAG3Cme,EAA2BluI,GAC7B,IAAIouI,EAGAx1B,EACJ,GE1/BN,SAA2C13G,GAC7C,OACIA,EAAS+J,eAAe,8BACxB/J,EAAS+J,eAAe,WAEhC,CFq/BgBojI,CAAiCntI,EAASM,MAC1C4sI,EACIltI,EAASM,KACbo3G,EAAWw1B,EAAkBx1B,SAE7BpmG,KAAK+tG,OAAOstB,WACR,iCAAiCO,EAAkB1qB,iCAEpD,KG//Bb,SACFxiH,GAEA,OACIA,EAAS+J,eAAe,UACxB/J,EAAS+J,eAAe,oBAEhC,CHw/BuBqjI,CAAsCptI,EAASM,MA6BtD,OAHAgR,KAAK+tG,OAAOjiH,MACR,8FAEG,KAtBP,GANAkU,KAAK+tG,OAAOE,QACR,sHAAsHv/G,EAASmR,UAGnI+7H,EACIltI,EAASM,KACT4sI,EAAkB9vI,QAAUi9G,EAAAA,GAAUgzB,iBAItC,OAHA/7H,KAAK+tG,OAAOjiH,MACR,sEAEG,KAGXkU,KAAK+tG,OAAOE,QACR,oDAAoD2tB,EAAkB9vI,SAE1EkU,KAAK+tG,OAAOE,QACR,gEAAgE2tB,EAAkB7sB,qBAGtF/uG,KAAK+tG,OAAOE,QACR,6FAEJ7H,EAAW,EAMd,CAEDpmG,KAAK+tG,OAAOsK,QACR,0IAEJ7lG,EAAQg/F,GACJpL,EACApmG,KAAK63H,gBAEZ,CAAC,MAAO/rI,GACL,GAAIA,aAAiBw0G,EAAAA,GACjBtgG,KAAK+tG,OAAOjiH,MACR,oGAAoGA,EAAMy0G,iCAAiCz0G,EAAMimH,oBAElJ,CACH,MAAMiqB,EAAalwI,EACnBkU,KAAK+tG,OAAOjiH,MACR,wGAAwGkwI,EAAWjqI,4BAA4BiqI,EAAW5tI,UAEjK,CAED,OAAO,IACV,CAeD,OAZKokB,IACDxS,KAAK+tG,OAAOE,QACR,wHAEJjuG,KAAK+tG,OAAOsK,QACR,yDAGJ7lG,EAAQskH,GAAU0E,qCACdx7H,KAAK63H,kBAGNrlH,EAMHipH,oBAAAA,GAUJ,OATgBz7H,KAAKg3H,iBAAiBjb,iBAAiBx/G,QAClDvJ,GAEOA,GACAg8G,GAAU0B,iBAAiB19G,GAAW1F,gBAClC0S,KAAK63H,kBAINzqI,OAAS,EAQ5B,wBAAO6uI,CACHC,EACArR,GAEA,IAAIsR,EAEJ,GACItR,GACAA,EAAkB5M,qBAAuB1gB,EAC3C,CACE,MAAM2gB,EAAS2M,EAAkB3M,OAC3B2M,EAAkB3M,OAClBnV,EAAAA,GAAUoV,sBAChBge,EAA8B,GAAGtR,EAAkB5M,sBAAsBC,IAC5E,CAED,OAAOie,GAEDD,EAOV,2CAAOV,CACHtnF,GAEA,MAAO,CACH+xD,kBAAmB/xD,EACnB8xD,gBAAiB9xD,EACjB6xD,QAAS,CAAC7xD,IAOlBm5D,iBAAAA,GACI,GAAIrtG,KAAKi3H,gBACL,OAAOluB,EAAAA,GAAUqzB,uBACd,GAAIp8H,KAAK+3H,oBACZ,OAAO/3H,KAAKomG,SAASJ,gBAErB,MAAMvF,GACF7C,GASZy+B,OAAAA,CAAQnoF,GACJ,OAAOl0C,KAAKomG,SAASL,QAAQ5/F,QAAQ+tC,IAAS,EAOlD8kF,gCAAAA,CAAiC9kF,GAC7B,OAAOi9D,GAAiC/3G,IAAI86C,GAShD,6BAAOooF,CAAuBpoF,GAC1B,OAAO60D,EAAAA,GAAUwzB,oBAAoBp2H,QAAQ+tC,IAAS,EAS1D,mCAAOsoF,CACHtoF,EACAuoF,EACA7sB,GAGA,MAAM8sB,EAAuB,IAAI1tB,GAAU96D,GAC3CwoF,EAAqBrtB,gBAErB,MAAMstB,EAAoBD,EAAqBntB,mBAE/C,IAAIqtB,EAAkB,GAAGH,KAAUE,EAAkBntB,kBAEjDxvG,KAAKs8H,uBAAuBK,EAAkBntB,mBAC9CotB,EAAkB,GAAGH,KAAU1zB,EAAAA,GAAU8zB,qCAI7C,MAAMn9H,EAAMsvG,GAAUoB,gCAAgC,IAC/CssB,EAAqBntB,mBACxBC,gBAAiBotB,IAClB3tB,UAGH,OAAIW,EAAoB,GAAGlwG,KAAOkwG,IAE3BlwG,EASX,qCAAOq7H,CACH30B,EACA0zB,GAEA,MAAMgD,EAAmB,IAAK12B,GAqB9B,OApBA02B,EAAiBt3B,uBACbsxB,GAAU0F,6BACNM,EAAiBt3B,uBACjBs0B,GAGRgD,EAAiBr3B,eACbqxB,GAAU0F,6BACNM,EAAiBr3B,eACjBq0B,GAGJgD,EAAiBp3B,uBACjBo3B,EAAiBp3B,qBACboxB,GAAU0F,6BACNM,EAAiBp3B,qBACjBo0B,IAILgD,EAYX,6BAAOC,CAAuB/pI,GAC1B,IAAIgqI,EAAgBhqI,EACpB,MACMiqI,EADe,IAAIjuB,GAAUh8G,GACSu8G,mBAG5C,GACmD,IAA/C0tB,EAAuBxtB,aAAariH,QACpC6vI,EAAuBztB,gBAAgBzpG,SACnCgjG,EAAAA,GAAUyuB,eAEhB,CAGEwF,EAAgB,GAAGA,IADfC,EAAuBztB,gBAAgBzoG,MAAM,KAAK,KACAgiG,EAAAA,GAAUm0B,0BACnE,CAED,OAAOF,GAiCT,SAAUG,GAAmB5F,GAC/B,OAAOA,EAAaxxH,SAASgjG,EAAAA,GAAU8H,eACjC0mB,EACA,GAAGA,IAAexuB,EAAAA,GAAU8H,eACtC,CAhuCmBimB,GAAqByB,sBAAgB,IAAI70H,IAAI,CACxD,WACA,aACAusG,EAAAA,GAAsBC,OACtBD,EAAAA,GAAsBmtB,UACtBntB,EAAAA,GAAsBE,6CI9DjBktB,GAMT,sBAAOC,CACHtvB,EACAuvB,EACAjmE,GAEA,MAAMkmE,EAAeH,GAAcI,qBAC/BzvB,EACA12C,GAEJ,OAAOimE,EACD,GAAGC,IAAez0B,EAAAA,GAAU20B,iBAAiBH,IAC7CC,EAQV,2BAAOC,CACHzvB,EACA12C,GAEA,IAAK02C,EACD,MAAMvN,GAAsBrB,GAIhC,MAAMu+B,EAA+B,CACjCxoH,GAAI64F,EAAUrN,iBAGdrpC,IACAqmE,EAASrmE,KAAOA,GAGpB,MAAMsmE,EAAchvI,KAAKiB,UAAU8tI,GAEnC,OAAO3vB,EAAUnN,aAAa+8B,GAQlC,wBAAOC,CACH7vB,EACAlrF,GAEA,IAAKkrF,EACD,MAAMvN,GAAsBrB,GAGhC,IAAKt8E,EACD,MAAM29E,GAAsBzC,GAGhC,IAEI,MAAM8/B,EAAah7G,EAAM/b,MAAMgiG,EAAAA,GAAU20B,gBACnCF,EAAeM,EAAW,GAC1BP,EACFO,EAAW1wI,OAAS,EACd0wI,EAAW/wI,MAAM,GAAG6O,KAAKmtG,EAAAA,GAAU20B,gBACnC30B,EAAAA,GAAUC,aACd+0B,EAAqB/vB,EAAUpN,aAAa48B,GAC5CQ,EAAkBpvI,KAAKC,MACzBkvI,GAEJ,MAAO,CACHE,iBAAkBV,GAAax0B,EAAAA,GAAUC,aACzCw0B,aAAcQ,EAErB,CAAC,MAAOvsI,GACL,MAAMgvG,GAAsBzC,EAC/B,GC3GI,MAAAkgC,GACQ,kBADRA,GAEJ,oCCAIC,GAGTnhI,WAAAA,CAAY3J,GACR2M,KAAKo+H,sBAAsB/qI,GAC3B2M,KAAKq+H,cAAgB7vG,OAAOn7B,GAGxB+qI,qBAAAA,CAAsB/qI,GAC1B,GACKA,IAAkB23H,GAAAA,GAAqBK,cACpCh4H,IAAkB23H,GAAAA,GAAqBC,iBAC1Cz8F,OAAOn7B,GAER,MAAMirI,EAAAA,GAAAA,IACFC,GAAAA,IAKZ7R,OAAAA,CAAQhzH,GACJ,OAAOsG,KAAKq+H,cAAc3R,QAAQhzH,GAGtC83H,OAAAA,CAAQ93H,EAAavK,GACjB6Q,KAAKq+H,cAAc7M,QAAQ93H,EAAKvK,GAGpC2oH,UAAAA,CAAWp+G,GACPsG,KAAKq+H,cAAcvmB,WAAWp+G,GAGlCs9G,OAAAA,GACI,OAAOz+G,OAAO+E,KAAK0C,KAAKq+H,eAG5BxM,WAAAA,CAAYn4H,GACR,OAAOsG,KAAKq+H,cAAc5lI,eAAeiB,IC1BjC,SAAA8kI,GACZC,EACA37G,GAEA,IAAKA,EACD,OAAO,KAGX,IAGI,OADIu6G,GAAcQ,kBAAkBY,EAAe37G,GAC5B06G,aAAalmE,IACvC,CAAC,MAAO7lE,GACL,MAAMgvG,GAAsBi+B,EAC/B,CACL,CCkCM,MAAOC,WAA4B3sB,GAiBrCh1G,WAAAA,CACIjK,EACA6rI,EACA3sB,EACAlE,EACAmE,EACA+G,GAEAn5G,MAAM/M,EAAUk/G,EAAYlE,EAAQmE,GAVrB,KAAsB2sB,uBAAG,MAWxC7+H,KAAK4+H,YAAcA,EACnB5+H,KAAK+tG,OAASA,EACd/tG,KAAK8+H,gBAAkB,IAAI7M,GAC3BjyH,KAAK++H,eAAiB/+H,KAAKg/H,oBACvBh/H,KAAK4+H,YAAYvrI,eAErB2M,KAAKi/H,sBAAwBj/H,KAAKk/H,2BAC9Bl/H,KAAK4+H,YAAY1T,uBACjBlrH,KAAK4+H,YAAYvrI,eAIjBurI,EAAYxT,wBACZprH,KAAKm/H,sBACLn/H,KAAKo/H,iBAGTp/H,KAAKi5G,kBAAoBA,EAOnB+lB,mBAAAA,CACN3rI,GAEA,OAAQA,GACJ,KAAK23H,GAAAA,GAAqBK,aAC1B,KAAKL,GAAAA,GAAqBC,eACtB,IACI,OAAO,IAAIkT,GAAe9qI,EAC7B,CAAC,MAAO5B,GACLuO,KAAK+tG,OAAOsK,QAAQ5mH,GACpB,KACH,EAMT,OADAuO,KAAK4+H,YAAYvrI,cAAgB23H,GAAAA,GAAqBiH,cAC/C,IAAIA,GAQLiN,0BAAAA,CACNhU,EACA73H,GAEA,OAAQA,GACJ,KAAK23H,GAAAA,GAAqBK,aAC1B,KAAKL,GAAAA,GAAqBC,eACtB,IAEI,OAAO,IAAIkT,GACPjT,GACIF,GAAAA,GAAqBC,eAEhC,CAAC,MAAOx5H,GAEL,OADAuO,KAAK+tG,OAAOsK,QAAQ5mH,GACbuO,KAAK8+H,eACf,CACL,KAAK9T,GAAAA,GAAqBiH,cAC1B,QACI,OAAOjyH,KAAK8+H,iBAQdK,mBAAAA,GACN,MAAME,EAAa,GAAGt2B,EAAAA,GAAUu2B,gBAAgBC,EAAAA,GAAoBr8B,WAC9Ds8B,EAAgB,GAAGz2B,EAAAA,GAAUu2B,gBAAgBC,EAAAA,GAAoBE,cACjEC,EAAW,GAAG32B,EAAAA,GAAUu2B,gBAAgBC,EAAAA,GAAoBI,QAC5DC,EAAe,GAAG72B,EAAAA,GAAUu2B,gBAAgBC,EAAAA,GAAoBM,aAOhEziI,EAAS,CALM4C,KAAK++H,eAAerS,QAAQ2S,GACzBr/H,KAAK++H,eAAerS,QAAQ8S,GACjCx/H,KAAK++H,eAAerS,QAAQgT,GACxB1/H,KAAK++H,eAAerS,QAAQkT,IAQ7B,CAClBL,EAAAA,GAAoBr8B,SACpBq8B,EAAAA,GAAoBE,YACpBF,EAAAA,GAAoBI,MACpBJ,EAAAA,GAAoBM,YAGVnlH,SAAQ,CAACg7F,EAAkBtkH,KACrC,MAAMjC,EAAQiO,EAAOhM,GACjBjC,GACA6Q,KAAK8/H,kBAAkBpqB,EAAUvmH,GAAO,EAC3C,IASDiwI,aAAAA,GACJp/H,KAAK+tG,OAAOwD,MAAM,+CAClB,MAAMwuB,EAAc//H,KAAK0sH,QAAQsT,GAAAA,GAAgBC,cAC3ChtB,EAAYjzG,KAAK0sH,QACnB,GAAGsT,GAAAA,GAAgBE,cAAclgI,KAAKjN,YAE1C,GAAIgtI,GAAe9sB,EAKf,YAJAjzG,KAAK+tG,OAAOsK,QACR,qGAMQr4G,KAAK++H,eAAe/nB,UAC5Bt8F,SAAShhB,IACb,GAAIsG,KAAKk2G,gBAAgBx8G,GAAM,CAE3B,MAAMvK,EAAQ6Q,KAAK0sH,QAAQhzH,GAC3B,GAAIvK,EAAO,CACP,MAAMgxI,EAAUngI,KAAKogI,qBAAqBjxI,GAC1C,GAAIgxI,GAAWA,EAAQ1nI,eAAe,kBAClC,OAAQ0nI,EAAwB,gBAC5B,KAAKl9B,EAAAA,GAAeC,SAChB,GAAIm9B,GAA6BF,GAAU,CACvCngI,KAAK+tG,OAAOwD,MACR,kFAEJvxG,KAAK+tG,OAAOuyB,SACR,yDAAyD5mI,wCAE7D,MAAM6mI,EACFJ,EACEK,EACFxgI,KAAK48G,yBACDljH,EACA6mI,GAMR,YAJAvgI,KAAKygI,YACDD,EACAv9B,EAAAA,GAAeC,SAGtB,CACGljG,KAAK+tG,OAAOwD,MACR,iLAEJvxG,KAAK+tG,OAAOuyB,SACR,yEAAyE5mI,KAGjF,MACJ,KAAKupG,EAAAA,GAAeY,aACpB,KAAKZ,EAAAA,GAAeiB,8BAChB,GAAIm8B,GAAiCF,GAAU,CAC3CngI,KAAK+tG,OAAOwD,MACR,sFAEJvxG,KAAK+tG,OAAOuyB,SACR,6DAA6D5mI,wCAEjE,MAAMgnI,EACFP,EACEK,EACFxgI,KAAK48G,yBACDljH,EACAgnI,GAMR,YAJA1gI,KAAKygI,YACDD,EACAv9B,EAAAA,GAAeY,aAGtB,CACG7jG,KAAK+tG,OAAOwD,MACR,6LAEJvxG,KAAK+tG,OAAOuyB,SACR,6EAA6E5mI,KAGrF,MACJ,KAAKupG,EAAAA,GAAeyB,cAChB,GACI27B,GAAkCF,GACpC,CACEngI,KAAK+tG,OAAOwD,MACR,uFAEJvxG,KAAK+tG,OAAOuyB,SACR,8DAA8D5mI,wCAElE,MAAMinI,EACFR,EACEK,EACFxgI,KAAK48G,yBACDljH,EACAinI,GAMR,YAJA3gI,KAAKygI,YACDD,EACAv9B,EAAAA,GAAeyB,cAGtB,CACG1kG,KAAK+tG,OAAOwD,MACR,gMAEJvxG,KAAK+tG,OAAOuyB,SACR,8EAA8E5mI,KAQrG,CACJ,CAED,GAAIsG,KAAK21G,aAAaj8G,GAAM,CACxB,MAAMvK,EAAQ6Q,KAAK0sH,QAAQhzH,GAC3B,GAAIvK,EAAO,CACP,MAAMyxI,EAAa5gI,KAAKogI,qBAAqBjxI,GAEzCyxI,GACAz0B,GAAc+B,gBAAgB0yB,KAE9B5gI,KAAK+tG,OAAOwD,MACR,oFAEJvxG,KAAK+tG,OAAOuyB,SACR,yDAAyD5mI,0CAE7DsG,KAAK6gI,mBAAmBnnI,GAE/B,CACJ,KAQC0mI,oBAAAA,CAAqBU,GAC3B,IACI,MAAMC,EAAanyI,KAAKC,MAAMiyI,GAO9B,OAAOC,GAAoC,kBAAfA,EACtBA,EACA,IACT,CAAC,MAAOj1I,GACL,OAAO,IACV,EAOL4gI,OAAAA,CAAQhzH,GACJ,OAAOsG,KAAK++H,eAAerS,QAAQhzH,GAQvC83H,OAAAA,CAAQ93H,EAAavK,GACjB6Q,KAAK++H,eAAevN,QAAQ93H,EAAKvK,GAOrCymH,UAAAA,CAAWgC,EAAoB7J,GAC3B/tG,KAAK+tG,OAAOwD,MAAM,yCAClB,MAAMuB,EAAgB9yG,KAAKw4G,uBAAuBZ,GAElD,OAAO53G,KAAKo4G,4BACRR,EACA9E,EACA/E,GAURyK,sBAAAA,CAAuBZ,GACnB,MAAMopB,EAAoBhhI,KAAK0sH,QAAQ9U,GACvC,IAAKopB,EAED,OADAhhI,KAAKihI,wBAAwBrpB,GACtB,KAGX,MAAMspB,EAAgBlhI,KAAKogI,qBAAqBY,GAChD,OAAKE,GAAkB/0B,GAAc+B,gBAAgBgzB,GAK9ClvB,GAAa2G,SAChB,IAAIxM,GACJ+0B,IANAlhI,KAAKihI,wBAAwBrpB,GACtB,MAaftD,UAAAA,CAAWplE,GACPlvC,KAAK+tG,OAAOwD,MAAM,yCAClB,MAAM73G,EAAMw1C,EAAQk9D,qBACpBpsG,KAAKwxH,QAAQ93H,EAAK9K,KAAKiB,UAAUq/C,IACjClvC,KAAK6gI,mBAAmBnnI,GAO5B87G,cAAAA,GACIx1G,KAAK+tG,OAAOwD,MAAM,6CAClB,MAAMwuB,EAAc//H,KAAK0sH,QAAQsT,GAAAA,GAAgBC,cACjD,OAAIF,EACOnxI,KAAKC,MAAMkxI,IAGtB//H,KAAK+tG,OAAOsK,QACR,8DAEG,IAOXwoB,kBAAAA,CAAmBnnI,GACfsG,KAAK+tG,OAAOwD,MAAM,iDAClBvxG,KAAK+tG,OAAOuyB,SACR,2DAA2D5mI,KAE/D,MAAMqmI,EAAc//H,KAAKw1G,kBACS,IAA9BuqB,EAAY55H,QAAQzM,IAEpBqmI,EAAYlzI,KAAK6M,GACjBsG,KAAKwxH,QACDwO,GAAAA,GAAgBC,aAChBrxI,KAAKiB,UAAUkwI,IAEnB//H,KAAK+tG,OAAOsK,QACR,6DAGJr4G,KAAK+tG,OAAOsK,QACR,4EASZ4oB,uBAAAA,CAAwBvnI,GACpBsG,KAAK+tG,OAAOwD,MAAM,sDAClBvxG,KAAK+tG,OAAOuyB,SACR,gEAAgE5mI,KAEpE,MAAMqmI,EAAc//H,KAAKw1G,iBACnB2rB,EAAepB,EAAY55H,QAAQzM,GACrCynI,GAAgB,GAChBpB,EAAYxlH,OAAO4mH,EAAc,GACjCnhI,KAAKwxH,QACDwO,GAAAA,GAAgBC,aAChBrxI,KAAKiB,UAAUkwI,IAEnB//H,KAAK+tG,OAAOwD,MACR,oEAGJvxG,KAAK+tG,OAAOwD,MACR,6EASZ,mBAAMoG,CAAcj+G,GACXoG,MAAM63G,cAAcj+G,GACzBsG,KAAKihI,wBAAwBvnI,GAOjCm/G,qBAAAA,CAAsBjB,GAClB53G,KAAK83G,WAAWF,GAChB53G,KAAKihI,wBAAwBrpB,GAOjCM,aAAAA,CAAcx+G,GACVoG,MAAMo4G,cAAcx+G,GACpBsG,KAAKohI,eAAe1nI,EAAKupG,EAAAA,GAAeC,UAO5C,uBAAMmS,CAAkB37G,GACfoG,MAAMu1G,kBAAkB37G,GAC7BsG,KAAKohI,eAAe1nI,EAAKupG,EAAAA,GAAeY,cAO5CsU,kBAAAA,CAAmBz+G,GACfoG,MAAMq4G,mBAAmBz+G,GACzBsG,KAAKohI,eAAe1nI,EAAKupG,EAAAA,GAAeyB,eAO5C+O,YAAAA,GACIzzG,KAAK+tG,OAAOwD,MAAM,2CAClB,MAAMvgG,EAAOhR,KAAK0sH,QACd,GAAGsT,GAAAA,GAAgBE,cAAclgI,KAAKjN,YAE1C,GAAIie,EAAM,CACN,MAAMiiG,EAAYjzG,KAAKogI,qBAAqBpvH,GAC5C,GACIiiG,GACAA,EAAUx6G,eAAe,YACzBw6G,EAAUx6G,eAAe,gBACzBw6G,EAAUx6G,eAAe,gBAEzB,OAAOw6G,EAEPjzG,KAAK+tG,OAAOjiH,MACR,yGAGX,MACGkU,KAAK+tG,OAAOsK,QACR,0DAIR,MAAO,CACHvV,QAAS,GACTxwG,YAAa,GACbC,aAAc,IAStBkuI,WAAAA,CAAY/mI,EAAanI,GACrByO,KAAK+tG,OAAOwD,MAAM,0CAClB,MAAM0B,EAAYjzG,KAAKyzG,eAEvB,OAAQliH,GACJ,KAAK0xG,EAAAA,GAAeC,UACwB,IAApC+P,EAAUnQ,QAAQ38F,QAAQzM,KAC1BsG,KAAK+tG,OAAOj6G,KACR,2DAEJm/G,EAAUnQ,QAAQj2G,KAAK6M,IAE3B,MACJ,KAAKupG,EAAAA,GAAeY,cAC4B,IAAxCoP,EAAU3gH,YAAY6T,QAAQzM,KAC9BsG,KAAK+tG,OAAOj6G,KACR,+DAEJm/G,EAAU3gH,YAAYzF,KAAK6M,IAE/B,MACJ,KAAKupG,EAAAA,GAAeyB,eAC6B,IAAzCuO,EAAU1gH,aAAa4T,QAAQzM,KAC/BsG,KAAK+tG,OAAOj6G,KACR,gEAEJm/G,EAAU1gH,aAAa1F,KAAK6M,IAEhC,MACJ,QAII,MAHAsG,KAAK+tG,OAAOjiH,MACR,sFAAsFyF,KAEpFkvG,GACFi+B,GAIZ1+H,KAAKwxH,QACD,GAAGwO,GAAAA,GAAgBE,cAAclgI,KAAKjN,WACtCnE,KAAKiB,UAAUojH,IASvBmuB,cAAAA,CAAe1nI,EAAanI,GACxByO,KAAK+tG,OAAOwD,MAAM,6CAClB,MAAM0B,EAAYjzG,KAAKyzG,eAEvB,OAAQliH,GACJ,KAAK0xG,EAAAA,GAAeC,SAChBljG,KAAK+tG,OAAOszB,QACR,gFAAgF3nI,cAEpF,MAAM4nI,EAAYruB,EAAUnQ,QAAQ38F,QAAQzM,GACxC4nI,GAAa,GACbthI,KAAK+tG,OAAOj6G,KACR,kEAEJm/G,EAAUnQ,QAAQvoF,OAAO+mH,EAAW,IAEpCthI,KAAK+tG,OAAOj6G,KACR,gIAGR,MACJ,KAAKmvG,EAAAA,GAAeY,aAChB7jG,KAAK+tG,OAAOszB,QACR,oFAAoF3nI,cAExF,MAAM6nI,EAAgBtuB,EAAU3gH,YAAY6T,QAAQzM,GAChD6nI,GAAiB,GACjBvhI,KAAK+tG,OAAOj6G,KACR,sEAEJm/G,EAAU3gH,YAAYioB,OAAOgnH,EAAe,IAE5CvhI,KAAK+tG,OAAOj6G,KACR,oIAGR,MACJ,KAAKmvG,EAAAA,GAAeyB,cAChB1kG,KAAK+tG,OAAOszB,QACR,qFAAqF3nI,cAEzF,MAAM8nI,EAAiBvuB,EAAU1gH,aAAa4T,QAAQzM,GAClD8nI,GAAkB,GAClBxhI,KAAK+tG,OAAOj6G,KACR,uEAEJm/G,EAAU1gH,aAAagoB,OAAOinH,EAAgB,IAE9CxhI,KAAK+tG,OAAOj6G,KACR,qIAGR,MACJ,QAII,MAHAkM,KAAK+tG,OAAOjiH,MACR,yFAAyFyF,KAEvFkvG,GACFi+B,GAIZ1+H,KAAKwxH,QACD,GAAGwO,GAAAA,GAAgBE,cAAclgI,KAAKjN,WACtCnE,KAAKiB,UAAUojH,IAQvB6G,oBAAAA,CAAqBulB,GACjB,MAAMlwI,EAAQ6Q,KAAK0sH,QAAQ2S,GAC3B,IAAKlwI,EAKD,OAJA6Q,KAAK+tG,OAAOwD,MACR,kEAEJvxG,KAAKohI,eAAe/B,EAAYp8B,EAAAA,GAAeC,UACxC,KAGX,MAAMu+B,EAAgBzhI,KAAKogI,qBAAqBjxI,GAChD,OAAKsyI,GAAkBpB,GAA6BoB,IAQpDzhI,KAAK+tG,OAAOwD,MACR,uDAEGkwB,IAVHzhI,KAAK+tG,OAAOwD,MACR,kEAEJvxG,KAAKohI,eAAe/B,EAAYp8B,EAAAA,GAAeC,UACxC,MAafqR,oBAAAA,CAAqBzR,GACjB9iG,KAAK+tG,OAAOwD,MAAM,mDAClB,MAAM8tB,EAAagB,GAAmCv9B,GAEtD9iG,KAAKwxH,QAAQ6N,EAAYzwI,KAAKiB,UAAUizG,IAExC9iG,KAAKygI,YAAYpB,EAAYp8B,EAAAA,GAAeC,UAOhDiS,wBAAAA,CAAyBusB,GACrB,MAAMvyI,EAAQ6Q,KAAK0sH,QAAQgV,GAC3B,IAAKvyI,EAKD,OAJA6Q,KAAK+tG,OAAOwD,MACR,sEAEJvxG,KAAKohI,eAAeM,EAAgBz+B,EAAAA,GAAeY,cAC5C,KAEX,MAAM89B,EAAoB3hI,KAAKogI,qBAAqBjxI,GACpD,OACKwyI,GACAtB,GAAiCsB,IAStC3hI,KAAK+tG,OAAOwD,MACR,2DAEGowB,IAVH3hI,KAAK+tG,OAAOwD,MACR,sEAEJvxG,KAAKohI,eAAeM,EAAgBz+B,EAAAA,GAAeY,cAC5C,MAafyR,wBAAAA,CAAyBhjH,GACrB0N,KAAK+tG,OAAOwD,MACR,uDAEJ,MAAMmwB,EAAiBrB,GAAmC/tI,GAC1D0N,KAAKwxH,QAAQkQ,EAAgB9yI,KAAKiB,UAAUyC,IAE5C0N,KAAKygI,YAAYiB,EAAgBz+B,EAAAA,GAAeY,cAOpDmX,yBAAAA,CACI4mB,GAEA,MAAMzyI,EAAQ6Q,KAAK0sH,QAAQkV,GAC3B,IAAKzyI,EAKD,OAJA6Q,KAAK+tG,OAAOwD,MACR,uEAEJvxG,KAAKohI,eAAeQ,EAAiB3+B,EAAAA,GAAeyB,eAC7C,KAEX,MAAMm9B,EAAqB7hI,KAAKogI,qBAAqBjxI,GACrD,OACK0yI,GACAxB,GAAkCwB,IASvC7hI,KAAK+tG,OAAOwD,MACR,4DAEGswB,IAVH7hI,KAAK+tG,OAAOwD,MACR,uEAEJvxG,KAAKohI,eAAeQ,EAAiB3+B,EAAAA,GAAeyB,eAC7C,MAaf+P,yBAAAA,CAA0BliH,GACtByN,KAAK+tG,OAAOwD,MACR,wDAEJ,MAAMqwB,EACFvB,GAAmC9tI,GACvCyN,KAAKwxH,QAAQoQ,EAAiBhzI,KAAKiB,UAAU0C,IAE7CyN,KAAKygI,YAAYmB,EAAiB3+B,EAAAA,GAAeyB,eAOrDyS,cAAAA,CAAe2qB,GACX,MAAM3yI,EAAQ6Q,KAAK0sH,QAAQoV,GAC3B,IAAK3yI,EAID,OAHA6Q,KAAK+tG,OAAOwD,MACR,4DAEG,KAGX,MAAMwwB,EAAiB/hI,KAAKogI,qBAAqBjxI,GACjD,OACK4yI,IhDreuBroI,EgDseUooI,GhDteGl9B,EgDseam9B,IhDhexB,IAA9BroI,EAAIyM,QAAQg2G,EAAAA,KACZvX,EAAOnsG,eAAe,aACtBmsG,EAAOnsG,eAAe,iBgDsetBuH,KAAK+tG,OAAOwD,MAAM,iDACXwwB,IAPH/hI,KAAK+tG,OAAOwD,MACR,4DAEG,MhD3eH,IAAoB73G,EAAakrG,EgDsf7C+P,cAAAA,CAAeD,GACX10G,KAAK+tG,OAAOwD,MAAM,6CAClB,MAAMuwB,WhD1gBwB51I,GAGlB,IAHmB,YACnC22G,EAAW,SACX9vG,GACgB7G,EAMhB,MAL2C,CACvCiwH,EAAAA,GACAtZ,EACA9vG,GAGC6I,KAAK6mG,EAAAA,GAAWC,qBAChBp1G,aACT,CgD8f+B+yI,CAAoC3rB,GAC3D10G,KAAKwxH,QAAQsQ,EAAgBlzI,KAAKiB,UAAU6kH,IAOhD8H,kBAAAA,CACIwlB,GAEA,MAAM7yI,EAAQ6Q,KAAK0sH,QAAQsV,GAC3B,IAAK7yI,EAID,OAHA6Q,KAAK+tG,OAAOwD,MACR,gEAEG,KAEX,MAAM0wB,EAAejiI,KAAKogI,qBAAqBjxI,GAC/C,OACK8yI,GhDnkBG,SAAwBvoI,EAAakrG,GACjD,MAAMs9B,EACgD,IAAlDxoI,EAAIyM,QAAQg8H,EAAAA,GAAuB/lB,WACvC,IAAIgmB,GAA0B,EAS9B,OAPIx9B,IACAw9B,EACIx9B,EAAOnsG,eAAe,mBACtBmsG,EAAOnsG,eAAe,WACtBmsG,EAAOnsG,eAAe,cAGvBypI,GAAeE,CAC1B,CgDujBa/B,CACG2B,EACAC,IASRjiI,KAAK+tG,OAAOwD,MAAM,qDACX0wB,IAPHjiI,KAAK+tG,OAAOwD,MACR,gEAEG,MAYfgL,kBAAAA,CACIylB,EACAK,GAEAriI,KAAK+tG,OAAOwD,MAAM,iDAClBvxG,KAAKwxH,QAAQwQ,EAAoBpzI,KAAKiB,UAAUwyI,IAMpD7qB,oBAAAA,CAAqB99G,GACjB,MAAMvK,EAAQ6Q,KAAK8+H,gBAAgBpS,QAAQhzH,GAC3C,IAAKvK,EAID,OAHA6Q,KAAK+tG,OAAOwD,MACR,kEAEG,KAEX,MAAMwwB,EAAiB/hI,KAAKogI,qBAAqBjxI,GACjD,OACI4yI,GhDtiBI,SACZroI,EACAkrG,GAEA,QAAKA,GAKuD,IAAxDlrG,EAAIyM,QAAQ++F,EAAAA,GAA6BkX,YACzCxX,EAAOnsG,eAAe,YACtBmsG,EAAOnsG,eAAe,oBACtBmsG,EAAOnsG,eAAe,sBACtBmsG,EAAOnsG,eAAe,wBACtBmsG,EAAOnsG,eAAe,2BACtBmsG,EAAOnsG,eAAe,mBACtBmsG,EAAOnsG,eAAe,WACtBmsG,EAAOnsG,eAAe,uBACtBmsG,EAAOnsG,eAAe,yBACtBmsG,EAAOnsG,eAAe,cACtBmsG,EAAOnsG,eAAe,WAE9B,CgDihBY4nI,CAAuC3mI,EAAKqoI,IAE5C/hI,KAAK+tG,OAAOwD,MACR,uDAEGwwB,GAEJ,KAMX1qB,wBAAAA,GAEI,OADgBr3G,KAAK8+H,gBAAgB9nB,UACtBz6G,QAAQ7C,GACZsG,KAAKu3G,oBAAoB79G,KASxC4oI,kBAAAA,CAAmBC,EAAoBC,GACnCxiI,KAAK8+H,gBAAgBtN,QAAQiR,GAAAA,GAAkBC,YAAaH,GAC5DviI,KAAK8+H,gBAAgBtN,QACjBiR,GAAAA,GAAkBE,YAClBH,GAORI,kBAAAA,GAOI,MAAO,CALH5iI,KAAK8+H,gBAAgBpS,QAAQ+V,GAAAA,GAAkBC,cAC/C35B,EAAAA,GAAUC,aAEVhpG,KAAK8+H,gBAAgBpS,QAAQ+V,GAAAA,GAAkBE,cAC/C55B,EAAAA,GAAUC,cAQlByT,oBAAAA,CAAqB/iH,EAAakrG,GAC9B5kG,KAAK+tG,OAAOwD,MAAM,mDAClBvxG,KAAK8+H,gBAAgBtN,QAAQ93H,EAAK9K,KAAKiB,UAAU+0G,IAMrD/5G,gBAAAA,GACI,MAAMg4I,EAA0B7iI,KAAK8iI,iBACjCvD,EAAAA,GAAoBwD,wBAElBC,EAA4BhjI,KAAK0sH,QAAQmW,GAC/C,IAAKG,EAA2B,CAE5BhjI,KAAK+tG,OAAOwD,MACR,iHAEJ,MAAM0xB,EAAwBjjI,KAAK8iI,iBAC/BvD,EAAAA,GAAoB2D,gBAElBC,EAA0BnjI,KAAK0sH,QAAQuW,GAC7C,IAAKE,EAID,OAHAnjI,KAAK+tG,OAAOwD,MACR,iEAEG,KAEX,MAAM3mH,EAAgBoV,KAAKwyG,yBAAyB,CAChDlH,eAAgB63B,IAEpB,OAAIv4I,GACAoV,KAAK+tG,OAAOwD,MACR,kFAEJvxG,KAAK+tG,OAAOwD,MACR,oFAEJvxG,KAAK2uC,iBAAiB/jD,GACfA,GAEJ,IACV,CACD,MAAMw4I,EAAwBpjI,KAAKogI,qBAC/B4C,GAEJ,OAAII,GACApjI,KAAK+tG,OAAOwD,MACR,6EAEGvxG,KAAKwyG,yBAAyB,CACjC5P,cAAewgC,EAAsBxgC,cACrC0I,eAAgB83B,EAAsB93B,eACtCvI,SAAUqgC,EAAsBrgC,aAGxC/iG,KAAK+tG,OAAOwD,MACR,iEAEG,MAOX5iE,gBAAAA,CAAiBO,GACb,MAAMm0F,EAAmBrjI,KAAK8iI,iBAC1BvD,EAAAA,GAAoBwD,wBAElBE,EAAwBjjI,KAAK8iI,iBAC/BvD,EAAAA,GAAoB2D,gBAExB,GAAIh0F,EAAS,CACTlvC,KAAK+tG,OAAOsK,QAAQ,wCACpB,MAAMirB,EAA2C,CAC7C1gC,cAAe1zD,EAAQ0zD,cACvB0I,eAAgBp8D,EAAQo8D,eACxBvI,SAAU7zD,EAAQ6zD,UAEtB/iG,KAAK++H,eAAevN,QAChB6R,EACAz0I,KAAKiB,UAAUyzI,IAEnBtjI,KAAK++H,eAAevN,QAChByR,EACA/zF,EAAQo8D,eAEf,MACGtrG,KAAK+tG,OAAOsK,QACR,+DAEJr4G,KAAK++H,eAAejnB,WAAWurB,GAC/BrjI,KAAK++H,eAAejnB,WAAWmrB,GAQvCtmB,kBAAAA,CAAmB4mB,GACf,MAAMp0I,EAAQ6Q,KAAK0sH,QAAQ6W,GAC3B,IAAKp0I,EAID,OAHA6Q,KAAK+tG,OAAOwD,MACR,gEAEG,KAGX,MAAMiyB,EAAwBxjI,KAAKogI,qBAAqBjxI,GACxD,OACKq0I,GhD5vBG,SAAmB9pI,EAAakrG,GAC5C,IAAIs9B,GAAuB,EACvBxoI,IACAwoI,EAAqE,IAAvDxoI,EAAIyM,QAAQs9H,EAAAA,GAAoBC,oBAGlD,IAAItB,GAA0B,EAK9B,OAJIx9B,IACAw9B,EAAiBx9B,EAAOnsG,eAAe,iBAGpCypI,GAAeE,CAC1B,CgDivBa/B,CACGkD,EACAC,IASRxjI,KAAK+tG,OAAOwD,MAAM,qDACXiyB,IAPHxjI,KAAK+tG,OAAOwD,MACR,gEAEG,MAYfmL,kBAAAA,CACI6mB,EACAI,GAEA3jI,KAAK+tG,OAAOwD,MAAM,iDAClBvxG,KAAKwxH,QAAQ+R,EAAoB30I,KAAKiB,UAAU8zI,IAQpDC,iBAAAA,CAAkBluB,EAAkBud,GAChC,MAAMv5H,EAAMu5H,EAAcjzH,KAAK8iI,iBAAiBptB,GAAYA,EAC5D,GAAI11G,KAAK4+H,YAAYtrI,uBAAwB,CACzC,MAAMuwI,EAAa7jI,KAAK8jI,cAAcpqI,GACtC,GAAImqI,EAIA,OAHA7jI,KAAK+tG,OAAOwD,MACR,uGAEGsyB,CAEd,CAED,MAAM10I,EAAQ6Q,KAAKi/H,sBAAsBvS,QAAQhzH,GACjD,IAAKvK,EAAO,CAER,GACI6Q,KAAK4+H,YAAYvrI,gBACjB23H,GAAAA,GAAqBK,aACvB,CACE,MAAMr6G,EAAOhR,KAAK++H,eAAerS,QAAQhzH,GACzC,GAAIsX,EAIA,OAHAhR,KAAK+tG,OAAOwD,MACR,sFAEGvgG,CAEd,CAID,OAHAhR,KAAK+tG,OAAOwD,MACR,+EAEG,IACV,CAID,OAHAvxG,KAAK+tG,OAAOwD,MACR,wEAEGpiH,EAUX2wI,iBAAAA,CACIpqB,EACAvmH,EACA8jI,GAEA,MAAMv5H,EAAMu5H,EAAcjzH,KAAK8iI,iBAAiBptB,GAAYA,EAE5D11G,KAAKi/H,sBAAsBzN,QAAQ93H,EAAKvK,GACpC6Q,KAAK4+H,YAAYtrI,yBACjB0M,KAAK+tG,OAAOwD,MACR,kGAEJvxG,KAAK+jI,cAAcrqI,EAAKvK,IAQhC2oH,UAAAA,CAAWp+G,GACPsG,KAAK++H,eAAejnB,WAAWp+G,GAQnCsqI,mBAAAA,CAAoBtqI,GAChBsG,KAAKi/H,sBAAsBnnB,WAAWp+G,GAClCsG,KAAK4+H,YAAYtrI,yBACjB0M,KAAK+tG,OAAOwD,MACR,wFAEJvxG,KAAKikI,gBAAgBvqI,IAO7Bs9G,OAAAA,GACI,OAAOh3G,KAAK++H,eAAe/nB,UAM/B,WAAMt1D,SAEI1hD,KAAKy3G,oBACXz3G,KAAK84G,oBAGL94G,KAAKi/H,sBAAsBjoB,UAAUt8F,SAASg7F,KAEQ,IAA9CA,EAASvvG,QAAQ4iG,EAAAA,GAAUu2B,gBACU,IAArC5pB,EAASvvG,QAAQnG,KAAKjN,WAEtBiN,KAAKgkI,oBAAoBtuB,EAC5B,IAIL11G,KAAK++H,eAAe/nB,UAAUt8F,SAASg7F,KAEe,IAA9CA,EAASvvG,QAAQ4iG,EAAAA,GAAUu2B,gBACU,IAArC5pB,EAASvvG,QAAQnG,KAAKjN,WAEtBiN,KAAK++H,eAAejnB,WAAWpC,EAClC,IAGL11G,KAAK8+H,gBAAgBp9E,QASzB,kCAAMwiF,CACFjrB,EACA5E,GAEA4E,EAAkBgM,oBACdtG,GAAkB8E,6BAClBpP,GAGJ,MAAMpB,EAAYjzG,KAAKyzG,eAEjBuB,EAA4C,GAClD/B,EAAU3gH,YAAYooB,SAAShhB,IAE3B,MAAMm7G,EAAa70G,KAAKm1G,yBAAyBz7G,GAE7Cm7G,GAAYlR,qBACZjqG,EAAIoP,SAAS+rG,EAAWlR,oBAAoBr2G,gBAE5C0nH,EAAoBnoH,KAAKmT,KAAKq1G,kBAAkB37G,GACnD,UAECuO,QAAQC,IAAI8sG,GAGdA,EAAoB5nH,OAAS,GAC7B4S,KAAK+tG,OAAOE,QACR,GAAG+G,EAAoB5nH,wFAYnC22I,aAAAA,CACII,EACAC,EACAC,GAEA,IAAIC,EAAY,GAAG11H,mBAAmBu1H,MAAev1H,mBACjDw1H,0BAEJ,GAAIC,EAAS,CAETC,GAAa,WADMtkI,KAAKukI,wBAAwBF,KAEnD,CAEGrkI,KAAK4+H,YAAYzT,gBACjBmZ,GAAa,WAGjBlyI,SAASC,OAASiyI,EAQtBR,aAAAA,CAAcK,GACV,MAAMpyI,EAAO,GAAG6c,mBAAmBu1H,MAC7BK,EAAapyI,SAASC,OAAO0U,MAAM,KACzC,IAAK,IAAIna,EAAY,EAAGA,EAAI43I,EAAWp3I,OAAQR,IAAK,CAChD,IAAIyF,EAASmyI,EAAW53I,GACxB,KAA4B,MAArByF,EAAOsJ,OAAO,IACjBtJ,EAASA,EAAO2T,UAAU,GAE9B,GAA6B,IAAzB3T,EAAO8T,QAAQpU,GACf,OAAOy0D,mBACHn0D,EAAO2T,UAAUjU,EAAK3E,OAAQiF,EAAOjF,QAGhD,CACD,OAAO27G,EAAAA,GAAUC,aAOrBy7B,gBAAAA,GACI,MAAMC,EAAe,GAAG37B,EAAAA,GAAUu2B,gBAAgBt/H,KAAKjN,WACpCX,SAASC,OAAO0U,MAAM,KAC9B2T,SAASroB,IAChB,KAA4B,MAArBA,EAAOsJ,OAAO,IAEjBtJ,EAASA,EAAO2T,UAAU,GAE9B,GAAqC,IAAjC3T,EAAO8T,QAAQu+H,GAAqB,CACpC,MAAMC,EAAYtyI,EAAO0U,MAAM,KAAK,GACpC/G,KAAKikI,gBAAgBU,EACxB,KASTV,eAAAA,CAAgBE,GACZnkI,KAAK+jI,cAAcI,EAAYp7B,EAAAA,GAAUC,cAAe,GAQ5Du7B,uBAAAA,CAAwBK,GACpB,MAAMC,EAAQ,IAAI/sI,KAIlB,OAHa,IAAIA,KACb+sI,EAAMp0F,UAAYm0F,EAAiB5kI,KAAK6+H,wBAEhCiG,cAQhBhC,gBAAAA,CAAiBppI,GAEb,OADqBsG,KAAKogI,qBAAqB1mI,GAWxC9K,KAAKiB,UAAU6J,GARdquG,GAAYrjG,WAAWhL,EAAKqvG,EAAAA,GAAUu2B,eACtCv3B,GAAYrjG,WAAWhL,EAAK6lI,EAAAA,GAAoBwF,eAEzCrrI,EAEJ,GAAGqvG,EAAAA,GAAUu2B,gBAAgBt/H,KAAKjN,YAAY2G,IAU7DsrI,oBAAAA,CAAqBpH,GACjB,MACIJ,cAAgBroH,GAAI8vH,IACpB5H,GAAcQ,kBAAkB79H,KAAKiyG,WAAY2rB,GAErD,OAAO59H,KAAK8iI,iBACR,GAAGoC,GAAAA,GAAmBC,aAAaF,KAQ3CG,gBAAAA,CAAiBxH,GACb,MACIJ,cAAgBroH,GAAI8vH,IACpB5H,GAAcQ,kBAAkB79H,KAAKiyG,WAAY2rB,GAErD,OAAO59H,KAAK8iI,iBACR,GAAGoC,GAAAA,GAAmBG,iBAAiBJ,KAQ/CK,gBAAAA,CAAiB1H,GAEb,MACIJ,cAAgBroH,GAAI8vH,IACpB5H,GAAcQ,kBAAkB79H,KAAKiyG,WAAY2rB,GACrD,OAAO59H,KAAK8iI,iBACR,GAAGoC,GAAAA,GAAmBK,iBAAiBN,KAO/CO,kBAAAA,CAAmBC,GACf,MAAMC,EAAgB1lI,KAAKslI,iBAAiBG,GACtC3iH,EAAQ9iB,KAAK4jI,kBAAkB8B,GACrC,IAAK5iH,EACD,OAAO,KAGX,MAAM6iH,EAAoB3lI,KAAKglI,qBAAqBliH,GACpD,OAAO9iB,KAAK4jI,kBAAkB+B,GAQlCC,kBAAAA,CACI9iH,EACAwN,EACAu1G,EACAhyB,EACA3kE,GAEAlvC,KAAK+tG,OAAOwD,MAAM,iDAElB,MAAMm0B,EAAgB1lI,KAAKslI,iBAAiBxiH,GAC5C9iB,KAAK8/H,kBAAkB4F,EAAe5iH,GAAO,GAG7C,MAAMgjH,EAAgB9lI,KAAKolI,iBAAiBtiH,GAC5C9iB,KAAK8/H,kBAAkBgG,EAAex1G,GAAO,GAG7C,MAAMq1G,EAAoB3lI,KAAKglI,qBAAqBliH,GAGpD,GAFA9iB,KAAK8/H,kBAAkB6F,EAAmBE,GAAmB,GAEzD32F,EAAS,CACT,MAAM62F,EAA+B,CACjClxB,WAAY3lE,EAAQ0zD,cACpBrxG,KAAM2sI,IAEVl+H,KAAK8/H,kBACDoF,GAAAA,GAAmBc,eACnBp3I,KAAKiB,UAAUk2I,IACf,EAEP,MAAM,GAAIlyB,EAAW,CAClB,MAAMkyB,EAA+B,CACjClxB,WAAYhB,EACZtiH,KAAM2sI,IAEVl+H,KAAK8/H,kBACDoF,GAAAA,GAAmBc,eACnBp3I,KAAKiB,UAAUk2I,IACf,EAEP,EAOLE,iBAAAA,CAAkBnjH,GACd9iB,KAAK+tG,OAAOwD,MAAM,gDAEdzuF,IACA9iB,KAAKi/H,sBAAsBjoB,UAAUt8F,SAAShhB,KACd,IAAxBA,EAAIyM,QAAQ2c,IACZ9iB,KAAKgkI,oBAAoBtqI,EAC5B,IAILsG,KAAKgkI,oBAAoBhkI,KAAKslI,iBAAiBxiH,IAC/C9iB,KAAKgkI,oBAAoBhkI,KAAKolI,iBAAiBtiH,IAC/C9iB,KAAKgkI,oBAAoBhkI,KAAKglI,qBAAqBliH,KAEvD9iB,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBgB,iBAE7ClmI,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBiB,aAE7CnmI,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBkB,WAE7CpmI,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBmB,iBAE7CrmI,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBc,iBAE7ChmI,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBoB,iBAE7CtmI,KAAKumI,0BAAyB,GAOlCC,mBAAAA,CAAoB5I,GAGhB,GAFA59H,KAAK+tG,OAAOwD,MAAM,kDAEdqsB,EAAa,CACb,MAAM6I,EAAWzmI,KAAKslI,iBAAiB1H,GACjC6H,EAAczlI,KAAKi/H,sBAAsBvS,QAAQ+Z,GACvDzmI,KAAK+tG,OAAOszB,QACR,sFAAsFoE,KAE1FzlI,KAAKimI,kBAAkBR,GAAe18B,EAAAA,GAAUC,aACnD,CACDhpG,KAAKykI,mBAQTiC,6BAAAA,CAA8BC,GAC1B3mI,KAAK+tG,OAAOwD,MACR,4DAGJvxG,KAAKi/H,sBAAsBjoB,UAAUt8F,SAAShhB,IAE1C,IAAuD,IAAnDA,EAAIyM,QAAQ++H,GAAAA,GAAmBK,eAC/B,OAIJ,MAAM5yG,EAAa3yB,KAAKi/H,sBAAsBvS,QAAQhzH,GACtD,IAAKi5B,EACD,OAGJ,MAAMi0G,EAAcpI,GAChBx+H,KAAKiyG,WACLt/E,GAGAi0G,GACAA,EAAYD,kBAAoBA,IAEhC3mI,KAAK+tG,OAAOszB,QACR,gGAAgG1uG,KAEpG3yB,KAAKimI,kBAAkBtzG,GAC1B,IAEL3yB,KAAKykI,mBACLzkI,KAAKumI,0BAAyB,GAGlCM,gBAAAA,CAAiBC,GACb9mI,KAAK+tG,OAAOwD,MAAM,+CAElB,MAAMw1B,EAAelmC,GAAajyG,KAAKiB,UAAUi3I,IACjD9mI,KAAK8/H,kBACDoF,GAAAA,GAAmBgB,eACnBa,GACA,GAORC,gBAAAA,CAAiBlkH,GACb9iB,KAAK+tG,OAAOwD,MAAM,+CAElB,MAAM01B,EAAsBjnI,KAAK4jI,kBAC7BsB,GAAAA,GAAmBgB,gBACnB,GAEJ,IAAKe,EACD,MAAMne,GACF3B,IAIR,IAAI+f,EACJ,IACIA,EAAgBt4I,KAAKC,MAAM+xG,GAAaqmC,GAC3C,CAAC,MAAOx1I,GAKL,MAJAuO,KAAK+tG,OAAO6G,SAAS,uBAAuBqyB,KAC5CjnI,KAAK+tG,OAAOjiH,MACR,kDAAkD2F,KAEhDq3H,GACF1B,GAEP,CAMD,GALApnH,KAAKgkI,oBACDhkI,KAAK8iI,iBAAiBoC,GAAAA,GAAmBgB,kBAIxCgB,EAAcl0I,UAAW,CAC1B,MAAM2yI,EAA4B3lI,KAAKglI,qBAAqBliH,GACtDqkH,EAAkBnnI,KAAK4jI,kBAAkB+B,GAC/C,IAAKwB,EACD,MAAMre,GACFzB,IAGR6f,EAAcl0I,UAAYm0I,CAC7B,CAED,OAAOD,EAMXE,sBAAAA,GACIpnI,KAAK+tG,OAAOwD,MAAM,qDAClB,MAAM81B,EAAgBrnI,KAAK4jI,kBACvBsB,GAAAA,GAAmBoB,gBACnB,GAEJ,IAAKe,EAID,OAHArnI,KAAK+tG,OAAOwD,MACR,8EAEG,KAGX,MAAM21B,EAAgBlnI,KAAKogI,qBACvBiH,GAEJ,OAAKH,IACDlnI,KAAK+tG,OAAOjiH,MACR,8EAEG,MAMfw7I,uBAAAA,CAAwB/wB,GACpB,MAAMxjH,EAAWiN,KAAKunI,2BAEtB,OAAIhxB,EACOxjH,IAAaiN,KAAKjN,WAEhBA,EAIjBw0I,wBAAAA,GACI,MAAM7tI,EAAM,GAAGqvG,EAAAA,GAAUu2B,gBAAgB4F,GAAAA,GAAmBsC,yBAC5D,OAAOxnI,KAAK4jI,kBAAkBlqI,GAAK,GAGvC6sI,wBAAAA,CAAyBkB,GAErB,MAAM/tI,EAAM,GAAGqvG,EAAAA,GAAUu2B,gBAAgB4F,GAAAA,GAAmBsC,yBAC5D,GAAIC,EAAY,CACZ,GAAIznI,KAAKunI,2BACL,MAAMze,GACFxC,IAIJtmH,KAAK8/H,kBAAkBpmI,EAAKsG,KAAKjN,UAAU,EAElD,MACI00I,GACDznI,KAAKunI,6BAA+BvnI,KAAKjN,UAEzCiN,KAAKgkI,oBAAoBtqI,GAQjCguI,kBAAAA,GAEI,MAAMC,EAAoB3nI,KAAK4jI,kBAC3BrE,EAAAA,GAAoBwF,eAEpB4C,IACA3nI,KAAK++H,eAAejnB,WAAWynB,EAAAA,GAAoBwF,eACnD/kI,KAAK+tG,OAAOsK,QAAQ,oCAIxB,MAAMuvB,EAAoB5nI,KAAK4jI,kBAC3BrE,EAAAA,GAAoBr8B,UACpB,GAEA0kC,IACA5nI,KAAK++H,eAAejnB,WAChB93G,KAAK8iI,iBAAiBvD,EAAAA,GAAoBr8B,WAE9CljG,KAAK+tG,OAAOsK,QAAQ,yCAGxB,MAAMwvB,EAAsBD,GAAqBD,EACjD,GAAIE,EAAqB,CACrB,MAAMx8I,EAAgBy8I,GAClBD,EACAjnC,IAEJ,GAAIv1G,EAAcglC,mBAId,OAHArwB,KAAK+tG,OAAOsK,QACR,6GAEGhtH,EAAcglC,mBAClB,GAAIhlC,EAAcolC,IAIrB,OAHAzwB,KAAK+tG,OAAOsK,QACR,8FAEGhtH,EAAcolC,IAErBzwB,KAAK+tG,OAAOsK,QACR,yJAGX,CAED,OAAO,KAMXuE,wBAAAA,CACImrB,EACAlzB,GAEA,MAAMmzB,EAAkB3H,GAAmCxrB,GAE3D,GAAIkzB,IAAoBC,EAAiB,CACrC,MAAMC,EAAYjoI,KAAK0sH,QAAQqb,GAC/B,GAAIE,EAMA,OALAjoI,KAAK++H,eAAejnB,WAAWiwB,GAC/B/nI,KAAKwxH,QAAQwW,EAAiBC,GAC9BjoI,KAAK+tG,OAAOsK,QACR,uBAAuBxD,EAAW7R,4BAE/BglC,EAEPhoI,KAAK+tG,OAAOjiH,MACR,mCAAmC+oH,EAAW7R,sFAGzD,CAED,OAAO+kC,EAQX,kBAAMG,CACF/kI,EACAtR,GAMA,MAAM0uI,EAAgBF,GAClBl9H,EAAO+rC,SAAS0zD,cAChBz/F,EAAO+rC,SAAS2zD,YAChB1/F,EAAO2/F,QACP9iG,KAAKjN,SACLoQ,EAAO4/F,UAGX,IAAIolC,EACAt2I,EAAQg+B,SACRs4G,QAAmBnoI,KAAKiyG,WAAW7Q,WAAWvvG,EAAQg+B,SAW1D,MAkBMskF,EAAc,CAChBrR,QAASy9B,EACTjuI,YApBsB+tI,GACtBl9H,EAAO+rC,SAAS0zD,cAChBz/F,EAAO+rC,QAAQ2zD,YACf1/F,EAAO7Q,YACP0N,KAAKjN,SACLoQ,EAAO4/F,SACP5/F,EAAOrR,OAAO8J,KAAK,KACnBuH,EAAO6+F,UAAY7+F,EAAO6+F,UAAUvxD,UAAY,IAAO,EACvDttC,EAAOkgG,aAAelgG,EAAOkgG,aAAa5yD,UAAY,IAAO,EAC7DmwD,QACAvzG,EACA8V,EAAOogG,eACPl2G,EACAwE,EAAQsoH,OACRtoH,EAAQg+B,OACRs4G,IAOJ,OAAOnoI,KAAKk0G,gBAAgBC,GAShC,qBAAMD,CACFC,EACAC,EACAC,GAEA,UACUv0G,MAAMo0G,gBACRC,EACAC,EACAC,EAEP,CAAC,MAAO5iH,GACL,GACIA,aAAaqgH,IACb9xG,KAAKi5G,mBACL5E,EAEA,IACI,MAAMpB,EAAYjzG,KAAKyzG,eAEvBzzG,KAAKi5G,kBAAkBQ,UACnB,CACI2uB,aAAcn1B,EAAU1gH,aAAanF,OACrCi7I,aAAcp1B,EAAUnQ,QAAQ11G,OAChCk7I,aAAcr1B,EAAU3gH,YAAYlF,QAExCinH,EAEP,CAAC,MAAO5iH,GAAI,CAGjB,MAAMA,CACT,YC50DO82I,KACZ,OAAO/5G,OAAOg6G,SAAWh6G,MAC7B,UAoBgBi6G,KACZ,OAAOj6G,OAAOk0B,SAASjtD,KAAKsR,MAAM,KAAK,GAAGA,MAAM,KAAK,EACzD,UAwCgB2hI,KAEZ,GAzDsB,qBAAXl6G,QACLA,OAAOm6G,QACTn6G,OAAOm6G,SAAWn6G,QACK,kBAAhBA,OAAOz8B,MACoD,IAAlEy8B,OAAOz8B,KAAKoU,QAAQ,GAAGimH,GAAAA,GAAiBwc,sBAsDxC,MAAM9f,GAAuBhC,GAErC,CAkBM,SAAU+hB,GAA8BC,GAC1C,IAAKA,EACD,MAAMhgB,GACFP,GAGZ,CAMM,SAAUwgB,GAAeD,eAvB3B,GAAsB,qBAAXt6G,OACP,MAAMs6F,GACFtB,GAGZ,CAoBIwhB,cAzDA,GAJuBh6B,GAAU+B,4BAC7BviF,OAAOk0B,SAASwD,OAGEqiF,KAClB,MAAMzf,GAAuBjC,GAErC,CAyDIoiB,GAGAP,KAGAG,GAA8BC,EAClC,CAOgB,SAAAI,GACZJ,EACA14I,GAKA,GAHA24I,GAAeD,GApEb,SAAgC9c,GAClC,GAAIuc,OAAiBvc,EAEjB,MAAMlD,GAAuBlC,GAErC,CAgEIuiB,CAAsB/4I,EAAOmD,OAAOy4H,uBAGhC57H,EAAOgD,MAAMC,gBAAkB23H,GAAAA,GAAqBiH,gBACnD7hI,EAAOgD,MAAME,uBAEd,MAAMgrI,EAAAA,GAAAA,IACF8K,GAAAA,GAGZ,CAOM,SAAUC,GAAWr2I,GACvB,MAAM0C,EAAOtD,SAASynC,cAAc,QACpCnkC,EAAK2hE,IAAM,aACX3hE,EAAKD,KAAO,IAAIoR,IAAI7T,GAAW82D,OAC/Bp0D,EAAK4zI,YAAc,YACnBl3I,SAASm3I,KAAK5qE,YAAYjpE,GAG1B84B,OAAOxf,YAAW,KACd,IACI5c,SAASm3I,KAAK7qE,YAAYhpE,EAC7B,CAAC,MAAO,IACV,IACP,qBCjLa8zI,GAOTxsI,WAAAA,CAAY+wG,EAAgB0wB,GACxBz+H,KAAKypI,eAAiB,IAAIlqG,IAC1Bv/B,KAAK+tG,OAASA,EACd/tG,KAAKy+H,cAAgBA,EACrBz+H,KAAK0pI,0BAA2B,EAChC1pI,KAAK2pI,yBACD3pI,KAAK2pI,yBAAyBp9I,KAAKyT,MAO3C4uC,gBAAAA,CAAiBhW,GACb,GAAsB,qBAAXpK,OAAwB,CAC/B,MAAMo7G,EAAajpC,KAMnB,OALA3gG,KAAKypI,eAAe9rI,IAAIisI,EAAYhxG,GACpC54B,KAAK+tG,OAAOsK,QACR,sCAAsCuxB,KAGnCA,CACV,CAED,OAAO,KAOXC,mBAAAA,CAAoBD,GAChB5pI,KAAKypI,eAAep+H,OAAOu+H,GAC3B5pI,KAAK+tG,OAAOsK,QAAQ,kBAAkBuxB,cAM1CE,0BAAAA,GAC0B,qBAAXt7G,SAINxuB,KAAK0pI,yBAKN1pI,KAAK+tG,OAAOsK,QAAQ,iDAJpBr4G,KAAK+tG,OAAOsK,QAAQ,oCACpBr4G,KAAK0pI,0BAA2B,EAChCl7G,OAAOzf,iBAAiB,UAAW/O,KAAK2pI,4BAShDI,2BAAAA,GAC0B,qBAAXv7G,SAIPxuB,KAAK0pI,0BACL1pI,KAAK+tG,OAAOsK,QAAQ,sCACpB7pF,OAAO0L,oBACH,UACAl6B,KAAK2pI,0BAET3pI,KAAK0pI,0BAA2B,GAEhC1pI,KAAK+tG,OAAOsK,QAAQ,4CAW5B2xB,SAAAA,CACIl7F,EACA63F,EACA13F,EACAnjD,GAEA,GAAsB,qBAAX0iC,OAAwB,CAC/B,MAAMpgC,EAAwB,CAC1B0gD,UAAWA,EACX63F,gBAAiBA,GAAmB,KACpC13F,QAASA,GAAW,KACpBnjD,MAAOA,GAAS,KAChBm+I,UAAWnyI,KAAK8X,OAGpB5P,KAAK+tG,OAAOj6G,KAAK,mBAAmBg7C,KAEpC9uC,KAAKypI,eAAe/uH,SAChB,CAACke,EAAiCgxG,KAC9B5pI,KAAK+tG,OAAOsK,QACR,8BAA8BuxB,MAAe96F,KAEjDlW,EAAS9+B,MAAM,KAAM,CAAC1L,GAAS,GAG1C,EAMGu7I,wBAAAA,CAAyBl4I,GAC7B,IAEQA,EAAEiI,KAAKoP,SAASy2H,EAAAA,GAAoBwD,yBAEpC/iI,KAAKgqI,UAAUj7F,GAAAA,EAAUm7F,wBAI7B,MAAMC,EAAa14I,EAAE24I,UAAY34I,EAAE44I,SACnC,IAAKF,EACD,OAEJ,MAAMG,EAAc17I,KAAKC,MAAMs7I,GAC/B,GAC2B,kBAAhBG,IACNn+B,GAAc+B,gBAAgBo8B,GAE/B,OAEJ,MAIM38B,EAJgBqE,GAAa2G,SAC/B,IAAIxM,GACJm+B,GAE8Bh+B,kBAC7B76G,EAAE44I,UAAY54I,EAAE24I,UACjBpqI,KAAK+tG,OAAOj6G,KACR,oDAEJkM,KAAKgqI,UAAUj7F,GAAAA,EAAUw7F,mBAAel9I,EAAWsgH,KAC3Cl8G,EAAE24I,UAAY34I,EAAE44I,WACxBrqI,KAAK+tG,OAAOj6G,KACR,wDAEJkM,KAAKgqI,UACDj7F,GAAAA,EAAUy7F,qBACVn9I,EACAsgH,GAGX,CAAC,MAAOl8G,GACL,MACH,GC5KH,MAAOg5I,WAAoBnqC,EAAAA,GAW7BtjG,WAAAA,CACIujG,EACAwR,EACA24B,EACAC,EACA9qI,GAEAC,MAAMygG,EAAWwR,EAAc24B,GAC/B1qI,KAAKjO,KAAO,cACZiO,KAAK2qI,QAAUA,EACf3qI,KAAKH,OAASA,EAEdtH,OAAOi9B,eAAex1B,KAAMyqI,GAAYjyI,kBCdnCoyI,GAKT,mCAAOC,CAA6BC,GAChC,MAAO,GAAGrH,EAAAA,GAAoBC,qBAAqB90I,KAAKiB,UACpDi7I,KASR,iBAAOC,CACHhU,EACA+T,GAEA,MAAMpxI,EAAMkxI,GAAgBC,6BAA6BC,GACnD37I,EAAQ4nI,EAAapa,mBAAmBjjH,GAE9C,GAAIvK,EAAO,CACP,GAAIA,EAAM67I,aAAelzI,KAAK8X,MAE1B,YADAmnH,EAAajf,WAAWp+G,GAG5B,MAAM,IAAI+wI,GACNt7I,EAAM87I,YAAYrvI,KAAK,MAAQmtG,EAAAA,GAAUC,aACzC75G,EAAM4iH,aACN5iH,EAAMu7I,SAEb,EASL,kBAAOQ,CACHnU,EACA+T,EACAp8I,GAEA,GACIk8I,GAAgBO,oBAAoBz8I,IACpCk8I,GAAgBQ,2BAA2B18I,GAC7C,CACE,MAAM28I,EAAoC,CACtCL,aAAcJ,GAAgBU,sBAC1BjwI,SAAS3M,EAASD,QAAQ88I,EAAAA,GAAYC,eAE1C1/I,MAAO4C,EAASM,KAAKlD,MACrBm/I,WAAYv8I,EAASM,KAAKy8I,YAC1B15B,aAAcrjH,EAASM,KAAK+/G,kBAC5B27B,SAAUh8I,EAASM,KAAK08I,UAE5B3U,EAAara,mBACTkuB,GAAgBC,6BAA6BC,GAC7CO,EAEP,EAOL,0BAAOF,CACHz8I,GAEA,OACwB,MAApBA,EAASmR,QACRnR,EAASmR,QAAU,KAAOnR,EAASmR,OAAS,IAQrD,iCAAOurI,CACH18I,GAEA,QAAIA,EAASD,UAELC,EAASD,QAAQgK,eAAe8yI,EAAAA,GAAYC,eAC3C98I,EAASmR,OAAS,KAAOnR,EAASmR,QAAU,MAUzD,4BAAOyrI,CAAsBN,GACzB,MAAMl5D,EAAOk5D,GAAgB,EAAI,EAAIA,EAE/BW,EAAiB7zI,KAAK8X,MAAQ,IACpC,OAAOI,KAAKg1C,MAMJ,IALJh1C,KAAKC,IACD07H,GACK75D,GAAQ2xD,EAAAA,GAAoBmI,+BACjCD,EACIlI,EAAAA,GAAoBoI,oCAKpC,qBAAOC,CACH/U,EACAhkI,EACAlB,EACAk6I,GAEA,MAAMjB,EAAgC,CAClC/3I,SAAUA,EACVC,UAAWnB,EAAQmB,UACnBlB,OAAQD,EAAQC,OAChBi6I,sBAAuBA,EACvBl8G,OAAQh+B,EAAQg+B,OAChBqqF,qBAAsBroH,EAAQqoH,qBAC9B+Z,sBAAuBpiI,EAAQoiI,sBAC/BE,mBAAoBtiI,EAAQsiI,mBAC5B6X,UAAWn6I,EAAQm6I,UACnB7xB,OAAQtoH,EAAQsoH,QAGdzgH,EAAMsG,KAAK6qI,6BAA6BC,GAC9C/T,EAAajf,WAAWp+G,UCtHnBuyI,GAITjvI,WAAAA,CAAYwuH,EAA+BuL,GACvC/2H,KAAKwrH,cAAgBA,EACrBxrH,KAAK+2H,aAAeA,EASxB,qBAAMmV,CACFpB,EACA7S,EACAzqI,GAIA,IAAIkB,EAFJk8I,GAAgBG,WAAW/qI,KAAK+2H,aAAc+T,GAG9C,IACIp8I,QAAiBsR,KAAKwrH,cAAchO,qBAChCya,EACAzqI,EAEP,CAAC,MAAOiE,GACL,MAAIA,aAAa6uG,EAAAA,GACP7uG,EAEAgvG,GAAsB5C,EAEnC,CAID,OAFA+sC,GAAgBM,YAAYlrI,KAAK+2H,aAAc+T,EAAYp8I,GAEpDA,GCpER,MAAMy9I,GAAY,YAEZC,GAAgB,gBAqChBC,GAAa,aACbC,GAAU,UAMVC,GAAkB,kBAMlBC,GAAqB,0BC3CrBC,GAKT,0BAAOC,CAAoBz5I,GACvB,IAAKA,EACD,MAAM60G,GACFxB,IASZ,qBAAOqmC,CAAe/gJ,GAClB,MAAMghJ,EAAe,GAErB,IAAK,MAAMz9I,KAAS09I,EAAAA,GAChBD,EAAa//I,KAAKggJ,EAAAA,GAAY19I,IAGlC,GAAIy9I,EAAazmI,QAAQva,GAAU,EAC/B,MAAMk8G,GACFlB,IAKZ,qBAAOkmC,CAAej9G,GAClB,IACIjhC,KAAKC,MAAMghC,EACd,CAAC,MAAOp+B,GACL,MAAMq2G,GACFjB,GAEP,EAQL,kCAAOkmC,CACHC,EACAC,GAEA,IAAKD,IAAkBC,EACnB,MAAMnlC,GACFb,IAGJjnG,KAAKktI,4BAA4BD,GAQzC,kCAAOC,CAA4BD,GAC/B,GACI,CACIE,EAAAA,GAA0BC,MAC1BD,EAAAA,GAA0BE,MAC5BlnI,QAAQ8mI,GAAuB,EAEjC,MAAMnlC,GACFd,WCrDHsmC,GAGTtwI,WAAAA,GACIgD,KAAKwe,WAAa,IAAI+gB,IAM1BguG,mBAAAA,GACIvtI,KAAKwe,WAAW7gB,IACZyuI,GACAx9H,mBAAmBm6F,EAAAA,GAAUykC,qBAOrCC,iCAAAA,GACIztI,KAAKwe,WAAW7gB,IACZyuI,GACAx9H,mBACI,GAAGm6F,EAAAA,GAAU2kC,uBAAuB3kC,EAAAA,GAAU4kC,2BAS1DC,eAAAA,CAAgBC,GACZ7tI,KAAKwe,WAAW7gB,IF1DK,gBE4DjBiR,mBAAmBi/H,GAA8BC,EAAAA,EAAaC,QAOtEC,eAAAA,GACIhuI,KAAKwe,WAAW7gB,IFxBK,eE0BjBiR,mBAAmB,MAS3Bq/H,SAAAA,CACIn8I,GAEkD,IADlDo8I,IAAA/gJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACAu9H,EAAAv9H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA+BghJ,EAAAA,IAI3BD,GACCxjB,EAAc5hH,SAAS,WACvBhX,EAAOgX,SAAS,WAEjB4hH,EAAc79H,KAAK,UAEvB,MAAMuhJ,EAAgBF,EAChB,IAAKp8I,GAAU,MAAQ44H,GACvB54H,GAAU,GACVo3G,EAAW,IAAIX,GAAS6lC,GAC9BpuI,KAAKwe,WAAW7gB,IF7FH,QE+FTiR,mBAAmBs6F,EAASyB,gBAQpC0jC,WAAAA,CAAYt7I,GACRiN,KAAKwe,WAAW7gB,IACZwuI,GACAv9H,mBAAmB7b,IAQ3Bu7I,cAAAA,CAAer7I,GACXw5I,GAAiBC,oBAAoBz5I,GACrC+M,KAAKwe,WAAW7gB,IFzHI,eE2HhBiR,mBAAmB3b,IAQ3Bs7I,wBAAAA,CAAyBt7I,GACrBw5I,GAAiBC,oBAAoBz5I,GACrC+M,KAAKwe,WAAW7gB,IFrGO,2BEuGnBiR,mBAAmB3b,IAQ3Bu7I,cAAAA,CAAeC,GACXzuI,KAAKwe,WAAW7gB,IF/GK,gBEiHjBiR,mBAAmB6/H,IAQ3BC,aAAAA,CAAcC,GACV3uI,KAAKwe,WAAW7gB,IFzGG,cE2GfiR,mBAAmB+/H,IAQ3BC,YAAAA,CAAa/6B,GACT7zG,KAAKwe,WAAW7gB,IFrHE,aEuHdiR,mBAAmBilG,IAQ3Bg7B,SAAAA,CAAUh7B,GACN7zG,KAAKwe,WAAW7gB,IACZ4tI,EAAAA,GAAYuD,WACZlgI,mBAAmB,OAAOilG,MAQlCk7B,SAAAA,CAAUhiC,GACN/sG,KAAKwe,WAAW7gB,IACZ4tI,EAAAA,GAAYuD,WACZlgI,mBAAmB,OAAOm+F,EAAW7B,OAAO6B,EAAW5B,SAQ/D6jC,MAAAA,CAAOp+G,GACH5wB,KAAKwe,WAAW7gB,IFvJL,MEuJiCiR,mBAAmBgiB,IAOnEq+G,SAAAA,CAAUp/G,EAAiBw6F,GACvB,MAAM6kB,EAAelvI,KAAKmvI,8BACtBt/G,EACAw6F,GAEJoiB,GAAiBK,eAAeoC,GAChClvI,KAAKwe,WAAW7gB,IFhNF,SEkNViR,mBAAmBsgI,IAQ3BE,gBAAAA,CAAiB/6B,GACbr0G,KAAKwe,WAAW7gB,IFzMS,oBE2MrBiR,mBAAmBylG,IAQ3Bg7B,cAAAA,CAAeC,GAEXtvI,KAAKwe,WAAW7gB,IFpNI,eEoNiC2xI,EAAY5xB,KACjE19G,KAAKwe,WAAW7gB,IFpNI,eEsNhB2xI,EAAYv9H,SAEZu9H,EAAY19H,IACZ5R,KAAKwe,WAAW7gB,IFxND,cEwNqC2xI,EAAY19H,IAEhE09H,EAAY1xB,KACZ59G,KAAKwe,WAAW7gB,IF1NA,eE4NZ2xI,EAAY1xB,KASxB2xB,uBAAAA,CAAwBC,GAChBA,GAAclxB,SACdt+G,KAAKwe,WAAW7gB,IFnOF,aEqOV6xI,EAAalxB,SAIjBkxB,GAAcjxB,YACdv+G,KAAKwe,WAAW7gB,IFzOH,YE2OT6xI,EAAajxB,YASzBkxB,SAAAA,CAAU7jJ,GACN6gJ,GAAiBE,eAAe/gJ,GAChCoU,KAAKwe,WAAW7gB,IACZ,SACAiR,mBAAmBhjB,IAQ3B8jJ,QAAAA,CAAS5sH,GACDA,GACA9iB,KAAKwe,WAAW7gB,IFpRP,QEsRLiR,mBAAmBkU,IAS/B6sH,QAAAA,CAASr/G,GACLtwB,KAAKwe,WAAW7gB,IF/RH,QEiSTiR,mBAAmB0hB,IAU3Bs/G,sBAAAA,CACI5C,EACAC,GAMA,GAJAR,GAAiBM,4BACbC,EACAC,IAEAD,IAAiBC,EAUjB,MAAMnlC,GACFb,IAVJjnG,KAAKwe,WAAW7gB,IF/SE,iBEiTdiR,mBAAmBo+H,IAEvBhtI,KAAKwe,WAAW7gB,IFlTS,wBEoTrBiR,mBAAmBq+H,IAa/B4C,oBAAAA,CAAqB3vI,GACjBF,KAAKwe,WAAW7gB,IFpUJ,OEoUiCiR,mBAAmB1O,IAOpE4vI,aAAAA,CAAc5vI,GACVF,KAAKwe,WAAW7gB,IF5TG,cE8TfiR,mBAAmB1O,IAQ3B6vI,eAAAA,CAAgBx9I,GACZyN,KAAKwe,WAAW7gB,IF/VK,gBEiWjBiR,mBAAmBrc,IAQ3By9I,eAAAA,CAAgBC,GACZjwI,KAAKwe,WAAW7gB,IF/VK,gBEiWjBiR,mBAAmBqhI,IAQ3BC,eAAAA,CAAgBpyB,GACZ99G,KAAKwe,WAAW7gB,IF5VK,gBE8VjBiR,mBAAmBkvG,IAQ3BqyB,kBAAAA,CAAmBpyB,GACXA,GACA/9G,KAAKwe,WAAW7gB,IFvWI,mBEyWhBiR,mBAAmBmvG,IAS/BqyB,sBAAAA,CAAuBC,GACfA,GACArwI,KAAKwe,WAAW7gB,IFnXS,wBEqXrBiR,mBAAmByhI,IAS/BC,eAAAA,CAAgBC,GACZvwI,KAAKwe,WAAW7gB,IF5XK,YE8XjBiR,mBAAmB2hI,IAQ3BC,kBAAAA,CAAmBC,GACfzwI,KAAKwe,WAAW7gB,IFtYW,sBEwYvBiR,mBAAmB6hI,IAQ3BC,YAAAA,CAAaC,GACT3wI,KAAKwe,WAAW7gB,IFvbE,aEybdiR,mBAAmB+hI,IAQ3BC,aAAAA,GACI5wI,KAAKwe,WAAW7gB,IAAI8hI,EAAAA,GAAa,KAOrCoR,uBAAAA,CAAwBC,GACpBv4I,OAAO4P,QAAQ2oI,GAAUp2H,SAAQxuB,IAAiB,IAAfwN,EAAKvK,GAAMjD,GACrC8T,KAAKwe,WAAWplB,IAAIM,IAAQvK,GAC7B6Q,KAAKwe,WAAW7gB,IAAIjE,EAAKvK,EAC5B,IAITggJ,6BAAAA,CACIt/G,EACAw6F,GAEA,IAAI6kB,EAGJ,GAAKr/G,EAGD,IACIq/G,EAAetgJ,KAAKC,MAAMghC,EAC7B,CAAC,MAAOp+B,GACL,MAAMq2G,GACFjB,GAEP,MARDqoC,EAAe,CAAC,EAyBpB,OAdI7kB,GAAsBA,EAAmBj9H,OAAS,IAC7C8hJ,EAAaz2I,eAAes4I,EAAAA,GAAkBltC,gBAE/CqrC,EAAa6B,EAAAA,GAAkBltC,cAAgB,CAAC,GAIpDqrC,EAAa6B,EAAAA,GAAkBltC,cAC3BktC,EAAAA,GAAkBC,QAClB,CACA5zI,OAAQitH,IAITz7H,KAAKiB,UAAUq/I,GAO1B+B,WAAAA,CAAY/+I,GACR8N,KAAKwe,WAAW7gB,IACZuzI,EAAAA,GAAuBh/I,SACvB0c,mBAAmB1c,IAQ3Bi/I,WAAAA,CAAYn/I,GACRgO,KAAKwe,WAAW7gB,IACZuzI,EAAAA,GAAuBl/I,SACvB4c,mBAAmB5c,IAQ3Bo/I,WAAAA,CAAYC,GACJA,IACArxI,KAAKwe,WAAW7gB,IACZ0uI,GACAroC,EAAAA,GAAqBG,KAEzBnkG,KAAKwe,WAAW7gB,IACZ2uI,GACA19H,mBAAmByiI,KAQ/BC,SAAAA,CAAUC,GACFA,IACAvxI,KAAKwe,WAAW7gB,IACZ0uI,GACAroC,EAAAA,GAAqBM,KAEzBtkG,KAAKwe,WAAW7gB,IACZ2uI,GACA19H,mBAAmB2iI,KAS/BC,kBAAAA,CAAmBC,GACfzxI,KAAKwe,WAAW7gB,IFzhBW,6BE2hBvB8zI,EAAuBC,qCAE3B1xI,KAAKwe,WAAW7gB,IF5hBW,0BE8hBvB8zI,EAAuBE,kCAO/BC,aAAAA,GACI5xI,KAAKwe,WAAW7gB,IFriBW,sBEuiBvB8lI,EAAAA,GAAoBoO,2BAO5BC,aAAAA,CAAcC,GACV/xI,KAAKwe,WAAW7gB,IF7hBG,cE+hBfiR,mBAAmBmjI,IAO3BC,iBAAAA,GACI,MAAMC,EAAqC,IAAIv5I,MAM/C,OAJAsH,KAAKwe,WAAW9D,SAAQ,CAACvrB,EAAOuK,KAC5Bu4I,EAAoBplJ,KAAK,GAAG6M,KAAOvK,IAAQ,IAGxC8iJ,EAAoBr2I,KAAK,MCrkBjC1N,eAAegkJ,GAClB3a,EACA/L,EACAuL,EACAC,EACAjpB,EACAsG,EACA4E,GAEAA,GAAmBgM,oBACftG,GAAkByD,yCAClB/N,GAEJ,MAAM89B,EAAoBrb,GAAUiG,uBAChCI,GAAmB5F,IAIjB6a,EAAmC,IAAItb,GACzCqb,EACA3mB,EACAuL,EACAC,EACAjpB,EACAsG,EACA4E,GAGJ,IAUI,aATMoc,GACF+c,EAAsBnZ,sBAAsB1sI,KACxC6lJ,GAEJzzB,GAAkB0D,+BAClBtU,EACAkL,EACA5E,EAPEghB,GASC+c,CACV,CAAC,MAAO3gJ,GACL,MAAMgvG,GACF7C,EAEP,CACL,OCxCsBy0C,GA4BlBr1I,WAAAA,CACIs1I,EACAr5B,GAGAj5G,KAAK5P,O1C0JP,SAAkClE,GAclB,IAblBuyH,YAAa8zB,EACbC,cAAeC,EACfj/I,cAAek/I,EACfC,aAAcC,EACdC,iBAAkBC,EAClBvd,iBAAkBwd,EAClBC,gBAAiBC,EACjBC,kBAAmBA,EACnB5D,YAAaA,EACbrlB,UAAWA,EACXwnB,uBAAwBA,EACxB0B,kBAAmBA,EACnBC,kBAAmBA,GACDlnJ,EAClB,MAAMsH,EAAgB,IACfypH,MACAy1B,GAGP,MAAO,CACHj0B,aA2BkBA,EA3BY8zB,EA4B3B,CACHloB,mBAAoB,GACpBQ,kBAAmB7M,GACnB8M,4BAA4B,KACzBrM,IA/BH+zB,cAAe,IAAK31B,MAA2B41B,GAC/Cj/I,cAAeA,EACfm/I,aAAc,IAAKv1B,MAA0Bw1B,GAC7CC,iBACIC,GACA,IAAIx2B,GACAi2B,EAAgBx/I,SAChB2tG,GACA,IAAI4rB,EAAAA,EAAO94H,IAEnB+hI,iBACIwd,GAAyBz1B,GAC7B01B,gBAAiBC,GAAwBvyC,GACzCwyC,kBAAmBA,GAAqBr1B,GACxCyxB,YAAa,IAAK7xB,MAAyB6xB,GAC3CrlB,UAAW,IAAK7L,MAA8B6L,GAC9CwnB,uBAAwBA,GAA0B,KAClD0B,kBAAmBA,GAAqB,KACxCC,kBAAmBA,GAAqB,MAQhD,IAA0B30B,CAN1B,C0CpMsB40B,CAAyBf,GAGvCtyI,KAAK+tG,OAAS,IAAIue,EAAAA,EAAOtsH,KAAK5P,OAAOoD,cAAezB,GAAMggB,IAG1D/R,KAAKszI,YAActzI,KAAK5P,OAAO4iJ,gBAG/BhzI,KAAK+2H,aAAe/2H,KAAK5P,OAAOyiJ,iBAGhC7yI,KAAKwrH,cAAgBxrH,KAAK5P,OAAOmlI,iBAGjCv1H,KAAKuzI,eAAiB,IAAItH,GACtBjsI,KAAKwrH,cACLxrH,KAAK+2H,cAIT/2H,KAAKyxI,uBAAyBzxI,KAAK5P,OAAOqhJ,uBAG1CzxI,KAAKhN,UAAYgN,KAAK5P,OAAOquH,YAAYzrH,UAGzCgN,KAAKi5G,kBAAoBA,EAMnBu6B,yBAAAA,CACNC,GAEA,MAAMhlJ,EAAkC,CAAC,EAEzC,GADAA,EAAQ88I,EAAAA,GAAYmI,cAAgB3qC,EAAAA,GAAU4qC,uBACzC3zI,KAAK5P,OAAOoiJ,cAAcx1B,sBAAwBy2B,EACnD,OAAQA,EAAQliJ,MACZ,KAAK2sI,GACD,IACI,MAAMnxB,EAAahC,GACf0oC,EAAQ5+B,YAEZpmH,EACI88I,EAAAA,GAAYuD,YACZ,OAAO/hC,EAAW7B,OAAO6B,EAAW5B,MAC3C,CAAC,MAAO15G,GACLuO,KAAK+tG,OAAOsK,QACR,mDACI5mH,EAEX,CACD,MACJ,KAAKysI,GACDzvI,EACI88I,EAAAA,GAAYuD,YACZ,QAAQ2E,EAAQ5+B,aAIhC,OAAOpmH,EAUD,gCAAMmlJ,CACZ3b,EACAroB,EACAnhH,EACAq8I,EACAz2B,EACAw/B,GAEIA,GACA7zI,KAAKi5G,mBAAmBgM,oBACpB4uB,EACAx/B,GAIR,MAAM3lH,QACIsR,KAAKuzI,eAAerH,gBACtBpB,EACA7S,EACA,CAAEjpI,KAAM4gH,EAAanhH,QAASA,IAoBtC,OAlBAuR,KAAKi5G,mBAAmBQ,UACpB,CACIq6B,iBAAkBplJ,EAASM,KAAK+kJ,eAAe3mJ,QAAU,EACzD4mJ,aACItlJ,EAASD,UAAU88I,EAAAA,GAAY0I,oBAAsB,IAE7D5/B,GAIAr0G,KAAK5P,OAAOqhJ,wBACZ/iJ,EAASmR,OAAS,KACE,MAApBnR,EAASmR,QAGTG,KAAK5P,OAAOqhJ,uBAAuByC,sBAGhCxlJ,EAOX,qBAAMylJ,CACFC,EACA//B,GAEAr0G,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBgD,6BAClBtN,GAEJ,MAAMggC,EAA4B,WAAWD,KAAyBp0I,KAAKhN,UAAUkrH,UAC/Eo2B,QAA+BpC,GACjCmC,EACAr0I,KAAKwrH,cACLxrH,KAAK+2H,aACL/2H,KAAKhN,UAAUxF,QACfwS,KAAK+tG,OACLsG,EACAr0G,KAAKi5G,mBAETj5G,KAAKhN,UAAYshJ,EAOrBC,0BAAAA,CAA2B1iJ,GACvB,MAAM2iJ,EAAmB,IAAIlH,GAQ7B,OANIz7I,EAAQ4iJ,sBACRD,EAAiB3D,wBACbh/I,EAAQ4iJ,sBAITD,EAAiBxC,qBC5LhC,MAAM0C,GACE,WAMKC,GAIT33I,WAAAA,CAAYs2I,EAAsBr6B,GAC9Bj5G,KAAKszI,YAAcA,EACnBtzI,KAAKi5G,kBAAoBA,EAS7B,iBAAM27B,CACF/iJ,EACAk8G,GAEA/tG,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBqD,oBAClBnwH,EAAQwiH,eAGZ,MAAMwgC,QAAexf,GACjBr1H,KAAK80I,YAAYvoJ,KAAKyT,MACtB2+G,GAAkBqD,oBAClBjU,EACA/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALSghB,CAMnBxjI,GACIkjJ,EAAuB/0I,KAAKszI,YAAYxyC,gBAC1ClyG,KAAKiB,UAAUglJ,IAGnB,MAAO,CACHxwC,IAAKwwC,EAAOxwC,IACZ0wC,gBASR,iBAAMD,CAAYjjJ,GACdmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBsD,oBAClBpwH,EAAQwiH,eAOZ,MAAO,CACHhQ,UALwBrkG,KAAKszI,YAAYtyC,uBACzCnvG,GAKAmjJ,QAASN,IAUjB,kBAAMO,CACF3iJ,EACAmxG,EACA5xG,GAEA,OAAOmO,KAAKk1I,YAAY5iJ,EAAamxG,EAAO5xG,GAWhD,iBAAMqjJ,CACFjmG,EACAw0D,EACA5xG,EACAg+B,GAGA,MAAM,sBACFokG,EAAqB,mBACrBE,EAAkB,UAClB6X,EAAS,SACTmJ,EAAQ,WACR9gB,GACAxiI,EAEEujJ,EAAoBjhB,EACpB,IAAInlB,GAAUmlB,QACd9mI,EACAgoJ,EAAwBD,GAAmB7lC,mBACjD,OAAOvvG,KAAKszI,YAAYnyC,QACpB,CACIjiF,GAAI+vB,EACJqmG,GAAIxzC,KACJ7+D,EAAGgxF,GAAuBn7H,cAC1Bk4C,EAAGqkG,GAAuB7lC,gBAC1Bl/E,MAAO6kH,GAAYn1I,KAAKszI,YAAY3yC,gBACpCr5F,EAAG+tI,GAAuB9kC,aAC1B16D,EAAGw/F,GAAuB7kC,YACpB,CAAC,GAAI6kC,EAAsB7kC,kBAC3BnjH,EACNkoJ,cAAevJ,QAAa3+I,KACzBwiC,GAEP4zE,EACA4wB,EACAxiI,EAAQwiH,sBClJHmhC,GAUbx4I,WAAAA,CAAYy4I,EAAqCC,GAC7C11I,KAAK5M,MAAQqiJ,EACbz1I,KAAK01I,WAAaA,EAMtB,mBAAIC,GACA,OAAO31I,KAAK01I,WAMhB,cAAID,GACA,OAAOz1I,KAAK5M,aCoCPwiJ,GAUT54I,WAAAA,CACIjK,EACA8iJ,EACA7nC,EACAD,EACAqlC,EACAD,EACAl6B,GAEAj5G,KAAKjN,SAAWA,EAChBiN,KAAK61I,aAAeA,EACpB71I,KAAKguG,UAAYA,EACjBhuG,KAAK+tG,OAASA,EACd/tG,KAAKozI,kBAAoBA,EACzBpzI,KAAKmzI,kBAAoBA,EACzBnzI,KAAKi5G,kBAAoBA,EAS7B68B,uCAAAA,CACIC,EACAC,GAEA,IAAKD,EAAejzH,QAAUkzH,EAC1B,MAAMD,EAAejzH,MACf29E,GACIvC,EACA,gBAEJuC,GACIvC,EACA,gBAId,IAAI+3C,EACAC,EAEJ,IACID,EAA6BzvF,mBACzBuvF,EAAejzH,MAEtB,CAAC,MAAOrxB,GACL,MAAMgvG,GACFzC,EACA+3C,EAAejzH,MAEtB,CAED,IACIozH,EAAsB1vF,mBAAmBwvF,EAC5C,CAAC,MAAOvkJ,GACL,MAAMgvG,GACFzC,EACA+3C,EAAejzH,MAEtB,CAED,GAAImzH,IAA+BC,EAC/B,MAAMz1C,GAAsBxC,GAIhC,GACI83C,EAAejqJ,OACfiqJ,EAAehnC,mBACfgnC,EAAerK,SACjB,CACE,MAAMyK,EApGlB,SACIJ,GAEA,MAAMK,EAAkB,QAClBC,EACFN,EAAeO,WAAW50H,YAAY00H,GAC1C,OAAOC,GAAwBA,GAAwB,EACjDN,EAAeO,WAAWtwI,UACtBqwI,EAAuBD,QAE3B/oJ,CACV,CAyFkCkpJ,CAAmBR,GACzC,IACIS,EAAAA,GAAAA,GACIT,EAAejqJ,MACfiqJ,EAAehnC,kBACfgnC,EAAerK,UAGnB,MAAM,IAAIh5I,GAAAA,GACNqjJ,EAAejqJ,OAAS,GACxBiqJ,EAAehnC,kBACfgnC,EAAerK,SACfqK,EAAe9L,WAAa,GAC5B8L,EAAeU,UAAY,GAC3BV,EAAeW,gBAAkB,GACjCX,EAAelmH,QAAU,GACzBsmH,GAIR,MAAM,IAAI1L,GACNsL,EAAejqJ,OAAS,GACxBiqJ,EAAehnC,kBACfgnC,EAAerK,SACfyK,EAEP,EAQLQ,qBAAAA,CACIZ,EACAa,GAGA,GACIb,EAAejqJ,OACfiqJ,EAAehnC,mBACfgnC,EAAerK,SACjB,CACE,MAAMmL,EAAY,aACdd,EAAetK,aAAe1iC,EAAAA,GAAU+tC,8BAExCf,EAAe9L,WAAalhC,EAAAA,GAAU+tC,gCAEtCf,EAAehnC,mBAAqBhG,EAAAA,GAAU+tC,mCAE9Cf,EAAeW,gBAAkB3tC,EAAAA,GAAU+tC,6BAE3Cf,EAAeU,UAAY1tC,EAAAA,GAAU+tC,gBAEnCX,EAAgBJ,EAAetK,aAAar+I,OAC5C2oJ,EAAetK,YAAY,QAC3Bp+I,EACA0pJ,EAAc,IAAItM,GACpBsL,EAAejqJ,MACf+qJ,EACAd,EAAerK,SACfyK,EACAJ,EAAel2I,QAInB,GACI+2I,GACAb,EAAel2I,QACfk2I,EAAel2I,QAAUm3I,EAAAA,GAAWC,0BACpClB,EAAel2I,QAAUm3I,EAAAA,GAAWE,uBAOpC,YALAl3I,KAAK+tG,OAAOE,QACR,6HAA6H8oC,KAM9H,GACHH,GACAb,EAAel2I,QACfk2I,EAAel2I,QAAUm3I,EAAAA,GAAWG,0BACpCpB,EAAel2I,QAAUm3I,EAAAA,GAAWI,uBAOpC,YALAp3I,KAAK+tG,OAAOE,QACR,sHAAsH8oC,KAO9H,IACIP,EAAAA,GAAAA,GACIT,EAAejqJ,MACfiqJ,EAAehnC,kBACfgnC,EAAerK,UAGnB,MAAM,IAAIh5I,GAAAA,GACNqjJ,EAAejqJ,MACfiqJ,EAAehnC,kBACfgnC,EAAerK,SACfqK,EAAe9L,WAAalhC,EAAAA,GAAUC,aACtC+sC,EAAeU,UAAY1tC,EAAAA,GAAUC,aACrC+sC,EAAeW,gBAAkB3tC,EAAAA,GAAUC,aAC3C+sC,EAAelmH,QAAUk5E,EAAAA,GAAUC,aACnCmtC,GAIR,MAAMY,CACT,EAQL,+BAAMM,CACFC,EACAtkJ,EACAukJ,EACA1lJ,EACA2lJ,EACAh0C,EACAi0C,EACAC,EACAC,GAQA,IAAItsJ,EAuCAusJ,EAtCJ,GAPA53I,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBuD,0BAClBo1B,EAAoBZ,gBAKpBY,EAAoBO,SAAU,CAO9B,GANAxsJ,EAAgBg2G,GACZi2C,EAAoBO,UAAY9uC,EAAAA,GAAUC,aAC1ChpG,KAAKguG,UAAUpN,cAIf42C,GAAmBA,EAAgBlnH,OAC/BjlC,EAAcilC,QAAUknH,EAAgBlnH,MACxC,MAAMmwE,GACFtC,GAMZ,GAAItsG,EAAQgwG,QAA6B,IAAnBhwG,EAAQgwG,OAAc,CACxC,MAAMD,EAAWv2G,EAAcysJ,UAC/B,IAAKl2C,EACD,MAAMnB,GACFrC,GAIRuD,GAAYC,EAAU/vG,EAAQgwG,OACjC,CACJ,CAGD7hG,KAAK+rI,sBAAwB5/B,GAAcyB,sBACvC0pC,EAAoBS,aAAehvC,EAAAA,GAAUC,aAC7Ch2G,EAAUw5G,cACVxsG,KAAK+tG,OACL/tG,KAAKguG,UACL3iH,GAKEmsJ,GAAqBA,EAAgB10H,QACvC80H,EAAkBva,GAAcQ,kBAC5B79H,KAAKguG,UACLwpC,EAAgB10H,QAKxBw0H,EAAoBU,OAChBV,EAAoBU,QAAUnmJ,EAAQsoH,aAAU9sH,EAEpD,MAAM8mH,EAAcn0G,KAAKi4I,oBACrBX,EACAtkJ,EACAukJ,EACA1lJ,EACAxG,EACAm4G,EACAg0C,GAEJ,IAAIU,EACJ,IAiBI,GAhBIl4I,KAAKmzI,mBAAqBnzI,KAAKozI,oBAC/BpzI,KAAK+tG,OAAOsK,QACR,kDAEJ6/B,EAAe,IAAI1C,GACfx1I,KAAKozI,mBACL,SAEEpzI,KAAKmzI,kBAAkBgF,kBAAkBD,IAS/CT,IACCC,GACDvjC,EAAYjlE,QACd,CACE,MAAMx1C,EAAMy6G,EAAYjlE,QAAQk9D,qBAEhC,IADgBpsG,KAAK61I,aAAajgC,WAAWl8G,EAAKsG,KAAK+tG,QAKnD,OAHA/tG,KAAK+tG,OAAOE,QACR,6GAES2nC,GAAgBwC,6BACzBp4I,KAAKguG,UACLh7G,EACAmhH,GACA,EACAtiH,EACAxG,EACAusJ,OACAvqJ,EACAsqJ,EAGX,OACK33I,KAAK61I,aAAa3hC,gBACpBC,EACAtiH,EAAQuiH,aACRviH,EAAQwiH,cAEf,SAEOr0G,KAAKmzI,mBACLnzI,KAAKozI,mBACL8E,IAEAl4I,KAAK+tG,OAAOsK,QACR,uDAEEr4G,KAAKmzI,kBAAkBkF,iBAAiBH,GAErD,CAED,OAAOtC,GAAgBwC,6BACnBp4I,KAAKguG,UACLh7G,EACAmhH,GACA,EACAtiH,EACAxG,EACAusJ,EACAN,EACAK,GAUAM,mBAAAA,CACJX,EACAtkJ,EACAukJ,EACA1lJ,EACAxG,EACAm4G,EACAg0C,GAEA,MAAMrkI,EAAMngB,EAAUq6G,oBACtB,IAAKl6F,EACD,MAAMstF,GACFvB,GAIR,MAAMo5C,EAAiBpsC,GAA6B7gH,GAGpD,IAAIktJ,EACAC,EACAlB,EAAoBO,UAAcxsJ,IAClCktJ,EAAgB51C,GACZ3iG,KAAK+rI,sBACL54H,EACAmkI,EAAoBO,SACpB73I,KAAKjN,SACLulJ,GAAkB,IAGtBE,EAAgBC,GACZz4I,KAAK61I,aACL7iJ,EACAgN,KAAK+rI,sBACL/rI,KAAKguG,UAAUpN,aACfv1G,EACAisJ,EAAoBS,YACpB5kI,EACAmlI,EACAd,OACAnqJ,EACA2S,KAAK+tG,SAKb,IAAI2qC,EAA8C,KAClD,GAAIpB,EAAoBqB,aAAc,CAElC,MAAMC,EAAiBtB,EAAoB1uC,MACrCL,GAASM,WAAWyuC,EAAoB1uC,OACxC,IAAIL,GAAS12G,EAAQC,QAAU,IAM/B+mJ,GACyC,kBAAnCvB,EAAoBwB,WACtBz9I,SAASi8I,EAAoBwB,WAAY,IACzCxB,EAAoBwB,aAAe,EACvCC,GAC6C,kBAAvCzB,EAAoB0B,eACtB39I,SAASi8I,EAAoB0B,eAAgB,IAC7C1B,EAAoB0B,iBAAmB,EAC3CC,GACyC,kBAAnC3B,EAAoB4B,WACtB79I,SAASi8I,EAAoB4B,WAAY,IACzC5B,EAAoB4B,kBAAe7rJ,EACvC8rJ,EAAyB5B,EAAesB,EACxCO,EACFD,EAAyBJ,EACvBM,EACFJ,GAAaA,EAAY,EACnB1B,EAAe0B,OACf5rJ,EAGVqrJ,EAAoBt1C,GAChBpjG,KAAK+rI,sBACL54H,EACAmkI,EAAoBqB,aACpB34I,KAAKjN,SACLulJ,GAAkBtlJ,EAAUkrH,QAAU,GACtC06B,EAAejuC,cACfwuC,EACAC,EACAp5I,KAAKguG,UAAUpN,aACfy4C,EACA/B,EAAoBgC,WACpB91C,EACA8zC,EAAoBU,OACpBnmJ,EAAQg+B,OACRh+B,EAAQ8xG,oBAEf,CAGD,IAAI41C,EAAgD,KACpD,GAAIjC,EAAoBvD,cAAe,CACnC,IAAIyF,EACJ,GAAIlC,EAAoBmC,yBAA0B,CAS9CD,EAAcjC,GANV,kBADOD,EAAoBmC,yBAErBp+I,SACIi8I,EAAoBmC,yBACpB,IAEJnC,EAAoBmC,yBAEjC,CACDF,EAAqBh1C,GACjBvkG,KAAK+rI,sBACL54H,EACAmkI,EAAoBvD,cACpB/zI,KAAKjN,SACLukJ,EAAoBoC,KACpBl2C,EACAg2C,EAEP,CAGD,IAAIG,EAA8C,KASlD,OARIrC,EAAoBoC,OACpBC,EAAoB,CAChB5mJ,SAAUiN,KAAKjN,SACf8vG,YAAa1vF,EACbqxF,SAAU8yC,EAAoBoC,OAI/B,CACHxqG,QAASspG,EACT11C,QAASy1C,EACTjmJ,YAAaomJ,EACbnmJ,aAAcgnJ,EACd7kC,YAAailC,GAcrB,yCAAavB,CACTpqC,EACAh7G,EACAmhH,EACAylC,EACA/nJ,EACAxG,EACA2qJ,EACAsB,EACAuC,GAEA,IAGIx2C,EACAC,EAJAhxG,EAAsBy2G,EAAAA,GAAUC,aAChC4vC,EAAgC,GAChC52C,EAAyB,KAGzBwC,EAAmBuE,EAAAA,GAAUC,aAEjC,GAAImL,EAAY7hH,YAAa,CAKzB,GACI6hH,EAAY7hH,YAAYixG,YACpBS,EAAAA,GAAqBG,KACxBtyG,EAAQioJ,OAkBTxnJ,EAAc6hH,EAAY7hH,YAAY0jE,WAjBxC,CACE,MAAM+jF,EACF,IAAIpF,GAAkB3mC,IACpB,OAAEh4C,EAAM,MAAEytC,GAAU0Q,EAAY7hH,YAEtC,IAAKmxG,EACD,MAAMhD,GACFX,GAIRxtG,QAAoBynJ,EAAkB9E,aAClCj/E,EACAytC,EACA5xG,EAEP,CAGD+mJ,EAAiBrwC,GAASM,WACtBsL,EAAY7hH,YAAYZ,QAC1Bk4G,UACF5H,EAAY,IAAIlqG,KACgC,IAA5C0X,OAAO2kG,EAAY7hH,YAAY0vG,YAEnCqB,EAAe,IAAIvrG,KACqC,IAApD0X,OAAO2kG,EAAY7hH,YAAYyxG,oBAE/BoQ,EAAY7hH,YAAYgxG,YACxBA,EAAY,IAAIxrG,KACgC,IAA5C0X,OAAO2kG,EAAY7hH,YAAYgxG,YAG1C,CAEG6Q,EAAYO,cACZlQ,EACI2P,EAAYO,YAAYlQ,WAAa8R,EAAAA,GAC/BA,EAAAA,GACA,IAEd,MAAMpL,EAAM7/G,GAAeklC,KAAOllC,GAAewlC,KAAO,GAClDL,EAAMnlC,GAAemlC,KAAO,GAG9B8mH,GAAqB0C,eAAmB7lC,EAAYjlE,UACpDilE,EAAYjlE,QAAQq9D,gBAChB+qC,GAAqB0C,eAG7B,MAAMrsC,EAAkCwG,EAAYjlE,QAC9Cw8D,GACIyI,EAAYjlE,QAAQo9D,sBACpBj/G,EACAhC,EACA8oH,EAAYrR,SAAS9sC,QAEzB,KAEN,MAAO,CACHhjE,UAAWA,EAAU2oH,mBACrBs+B,SAAU/uC,EACVnI,SAAUvyE,EACV1+B,OAAQ8mJ,EACR1pG,QAASy+D,EACT7K,QAASqR,GAAarR,SAAS9sC,QAAU,GACzC3qE,cAAeA,GAAiB,CAAC,EACjCiH,YAAaA,EACb4nJ,UAAWN,EACX53C,UAAWA,EACXqB,aAAcA,EACdC,UAAWA,EACX+Q,cAAexiH,EAAQwiH,cACvBwlC,UAAWA,GAAa9wC,EAAAA,GAAUC,aAClCxE,SAAUA,EACVjB,UACI4Q,EAAY7hH,aAAaixG,WAAawF,EAAAA,GAAUC,aACpDlmF,MAAOkzH,EACDA,EAAa/X,iBACbl1B,EAAAA,GAAUC,aAChBwE,mBACI2G,EAAYjlE,SAASs+D,oBACrBzE,EAAAA,GAAUC,aACdyE,YACI0G,EAAYjlE,SAASu+D,aAAe1E,EAAAA,GAAUC,aAClD9oG,KAAMo3I,GAAqB6C,SAC3BC,kBAAkB,IAKxB,SAAU3B,GACZ5C,EACA7iJ,EACA4vG,EACAhC,EACAv1G,EACA0hH,EACAlK,EACAy1C,EACAd,EACAjrC,EACAwB,GAEAA,GAAQsK,QAAQ,2BAGhB,MACMgiC,EADcxE,EAAargC,iBACEh6F,MAAMo8F,GAC9BA,EAAWlzG,WAAWk+F,KAGjC,IAAI41C,EAAsC,KACtC6B,IACA7B,EAAgB3C,EAAajgC,WAAWykC,EAAgBtsC,IAG5D,MAAM0K,EACF+/B,GACArsC,GAAcU,cACV,CACIjK,gBACAv3G,gBACA0hH,aACAlK,cACA2K,mBAAoBgqC,GAAiB8C,sBACrC7sC,YAAa+pC,GAAiB+C,aAC9BhuC,gBAAiBA,GAErBv5G,EACA4tG,GAGF6L,EAAiBgM,EAAYhM,gBAAkB,GAC/C1J,EAAWu1C,GAAkB7/B,EAAYtV,MAC/C,GACIJ,IACC0J,EAAejxF,MAAMowF,GACXA,EAAc7I,WAAaA,IAExC,CACE,MAAMy3C,EAAmBnvC,GACrBzI,EACA6V,EAAYnN,eACZvI,EACA13G,GAEJohH,EAAe5/G,KAAK2tJ,EACvB,CAGD,OAFA/hC,EAAYhM,eAAiBA,EAEtBgM,CACX,CClvBOvqH,eAAeusJ,GAClB18B,EACAhrH,EACAklI,GAEA,GAA+B,kBAApBla,EACP,OAAOA,EAMP,OAAOA,EAJ+B,CAClChrH,SAAUA,EACVklI,cAAeA,GAI3B,CCmCM,MAAOyiB,WAAgCrI,GAKzCr1I,WAAAA,CACIs1I,EACAr5B,GAEAn5G,MAAMwyI,EAAer5B,GAPf,KAAkB0hC,oBAAY,EAQpC36I,KAAK46I,kBACD56I,KAAK5P,OAAOquH,YAAYzrH,UAAUxF,QAAQ88H,aAAaI,cAa/D,oBAAMmwB,CACFhpJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB6C,eAClB3vH,EAAQwiH,eAGZ,MAAMzE,QAAoBylB,GACtBr1H,KAAK86I,6BAA6BvuJ,KAAKyT,MACvC2+G,GAAkBoD,4BAClB/hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALcghB,CAMxBxjI,GAEF,OAAOm9G,GAAUW,kBACb3vG,KAAKhN,UAAU8kI,sBACfloB,GASR,kBAAMmrC,CACFlpJ,EACA2lJ,GAOA,GALAx3I,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBiD,uBAClB/vH,EAAQwiH,gBAGPxiH,EAAQqO,KACT,MAAMugG,GACFhC,GAIR,MAAM84C,EAAez1C,KACfpzG,QAAiB2mI,GACnBr1H,KAAKg7I,oBAAoBzuJ,KAAKyT,MAC9B2+G,GAAkBkD,8BAClB7hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALWghB,CAMrBr1H,KAAKhN,UAAWnB,GAGZgoJ,EAAYnrJ,EAASD,UAAU88I,EAAAA,GAAY0P,iBAE3CC,EAAkB,IAAItF,GACxB51I,KAAK5P,OAAOquH,YAAY1rH,SACxBiN,KAAK+2H,aACL/2H,KAAKszI,YACLtzI,KAAK+tG,OACL/tG,KAAK5P,OAAOgjJ,kBACZpzI,KAAK5P,OAAO+iJ,kBACZnzI,KAAKi5G,mBAMT,OAFAiiC,EAAgBvE,sBAAsBjoJ,EAASM,MAExCqmI,GACH6lB,EAAgB7D,0BAA0B9qJ,KAAK2uJ,GAC/Cv8B,GAAkBuD,0BAClBliH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAOH3mI,EAASM,KACTgR,KAAKhN,UACLukJ,EACA1lJ,EACA2lJ,OACAnqJ,OACAA,OACAA,EACAwsJ,GASRsB,sBAAAA,CACIC,EACA3V,GAmBA,GAhBwB,IAAImQ,GACxB51I,KAAK5P,OAAOquH,YAAY1rH,SACxBiN,KAAK+2H,aACL/2H,KAAKszI,YACLtzI,KAAK+tG,OACL,KACA,MAIY+nC,wCACZsF,EACA3V,IAIC2V,EAAal7I,KACd,MAAMugG,GACFd,GAIR,OAAOy7C,EAQXC,YAAAA,CAAaC,GAET,IAAKA,EACD,MAAMxzC,GACFf,IAGR,MAAM6I,EAAc5vG,KAAKu7I,2BAA2BD,GAGpD,OAAOtsC,GAAUW,kBACb3vG,KAAKhN,UAAUmlI,mBACfvoB,GASA,yBAAMorC,CACVhoJ,EACAnB,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBkD,8BAClBhwH,EAAQwiH,eAGZ,MAAMmnC,EAAwBx7I,KAAKu0I,2BAA2B1iJ,GACxD0C,EAAWy6G,GAAUW,kBACvB38G,EAAUilI,cACVujB,GAGEC,QAAoBpmB,GACtBr1H,KAAK07I,uBAAuBnvJ,KAAKyT,MACjC2+G,GAAkBmD,iCAClB9hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALcghB,CAMxBxjI,GAEF,IAAIk0I,EACJ,GAAIl0I,EAAQk7G,WACR,IACI,MAAMA,EAAanC,GACf/4G,EAAQk7G,WACR/sG,KAAKszI,YAAY1yC,cAErBmlC,EAAgB,CACZlxB,WAAY,GAAG9H,EAAW7B,MAAMzI,EAAAA,GAAWwI,wBAAwB8B,EAAW5B,OAC9E55G,KAAM2sI,GAEb,CAAC,MAAOzsI,GACLuO,KAAK+tG,OAAOsK,QACR,+CAAiD5mH,EAExD,CAEL,MAAMhD,EAAkCuR,KAAKwzI,0BACzCzN,GAAiBl0I,EAAQk0I,eAGvB+E,EAAgC,CAClC/3I,SACIlB,EAAQ8pJ,qBAAqB5oJ,UAC7BiN,KAAK5P,OAAOquH,YAAY1rH,SAC5BC,UAAWA,EAAU2oH,mBACrB7pH,OAAQD,EAAQC,OAChB+9B,OAAQh+B,EAAQg+B,OAChBqqF,qBAAsBroH,EAAQqoH,qBAC9B+Z,sBAAuBpiI,EAAQoiI,sBAC/BE,mBAAoBtiI,EAAQsiI,mBAC5B6X,UAAWn6I,EAAQm6I,UACnB7xB,OAAQtoH,EAAQsoH,QAGpB,OAAOkb,GACHr1H,KAAK4zI,2BAA2BrnJ,KAAKyT,MACrC2+G,GAAkBoB,kDAClB//G,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAOH9gI,EACAknJ,EACAhtJ,EACAq8I,EACAj5I,EAAQwiH,cACRsK,GAAkBoB,mDAQlB,4BAAM27B,CACV7pJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBmD,iCAClBjwH,EAAQwiH,eAGZ,MAAMmgC,EAAmB,IAAIlH,GAmD7B,GAjDAkH,EAAiBnG,YACbx8I,EAAQ8pJ,sBAAsBxP,KAC1BnsI,KAAK5P,OAAOquH,YAAY1rH,UAO3BiN,KAAK26I,mBAKNnG,EAAiBlG,eAAez8I,EAAQoB,aAHxCw5I,GAAiBC,oBAAoB76I,EAAQoB,aAOjDuhJ,EAAiBvG,UACbp8I,EAAQC,QACR,EACAkO,KAAK46I,mBAITpG,EAAiB3E,qBAAqBh+I,EAAQqO,MAG9Cs0I,EAAiBnF,eAAervI,KAAK5P,OAAOk/I,aAC5CkF,EAAiBjF,wBACbvvI,KAAK5P,OAAO65H,UAAU5L,aAE1Bm2B,EAAiB5C,gBAEb5xI,KAAKyxI,yBAA2BjzB,GAAmBx+G,KAAK5P,SACxDokJ,EAAiBhD,mBAAmBxxI,KAAKyxI,wBAIzC5/I,EAAQo+I,cACRuE,EAAiBxE,gBAAgBn+I,EAAQo+I,cAGzCjwI,KAAK5P,OAAO8iJ,kBAAkBp1B,cAC9B02B,EAAiBtE,gBACblwI,KAAK5P,OAAO8iJ,kBAAkBp1B,cAIlC99G,KAAK5P,OAAO8iJ,kBAAkBn1B,gBAAiB,CAC/C,MAAMA,EACF/9G,KAAK5P,OAAO8iJ,kBAAkBn1B,gBAElCy2B,EAAiBrE,yBACPsK,GACF18B,EAAgB69B,UAChB57I,KAAK5P,OAAOquH,YAAY1rH,SACxBlB,EAAQsiI,qBAGhBqgB,EAAiBpE,uBACbryB,EAAgB89B,cAEvB,CAKD,GAHArH,EAAiB9D,aAAaoL,EAAAA,GAAUC,0BACxCvH,EAAiB5D,gBAEb/+I,EAAQqoH,uBAAyBlW,EAAAA,GAAqBG,IAAK,CAC3D,MAAM41C,EAAoB,IAAIpF,GAC1B30I,KAAKszI,YACLtzI,KAAKi5G,mBAGT,IAAI+iC,EACJ,GAAKnqJ,EAAQioJ,OAUTkC,EAAah8I,KAAKszI,YAAYvyC,UAAUlvG,EAAQioJ,YAV/B,CAQjBkC,SAPkC3mB,GAC9B0kB,EAAkBnF,YAAYroJ,KAAKwtJ,GACnCp7B,GAAkBqD,oBAClBhiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALsBghB,CAMhCxjI,EAASmO,KAAK+tG,SACiBgnC,YACpC,CAKDP,EAAiBpD,YAAY4K,EAChC,MAAM,GAAInqJ,EAAQqoH,uBAAyBlW,EAAAA,GAAqBM,IAAK,CAClE,IAAIzyG,EAAQoqJ,OAGR,MAAMn0C,GACFT,IAHJmtC,EAAiBlD,UAAUz/I,EAAQoqJ,OAM1C,CAED,MAAM5nC,EACFxiH,EAAQwiH,eACRr0G,KAAK5P,OAAO4iJ,gBAAgBryC,gBAchC,IAAI8yC,EACJ,GAdAe,EAAiBpF,iBAAiB/6B,KAG7BtM,GAAYx5F,WAAW1c,EAAQg+B,SAC/B7vB,KAAK5P,OAAOquH,YAAY4L,oBACrBrqH,KAAK5P,OAAOquH,YAAY4L,mBAAmBj9H,OAAS,IAExDonJ,EAAiBvF,UACbp9I,EAAQg+B,OACR7vB,KAAK5P,OAAOquH,YAAY4L,oBAK5Bx4H,EAAQk7G,WACR,IACI,MAAMA,EAAanC,GACf/4G,EAAQk7G,WACR/sG,KAAKszI,YAAY1yC,cAErB6yC,EAAU,CACN5+B,WAAY,GAAG9H,EAAW7B,MAAMzI,EAAAA,GAAWwI,wBAAwB8B,EAAW5B,OAC9E55G,KAAM2sI,GAEb,CAAC,MAAOzsI,GACLuO,KAAK+tG,OAAOsK,QACR,+CAAiD5mH,EAExD,MAEDgiJ,EAAU5hJ,EAAQk0I,cAItB,GAAI/lI,KAAK5P,OAAOoiJ,cAAcx1B,sBAAwBy2B,EAClD,OAAQA,EAAQliJ,MACZ,KAAK2sI,GACD,IACI,MAAMnxB,EAAahC,GACf0oC,EAAQ5+B,YAEZ2/B,EAAiBzF,UAAUhiC,EAC9B,CAAC,MAAOt7G,GACLuO,KAAK+tG,OAAOsK,QACR,mDACI5mH,EAEX,CACD,MACJ,KAAKysI,GACDsW,EAAiB3F,UAAU4E,EAAQ5+B,YAwB/C,OAnBIhjH,EAAQ8pJ,qBACRnH,EAAiB3D,wBACbh/I,EAAQ8pJ,sBAMZ9pJ,EAAQqqJ,4BACNrqJ,EAAQ8pJ,qBACL9pJ,EAAQ8pJ,oBACLpP,KAGRiI,EAAiB3D,wBAAwB,CACrC,CAACtE,IAAqC,MAIvCiI,EAAiBxC,oBAOpB,kCAAM8I,CACVjpJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBoD,4BAClBlwH,EAAQwiH,eAGZ,MAAMmgC,EAAmB,IAAIlH,GAE7BkH,EAAiBnG,YACbx8I,EAAQsqJ,uBAAuBhQ,KAC3BnsI,KAAK5P,OAAOquH,YAAY1rH,UAGhC,MAAMq7I,EAAgB,IACdv8I,EAAQC,QAAU,MAClBD,EAAQuqJ,sBAAwB,IAExC5H,EAAiBvG,UAAUG,GAAe,EAAMpuI,KAAK46I,mBAGrDpG,EAAiBlG,eAAez8I,EAAQoB,aAGxC,MAAMohH,EACFxiH,EAAQwiH,eACRr0G,KAAK5P,OAAO4iJ,gBAAgBryC,gBAoChC,GAnCA6zC,EAAiBpF,iBAAiB/6B,GAGlCmgC,EAAiB5G,gBAAgB/7I,EAAQg8I,cAGzC2G,EAAiBjH,sBAGjBiH,EAAiBnF,eAAervI,KAAK5P,OAAOk/I,aACvC9wB,GAAmBx+G,KAAK5P,SACzBokJ,EAAiBjF,wBACbvvI,KAAK5P,OAAO65H,UAAU5L,aAK9Bm2B,EAAiB5D,gBAEb/+I,EAAQm7I,eAAiBn7I,EAAQo7I,qBACjCuH,EAAiB5E,uBACb/9I,EAAQm7I,cACRn7I,EAAQo7I,qBAIZp7I,EAAQjG,QACR4oJ,EAAiB/E,UAAU59I,EAAQjG,QAGnCiG,EAAQ88I,YACR6F,EAAiB9F,cAAc78I,EAAQ88I,YAIvC98I,EAAQjG,SAAWihJ,EAAAA,GAAYwP,eAE/B,GAAIxqJ,EAAQ++B,KAAO/+B,EAAQjG,SAAWihJ,EAAAA,GAAYyP,KAE9Ct8I,KAAK+tG,OAAOsK,QACR,yEAEJm8B,EAAiBxF,OAAOn9I,EAAQ++B,UAC7B,GAAI/+B,EAAQq9C,QAAS,CACxB,MAAMqtG,EAAav8I,KAAKw8I,kBAAkB3qJ,EAAQq9C,SAClD,IAAIutG,EAAwBz8I,KAAK08I,iBAC7B7qJ,EAAQq9C,SAWZ,GARIutG,GAAyB5qJ,EAAQ88I,aACjC3uI,KAAK+tG,OAAOE,QACR,+JAEJwuC,EAAwB,MAIxBA,EAAuB,CACvBz8I,KAAK+tG,OAAOsK,QACR,qEAEJm8B,EAAiB5F,aAAa6N,GAC9B,IACI,MAAM1vC,EAAahC,GACfl5G,EAAQq9C,QAAQ0zD,eAEpB4xC,EAAiBzF,UAAUhiC,EAC9B,CAAC,MAAOt7G,GACLuO,KAAK+tG,OAAOsK,QACR,+EAEP,CACJ,MAAM,GAAIkkC,GAAc1qJ,EAAQjG,SAAWihJ,EAAAA,GAAYyP,KAAM,CAK1Dt8I,KAAK+tG,OAAOsK,QACR,yEAEJm8B,EAAiBxF,OAAOuN,GACxB,IACI,MAAMxvC,EAAahC,GACfl5G,EAAQq9C,QAAQ0zD,eAEpB4xC,EAAiBzF,UAAUhiC,EAC9B,CAAC,MAAOt7G,GACLuO,KAAK+tG,OAAOsK,QACR,+EAEP,CACJ,MAAM,GAAIxmH,EAAQgiH,UACf7zG,KAAK+tG,OAAOsK,QACR,gEAEJm8B,EAAiB5F,aAAa/8I,EAAQgiH,WACtC2gC,EAAiB3F,UAAUh9I,EAAQgiH,gBAChC,GAAIhiH,EAAQq9C,QAAQh9C,SAAU,CAEjC8N,KAAK+tG,OAAOsK,QACR,gEAEJm8B,EAAiB5F,aAAa/8I,EAAQq9C,QAAQh9C,UAC9C,IACI,MAAM66G,EAAahC,GACfl5G,EAAQq9C,QAAQ0zD,eAEpB4xC,EAAiBzF,UAAUhiC,EAC9B,CAAC,MAAOt7G,GACLuO,KAAK+tG,OAAOsK,QACR,+EAEP,CACJ,CACJ,MAAUxmH,EAAQgiH,YACf7zG,KAAK+tG,OAAOsK,QACR,4EAEJm8B,EAAiB5F,aAAa/8I,EAAQgiH,WACtC2gC,EAAiB3F,UAAUh9I,EAAQgiH,iBAGvC7zG,KAAK+tG,OAAOsK,QACR,kFA6BR,GAzBIxmH,EAAQy+B,OACRkkH,EAAiB7E,SAAS99I,EAAQy+B,OAGlCz+B,EAAQixB,OACR0xH,EAAiB9E,SAAS79I,EAAQixB,QAIlCjxB,EAAQg+B,QACP7vB,KAAK5P,OAAOquH,YAAY4L,oBACrBrqH,KAAK5P,OAAOquH,YAAY4L,mBAAmBj9H,OAAS,IAExDonJ,EAAiBvF,UACbp9I,EAAQg+B,OACR7vB,KAAK5P,OAAOquH,YAAY4L,oBAI5Bx4H,EAAQsqJ,sBACR3H,EAAiB3D,wBACbh/I,EAAQsqJ,sBAIZtqJ,EAAQ8qJ,eAERnI,EAAiBxG,kBAGbn8I,EAAQqoH,uBAAyBlW,EAAAA,GAAqBG,KAAK,CAC3D,MAAM41C,EAAoB,IAAIpF,GAC1B30I,KAAKszI,aAIT,IAAI0I,EACJ,GAAKnqJ,EAAQioJ,OAUTkC,EAAah8I,KAAKszI,YAAYvyC,UAAUlvG,EAAQioJ,YAV/B,CAQjBkC,SAPkC3mB,GAC9B0kB,EAAkBnF,YAAYroJ,KAAKwtJ,GACnCp7B,GAAkBqD,oBAClBhiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALsBghB,CAMhCxjI,EAASmO,KAAK+tG,SACiBgnC,YACpC,CAGDP,EAAiBpD,YAAY4K,EAChC,CAGL,OAAOxH,EAAiBxC,oBAOpBuJ,0BAAAA,CACJ1pJ,GAEA,MAAM2iJ,EAAmB,IAAIlH,GA8B7B,OA5BIz7I,EAAQqB,uBACRshJ,EAAiBjG,yBACb18I,EAAQqB,uBAIZrB,EAAQwiH,eACRmgC,EAAiBpF,iBAAiBv9I,EAAQwiH,eAG1CxiH,EAAQ48I,aACR+F,EAAiBhG,eAAe38I,EAAQ48I,aAGxC58I,EAAQixB,OACR0xH,EAAiB9E,SAAS79I,EAAQixB,OAGlCjxB,EAAQkgJ,YACRyC,EAAiB1C,cAAcjgJ,EAAQkgJ,YAGvClgJ,EAAQsqJ,sBACR3H,EAAiB3D,wBACbh/I,EAAQsqJ,sBAIT3H,EAAiBxC,oBAOpBwK,iBAAAA,CAAkBttG,GACtB,OAAOA,EAAQ7jD,eAAeulC,KAAO,KAGjC8rH,gBAAAA,CAAiBxtG,GACrB,OAAOA,EAAQ7jD,eAAe6wH,YAAc,MCvuBpD,MACM0gC,GAAoB,IAU1B,SAASC,GAAmBjsI,GACxB,MAAM,KACFksI,EAAI,YACJn4B,EAAW,eACXC,EAAc,cACdm4B,EAAa,iBACbC,GACApsI,EACEqsI,EAA8C,IAAI19G,IAAI,CACxD,CAAC,EAAG,CAAColF,EAAaC,IAClB,CAAC,EAAG,CAACm4B,EAAeC,MAExB,IAAIE,EAAmB,GAEvB,GAAIJ,GAAM1vJ,QAIN,GAHA8vJ,EAASJ,EAAK/1I,MA1BI,KA6Bdm2I,EAAO9vJ,OAAS,EAChB,OAAO0vJ,OAGXI,EAASxkJ,MAAM+J,KAAK,CAAErV,OAAQ,IAAK,IAAMwvJ,KAc7C,OAXAK,EAAOviI,SAAQ,CAACvrB,EAAOuK,KACE,IAAjBvK,EAAM/B,QAAgB+B,EAAM,IAAI/B,QAAU+B,EAAM,IAAI/B,QAahE,SAAgBwjB,GAMZ,MAAM,OAAEssI,EAAM,MAAE9rJ,EAAK,QAAE+rJ,EAAO,WAAEC,GAAexsI,EAC/C,GAAIxf,GAAS8rJ,EAAO9vJ,OAChB,OAEJ8vJ,EAAO9rJ,GAAS,CAAC+rJ,EAASC,GAAYxhJ,KAAKghJ,GAC/C,CAvBYS,CAAO,CACHH,SACA9rJ,MAAOsI,EACPyjJ,QAAShuJ,EAAM,GACfiuJ,WAAYjuJ,EAAM,IAEzB,IAGE+tJ,EAAOthJ,KA/CQ,IAgD1B,OAgBa0hJ,GAYTtgJ,WAAAA,CACIugJ,EACAxmB,GAJI,KAAAymB,aAA6BC,EAAAA,GAAaniB,eAM9Ct7H,KAAK+2H,aAAeA,EACpB/2H,KAAK09I,MAAQH,EAAiBG,MAC9B19I,KAAKq0G,cAAgBkpC,EAAiBlpC,cACtCr0G,KAAKuiI,WAAagb,EAAiBhb,YAAcx5B,EAAAA,GAAUC,aAC3DhpG,KAAK29I,WAAaJ,EAAiBI,YAAc50C,EAAAA,GAAUC,aAE3DhpG,KAAK49I,kBACDzb,EAAAA,GAAuB/lB,UACvB3Z,EAAAA,GAAWC,oBACX66C,EAAiBxqJ,SAMzB2+I,iCAAAA,GACI,MAAM7/I,EAAU,GAAGmO,KAAK09I,QAAQvb,EAAAA,GAAuB0b,kBAAkB79I,KAAKw9I,eACxEM,EAAoB,CAAC99I,KAAKuiI,WAAYviI,KAAK29I,YAC3CI,EAAwB/9I,KAAKg+I,2BAC/BD,GAAuB3wJ,QACvB0wJ,EAAkBjxJ,KAAK,gBAAgBkxJ,KAE3C,MAAME,EAAiBH,EAAkBliJ,KACrCumI,EAAAA,GAAuB0b,iBAGrBK,EAAmC,CACrCrsJ,EAF0BmO,KAAKm+I,4BAIjCviJ,KAAKumI,EAAAA,GAAuB0b,iBAE9B,MAAO,CACH1b,EAAAA,GAAuBic,eACvBF,EACAD,GACFriJ,KAAKumI,EAAAA,GAAuBkc,oBAMlC1M,8BAAAA,GACI,MAAM2M,EAAet+I,KAAKu+I,kBAEpBC,EAAYlB,GAAuBmB,gBAAgBH,GACnDI,EAAiBJ,EAAaI,eAC/B3xJ,MAAM,EAAG,EAAIyxJ,GACb5iJ,KAAKumI,EAAAA,GAAuB0b,iBAC3Bc,EAASL,EAAaK,OACvB5xJ,MAAM,EAAGyxJ,GACT5iJ,KAAKumI,EAAAA,GAAuB0b,iBAC3Be,EAAaN,EAAaK,OAAOvxJ,OAOjC6wJ,EAAiB,CAACW,EAHpBJ,EAAYI,EACNzc,EAAAA,GAAuB0c,cACvB1c,EAAAA,GAAuB2c,gBACaljJ,KAC1CumI,EAAAA,GAAuB0b,iBAG3B,MAAO,CACH1b,EAAAA,GAAuBic,eACvBE,EAAaS,UACbL,EACAC,EACAV,GACFriJ,KAAKumI,EAAAA,GAAuBkc,oBAOlCW,kBAAAA,CAAmBlzJ,GACf,MAAMwyJ,EAAet+I,KAAKu+I,kBAEtBD,EAAaK,OAAOvxJ,QACpB+0I,EAAAA,GAAuB8c,oBAGvBX,EAAaI,eAAer5I,QAC5Bi5I,EAAaI,eAAer5I,QAC5Bi5I,EAAaK,OAAOt5I,SAGxBi5I,EAAaI,eAAe7xJ,KAAKmT,KAAK09I,MAAO19I,KAAKq0G,eAE9CvoH,aAAiBgC,OAAWhC,GAASA,EAAMgB,WACvChB,aAAiBw0G,EAAAA,GACbx0G,EAAM4+I,SACN4T,EAAaK,OAAO9xJ,KAAKf,EAAM4+I,UACxB5+I,EAAMy0G,UACb+9C,EAAaK,OAAO9xJ,KAAKf,EAAMy0G,WAE/B+9C,EAAaK,OAAO9xJ,KAAKf,EAAMgB,YAGnCwxJ,EAAaK,OAAO9xJ,KAAKf,EAAMgB,YAGnCwxJ,EAAaK,OAAO9xJ,KAAKs1I,EAAAA,GAAuB+c,eAGpDl/I,KAAK+2H,aAAaxa,mBACdv8G,KAAK49I,kBACLU,GASRa,kBAAAA,GACI,MAAMb,EAAet+I,KAAKu+I,kBAO1B,OANAD,EAAaS,WAAa,EAE1B/+I,KAAK+2H,aAAaxa,mBACdv8G,KAAK49I,kBACLU,GAEGA,EAAaS,UAMxBR,eAAAA,GAUI,OAJqBv+I,KAAK+2H,aAAava,mBACnCx8G,KAAK49I,oBANmC,CACxCc,eAAgB,GAChBC,OAAQ,GACRI,UAAW,GAYnB7K,mBAAAA,GACI,MAAMoK,EAAet+I,KAAKu+I,kBACpBa,EACF9B,GAAuBmB,gBAAgBH,GAE3C,GAAIc,IADed,EAAaK,OAAOvxJ,OAGnC4S,KAAK+2H,aAAajf,WAAW93G,KAAK49I,uBAC/B,CAEH,MAAMyB,EAA2C,CAC7CX,eAAgBJ,EAAaI,eAAe3xJ,MACrB,EAAnBqyJ,GAEJT,OAAQL,EAAaK,OAAO5xJ,MAAMqyJ,GAClCL,UAAW,GAGf/+I,KAAK+2H,aAAaxa,mBACdv8G,KAAK49I,kBACLyB,EAEP,EAOL,sBAAOZ,CACHa,GAEA,IAAI1yJ,EACA4xJ,EAAY,EACZe,EAAW,EACf,MAAMX,EAAaU,EAAsBX,OAAOvxJ,OAChD,IAAKR,EAAI,EAAGA,EAAIgyJ,EAAYhyJ,IAAK,CAE7B,MAAM8wJ,EACF4B,EAAsBZ,eAAe,EAAI9xJ,IACzCm8G,EAAAA,GAAUC,aACRqL,EACFirC,EAAsBZ,eAAe,EAAI9xJ,EAAI,IAC7Cm8G,EAAAA,GAAUC,aACRzI,EACF++C,EAAsBX,OAAO/xJ,IAAMm8G,EAAAA,GAAUC,aASjD,GANAu2C,GACI7B,EAAM5wJ,WAAWM,OACjBinH,EAAcvnH,WAAWM,OACzBmzG,EAAUnzG,OACV,IAEAmyJ,EAAWpd,EAAAA,GAAuBqd,uBAIlC,MAFAhB,GAAa,CAIpB,CAED,OAAOA,EAQXL,wBAAAA,GACI,MAAMsB,EAAkC,GAQxC,OANAA,EAAsB5yJ,KAAKmT,KAAK0/I,YAAc32C,EAAAA,GAAUC,cACxDy2C,EAAsB5yJ,KAAKmT,KAAK2/I,cAAgB52C,EAAAA,GAAUC,cAC1Dy2C,EAAsB5yJ,KAClBmT,KAAK4/I,eAAiB72C,EAAAA,GAAUC,cAG7By2C,EAAsB7jJ,KAAK,KAStCikJ,6BAAAA,CACInqB,GAEA11H,KAAK0/I,WAAahqB,EAAwByB,YAC1Cn3H,KAAK2/I,aAAejqB,EAAwBE,cAC5C51H,KAAK4/I,cAAgBlqB,EAAwB0B,eAMjD0oB,eAAAA,CAAgBtC,GACZx9I,KAAKw9I,aAAeA,EAGxBuC,wBAAAA,CAAyBx/C,GACrB,MAAM+9C,EAAet+I,KAAKu+I,kBAC1BD,EAAaP,sBAAwBx9C,EACrCvgG,KAAK+2H,aAAaxa,mBACdv8G,KAAK49I,kBACLU,GAIRN,wBAAAA,GACI,OAAOh+I,KAAKu+I,kBAAkBR,sBAGlCiC,0BAAAA,GACI,MAAM1B,EAAet+I,KAAKu+I,yBACnBD,EAAaP,sBACpB/9I,KAAK+2H,aAAaxa,mBACdv8G,KAAK49I,kBACLU,GAIR,yBAAOzB,CAAmBjsI,GACtB,OAAOisI,GAAmBjsI,UC3UZqvI,GAYlBjjJ,WAAAA,CACI5M,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAmnC,EACA/rC,GAEAr0G,KAAK5P,OAASA,EACd4P,KAAK++H,eAAiBmhB,EACtBlgJ,KAAKy+H,cAAgBA,EACrBz+H,KAAKwrH,cAAgBxrH,KAAK5P,OAAOmD,OAAOi4H,cACxCxrH,KAAKmgJ,aAAeA,EACpBngJ,KAAKyrH,iBAAmBA,EACxBzrH,KAAKogJ,qBAAuBA,EAC5BpgJ,KAAKq0G,cAAgBA,GAAiB1T,KACtC3gG,KAAK+tG,OAASA,EAAOqE,MACjBga,GAAAA,GAAiBi0B,SACjBtuI,GACA/R,KAAKq0G,eAETr0G,KAAKi5G,kBAAoBA,EAWnB,wBAAMqnC,CACZpxG,GAEA,GAAIA,EAAS,CAELi9D,GAAcgC,mBACVj/D,EACAlvC,KAAK++H,eAAel0I,oBACpB,KAGJmV,KAAK+tG,OAAOsK,QAAQ,kCACpBr4G,KAAK++H,eAAepwF,iBAAiB,OAGzC,UACU3uC,KAAK++H,eAAepnB,cACtBxL,GAAcE,wBAAwBn9D,IAE1ClvC,KAAK+tG,OAAOsK,QACR,+EAEP,CAAC,MAAOvsH,GACLkU,KAAK+tG,OAAOjiH,MACR,2EAEP,CACJ,MACG,IACIkU,KAAK+tG,OAAOsK,QACR,mEACAr4G,KAAKq0G,qBAGHr0G,KAAK++H,eAAer9E,cAEpB1hD,KAAKy+H,cAAcv9B,eAC5B,CAAC,MAAOzvG,GACLuO,KAAK+tG,OAAOjiH,MACR,6EAEP,EAWTy0J,cAAAA,CAAeC,GACXxgJ,KAAK+tG,OAAOsK,QAAQ,yBACpB,MAAMplH,EACFutJ,GACAxgJ,KAAK5P,OAAO0C,KAAKG,aACjBw1I,KACJ,OAAOz5B,GAAU2B,eACb19G,EACAw1I,MAUEgY,gCAAAA,CACN/C,EACAgD,GAEA1gJ,KAAK+tG,OAAOsK,QAAQ,2CACpB,MAAMsoC,EAA2C,CAC7C5tJ,SAAUiN,KAAK5P,OAAO0C,KAAKC,SAC3BshH,cAAer0G,KAAKq0G,cACpBqpC,MAAOA,EACPgD,aAAcA,IAAgB,EAC9Bne,WAAYviI,KAAK++H,eAAe6D,qBAAqB,GACrD+a,WAAY39I,KAAK++H,eAAe6D,qBAAqB,IAGzD,OAAO,IAAI0a,GACPqD,EACA3gJ,KAAK++H,gBAUH,4BAAM6hB,CACZC,EACAC,EACA5xG,GAEAlvC,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBe,gDAClB1/G,KAAKq0G,eAET,MAAM2iB,EAAqC,CACvC9pB,aAAcltG,KAAK5P,OAAO0C,KAAKo6G,aAC/Bod,YAAatqH,KAAK5P,OAAO0C,KAAKw3H,YAC9BvO,iBAAkB/7G,KAAK5P,OAAO0C,KAAKipH,iBACnCzK,uBAAwBtxG,KAAK5P,OAAO0C,KAAKw+G,uBACzCjM,kBAAmBrlG,KAAK5P,OAAO0C,KAAKuyG,kBACpCylB,2BACI9qH,KAAK5P,OAAO0C,KAAKg4H,4BAInBi2B,EAAgBF,GAEhB7gJ,KAAK5P,OAAO0C,KAAKE,UAGjBguJ,EAAiBlqB,GAAUmF,kBAC7B8kB,EACAD,GAA4B9gJ,KAAK5P,OAAO0C,KAAK+3H,mBAE3Co2B,QAA4B5rB,GAC9B6rB,GACAviC,GAAkByD,yCAClBpiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALyBghB,CAO9B2rB,EACAhhJ,KAAK5P,OAAOmD,OAAOi4H,cACnBxrH,KAAK++H,eACL/H,EACAh3H,KAAK+tG,OACL/tG,KAAKq0G,cACLr0G,KAAKi5G,mBAGT,GAAI/pE,IAAY+xG,EAAoB5kB,QAAQntF,EAAQ2zD,aAChD,MAAMiF,GACFykB,IAIR,OAAO00B,GCrNf,MAAME,GAAyB,GASxBjzJ,eAAekzJ,GAClBnoC,EACAlL,EACAsG,GAEA4E,EAAkBgM,oBACdtG,GAAkBgF,kBAClBtP,GAEJ,MAAM47B,EAAehb,GACjBosB,GACA1iC,GAAkBiF,qBAClB7V,EACAkL,EACA5E,EALiB4gB,CAMnBhc,EAAmBlL,EAAQsG,GAQ7B,MAAO,CACHitC,SAAUrR,EACVsR,gBATwBlsB,GACxBmsB,GACA7iC,GAAkBkF,kCAClB9V,EACAkL,EACA5E,EALwBghB,CAM1B4a,EAAch3B,EAAmBlL,EAAQsG,GAK/C,CAMA,SAASgtC,GACLpoC,EACAlL,EACAsG,GAEA,IAEI,MAAM9yG,EAAqB,IAAI7U,WAAWy0J,IAC1ClsB,GACIzoI,GACAmyH,GAAkBoF,gBAClBhW,EACAkL,EACA5E,EALJ4gB,CAME1zH,GAGF,OADoC+sH,GAAa/sH,EAEpD,CAAC,MAAO9P,GACL,MAAMq3H,GAAuBhD,GAChC,CACL,CAMA53H,eAAeszJ,GACXC,EACAxoC,EACAlL,EACAsG,GAEA4E,EAAkBgM,oBACdtG,GAAkBkF,kCAClBxP,GAEJ,IAEI,MAAMqtC,QAA+BrsB,GACjC5F,GACA9Q,GAAkBmF,aAClB/V,EACAkL,EACA5E,EALiCghB,CAMnCosB,EAAkBxoC,EAAmB5E,GAEvC,OAAOia,GAAa,IAAI5hI,WAAWg1J,GACtC,CAAC,MAAOjwJ,GACL,MAAMq3H,GAAuBhD,GAChC,CACL,CCxFO53H,eAAeyzJ,GAClB9vJ,EACAzB,EACA6oH,EACAlL,GAEAkL,EAAkBgM,oBACdtG,GAAkBiC,sBAClB/uH,EAAQwiH,eAEZ,MAAMrhH,EAAYnB,EAAQmB,WAAa5C,EAAO0C,KAAKE,UAE7ClB,EAAS,IAAMD,GAAWA,EAAQC,QAAW,IAE7C8vJ,EAAoC,IACnC/vJ,EACHwiH,cAAexiH,EAAQwiH,cACvBrhH,YACAlB,UAIJ,GAAK8vJ,EAAiB1nC,qBAKf,CACH,GACI0nC,EAAiB1nC,uBAAyBlW,EAAAA,GAAqBM,IACjE,CACE,IAAKzyG,EAAQoqJ,OACT,MAAMn0C,GACFykB,IAGR,IAAK16H,EAAQsoH,OACT,MAAMrS,GACFykB,GAGX,CACDxe,EAAOsK,QACH,iCAAiCupC,EAAiB1nC,sDAEzD,MAtBG0nC,EAAiB1nC,qBAAuBlW,EAAAA,GAAqBC,OAC7D8J,EAAOsK,QACH,2FAgCR,OARIjoH,EAAOgD,MAAMiqH,2BACbxrH,EAAQg+B,SAEPk4E,GAAYx5F,WAAW1c,EAAQg+B,UAEhC+xH,EAAiBj+C,0BAA4BvC,GAAWvvG,EAAQg+B,SAG7D+xH,CACX,CAEO1zJ,eAAe2zJ,GAClBhwJ,EACAq9C,EACA9+C,EACA6oH,EACAlL,GAEAkL,EAAkBgM,oBACdtG,GAAkBkC,wBAClBhvH,EAAQwiH,eAGZ,MAAMytC,QAAoBzsB,GACtBssB,GACAhjC,GAAkBiC,sBAClB7S,EACAkL,EACApnH,EAAQwiH,cALcghB,CAMxBxjI,EAASzB,EAAQ6oH,EAAmBlL,GACtC,MAAO,IACAl8G,KACAiwJ,EACH5yG,QAASA,EACTwxG,aAAc7uJ,EAAQ6uJ,eAAgB,EAE9C,CCxEM,MAAgBqB,WAAkC9B,GAK1C,wCAAM+B,CACZnwJ,GAEAmO,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB4C,4DAClBvhH,KAAKq0G,eAET,MAAM4tC,QAA4B5sB,GAC9B+rB,GACAziC,GAAkBgF,kBAClB3jH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALyBghB,CAMhCr1H,KAAKi5G,kBAAmBj5G,KAAK+tG,OAAQ/tG,KAAKq0G,eAEtCyyB,EAAkD,IACjDj1I,EACHoB,YAAapB,EAAQoB,YACrBiN,KAAM6oG,EAAAA,GAAUC,aAChBinC,aAAcgS,EAAoBX,UAMtC,OAHAzvJ,EAAQm7I,cAAgBiV,EAAoBV,UAC5C1vJ,EAAQo7I,oBAAsBlkC,EAAAA,GAAUm5C,2BAEjCpb,EAODqb,uBAAAA,CACN7G,GAEAt7I,KAAK+tG,OAAOsK,QACR,iCACAijC,GAAejnC,eAGnB,MAAM+tC,EAA8C,CAChD/tC,cAAer0G,KAAKq0G,eAAiB1T,QAClC26C,GAOP,GAAIA,EAEA,GAAKA,EAAcvJ,WAiBf/xI,KAAK+tG,OAAOsK,QACR,yDAjBJ,GAAIijC,EAAcpsG,QAAS,CACvB,MAAM6iG,EAAa/xI,KAAKqiJ,+BACpB/G,EAAcpsG,SAEd6iG,IACA/xI,KAAK+tG,OAAOsK,QACR,kFAEJ+pC,EAAmBrQ,WAAaA,EAEvC,MACG/xI,KAAK+tG,OAAOsK,QACR,0GASZr4G,KAAK+tG,OAAOsK,QACR,qEAoDR,OA5CKijC,GAAyD,OAAxCA,EAAcpoJ,sBAsChC8M,KAAK+tG,OAAOsK,QACR,6EACA+pC,EAAmB/tC,eAvCnBinC,GAAiBA,EAAcpoJ,uBAC/B8M,KAAK+tG,OAAOsK,QACR,6DACA+pC,EAAmB/tC,eAEvB+tC,EAAmBlvJ,sBACf87G,GAAU2B,eACN2qC,EAAcpoJ,sBACdu1I,OAE0C,OAA3CzoI,KAAK5P,OAAO0C,KAAKI,sBACxB8M,KAAK+tG,OAAOsK,QACR,uGACA+pC,EAAmB/tC,eAEhBr0G,KAAK5P,OAAO0C,KAAKI,uBACxB8M,KAAK+tG,OAAOsK,QACR,kDACA+pC,EAAmB/tC,eAEvB+tC,EAAmBlvJ,sBACf87G,GAAU2B,eACN3wG,KAAK5P,OAAO0C,KAAKI,sBACjBu1I,QAGRzoI,KAAK+tG,OAAOsK,QACR,gDACA+pC,EAAmB/tC,eAEvB+tC,EAAmBlvJ,sBACf87G,GAAU2B,eACN83B,KACAA,OAUT2Z,EAQDC,8BAAAA,CACNnzG,GAEA,MAAM7jD,EAA2C6jD,EAAQ7jD,cACzD,GAAIA,EAAe,CACf,GAAIA,EAAc6wH,WACd,OAAO7wH,EAAc6wH,WAErBl8G,KAAK+tG,OAAOsK,QACR,qIAGX,MACGr4G,KAAK+tG,OAAOsK,QACR,yGAIR,OAAO,KAQD,0BAAMiqC,CACZ7Q,EACA8Q,EACAzB,EACA5xG,GAEAlvC,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkByC,8CAClBphH,KAAKq0G,eAGT,MAAMmuC,QAAqBntB,GACvBr1H,KAAKyiJ,uBAAuBl2J,KAAKyT,MACjC2+G,GAAkB0C,gDAClBrhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkBghB,CAOvBoc,EACA8Q,EACAzB,EACA5xG,GAEJ,OAAO,IAAIwrG,GACP8H,EACAxiJ,KAAKi5G,mBAUH,4BAAMwpC,CACZhR,EACAoP,EACAC,EACA5xG,GAEAlvC,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB0C,gDAClBrhH,KAAKq0G,eAET,MAAM4sC,QAA4B5rB,GAC9Br1H,KAAK4gJ,uBAAuBr0J,KAAKyT,MACjC2+G,GAAkBe,gDAClB1/G,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALyBghB,CAMhCwrB,EAAkBC,EAA0B5xG,GACxC6+D,EAAS/tG,KAAK5P,OAAOmD,OAAOC,cAElC,MAAO,CACHirH,YAAa,CACT1rH,SAAUiN,KAAK5P,OAAO0C,KAAKC,SAC3BC,UAAWiuJ,EACX52B,mBAAoBrqH,KAAK5P,OAAO0C,KAAKu3H,oBAEzCmoB,cAAe,CACX11B,0BACI98G,KAAK5P,OAAOmD,OAAOupH,0BACvBE,sBAAsB,GAE1BxpH,cAAe,CACXC,eAAgBs6G,EAAOt6G,eACvBypH,kBAAmBnP,EAAOmP,kBAC1BC,SAAUpP,EAAOoP,SACjB9I,cAAer0G,KAAKq0G,eAExBs+B,aAAc,CACVt1B,0BACIr9G,KAAK5P,OAAOgD,MAAMiqH,2BAE1B21B,gBAAiBhzI,KAAKy+H,cACtBlJ,iBAAkBv1H,KAAKwrH,cACvBqnB,iBAAkB7yI,KAAK++H,eACvB0S,uBAAwBA,EACxBnC,YAAa,CACT5xB,IAAK0O,GAAAA,GAAiBi0B,SACtBtuI,QAASA,GACT6rG,IAAK7U,EAAAA,GAAUC,aACfp3F,GAAIm3F,EAAAA,GAAUC,cAElBihB,UAAWjqH,KAAK5P,OAAO65H,WASrB,oCAAMy4B,CACZ7wJ,EACA80I,GAEA3mI,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB2C,wDAClBthH,KAAKq0G,eAGT,MAAMphH,EAAc+M,KAAKugJ,eAAe1uJ,EAAQoB,aAC1C0vJ,EAAmC,CACrChc,gBAAiBA,GAEf7jH,EAAQu6G,GAAcC,gBACxBt9H,KAAKy+H,cACJ5sI,GAAWA,EAAQixB,OAAUimF,EAAAA,GAAUC,aACxC25C,GAgBEf,EAA4C,UAbPvsB,GACvCssB,GACAhjC,GAAkBiC,sBAClB5gH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkCghB,CAOvC,IAAKxjI,EAASwiH,cAAer0G,KAAKq0G,eAClCr0G,KAAK5P,OACL4P,KAAKi5G,kBACLj5G,KAAK+tG,QAKL96G,YAAaA,EACb6vB,MAAOA,EACPwN,MAAOz+B,EAAQy+B,OAASqwE,KACxBktC,aAAc7tI,KAAK5P,OAAO0C,KAAKw3H,YAC1BC,oBAGHr7E,EACFr9C,EAAQq9C,SAAWlvC,KAAK++H,eAAel0I,mBAc3C,GAbIqkD,IACAlvC,KAAK+tG,OAAOsK,QACR,oCACAr4G,KAAKq0G,eAETr0G,KAAK+tG,OAAOstB,WACR,sCAAsCnsF,EAAQ0zD,gBAC9C5iG,KAAKq0G,eAETutC,EAAiB1yG,QAAUA,IAI1B0yG,EAAiB/tC,YAAc3kE,EAAS,CACzC,MAAM0zG,EAAkB5iJ,KAAK++H,eAAe2I,qBACxCkb,IACAhB,EAAiB/tC,UAAY+uC,EAEpC,CAED,OAAOhB,iBCpWR,MACMiB,GAAa,cCwBbC,GAA0B,CACnC,CAACD,IACG,sKAGF,MAAOE,WAAwBziD,EAAAA,GAGjCtjG,WAAAA,CAAYujG,EAAmB7oG,EAAsBsrJ,GACjDljJ,MAAMygG,EAAW7oG,GAEjBa,OAAOi9B,eAAex1B,KAAM+iJ,GAAgBvqJ,WAC5CwH,KAAKjO,KAAO,kBACZiO,KAAKgjJ,IAAMA,GAOb,SAAUC,GAAuBn3J,GACnC,SACIA,EAAMk3J,MACNl3J,EAAMk3J,IAAInjJ,QC3Cc,qBD4CvB/T,EAAMk3J,IAAInjJ,QC3CK,aD4CZ/T,EAAMk3J,IAAInjJ,aAMd/T,EAAMk3J,MACNl3J,EAAMk3J,IAAIl3J,QAlCW,aAmCrBA,EAAMk3J,IAAIl3J,QD1DU,iBC+DhBA,EAAMy0G,UAMlB,UASgB2iD,GACZhjJ,EACAxI,EACAsrJ,GAEA,GAAIA,GAAOA,EAAInjJ,OACX,OAAQmjJ,EAAInjJ,QACR,IC9EuB,sBD+EnB,OAAOsjJ,EAAAA,GAAAA,IACHC,GAAAA,GAER,ICxF6B,4BDyFzB,OAAO,IAAI1wJ,GAAAA,GAA6BwN,EAAMxI,GAClD,ICzFe,cD0FX,OAAOoxH,GACHrC,IAER,IC5Fc,aD6FV,OAAOqC,GACH/oB,IAKhB,OAAO,IAAIgjD,GACP7iJ,EACA4iJ,GAAwB5iJ,IAASxI,EACjCsrJ,EAER,CErDM,MAAOK,WAA2BhR,GACpCr1I,WAAAA,CACIs1I,EACAr5B,GAEAn5G,MAAMwyI,EAAer5B,GAElB,kBAAM8hC,CACTlpJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkByB,+BAClBvuH,EAAQwiH,eAGZ,MAAMkjC,EAAez1C,KACfpzG,QAAiB2mI,GACnBr1H,KAAKg7I,oBAAoBzuJ,KAAKyT,MAC9B2+G,GAAkBwB,sCAClBngH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALWghB,CAMrBxjI,EAASmO,KAAKhN,WAGV6mJ,EAAYnrJ,EAASD,UAAU88I,EAAAA,GAAY0P,iBAC3CC,EAAkB,IAAItF,GACxB51I,KAAK5P,OAAOquH,YAAY1rH,SACxBiN,KAAK+2H,aACL/2H,KAAKszI,YACLtzI,KAAK+tG,OACL/tG,KAAK5P,OAAOgjJ,kBACZpzI,KAAK5P,OAAO+iJ,mBAIhB,OAFA+H,EAAgBvE,sBAAsBjoJ,EAASM,MAExCqmI,GACH6lB,EAAgB7D,0BAA0B9qJ,KAAK2uJ,GAC/Cv8B,GAAkBuD,0BAClBliH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAOH3mI,EAASM,KACTgR,KAAKhN,UACLukJ,EACA1lJ,OACAxE,OACAA,GACA,EACAwE,EAAQyxJ,WACRzJ,GAQD,gCAAM0J,CACT1xJ,GAGA,IAAKA,EACD,MAAMi2G,GACFhB,IAUR,GANA9mG,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB2B,6CAClBzuH,EAAQwiH,gBAIPxiH,EAAQq9C,QACT,MAAMuxD,GACFzB,GAUR,GALeh/F,KAAK+2H,aAAaxb,kBAC7B1pH,EAAQq9C,QAAQ2zD,aAKhB,IACI,aAAawyB,GACTr1H,KAAKwjJ,mCAAmCj3J,KAAKyT,MAC7C2+G,GAAkB0B,qDAClBrgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALCghB,CAMXxjI,GAAS,EACd,CAAC,MAAOJ,GACL,MAAMgyJ,EACFhyJ,aAAaiB,GAAAA,IACbjB,EAAE8uG,YACEmjD,GAAAA,GACFC,EACFlyJ,aAAag5I,IACbh5I,EAAE8uG,YAAcjyE,EAAAA,EAAOs1H,qBACvBnyJ,EAAEi5I,WAAap8G,EAAAA,EAAOu1H,sBAG1B,GAAIJ,GAAqBE,EACrB,OAAOtuB,GACHr1H,KAAKwjJ,mCAAmCj3J,KAAKyT,MAC7C2+G,GAAkB0B,qDAClBrgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAMLxjI,GAAS,GAGX,MAAMJ,CAEb,CAGL,OAAO4jI,GACHr1H,KAAKwjJ,mCAAmCj3J,KAAKyT,MAC7C2+G,GAAkB0B,qDAClBrgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAMLxjI,GAAS,GAOP,wCAAM2xJ,CACV3xJ,EACA6nJ,GAEA15I,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB0B,qDAClBxuH,EAAQwiH,eAIZ,MAAM9hH,EAAe0iI,GACjBj1H,KAAK+2H,aAAarc,gBAAgBnuH,KAAKyT,KAAK+2H,cAC5CpY,GAAkB+E,4BAClB1jH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALS4gB,CAOjBpjI,EAAQq9C,QACRwqG,OACArsJ,EACA2S,KAAKi5G,kBACLpnH,EAAQwiH,eAGZ,IAAK9hH,EACD,MAAM4wJ,EAAAA,GAAAA,IACFO,GAAAA,IAIR,GACInxJ,EAAayvG,WACbD,GACIxvG,EAAayvG,UACbnwG,EAAQiyJ,qCA/KgC,KAmL5C,MAAMX,EAAAA,GAAAA,IACFY,GAAAA,IAKR,MAAMC,EAAiD,IAChDnyJ,EACHU,aAAcA,EAAayjE,OAC3BkkD,qBACIroH,EAAQqoH,sBAAwBlW,EAAAA,GAAqBC,OACzD8hC,cAAe,CACXlxB,WAAYhjH,EAAQq9C,QAAQ0zD,cAC5BrxG,KAAM2sI,KAId,IACI,aAAa7I,GACTr1H,KAAK+6I,aAAaxuJ,KAAKyT,MACvB2+G,GAAkByB,+BAClBpgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALCghB,CAMX2uB,EACL,CAAC,MAAOvyJ,GACL,GACIA,aAAaiB,GAAAA,IACbjB,EAAEi5I,WAAauZ,GAAAA,GACjB,CAEEjkJ,KAAK+tG,OAAOsK,QACR,wEAEJ,MAAM6rC,EAAqBhiD,GAAsB3vG,GACjDyN,KAAK+2H,aAAa5e,mBAAmB+rC,EACxC,CAED,MAAMzyJ,CACT,EAQG,yBAAMupJ,CACVnpJ,EACAmB,GAEAgN,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkBwB,sCAClBtuH,EAAQwiH,eAGZ,MAAMmnC,EAAwBx7I,KAAKu0I,2BAA2B1iJ,GACxD0C,EAAWy6G,GAAUW,kBACvB38G,EAAUilI,cACVujB,GAGEC,QAAoBpmB,GACtBr1H,KAAK07I,uBAAuBnvJ,KAAKyT,MACjC2+G,GAAkB4B,yCAClBvgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALcghB,CAMxBxjI,GACIpD,EAAkCuR,KAAKwzI,0BACzC3hJ,EAAQk0I,eAEN+E,EAAgC,CAClC/3I,SACIlB,EAAQ8pJ,qBAAqB5oJ,UAC7BiN,KAAK5P,OAAOquH,YAAY1rH,SAC5BC,UAAWA,EAAU2oH,mBACrB7pH,OAAQD,EAAQC,OAChB+9B,OAAQh+B,EAAQg+B,OAChBqqF,qBAAsBroH,EAAQqoH,qBAC9B+Z,sBAAuBpiI,EAAQoiI,sBAC/BE,mBAAoBtiI,EAAQsiI,mBAC5B6X,UAAWn6I,EAAQm6I,UACnB7xB,OAAQtoH,EAAQsoH,QAGpB,OAAOkb,GACHr1H,KAAK4zI,2BAA2BrnJ,KAAKyT,MACrC2+G,GAAkBmB,6CAClB9/G,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAOH9gI,EACAknJ,EACAhtJ,EACAq8I,EACAj5I,EAAQwiH,cACRsK,GAAkBmB,8CAQlB,4BAAM47B,CACV7pJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB4B,yCAClB1uH,EAAQwiH,eAGZ,MAAMA,EAAgBxiH,EAAQwiH,cACxBmgC,EAAmB,IAAIlH,GAyC7B,GAvCAkH,EAAiBnG,YACbx8I,EAAQ8pJ,sBAAsBxP,KAC1BnsI,KAAK5P,OAAOquH,YAAY1rH,UAG5BlB,EAAQoB,aACRuhJ,EAAiBlG,eAAez8I,EAAQoB,aAG5CuhJ,EAAiBvG,UACbp8I,EAAQC,QACR,EACAkO,KAAK5P,OAAOquH,YAAYzrH,UAAUxF,QAAQ88H,aAAaI,eAG3D8pB,EAAiB9D,aAAaoL,EAAAA,GAAUqI,qBAExC3P,EAAiB5D,gBAEjB4D,EAAiBnF,eAAervI,KAAK5P,OAAOk/I,aAC5CkF,EAAiBjF,wBACbvvI,KAAK5P,OAAO65H,UAAU5L,aAE1Bm2B,EAAiB5C,gBAEb5xI,KAAKyxI,yBAA2BjzB,GAAmBx+G,KAAK5P,SACxDokJ,EAAiBhD,mBAAmBxxI,KAAKyxI,wBAG7C+C,EAAiBpF,iBAAiB/6B,GAElCmgC,EAAiBzE,gBAAgBl+I,EAAQU,cAErCyN,KAAK5P,OAAO8iJ,kBAAkBp1B,cAC9B02B,EAAiBtE,gBACblwI,KAAK5P,OAAO8iJ,kBAAkBp1B,cAIlC99G,KAAK5P,OAAO8iJ,kBAAkBn1B,gBAAiB,CAC/C,MAAMA,EACF/9G,KAAK5P,OAAO8iJ,kBAAkBn1B,gBAElCy2B,EAAiBrE,yBACPsK,GACF18B,EAAgB69B,UAChB57I,KAAK5P,OAAOquH,YAAY1rH,SACxBlB,EAAQsiI,qBAGhBqgB,EAAiBpE,uBACbryB,EAAgB89B,cAEvB,CAED,GAAIhqJ,EAAQqoH,uBAAyBlW,EAAAA,GAAqBG,IAAK,CAC3D,MAAM41C,EAAoB,IAAIpF,GAC1B30I,KAAKszI,YACLtzI,KAAKi5G,mBAGT,IAAI+iC,EACJ,GAAKnqJ,EAAQioJ,OAWTkC,EAAah8I,KAAKszI,YAAYvyC,UAAUlvG,EAAQioJ,YAX/B,CASjBkC,SARkC3mB,GAC9B0kB,EAAkBnF,YAAYroJ,KAAKwtJ,GACnCp7B,GAAkBqD,oBAClBhiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALsBghB,CAMhCxjI,EAASmO,KAAK+tG,SAEiBgnC,YACpC,CAKDP,EAAiBpD,YAAY4K,EAChC,MAAM,GAAInqJ,EAAQqoH,uBAAyBlW,EAAAA,GAAqBM,IAAK,CAClE,IAAIzyG,EAAQoqJ,OAGR,MAAMn0C,GACFT,IAHJmtC,EAAiBlD,UAAUz/I,EAAQoqJ,OAM1C,CAaD,KAVKl0C,GAAYx5F,WAAW1c,EAAQg+B,SAC/B7vB,KAAK5P,OAAOquH,YAAY4L,oBACrBrqH,KAAK5P,OAAOquH,YAAY4L,mBAAmBj9H,OAAS,IAExDonJ,EAAiBvF,UACbp9I,EAAQg+B,OACR7vB,KAAK5P,OAAOquH,YAAY4L,oBAK5BrqH,KAAK5P,OAAOoiJ,cAAcx1B,sBAC1BnrH,EAAQk0I,cAER,OAAQl0I,EAAQk0I,cAAcx0I,MAC1B,KAAK2sI,GACD,IACI,MAAMnxB,EAAahC,GACfl5G,EAAQk0I,cAAclxB,YAE1B2/B,EAAiBzF,UAAUhiC,EAC9B,CAAC,MAAOt7G,GACLuO,KAAK+tG,OAAOsK,QACR,mDACI5mH,EAEX,CACD,MACJ,KAAKysI,GACDsW,EAAiB3F,UACbh9I,EAAQk0I,cAAclxB,YAYtC,OANIhjH,EAAQ8pJ,qBACRnH,EAAiB3D,wBACbh/I,EAAQ8pJ,qBAITnH,EAAiBxC,qBCpc1B,MAAOoS,WAAyB/R,GAClCr1I,WAAAA,CACIs1I,EACAr5B,GAEAn5G,MAAMwyI,EAAer5B,GAQzB,kBAAM8hC,CACFlpJ,GAEA,IACI,MAAOwyJ,EAAc7G,SAAsBx9I,KAAKskJ,mBAAmB,IAC5DzyJ,EACHC,OAAQD,EAAQC,QAAQ1E,OAClByE,EAAQC,OACR,IAAIq8I,EAAAA,MAId,GAAIqP,IAAiBC,EAAAA,GAAa8G,sBAAuB,CACrDvkJ,KAAK+tG,OAAOj6G,KACR,+IAIuB,IAAIuvJ,GAC3BrjJ,KAAK5P,OACL4P,KAAKi5G,mBAIJsqC,2BAA2B1xJ,GAC3BhG,OAAM,QAGd,CAGD,OAAOw4J,CACV,CAAC,MAAO5yJ,GACL,GACIA,aAAa4uG,IACb5uG,EAAE8uG,YAAcf,EAClB,CAKE,OAJ2B,IAAI6jD,GAC3BrjJ,KAAK5P,OACL4P,KAAKi5G,mBAEiBsqC,2BAA2B1xJ,EACxD,CACG,MAAMJ,CAEb,EAOL,wBAAM6yJ,CACFzyJ,GAEAmO,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB8B,mCAClB5uH,EAAQwiH,eAEZ,IAAImwC,EAAiC/G,EAAAA,GAAaniB,eAElD,GACIzpI,EAAQ6uJ,eACN1gJ,KAAK5P,OAAOuiJ,aAAat1B,4BACtBtV,GAAYx5F,WAAW1c,EAAQg+B,QAOpC,MAJA7vB,KAAK8/I,gBACDrC,EAAAA,GAAagH,wBACb5yJ,EAAQwiH,eAEN5T,GACFjB,GAKR,IAAK3tG,EAAQq9C,QACT,MAAMuxD,GACFzB,GAIR,MAAM0lD,EACF7yJ,EAAQq9C,QAAQ6zD,UjCiqCtB,SACF/vG,GAEA,MACMiqI,EADe,IAAIjuB,GAAUh8G,GACSu8G,mBAStCxM,EACFk6B,EAAuBxtB,aAAa1iH,OAAO,GAAG,IAAIO,cAEtD,OAAQy1G,GACJ,KAAKkN,EAAAA,GAAsBC,OAC3B,KAAKD,EAAAA,GAAsBE,cAC3B,KAAKF,EAAAA,GAAsBmtB,UACvB,OACJ,QACI,OAAOr6B,EAEnB,CiCxrCY4hD,CAA6B9yJ,EAAQmB,WACnCigH,EAAYjzG,KAAK+2H,aAAatjB,eAC9BilC,EAAoB14I,KAAK+2H,aAAa/c,eACxCnoH,EAAQq9C,QACRr9C,EACAohH,EACAyxC,EACA1kJ,KAAKi5G,kBACLpnH,EAAQwiH,eAGZ,IAAKqkC,EAMD,MAJA14I,KAAK8/I,gBACDrC,EAAAA,GAAamH,uBACb/yJ,EAAQwiH,eAEN5T,GACFjB,GAED,G1E9GoBsE,E0E+GM40C,EAAkB50C,S1E9GnCt0F,OAAOs0F,GAENhC,M0E6GbC,GACI22C,EAAkB12C,UAClBhiG,KAAK5P,OAAOoiJ,cAAc11B,2BAQ9B,MAJA98G,KAAK8/I,gBACDrC,EAAAA,GAAaoH,4BACbhzJ,EAAQwiH,eAEN5T,GACFjB,G1E3HV,IAA6BsE,E0E8HvB40C,EAAkBp1C,WAClBvB,GAAyB22C,EAAkBp1C,UAAW,KAGtDkhD,EAAmB/G,EAAAA,GAAa8G,uBAKpC,MAAM1hD,EACFhxG,EAAQmB,WAAagN,KAAKhN,UAAUq6G,oBAClC8G,EAA2B,CAC7BjlE,QAASlvC,KAAK+2H,aAAahe,qBAAqBlnH,EAAQq9C,SACxD58C,YAAaomJ,EACb51C,QAAS9iG,KAAK+2H,aAAa1jB,WACvBxhH,EAAQq9C,QACR+jE,EACAyxC,EACA1kJ,KAAKi5G,kBACLpnH,EAAQwiH,eAEZ9hH,aAAc,KACdmiH,YACI10G,KAAK+2H,aAAa5b,yBAAyBtY,IASnD,OANA7iG,KAAK8/I,gBAAgB0E,EAAkB3yJ,EAAQwiH,eAE3Cr0G,KAAK5P,OAAOqhJ,wBACZzxI,KAAK5P,OAAOqhJ,uBAAuB0N,qBAGhC,OACG9pB,GACFr1H,KAAK8kJ,8BAA8Bv4J,KAAKyT,MACxC2+G,GAAkB+B,8CAClB1gH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALNghB,CAMJlhB,EAAatiH,GACf2yJ,GAIA1E,eAAAA,CACJtC,EACAnpC,GAEAr0G,KAAKyxI,wBAAwBqO,gBAAgBtC,GAC7Cx9I,KAAKi5G,mBAAmBQ,UACpB,CACI+jC,aAAcA,GAElBnpC,GAEAmpC,IAAiBC,EAAAA,GAAaniB,gBAC9Bt7H,KAAK+tG,OAAOj6G,KACR,mDAAmD0pJ,KASvD,mCAAMsH,CACV3wC,EACAtiH,GAMA,IAAIxG,EASJ,GAbA2U,KAAKi5G,mBAAmBgM,oBACpBtG,GAAkB+B,8CAClB7uH,EAAQwiH,eAGRF,EAAYrR,UACZz3G,EAAgBg2G,GACZ8S,EAAYrR,QAAQ9sC,OACpBh2D,KAAK5P,OAAO4iJ,gBAAgBpyC,eAKhC/uG,EAAQgwG,QAA6B,IAAnBhwG,EAAQgwG,OAAc,CACxC,MAAMD,EAAWv2G,GAAeysJ,UAChC,IAAKl2C,EACD,MAAMnB,GACFrC,GAIRuD,GAAYC,EAAU/vG,EAAQgwG,OACjC,CAED,OAAO+zC,GAAgBwC,6BACnBp4I,KAAKszI,YACLtzI,KAAKhN,UACLmhH,GACA,EACAtiH,EACAxG,IClPN,MAAO05J,WAA0BhD,GAKnC,kBAAMhH,CACFiK,GAEAhlJ,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBU,8BAClB2lC,EAAc3wC,eAGlB,MAAMo9B,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMC,+BAGJ1C,QAAqBntB,GACvBr1H,KAAKyiJ,uBAAuBl2J,KAAKyT,MACjC2+G,GAAkB0C,gDAClBrhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkBghB,CAOvBoc,EACAuT,EAAchyJ,UACdgyJ,EAAcn6B,kBACdm6B,EAAc91G,SAEZi2G,EAAmB,IAAIf,GACzB5B,EACAxiJ,KAAKi5G,mBAETj5G,KAAK+tG,OAAOsK,QAAQ,8BAEpB,IACI,MAOMgsC,SAPiBhvB,GACnB8vB,EAAiBb,mBAAmB/3J,KAAK44J,GACzCxmC,GAAkB8B,mCAClBzgH,KAAK+tG,OACL/tG,KAAKi5G,kBACL+rC,EAAc3wC,cALKghB,CAMrB2vB,IAC4B,GAQ9B,OANAhlJ,KAAKi5G,kBAAkBQ,UACnB,CACIygC,WAAW,GAEf8K,EAAc3wC,eAEXgwC,CACV,CAAC,MAAOv4J,GASL,MAPIA,aAAiB+8H,IACjB/8H,EAAMy0G,YAAcunB,IAEpB9nH,KAAK+tG,OAAOsK,QACR,wHAGFvsH,CACT,EAOLs5J,MAAAA,CAAO9J,GACHt7I,KAAK+tG,OAAOsK,QAAQ,yBACpB,MAAM+pC,EAAqBpiJ,KAAKmiJ,wBAAwB7G,GACxD,OAAOt7I,KAAKsgJ,mBAAmB8B,GAAoBlzG,UCd3D,MAAMm2G,GACgB,gBADhBA,GAEmB,mBAGnB,MAAOC,WAAgCrF,GASzCjjJ,WAAAA,CACI5M,EACA2uI,EACAN,EACA1wB,EACAoyC,EACA10B,EACAiyB,EACAzkC,EACAssC,EACAvtC,EACAwtC,EACAnxC,GAEAv0G,MACI1P,EACA2uI,EACAN,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAssC,EACAlxC,GAEJr0G,KAAK09I,MAAQA,EACb19I,KAAKg4G,UAAYA,EACjBh4G,KAAKogJ,qBAAuBmF,EAC5BvlJ,KAAKylJ,qBAAuBD,EAC5BxlJ,KAAK0lJ,kBAAoB,IAAIX,GACzB30J,EACA4P,KAAKylJ,qBACLhnB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAssC,EACAlxC,GAEJr0G,KAAKyxI,uBAAyBzxI,KAAKygJ,iCAC/BzgJ,KAAK09I,OAGT,MAAMX,EACF/8I,KAAKogJ,qBAAqBuF,mBAC1BC,GAAAA,GAAgBC,uBACV,SACA7lJ,KAAKogJ,qBAAqBuF,kBAAkBv4J,OAC5C,eACAC,EACV2S,KAAK88I,KAAOQ,GAAuBT,mBAAmB,CAClDl4B,YAAayH,GAAAA,GAAiBi0B,SAC9Bz7B,eAAgB7yG,GAChBgrI,cAAeA,EACfC,iBAAkBh9I,KAAKogJ,qBAAqB0F,wBAS5CC,cAAAA,CAAel0J,GACnBA,EAAQm0J,gBAAkB,IACnBn0J,EAAQm0J,gBACX,CAACC,IAAwCjmJ,KAAK88I,MAQtD,kBAAM/B,CACFlpJ,GAEAmO,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBiB,oCAClB/tH,EAAQwiH,eAEZr0G,KAAK+tG,OAAOwD,MAAM,kDAGlB,MAAM20C,EAAsBlmJ,KAAKi5G,kBAAkBiL,iBAC/CvF,GAAkBiB,oCAClB/tH,EAAQwiH,eAENkjC,EAAe4O,KAErB,IAEI,MAAMC,QAAsBpmJ,KAAKqmJ,wBAAwBx0J,GAGzD,IACI,MAAMsR,QAAenD,KAAKsmJ,uBACtBtmJ,KAAKg4G,UACLouC,GAOJ,OALAF,EAAoB71G,IAAI,CACpB+jF,SAAS,EACTmyB,gBAAgB,EAChBrM,WAAW,IAER/2I,CACV,CAAC,MAAO1R,GAELuO,KAAK+tG,OAAOj6G,KACR,6EAEP,CAED,SAAW0yJ,GAAuBJ,EAG5BK,EAA0C,CAC5Cj4J,OAAQk4J,GAAAA,GAAsBC,SAC9B90J,QAAS20J,GAGP93J,QACIsR,KAAKogJ,qBAAqBwG,YAAYH,GAC1CI,EACF7mJ,KAAK8mJ,uBAAuBp4J,GAEhC,aAAasR,KAAK+mJ,qBACdF,EACAT,EACA7O,GAEC7tI,MAAMvG,IACH+iJ,EAAoB71G,IAAI,CACpB+jF,SAAS,EACTmyB,gBAAgB,EAChB1M,UAAW12I,EAAO02I,YAEtB75I,KAAKyxI,uBAAuBuO,6BACrB78I,KAEVtX,OAAOC,IAOJ,MANAo6J,EAAoB71G,IAAI,CACpB+jF,SAAS,EACT7zB,UAAWz0G,EAAMy0G,UACjBymD,aAAcl7J,EAAM4+I,SACpB6b,gBAAgB,IAEdz6J,CAAK,GAEtB,CAAC,MAAO2F,GAML,MALIA,aAAasxJ,IACb/iJ,KAAKyxI,uBAAuBsO,yBACxBtuJ,EAAE8uG,WAGJ9uG,CACT,EASGw1J,wBAAAA,CACJp1J,EACA2mJ,GAEA,MAAO,CACHxlJ,UAAWnB,EAAQmB,UACnBqhH,cAAer0G,KAAKq0G,cACpBviH,OAAQy2G,GAASM,WAAWh3G,EAAQ+2G,OAAOgB,UAC3C16D,QAASspG,EACTkI,cAAc,GAUZ,4BAAM4F,CACZ/5C,EACA16G,GAEA,IAAK06G,EAID,MAHAvsG,KAAK+tG,OAAOE,QACR,gFAEExN,GAAsBi+B,GAGhC,MAAMxvF,EAAUlvC,KAAK++H,eAAersB,mBAAmB,CACnDnG,oBAGJ,IAAKr9D,EACD,MAAMuxD,GAAsBi+B,GAIhC,IACI,MAAMsmB,EAAgBhlJ,KAAKinJ,yBACvBp1J,EACAq9C,GAEE/rC,QAAenD,KAAK0lJ,kBAAkB3K,aACxCiK,GAGEkC,EAAc,IACbh4G,EACH7jD,cAAe8X,GAAQ9X,cACvBy3G,QAAS3/F,GAAQ2/F,SAGrB,MAAO,IACA3/F,EACH+rC,QAASg4G,EAEhB,CAAC,MAAOz1J,GACL,MAAMA,CACT,EAQL,0BAAMmB,CACFf,EACAs1J,GAEAnnJ,KAAK+tG,OAAOwD,MACR,0DAGJ,SAAW61C,GAAwBv1J,SAC5Bu1J,EAAoBC,mBAE3B,MAAMjB,QAAsBpmJ,KAAKqmJ,wBAC7Be,GAGEX,EAA0C,CAC5Cj4J,OAAQk4J,GAAAA,GAAsBC,SAC9B90J,QAASu0J,GAGb,IACI,MAAM13J,QACIsR,KAAKogJ,qBAAqBwG,YAAYH,GAChDzmJ,KAAK8mJ,uBAAuBp4J,EAC/B,CAAC,MAAO+C,GAEL,GAAIA,aAAasxJ,KACb/iJ,KAAKyxI,uBAAuBsO,yBACxBtuJ,EAAE8uG,WAEF0iD,GAAuBxxJ,IACvB,MAAMA,CAGjB,CACDuO,KAAK++H,eAAee,kBAChBoF,GAAAA,GAAmBoB,eACnB13I,KAAKiB,UAAUu2J,IACf,GAGJ,MAAMkB,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMryJ,qBACbwX,QAASpK,KAAK5P,OAAOmD,OAAOu4H,0BAC5BjG,WAAW,GAET5yH,EAAc+M,KAAK5P,OAAO0C,KAAKK,0BAC/Bq7B,OAAOk0B,SAASjtD,KAChBuK,KAAKugJ,eAAe1uJ,EAAQoB,aAClCk0J,EAAgB92G,IAAI,CAAE+jF,SAAS,UACzBp0H,KAAKyrH,iBAAiB7F,iBACxB3yH,EACAq0J,GASR,2BAAMC,CACFtuC,EACA5E,GAKA,GAHAr0G,KAAK+tG,OAAOwD,MACR,4DAECvxG,KAAK++H,eAAeuI,yBAAwB,GAI7C,OAHAtnI,KAAK+tG,OAAOj6G,KACR,yFAEG,KAIX,MAAMuzI,EAAgBrnI,KAAK++H,eAAeqI,yBAC1C,IAAKC,EAUD,OATArnI,KAAK+tG,OAAOsK,QACR,0GAEAY,GAAqB5E,GACrB4E,GAAmBQ,UACf,CAAElZ,UAAW,qBACb8T,GAGD,KAGX,MAAM,OAAEzoH,KAAWiG,GAAYw1I,EAC3Bz7I,GACAoU,KAAK+tG,OAAOsK,QACR,wMAIRr4G,KAAK++H,eAAejnB,WAChB93G,KAAK++H,eAAe+D,iBAChBoC,GAAAA,GAAmBoB,iBAI3B,MAAMmgB,EAA0C,CAC5Cj4J,OAAQk4J,GAAAA,GAAsBC,SAC9B90J,QAASA,GAGP0lJ,EAAe4O,KAErB,IACInmJ,KAAK+tG,OAAOsK,QACR,qFAEJ,MAAM3pH,QACIsR,KAAKogJ,qBAAqBwG,YAAYH,GAChDzmJ,KAAK8mJ,uBAAuBp4J,GAC5B,MAAMyU,EAASnD,KAAK+mJ,qBAChBr4J,EACAmD,EACA0lJ,GAEJv3I,KAAK++H,eAAewH,0BAAyB,GAC7C,MAAM70G,QAAYvuB,EAElB,OADAnD,KAAKyxI,uBAAuBuO,6BACrBtuH,CACV,CAAC,MAAOjgC,GAEL,MADAuO,KAAK++H,eAAewH,0BAAyB,GACvC90I,CACT,EAOL2zJ,MAAAA,GAEI,OADAplJ,KAAK+tG,OAAOwD,MAAM,4CACXtpG,QAAQsR,OAAO,8BAShB,0BAAMwtI,CACZr4J,EACAmD,EACA0lJ,GAEAv3I,KAAK+tG,OAAOwD,MACR,0DAIJ,MAAMlmH,EAAgBy8I,GAClBp5I,EAASmpJ,SACTj3C,IAGEmrC,EAAwB/rI,KAAKwnJ,4BAC/B94J,EACArD,GAGEo8J,EACFznJ,KAAK++H,eAAevsB,yBAAyB,CACzCjG,gBAAiB16G,EAAQmmH,aACzBpV,cAER,GACImpC,IAA0B0b,GAC1B/4J,EAASwgD,QAAQ/5B,KAAOtjB,EAAQmmH,UAGhC,MAAMkrC,GAAsBL,IAIhC,MAAM7vJ,QAAkBgN,KAAK4gJ,uBAAuB/uJ,EAAQmB,WAEtDylH,EAAcggC,GAChBz4I,KAAK++H,eACL/rI,EACA+4I,EACAnrC,GACAv1G,EACAqD,EAASqpJ,iBACT1qJ,EACAhC,EAAcmlC,SACdnjC,EACAqB,EAASwgD,QAAQ/5B,GACjBnV,KAAK+tG,QAIH5qG,QAAenD,KAAKo4I,6BACtB1pJ,EACAmD,EACAxG,EACAotH,EACAzlH,EAAU2oH,mBACV47B,GAeJ,OAXAv3I,KAAK0nJ,aAAajvC,GAClBz4G,KAAK2nJ,kBACDj5J,EACAmD,EACAk6I,EACA1gJ,EACAqD,EAASiqJ,aACTx1I,EAAO4/F,SACPw0C,GAGGp0I,EASDqkJ,2BAAAA,CACN94J,EACArD,GAWA,OAR8B8gH,GAAcyB,sBACxCl/G,EAASqpJ,aAAehvC,EAAAA,GAAUC,aAClCiD,GACAjsG,KAAK+tG,OACL/tG,KAAKy+H,cACLpzI,GAYRu8J,cAAAA,CACIl5J,EACAmD,GAEA,OAAOnD,EAASk6G,MACVL,GAASM,WAAWn6G,EAASk6G,OAC7BL,GAASM,WAAWh3G,EAAQ+2G,OAQtC,4BAAMi/C,CACFn5J,EACAmD,GAEA,GACIA,EAAQ0xG,YAAcS,EAAAA,GAAqBG,KAC3CtyG,EAAQojJ,aACV,CAOE,GAAIvmJ,EAASo5J,IAIT,OAHA9nJ,KAAK+tG,OAAOwD,MACR,8DAEG7iH,EAASo5J,IAIpB,MAAM/N,EAAuC,IAAIpF,GAC7C30I,KAAKy+H,eAEHspB,EAA6C,CAC/C9zB,sBAAuBpiI,EAAQoiI,sBAC/BE,mBAAoBtiI,EAAQsiI,mBAC5B6X,UAAWn6I,EAAQm6I,UACnBmJ,SAAUtjJ,EAAQsjJ,UAOtB,IAAKtjJ,EAAQ4xG,MACT,MAAMhD,GAAsBi+B,GAEhC,OAAOqb,EAAkB9E,aACrBvmJ,EAASiqJ,aACT9mJ,EAAQ4xG,MACRskD,EAEP,CACG,OAAOr5J,EAASiqJ,aAcd,kCAAMP,CACZ1pJ,EACAmD,EACAxG,EACAynH,EACA9/G,EACAukJ,GAGA,MAAMyQ,EAAOhoJ,KAAKioJ,+BAA+Bv5J,GAG3CkqJ,EAAiBlqJ,EAASk6G,MAC1BL,GAASM,WAAWn6G,EAASk6G,OAC7BL,GAASM,WAAWh3G,EAAQ+2G,OAE5Bs/C,EAAoBx5J,EAASwgD,QAAQi5G,YAAc,CAAC,EACpDj9C,EACFg9C,EAAuB,KACvB78J,EAAcklC,KACdllC,EAAcwlC,KACdk4E,EAAAA,GAAUC,aACRx4E,EACF03H,EAA4B,UAC5B78J,EAAcmlC,KACdu4E,EAAAA,GAAUC,aAER2E,EAAkCjC,GACpCoH,EAAcxG,sBACdj/G,EACAhC,EACAqD,EAASmpJ,UAOTlqC,EAAYpB,kBAAoB79G,EAASwgD,QAAQ/5B,KACjDw4F,EAAYpB,gBAAkB79G,EAASwgD,QAAQ/5B,IAInD,MAAMizI,QAA4BpoJ,KAAK6nJ,uBACnCn5J,EACAmD,GAEE0xG,EACF1xG,EAAQ0xG,YAAcS,EAAAA,GAAqBG,IACrCH,EAAAA,GAAqBG,IACrBH,EAAAA,GAAqBC,OAqB/B,MAnBqC,CACjCjxG,UAAWA,EACXinJ,SAAU/uC,EACVnI,SAAUvyE,EACV1+B,OAAQ8mJ,EAAehvC,UACvB16D,QAASy+D,EACT7K,QAASp0G,EAASmpJ,SAClBxsJ,cAAeA,EACfiH,YAAa81J,EACblO,YAAW8N,GAAOhoJ,KAAKqoJ,oBAAoBL,GAC3ChmD,UAAW,IAAIlqG,KACkC,IAA7C0X,OAAO+nI,EAAe7oJ,EAASoqJ,aAEnCv1C,UAAWA,EACX8Q,cAAer0G,KAAKq0G,cACpBvxF,MAAOp0B,EAASo0B,MAChBs3H,kBAAkB,GAU1BsN,YAAAA,CAAa50C,GAET9yG,KAAK++H,eAAezqB,WAAWxB,GAG/B9yG,KAAK++H,eAAelnB,qBAAqB/E,GAAejnH,OAAO4F,IAC3DuO,KAAK+tG,OAAOjiH,MACR,uEAAuE2F,IAC1E,IAcTk2J,iBAAAA,CACIj5J,EACAmD,EACAk6I,EACA1gJ,EACA+8J,EACArlD,EACAw0C,GAEA,MAAMgB,EACFlY,GACI0L,EACAl6I,EAAQmB,UACRtE,EAASmpJ,UAAY,GACrBhmJ,EAAQkB,SACR1H,EAAcmlC,KAAO,IAUvB2oH,EAAyB5B,GAL3B1lJ,EAAQ0xG,YAAcS,EAAAA,GAAqBG,IACrC4E,EAAAA,GAAUu/C,oBACsB,kBAAxB55J,EAASoqJ,WACXz9I,SAAS3M,EAASoqJ,WAAY,IAC9BpqJ,EAASoqJ,aAAe,GAElCF,EAAiB54I,KAAK4nJ,eAAel5J,EAAUmD,GAmB/C02J,EAAoB,CACtBzlD,QAASy1C,EACTjmJ,YAlBA+tI,GACI0L,EACAl6I,EAAQmB,UACRo1J,EACAv2J,EAAQkB,SACR1H,EAAcmlC,KAAOuyE,EACrB61C,EAAejuC,cACfwuC,EACA,EACAv4C,QACAvzG,EACAwE,EAAQ0xG,eACRl2G,EACAwE,EAAQ4xG,QAQXzjG,KAAKylJ,qBAAqBvxC,gBAC3Bq0C,EACA12J,EAAQuiH,cAIN6zC,8BAAAA,CACNv5J,GAEA,MAAMs5J,EAAOhoJ,KAAKwoJ,oBAAoB95J,GAEtC,OAAKs5J,GAILhoJ,KAAKi5G,kBAAkBQ,UACnB,CACIgvC,YAAazoJ,KAAKogJ,qBAAqBuF,iBACvC3I,iBACIh9I,KAAKogJ,qBAAqB0F,sBAC9B4C,kBAAmBV,EAAKW,eACxBC,uBAAwBZ,EAAKa,sBAC7BC,qBAAsBd,EAAKe,oBAC3BC,eAAgBhB,EAAKiB,YACrBC,mBAAoBlB,EAAKmB,gBACzBC,iBAAkBpB,EAAKqB,eACvBC,cAAetB,EAAKuB,WACpBC,eAAgBxB,EAAKyB,YACrBC,oBAAqB1B,EAAK2B,mBAC1BC,kBAAmB5B,EAAK6B,eACxBC,iBAAkB9B,EAAK+B,cACvBC,eAAgBhC,EAAKiC,YACrBC,mBAAoBlC,EAAKmC,kBAE7BnqJ,KAAKq0G,eAGF2zC,GAzBI,KAgCPlB,sBAAAA,CAAuBp4J,GAC3B,GACIA,EAAS+J,eAAe,iBACxB/J,EAAS+J,eAAe,aACxB/J,EAAS+J,eAAe,gBACxB/J,EAAS+J,eAAe,YACxB/J,EAAS+J,eAAe,UACxB/J,EAAS+J,eAAe,cAExB,OAAO/J,EAEP,MAAM07J,EAAAA,EAAAA,IACFC,GAAAA,EACA,yCAUJ7B,mBAAAA,CAAoB95J,GACxB,GAAIA,EAASy5J,WAAWmC,KACpB,IACI,OAAO17J,KAAKC,MAAMH,EAASy5J,WAAWmC,KACzC,CAAC,MAAO74J,GACLuO,KAAK+tG,OAAOjiH,MACR,iFAEP,CAGL,OAAO,KAQDu8J,mBAAAA,CAAoBL,GAC1B,MAA8B,qBAAnBA,EAAKuC,WACZvqJ,KAAK+tG,OAAOsK,QACR,mIAEG,KAGF2vC,EAAKuC,UAOR,6BAAMlE,CACZx0J,GAEAmO,KAAK+tG,OAAOwD,MACR,4DAGJ,MAAMv+G,EAAYnB,EAAQmB,WAAagN,KAAK5P,OAAO0C,KAAKE,UAEpDnB,EAAQq9C,eAEFlvC,KAAK4gJ,uBACP5tJ,EACAnB,EAAQg5H,kBACRh5H,EAAQq9C,SAIhB,MAAMysE,EAAqB,IAAI3M,GAAUh8G,GACzC2oH,EAAmBtM,gBAGnB,MAAM,OAAEv9G,KAAW04J,GAAwB34J,EACrCq3G,EAAW,IAAIX,GAASz2G,GAAU,IACxCo3G,EAASgB,aAAaikC,EAAAA,IAEtB,MAwCMyT,EAAuC,IACtC4I,EACHxyC,UAAWh4G,KAAKg4G,UAChBjlH,SAAUiN,KAAK5P,OAAO0C,KAAKC,SAC3BC,UAAW2oH,EAAmB1M,UAC9BrG,MAAOM,EAASyB,cAChB13G,YAAa+M,KAAKugJ,eAAe1uJ,EAAQoB,aACzCrH,OA/Cc6+J,MAEd,OAAQzqJ,KAAK09I,OACT,KAAKuH,GAAAA,GAAMyF,UACX,KAAKzF,GAAAA,GAAMC,8BAIP,OAHAllJ,KAAK+tG,OAAOwD,MACR,+DAEGs7B,EAAAA,GAAYyP,KAM3B,GAAKzqJ,EAAQjG,OAQb,OAAQiG,EAAQjG,QACZ,KAAKihJ,EAAAA,GAAYyP,KACjB,KAAKzP,EAAAA,GAAY8d,QACjB,KAAK9d,EAAAA,GAAY+d,MAIb,OAHA5qJ,KAAK+tG,OAAOwD,MACR,kEAEG1/G,EAAQjG,OACnB,QAII,MAHAoU,KAAK+tG,OAAOwD,MACR,qCAAqC1/G,EAAQjG,6CAE3Ck9H,GACFN,SApBRxoH,KAAK+tG,OAAOwD,MACR,mDAqBP,EAUOk5C,GACRp2C,cAAer0G,KAAKq0G,cACpB9Q,UAAW1xG,EAAQqoH,qBACnB2wC,qBAAsBz4J,SAAS4C,MAC/BgxJ,gBAAiB,IACVn0J,EAAQsqJ,wBACRtqJ,EAAQ4iJ,sBAEfqW,qBAAqB,EACrBrnD,MAAO5xG,EAAQioJ,QAInB,GAAI8H,EAAiB3M,cAAkBpjJ,EAAQioJ,OAC3C,MAAMhxB,GACFJ,IAUR,GANA1oH,KAAK+qJ,wBAAwBnJ,GAC7BA,EAAiBoE,gBACbpE,EAAiBoE,iBAAmB,CAAC,EACzCpE,EAAiBoE,gBAAgB/7B,UAC7B27B,GAAAA,GAAgBoF,eAEhBn5J,EAAQqoH,uBAAyBlW,EAAAA,GAAqBG,IAAK,CAE3D,MAAM4jD,EAA6C,CAC/C5zB,mBAAoBtiI,EAAQsiI,mBAC5BF,sBAAuBpiI,EAAQoiI,sBAC/B+X,UAAWn6I,EAAQm6I,UACnBmJ,SAAUtjJ,EAAQsjJ,UAGhB4E,EAAoB,IAAIpF,GAAkB30I,KAAKy+H,eAGrD,IAAIud,EACJ,GAAK4F,EAAiBn+C,MAYlBu4C,EAAah8I,KAAKy+H,cAAc39B,gBAC5BlyG,KAAKiB,UAAU,CAAEw0G,IAAKu9C,EAAiBn+C,SAE3Cm+C,EAAiB3M,cAAe,MAfP,CACzB,MAAMgW,QAA4B51B,GAC9B0kB,EAAkBnF,YAAYroJ,KAAKwtJ,GACnCp7B,GAAkBqD,oBAClBhiH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALsBghB,CAMhC0yB,EAAe/nJ,KAAK+tG,QACtBiuC,EAAaiP,EAAoBlW,aACjC6M,EAAiBn+C,MAAQwnD,EAAoB5mD,IAC7Cu9C,EAAiB3M,cAAe,CACnC,CAQD2M,EAAiB/M,OAASmH,CAC7B,CAGD,OAFAh8I,KAAK+lJ,eAAenE,GAEbA,EAQHmJ,uBAAAA,CAAwBl5J,GAC5B,GAAKA,EAAQm0J,iBAKTn0J,EAAQm0J,gBAAgBvtJ,eACpB4sJ,KAEJxzJ,EAAQm0J,gBAAgBvtJ,eACpB4sJ,KAEJxzJ,EAAQm0J,gBAAgBvtJ,eAAewtJ,IACzC,CACE,MAAMiF,EACFr5J,EAAQm0J,gBAAgBC,IACtBkF,EAAqBt5J,EAAQoB,YAC7Bm4J,EACFv5J,EAAQm0J,gBACJX,IAERxzJ,EAAQm0J,gBAAkB,CACtBkF,kBACAC,sBAEJt5J,EAAQoB,YAAcm4J,CACzB,SCtgCIC,GAaTruJ,WAAAA,CACI+wG,EACAu9C,EACAryC,EACAwvC,GAEAzoJ,KAAK+tG,OAASA,EACd/tG,KAAKsrJ,mBAAqBA,EAC1BtrJ,KAAKyoJ,YAAcA,EACnBzoJ,KAAKurJ,UAAY,IAAIhsH,IACrBv/B,KAAKwrJ,mBAAqB,IAAIjsH,IAC9Bv/B,KAAKyrJ,eAAiB,IAAIp2D,eAC1Br1F,KAAK0rJ,eAAiB1rJ,KAAK2rJ,gBAAgBp/J,KAAKyT,MAChDA,KAAKi5G,kBAAoBA,EACzBj5G,KAAK4rJ,eAAiB3yC,EAAkBiL,iBACpCvF,GAAkB2E,+BAQ1B,iBAAMsjC,CAAY53J,GACdgR,KAAK+tG,OAAOwD,MAAM,8CAClB,MAAMllG,EAA8B,CAChCw/I,QAASjG,GAAAA,GAAgBkG,WACzBrD,YAAazoJ,KAAKyoJ,YAClBsD,WAAYprD,KACZ3xG,KAAMA,GAaV,OAVAgR,KAAK+tG,OAAOwD,MACR,+DAEJvxG,KAAK+tG,OAAOuyB,SACR,gEAAgE1xI,KAAKiB,UACjEwc,MAGRrM,KAAKyrJ,eAAel2D,MAAM55C,YAAYtvC,GAE/B,IAAIpE,SAAQ,CAACqB,EAASiQ,KACzBvZ,KAAKurJ,UAAU5tJ,IAAI0O,EAAI0/I,WAAY,CAAEziJ,UAASiQ,UAAS,IAW/D,2BAAayyI,CACTj+C,EACAu9C,EACAryC,GAEAlL,EAAOwD,MAAM,iDACb,IACI,MAAM06C,EAAoB,IAAIZ,GAC1Bt9C,EACAu9C,EACAryC,EACA2sC,GAAAA,GAAgBC,wBAGpB,aADMoG,EAAkBC,uBACjBD,CACV,CAAC,MAAOx6J,GAEL,MAAM06J,EAAiB,IAAId,GACvBt9C,EACAu9C,EACAryC,GAGJ,aADMkzC,EAAeD,uBACdC,CACV,EAMG,0BAAMD,GACVlsJ,KAAK+tG,OAAOwD,MACR,uDAGJ/iF,OAAOzf,iBAAiB,UAAW/O,KAAK0rJ,gBAAgB,GAExD,MAAMr/I,EAA8B,CAChCw/I,QAASjG,GAAAA,GAAgBkG,WACzBrD,YAAazoJ,KAAKyoJ,YAClBsD,WAAYprD,KACZ3xG,KAAM,CACFR,OAAQk4J,GAAAA,GAAsB0F,mBActC,OAXApsJ,KAAK4rJ,eAAexoH,IAAI,CACpBqlH,YAAazoJ,KAAKyoJ,YAClB4D,4BAA6BrsJ,KAAKsrJ,qBAGtCtrJ,KAAKyrJ,eAAel2D,MAAMC,UAAa7wF,IACnC3E,KAAKssJ,iBAAiB3nJ,EAAM,EAGhC6pB,OAAOmtB,YAAYtvC,EAAKmiB,OAAOs7B,OAAQ,CAAC9pD,KAAKyrJ,eAAen2D,QAErD,IAAIrtF,SAAQ,CAACqB,EAASiQ,KACzBvZ,KAAKwrJ,mBAAmB7tJ,IAAI0O,EAAI0/I,WAAY,CAAEziJ,UAASiQ,WACvDvZ,KAAKusJ,UAAY/9H,OAAOxf,YAAW,KAK/Bwf,OAAO0L,oBACH,UACAl6B,KAAK0rJ,gBACL,GAEJ1rJ,KAAKyrJ,eAAel2D,MAAM5vF,QAC1B3F,KAAKyrJ,eAAen2D,MAAM3vF,QAC1B3F,KAAK4rJ,eAAev7G,IAAI,CACpBm8G,4BAA4B,EAC5Bp4B,SAAS,IAEb76G,EACIuvG,GACIV,KAGRpoH,KAAKwrJ,mBAAmBngJ,OAAOgB,EAAI0/I,WAAW,GAC/C/rJ,KAAKsrJ,mBAAmB,IAQ3BK,eAAAA,CAAgBhnJ,GAGpB,GAFA3E,KAAK+tG,OAAOwD,MAAM,iDAEd5sG,EAAMm3C,SAAWttB,OACjB,OAGJ,MAAM38B,EAAU8S,EAAMvV,KAEtB,GACKyC,EAAQg6J,SACTh6J,EAAQg6J,UAAYjG,GAAAA,GAAgBkG,cAKpCj6J,EAAQ42J,aAAe52J,EAAQ42J,cAAgBzoJ,KAAKyoJ,cAIpD52J,EAAQ7C,KAAKR,SAAWk4J,GAAAA,GAAsB0F,iBAAkB,CAChE,MAAMK,EAAoBzsJ,KAAKwrJ,mBAAmB1uJ,IAC9CjL,EAAQk6J,YAMZ,IAAKU,EAID,YAHAzsJ,KAAK+tG,OAAOwD,MACR,8EAA8E1/G,EAAQk6J,cAM9F/rJ,KAAK+tG,OAAOsK,QACRxmH,EAAQ42J,YACF,sBAAsB52J,EAAQ42J,4BAC9B,0BAEVv5I,aAAalP,KAAKusJ,WAClBvsJ,KAAKyrJ,eAAel2D,MAAM5vF,QAC1B3F,KAAKyrJ,eAAen2D,MAAM3vF,QAC1B6oB,OAAO0L,oBAAoB,UAAWl6B,KAAK0rJ,gBAAgB,GAC3D1rJ,KAAK4rJ,eAAev7G,IAAI,CACpB+jF,SAAS,EACTs4B,oBAAoB,IAExBD,EAAkBlzI,OACduvG,GACIT,IAGX,EAOGikC,gBAAAA,CAAiB3nJ,GACrB3E,KAAK+tG,OAAOwD,MAAM,mDAClB,MAAM1/G,EAAU8S,EAAMvV,KAEhBu9J,EAAW3sJ,KAAKurJ,UAAUzuJ,IAAIjL,EAAQk6J,YACtCU,EAAoBzsJ,KAAKwrJ,mBAAmB1uJ,IAC9CjL,EAAQk6J,YAGZ,IACI,MAAMv9J,EAASqD,EAAQ7C,KAAKR,OAE5B,GAAIA,IAAWk4J,GAAAA,GAAsB7nJ,SAAU,CAC3C,IAAK8tJ,EACD,OAEJ,MAAMj+J,EAAWmD,EAAQ7C,KAAKN,SAS9B,GARAsR,KAAK+tG,OAAOwD,MACR,mEAEJvxG,KAAK+tG,OAAOuyB,SACR,oEAAoE1xI,KAAKiB,UACrEnB,MAGgB,YAApBA,EAASmR,OACT8sJ,EAASpzI,OACL2pI,GACIx0J,EAASwR,KACTxR,EAASgJ,YACThJ,EAASs0J,UAGd,KAAIt0J,EAASyU,OAgBhB,MAAMinJ,EAAAA,EAAAA,IACFC,GAAAA,EACA,kCAhBA37J,EAASyU,OAAa,MACtBzU,EAASyU,OAAoB,YAE7BwpJ,EAASpzI,OACL2pI,GACIx0J,EAASyU,OAAa,KACtBzU,EAASyU,OAAoB,YAC7BzU,EAASyU,OAAY,MAI7BwpJ,EAASrjJ,QAAQ5a,EAASyU,OAOjC,CACDnD,KAAKurJ,UAAUlgJ,OAAOxZ,EAAQk6J,WACjC,MAAM,GAAIv9J,IAAWk4J,GAAAA,GAAsBkG,kBAAmB,CAC3D,IAAKH,EAID,YAHAzsJ,KAAK+tG,OAAOwD,MACR,+EAA+E1/G,EAAQk6J,cAI/F78I,aAAalP,KAAKusJ,WAClB/9H,OAAO0L,oBACH,UACAl6B,KAAK0rJ,gBACL,GAEJ1rJ,KAAKyoJ,YAAc52J,EAAQ42J,YAC3BzoJ,KAAKg9I,iBAAmBnrJ,EAAQ7C,KAAK+iB,QACrC/R,KAAK+tG,OAAOsK,QACR,qEAAqEr4G,KAAKyoJ,eAE9EzoJ,KAAK4rJ,eAAev7G,IAAI,CACpBq8G,oBAAoB,EACpBt4B,SAAS,IAGbq4B,EAAkBnjJ,UAClBtJ,KAAKwrJ,mBAAmBngJ,OAAOxZ,EAAQk6J,WAC1C,CAEJ,CAAC,MAAOlmJ,GACL7F,KAAK+tG,OAAOjiH,MAAM,6CAClBkU,KAAK+tG,OAAO6G,SACR,8CAA8C/uG,KAElD7F,KAAK+tG,OAAO6G,SAAS,mBAAmBjwG,KAEpCgoJ,EACAA,EAASpzI,OAAO1T,GACT4mJ,GACPA,EAAkBlzI,OAAO1T,EAEhC,EAOL8/I,cAAAA,GACI,OAAO3lJ,KAAKyoJ,YAOhB3C,mBAAAA,GACI,OAAO9lJ,KAAKg9I,iBAUhB,wBAAO6P,CACHz8J,EACA29G,EACA++C,EACA5yC,GAGA,GADAnM,EAAOwD,MAAM,6BACRnhH,EAAOmD,OAAO04H,kBAKf,OAJAle,EAAOwD,MACH,yEAGG,EAGX,IAAKu7C,EAKD,OAJA/+C,EAAOwD,MACH,kFAGG,EAGX,GAAI2I,EACA,OAAQA,GACJ,KAAKlW,EAAAA,GAAqBC,OAC1B,KAAKD,EAAAA,GAAqBG,IAItB,OAHA4J,EAAOwD,MACH,yEAEG,EACX,QAII,OAHAxD,EAAOwD,MACH,8EAEG,EAInB,OAAO,SC/XFw7C,GAOT/vJ,WAAAA,CACIgwJ,EACA9M,EACApZ,EACA/4B,EACAkL,GAEAj5G,KAAKitJ,WAAaD,EAClBhtJ,KAAK++H,eAAiBmhB,EACtBlgJ,KAAK8mI,gBAAkBA,EACvB9mI,KAAK+tG,OAASA,EACd/tG,KAAKi5G,kBAAoBA,EAO7B,wBAAMi0C,CACFx+J,EACAmD,GAOA,IAAIs7J,EALJntJ,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB+C,mBAClB7vH,EAAQwiH,eAIZ,IACI84C,EAAmBntJ,KAAKitJ,WAAW9R,uBAC/BzsJ,EACAmD,EAAQixB,MAEf,CAAC,MAAOrxB,GACL,MACIA,aAAag5I,IACbh5I,EAAEi5I,WAAajkB,GAGTqC,GACFrC,IAGEh1H,CAEb,CAED,OAAO4jI,GACHr1H,KAAKotJ,6BAA6B7gK,KAAKyT,MACvC2+G,GAAkB8C,6BAClBzhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAML83B,EAAkBt7J,GAWxB,kCAAMu7J,CACFD,EACAt7J,GAC6B,IAA7Bw7J,IAAAlgK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAiCA,GA/BA6S,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB8C,6BAClB5vH,EAAQwiH,eAEZr0G,KAAK+tG,OAAOwD,MACR,0DAIJvxG,KAAK8mI,gBAAgB5mI,KAAOitJ,EAAiBjtJ,KAGzCitJ,EAAiBG,gCACXj4B,GACFr1H,KAAKitJ,WAAW9Y,gBAAgB5nJ,KAAKyT,KAAKitJ,YAC1CtuC,GAAkBgD,6BAClB3hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALNghB,CAMJ83B,EAAiBG,yBAA0Bz7J,EAAQwiH,eAIrDg5C,IAEAF,EAAiB78H,MAAQz+B,EAAQy+B,YAASjjC,GAG9C8/J,EAAiBrqI,MAAQjxB,EAAQixB,MAG7BqqI,EAAiBpV,YACjB/3I,KAAK8mI,gBAAgB/5B,WAAaogD,EAAiBpV,gBAChD,CACH,MAAMtE,EAAUzzI,KAAKutJ,qBAAqB17J,GACtC4hJ,IACAzzI,KAAK8mI,gBAAgBf,cAAgB0N,EAE5C,CAUD,aAP6Bpe,GACzBr1H,KAAKitJ,WAAWlS,aAAaxuJ,KAAKyT,KAAKitJ,YACvCtuC,GAAkBiD,uBAClB5hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALiBghB,CAM3Br1H,KAAK8mI,gBAAiBqmB,GAOlBI,oBAAAA,CACN17J,GAEA,OAAIA,EAAQq9C,QACD,CACH2lE,WAAYhjH,EAAQq9C,QAAQ0zD,cAC5BrxG,KAAM2sI,IAEHrsI,EAAQgiH,UACR,CACHgB,WAAYhjH,EAAQgiH,UACpBtiH,KAAM2sI,IAIP,eC7JCsvB,GACZ7+C,EACA8+C,EACA1/C,GAGA,MAAMqtC,EAAesS,GAAiC/+C,GACtD,IAAKysC,EACD,MAAKsS,GAAiC/+C,IAOlCZ,EAAOjiH,MACH,KAAK2hK,6FAA4GA,gEAErH1/C,EAAO6G,SACH,OAAO64C,kBAAiC9+C,KAEtCma,GACF3C,MAZJpY,EAAOjiH,MACH,qDAAqD2hK,0CAAyDA,+FAE5G3kC,GAAuB7C,KAarC,OAAOm1B,CACX,CCWM,MAAOuS,WAAoB5L,GAI7B/kJ,WAAAA,CACI5M,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAusC,EACApF,EACA/rC,GAEAv0G,MACI1P,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAmnC,EACA/rC,GAGJr0G,KAAK4tJ,aAAe5tJ,KAAK4tJ,aAAarhK,KAAKyT,MAC3CA,KAAK6tJ,cAAgBrI,EAOzBzK,YAAAA,CAAalpJ,GACT,IACI,MAAMi8J,EAAY9tJ,KAAK+tJ,kBACnBl8J,EAAQC,QAAUq8I,EAAAA,GAClBt8I,EAAQmB,WAAagN,KAAK5P,OAAO0C,KAAKE,WAEpCg7J,EAAwBn8J,EAAQm8J,uBAAyB,CAAC,EAGhE,GAAIhuJ,KAAK5P,OAAOmD,OAAOw4H,YAGnB,OAFA/rH,KAAK+tG,OAAOsK,QAAQ,4CAEbr4G,KAAKiuJ,uBACRp8J,EACAi8J,EACAE,GAED,CAEHhuJ,KAAK+tG,OAAOsK,QACR,iEAEJ,MAAM61C,EAAQluJ,KAAKmuJ,eACf,cACAL,EACAE,GAEJ,OAAOhuJ,KAAKiuJ,uBACRp8J,EACAi8J,EACAE,EACAE,EAEP,CACJ,CAAC,MAAOz8J,GACL,OAAOwW,QAAQsR,OAAO9nB,EACzB,EAOL2zJ,MAAAA,CAAO9J,GACH,IACIt7I,KAAK+tG,OAAOsK,QAAQ,sBACpB,MAAM+pC,EACFpiJ,KAAKmiJ,wBAAwB7G,GAE3BwS,EAAY9tJ,KAAKouJ,wBAAwBhM,GACzCpvJ,EAAYsoJ,GAAiBA,EAActoJ,UAC3Cq7J,EACF/S,GAAiBA,EAAc+S,sBAC7BL,EACF1S,GAAe0S,uBAAyB,CAAC,EAG7C,GAAIhuJ,KAAK5P,OAAOmD,OAAOw4H,YAGnB,OAFA/rH,KAAK+tG,OAAOsK,QAAQ,2BAEbr4G,KAAKsuJ,iBACRlM,EACA0L,EACAE,EACAh7J,OACA3F,EACAghK,GAED,CAEHruJ,KAAK+tG,OAAOsK,QAAQ,0CACpB,MAAM61C,EAAQluJ,KAAKmuJ,eACf,cACAL,EACAE,GAEJ,OAAOhuJ,KAAKsuJ,iBACRlM,EACA0L,EACAE,EACAh7J,EACAk7J,EACAG,EAEP,CACJ,CAAC,MAAO58J,GAEL,OAAOwW,QAAQsR,OAAO9nB,EACzB,EAYK,4BAAMw8J,CACZp8J,EACAi8J,EACAE,EACAE,GAEAluJ,KAAK+tG,OAAOsK,QAAQ,iCACpB,MAAMo5B,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMsJ,mBAGJC,QAAqBn5B,GACvBr1H,KAAK0iJ,+BAA+Bn2J,KAAKyT,MACzC2+G,GAAkB2C,wDAClBthH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkBghB,CAMzBxjI,EAAS48J,GAAAA,GAAgBC,OAE3BrlB,GAAwBmlB,EAAax7J,WAErC,IAEI,MAAM8zI,QACIzR,GACFr1H,KAAKgiJ,mCAAmCz1J,KAAKyT,MAC7C2+G,GAAkB4C,4DAClBvhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALHghB,CAMJm5B,GAGAG,QAA4Ct5B,GAC9Cr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALyCghB,CAO9Coc,EACA+c,EAAax7J,UACbw7J,EAAa3jC,kBACb2jC,EAAat/G,SAGXq3G,EAAiB8E,GAAqBwB,kBACxC7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAKogJ,qBACLvuJ,EAAQqoH,sBAGZ,IAAI00C,EACArI,IACAqI,EACI5uJ,KAAKi5G,kBAAkBiL,iBACnBvF,GAAkBgB,+BAClB9tH,EAAQwiH,gBAKpB,MAAMw6C,QAAoBF,EAAW9T,eAAe,IAC7C2T,EACH7R,aAAc4J,IAIZuI,EAAqB,IAAI/B,GAC3B4B,EACA3uJ,KAAK++H,eACL+H,EACA9mI,KAAK+tG,OACL/tG,KAAKi5G,mBAIH81C,EAA+B,CACjCb,QACAJ,YACAE,yBAEEgB,EAAsBhvJ,KAAKivJ,oBAC7BJ,EACAE,GAEJ/uJ,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUmgH,aACVT,GAAAA,GAAgBC,MAChB,CAAEM,eACF,MAIJ,MAAMrgD,QAAuB3uG,KAAKmvJ,oBAAoBH,GAEhD5T,EAAenmB,GACjBu4B,GACA7uC,GAAkBwD,oBAClBniH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALY4gB,CAOjBtmB,EACA3uG,KAAK5P,OAAO0C,KAAKw3H,YAAYC,mBAC7BvqH,KAAK+tG,QAST,GANA68B,GAAgBkB,eACZ9rI,KAAK++H,eACL/+H,KAAK5P,OAAO0C,KAAKC,SACjB+zI,GAGAsU,EAAapjC,UAAW,CAYxB,GAXAh4G,KAAK+tG,OAAOsK,QACR,mDAGAu2C,GACAA,EAAgCv+G,IAAI,CAChC+jF,SAAS,EACTmyB,gBAAgB,KAInBvmJ,KAAKogJ,qBACN,MAAMt3B,GACFR,IAGR,MAAM8mC,EAA0B,IAAI9J,GAChCtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMsJ,kBACNvuJ,KAAKi5G,kBACLj5G,KAAKogJ,qBACLhF,EAAapjC,UACbh4G,KAAK6tJ,cACLW,EAAan6C,gBAEX,iBAAE4pB,GAAqBZ,GAAcQ,kBACvC79H,KAAKy+H,cACL+vB,EAAa1rI,OAEjB,aAAassI,EAAwBrU,aAAa,IAC3CyT,EACH1rI,MAAOm7G,EACPryI,YAAQyB,GAEf,CAQD,aALqByhK,EAAmB5B,mBACpC9R,EACAoT,EAIP,CAAC,MAAO/8J,GAUL,MATIy8J,GAEAA,EAAMvoJ,QAGNlU,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAExCA,CACT,EAYK,sBAAM68J,CACZE,EACAV,EACAE,EACAnN,EACAqN,EACAG,GAEAruJ,KAAK+tG,OAAOsK,QAAQ,2BACpBr4G,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUugH,aACVb,GAAAA,GAAgBC,MAChBF,GAGJ,MAAM/c,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMsK,aAGV,UAEUvvJ,KAAKsgJ,mBAAmBkO,EAAat/G,SAG3C,MAAMy/G,QAAmBt5B,GACrBr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALgBghB,CAOrBoc,EACAoP,OACAxzJ,EACAmhK,EAAat/G,cAAW7hD,GAG5B,IACIshK,EAAW37J,UAAUmlI,kBACxB,CAAC,MACE,GACIq2B,EAAat/G,SAAS0zD,eACtB4rD,EAAat7J,uBACby7J,EAAW37J,UAAUk6G,eAAiB5P,EACxC,CAWE,GAVKt9F,KAAK++H,eAAepnB,cACrB62C,EAAat/G,SAAS0zD,eAG1B5iG,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUygH,eACVf,GAAAA,GAAgBC,MAChBF,GAGAH,EAAuB,CACvB,MAAM/G,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMsK,YACbnlJ,QACIpK,KAAK5P,OAAOmD,OAAOu4H,0BACvBjG,WAAW,GAET4pC,EAAczgD,GAAU2B,eAC1B09C,EACA5lB,YAEEzoI,KAAKyrH,iBAAiB/F,iBACxB+pC,EACAnI,EAEP,CAMD,YAJI4G,GACAA,EAAMvoJ,QAIb,CACJ,CAGD,MAAM+pJ,EAAoBf,EAAWtT,aAAamT,GAElDxuJ,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUygH,eACVf,GAAAA,GAAgBC,MAChBF,GAIJ,MAAMQ,EAAchvJ,KAAK2vJ,UAAUD,EAAW,CAC1C5B,YACAE,wBACAE,UAaJ,GAXAluJ,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUmgH,aACVT,GAAAA,GAAgBC,MAChB,CAAEM,eACF,YAGEhvJ,KAAKmvJ,oBAAoBH,GAAanjK,OAAM,SAI9CwiK,EAAuB,CACvB,MAAM/G,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMsK,YACbnlJ,QAASpK,KAAK5P,OAAOmD,OAAOu4H,0BAC5BjG,WAAW,GAET4pC,EAAczgD,GAAU2B,eAC1B09C,EACA5lB,MAGJzoI,KAAK+tG,OAAOsK,QACR,2DAEJr4G,KAAK+tG,OAAOstB,WACR,+BAA+Bo0B,WAE7BzvJ,KAAKyrH,iBAAiB/F,iBACxB+pC,EACAnI,EAEP,MACGtnJ,KAAK+tG,OAAOsK,QAAQ,sCAE3B,CAAC,MAAO5mH,GAqBL,MApBIy8J,GAEAA,EAAMvoJ,QAGNlU,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAE9CuO,KAAK++H,eAAewH,0BAAyB,GAC7CvmI,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU6gH,eACVnB,GAAAA,GAAgBC,MAChB,KACAj9J,GAEJuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU8gH,WACVpB,GAAAA,GAAgBC,OAEdj9J,CACT,CAEDuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU8gH,WACVpB,GAAAA,GAAgBC,OAQxBO,mBAAAA,CAAoBa,EAAoBl/I,GAEpC,GAAIk/I,EAGA,OAFA9vJ,KAAK+tG,OAAOszB,QAAQ,gBAAgByuB,KAE7B9vJ,KAAK2vJ,UAAUG,EAAYl/I,GAIlC,MADA5Q,KAAK+tG,OAAOjiH,MAAM,yBACZg9H,GACF9C,IAUZmpC,mBAAAA,CAAoBH,GAChB,OAAO,IAAI/mJ,SAAgB,CAACqB,EAASiQ,KACjCvZ,KAAK+tG,OAAOsK,QACR,sDAGJ,MAAM03C,EAAaC,aAAY,KAE3B,GAAIhB,EAAYiB,OAUZ,OATAjwJ,KAAK+tG,OAAOjiH,MACR,oDAEJokK,cAAcH,QACdx2I,EACIuvG,GACIrC,KAMZ,IAAIhxH,EAAO,GACX,IAMIA,EAAOu5J,EAAYtsG,SAASjtD,IAC/B,CAAC,MAAOhE,GAAI,CAGb,IAAKgE,GAAiB,gBAATA,EACT,OAEJy6J,cAAcH,GAEd,IAAIphD,EAAiB,GACrB,MAAMtrD,EACFrjD,KAAK5P,OAAO0C,KAAKw3H,YAAYC,mBAC7BykC,IAEIrgD,EADAtrD,IAAiBmnE,EAAAA,GAAmBujB,MACnBihB,EAAYtsG,SAASl0C,OAErBwgJ,EAAYtsG,SAASwD,MAI9ClmD,KAAK+tG,OAAOsK,QACR,+EAGJ/uG,EAAQqlG,EAAe,GACxB3uG,KAAK5P,OAAOmD,OAAO44H,yBAAyB,IAChDpiH,SAAQ,KACP/J,KAAKmwJ,WAAWnB,EAAY,IAiBpCW,SAAAA,CAAUS,EAAqBC,GAC3B,IACI,IAAIrB,EAqBJ,GAnBIqB,EAAYnC,OACZc,EAAcqB,EAAYnC,MAC1BluJ,KAAK+tG,OAAOstB,WACR,+BAA+B+0B,KAEnCpB,EAAYtsG,SAASh+B,OAAO0rI,IACQ,qBAAtBC,EAAYnC,QAE1BluJ,KAAK+tG,OAAOstB,WACR,4BAA4B+0B,KAEhCpB,EAAchvJ,KAAKmuJ,eACfiC,EACAC,EAAYvC,UACZuC,EAAYrC,yBAKfgB,EACD,MAAMlmC,GACFtC,IASR,OANIwoC,EAAYvmH,OACZumH,EAAYvmH,QAEhBzoC,KAAKswJ,cAAgBtB,EACrBxgI,OAAOzf,iBAAiB,eAAgB/O,KAAK4tJ,cAEtCoB,CACV,CAAC,MAAOv9J,GAKL,MAJAuO,KAAK+tG,OAAOjiH,MACR,uBAA0B2F,EAAgBrD,SAE9C4R,KAAK++H,eAAewH,0BAAyB,GACvCzd,GACFvC,GAEP,EAUL4nC,cAAAA,CACIiC,EACAtC,EACAE,GAMA,MAAMuC,EAAU/hI,OAAOgiI,WAAahiI,OAAOgiI,WAAahiI,OAAOm+C,QACzD8jF,EAASjiI,OAAOkiI,UAAYliI,OAAOkiI,UAAYliI,OAAOo+C,QAKtD+jF,EACFniI,OAAOyT,YACP7vC,SAAS8vC,gBAAgBC,aACzB/vC,SAASpD,KAAKmzC,YACZyuH,EACFpiI,OAAOqiI,aACPz+J,SAAS8vC,gBAAgB4uH,cACzB1+J,SAASpD,KAAK8hK,aAElB,IAAIvzH,EAAQywH,EAAsB+C,WAAWxzH,MACzCD,EAAS0wH,EAAsB+C,WAAWzzH,OAC1Ci2C,EAAMy6E,EAAsBgD,eAAez9E,IAC3CtuE,EAAO+oJ,EAAsBgD,eAAe/rJ,KAoChD,QAlCKs4B,GAASA,EAAQ,GAAKA,EAAQozH,KAC/B3wJ,KAAK+tG,OAAOsK,QACR,4EAEJ96E,EAAQ6uF,GAAAA,GAAiB6kC,eAGxB3zH,GAAUA,EAAS,GAAKA,EAASszH,KAClC5wJ,KAAK+tG,OAAOsK,QACR,8EAEJ/6E,EAAS8uF,GAAAA,GAAiB8kC,gBAGzB39E,GAAOA,EAAM,GAAKA,EAAMq9E,KACzB5wJ,KAAK+tG,OAAOsK,QACR,iFAEJ9kC,EAAMvjE,KAAKmoC,IACP,EACAy4G,EAAY,EAAIxkC,GAAAA,GAAiB8kC,aAAe,EAAIT,MAIvDxrJ,GAAQA,EAAO,GAAKA,EAAO0rJ,KAC5B3wJ,KAAK+tG,OAAOsK,QACR,mFAEJpzG,EAAO+K,KAAKmoC,IACR,EACAw4G,EAAW,EAAIvkC,GAAAA,GAAiB6kC,YAAc,EAAIV,IAInD/hI,OAAO05B,KACVkoG,EACAtC,EACA,SAASvwH,aAAiBD,UAAei2C,WAAatuE,qBAO9D2oJ,YAAAA,CAAan8J,GACTuO,KAAK++H,eAAe2H,8BAChB+nB,GAAAA,GAAgBC,OAEhB1uJ,KAAKswJ,eACLtwJ,KAAKswJ,cAAc3qJ,QAGvBlU,EAAE+lE,iBAON24F,UAAAA,CAAWnB,GACHA,GAEAA,EAAYrpJ,QAGhB6oB,OAAO0L,oBAAoB,eAAgBl6B,KAAK4tJ,cAGhD5tJ,KAAK++H,eAAewH,0BAAyB,GAQjDwnB,iBAAAA,CAAkBj8J,EAAuBkB,GACrC,MAAO,GAAGo5H,GAAAA,GAAiBwc,qBACvB5oI,KAAK5P,OAAO0C,KAAKC,YACjBjB,EAAO8J,KAAK,QAAQ5I,KAAagN,KAAKq0G,gBAQ9C+5C,uBAAAA,CAAwBv8J,GACpB,MAAM+wG,EAAgB/wG,EAAQq9C,SAAWr9C,EAAQq9C,QAAQ0zD,cACzD,MAAO,GAAGwpB,GAAAA,GAAiBwc,qBAAqB5oI,KAAK5P,OAAO0C,KAAKC,YAAY6vG,KAAiB5iG,KAAKq0G,uBCnwB9F88C,GAOTn0J,WAAAA,CACIgwJ,EACA9M,EACApZ,EACA/4B,EACAkL,GAEAj5G,KAAKitJ,WAAaD,EAClBhtJ,KAAK++H,eAAiBmhB,EACtBlgJ,KAAK8mI,gBAAkBA,EACvB9mI,KAAK+tG,OAASA,EACd/tG,KAAKi5G,kBAAoBA,EAO7B,yBAAMg2C,CACFa,EACAl/I,GAIA,GAFA5Q,KAAK+tG,OAAOsK,QAAQ,8CAEhBy3C,EAAY,CAERl/I,EAAOwgJ,oBACPpxJ,KAAK+tG,OAAOsK,QACR,kFAEJr4G,KAAK++H,eAAee,kBAChBoF,GAAAA,GAAmBiB,WACnBv1H,EAAOwgJ,mBACP,IAKRpxJ,KAAK++H,eAAee,kBAChBoF,GAAAA,GAAmBmB,eACnBrmI,KAAK8mI,gBAAgBzyB,eACrB,GAEJr0G,KAAK++H,eAAe8H,iBAAiB7mI,KAAK8mI,iBAC1C9mI,KAAK+tG,OAAOszB,QACR,qDAAqDyuB,KAEzD,MAAMxI,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMryJ,qBACbwX,QAASwG,EAAOygJ,gBAChBxrC,WAAW,GAIf,GAAyC,oBAA9Bj1G,EAAOy2I,mBAAmC,CACjDrnJ,KAAK+tG,OAAOsK,QACR,6EAKJ,OAAiB,IAHAznG,EAAOy2I,mBAAmByI,IAIvC9vJ,KAAK+tG,OAAOsK,QACR,uGAEEznG,EAAO66G,iBAAiB7F,iBAC1BkqC,EACAxI,SAIJtnJ,KAAK+tG,OAAOsK,QACR,8FAIX,CASG,OAPAr4G,KAAK+tG,OAAOsK,QACR,qFAEEznG,EAAO66G,iBAAiB7F,iBAC1BkqC,EACAxI,EAIX,CAKG,MAHAtnJ,KAAK+tG,OAAOj6G,KACR,8DAEEg1H,GACF9C,IASZ,wBAAMknC,CACFx+J,EACAo0B,GAEA9iB,KAAK+tG,OAAOsK,QAAQ,6CAGpBr4G,KAAK++H,eAAewH,0BAAyB,GAG7C,MAAME,EAAWzmI,KAAK++H,eAAeuG,iBAAiBxiH,GAChDkzH,EAAeh2I,KAAK++H,eAAe6E,kBAAkB6C,GAC3D,IAAKuP,EACD,MAAMv1C,GACFi+B,EACA,gBAIR,IAAIyuB,EACJ,IACIA,EAAmBntJ,KAAKitJ,WAAW9R,uBAC/BzsJ,EACAsnJ,EAEP,CAAC,MAAOvkJ,GACL,MACIA,aAAag5I,IACbh5I,EAAEi5I,WAAajkB,GAGTqC,GACFrC,IAGEh1H,CAEb,CAGD,MAAM6/J,EAAWtxJ,KAAK++H,eAAeqG,iBAAiB4Q,GAChDub,EAAcvxJ,KAAK++H,eAAe6E,kBAAkB0tB,GAuB1D,GApBAtxJ,KAAK8mI,gBAAgB5mI,KAAOitJ,EAAiBjtJ,KAGzCitJ,EAAiBG,gCACXj4B,GACFr1H,KAAKitJ,WAAW9Y,gBAAgB5nJ,KAAKyT,KAAKitJ,YAC1CtuC,GAAkBgD,6BAClB3hH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAK8mI,gBAAgBzyB,cALnBghB,CAOF83B,EAAiBG,yBACjBttJ,KAAK8mI,gBAAgBzyB,eAI7B84C,EAAiB78H,MAAQihI,QAAelkK,EACxC8/J,EAAiBrqI,MAAQkzH,EAGrBmX,EAAiBpV,YACjB/3I,KAAK8mI,gBAAgB/5B,WAAaogD,EAAiBpV,gBAChD,CACH,MAAMyZ,EAAgBxxJ,KAAKyxJ,sBACvBD,IACAxxJ,KAAK8mI,gBAAgBf,cAAgByrB,EAE5C,CAGD,MAAME,QAAuB1xJ,KAAKitJ,WAAWlS,aACzC/6I,KAAK8mI,gBACLqmB,GAIJ,OADAntJ,KAAK++H,eAAeyH,oBAAoB1jH,GACjC4uI,EAMDD,mBAAAA,GAEN,MAAMD,EAAgBxxJ,KAAK++H,eAAe6E,kBACtCsB,GAAAA,GAAmBc,gBACnB,GAEJ,GAAIwrB,EACA,IACI,OAAO5iK,KAAKC,MAAM2iK,EACrB,CAAC,MAAO//J,GACLuO,KAAKitJ,WAAWl/C,OAAOjiH,MACnB,wCAEJkU,KAAKitJ,WAAWl/C,OAAO6G,SACnB,yCAAyC48C,IAEhD,CAEL,OAAO,MCrMT,MAAOG,WAAuB5P,GAGhC/kJ,WAAAA,CACI5M,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAusC,EACApF,EACA/rC,GAEAv0G,MACI1P,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAmnC,EACA/rC,GAEJr0G,KAAK6tJ,cAAgBrI,EAOzB,kBAAMzK,CAAalpJ,GACf,MAAM28J,QAAqBn5B,GACvBr1H,KAAK0iJ,+BAA+Bn2J,KAAKyT,MACzC2+G,GAAkB2C,wDAClBthH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkBghB,CAMzBxjI,EAAS48J,GAAAA,GAAgBmD,UAE3B5xJ,KAAK++H,eAAe6G,mBAChB4oB,EAAa1rI,MACb0rI,EAAal+H,MACbk+H,EAAax7J,UACbw7J,EAAa36C,WAAa,GAC1B26C,EAAat/G,SAAW,MAE5B,MAAMuiG,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMryJ,sBAGJi/J,EAAoBltJ,IAElBA,EAAMmtJ,YACN9xJ,KAAK+tG,OAAOsK,QACR,wEAEJr4G,KAAK++H,eAAeyH,oBAAoBgoB,EAAa1rI,OACrD9iB,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgjH,qBACVtD,GAAAA,GAAgBmD,UAEvB,EAGL,IAEI,MAAM9qB,QACIzR,GACFr1H,KAAKgiJ,mCAAmCz1J,KAAKyT,MAC7C2+G,GAAkB4C,4DAClBvhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALHghB,CAMJm5B,GAGAG,QAA4Ct5B,GAC9Cr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALyCghB,CAO9Coc,EACA+c,EAAax7J,UACbw7J,EAAa3jC,kBACb2jC,EAAat/G,SAIX4/G,EAAqB,IAAIqC,GAC3BxC,EACA3uJ,KAAK++H,eACL+H,EACA9mI,KAAK+tG,OACL/tG,KAAKi5G,mBAIH41C,QAAoBF,EAAW9T,eAAe,IAC7C2T,EACH7R,aAAc0O,GAAqBwB,kBAC/B7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAKogJ,qBACLvuJ,EAAQqoH,wBAIVk3C,EAAoBpxJ,KAAKgyJ,qBAC3BngK,EAAQu/J,mBAQZ,OANApxJ,KAAK+tG,OAAOstB,WAAW,wBAAwB+1B,KAG/C5iI,OAAOzf,iBAAiB,WAAY8iJ,SAGvB/C,EAAmBG,oBAAoBJ,EAAa,CAC7DpjC,iBAAkBzrH,KAAKyrH,iBACvB4lC,gBAAiBrxJ,KAAK5P,OAAOmD,OAAOu4H,0BACpCslC,kBAAmBA,EACnB/J,mBAAoBx1J,EAAQw1J,oBAEnC,CAAC,MAAO51J,GAOL,MANIA,aAAa6uG,EAAAA,KACb7uG,EAAE49J,iBAAiBrvJ,KAAKq0G,eACxBo9B,EAAuBuN,mBAAmBvtJ,IAE9C+8B,OAAO0L,oBAAoB,WAAY23H,GACvC7xJ,KAAK++H,eAAeyH,oBAAoBgoB,EAAa1rI,OAC/CrxB,CACT,EAUL,2BAAM81J,GAE2C,IAD7CrhG,EAAe/4D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACf8kK,EAA6C9kK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7C,MAAMokJ,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMsC,uBAEV,IACI,IAAKvnJ,KAAK++H,eAAeuI,yBAAwB,GAI7C,OAHAtnI,KAAK+tG,OAAOj6G,KACR,yFAEG,KAEX,MAAOsnJ,EAAczsC,GAAkB3uG,KAAKkyJ,oBACxChsG,GAAQ,IAEZ,IAAKk1F,EASD,OAPAp7I,KAAK+tG,OAAOj6G,KACR,wGAEJkM,KAAK++H,eAAe2H,8BAChB+nB,GAAAA,GAAgBmD,UAEpBK,EAAkBttJ,MAAM47F,UAAY,qBAC7B,KAIX,MAAM4xD,EACFnyJ,KAAK++H,eAAe6E,kBAChBsB,GAAAA,GAAmBiB,YACnB,IACCp9B,EAAAA,GAAUC,aACbopD,EACFpjD,GAAUa,kBAAkBsiD,GAKhC,GACIC,IALyBpjD,GAAUa,kBACnCrhF,OAAOk0B,SAASjtD,OAKhBuK,KAAK5P,OAAO0C,KAAKK,0BACnB,CAEE6M,KAAK+tG,OAAOsK,QACR,sDAGA85C,EAAgBhsJ,QAAQ,MAAQ,GhCjN9C,SAAsBzG,GACxB,MAAM2yJ,EAAW3yJ,EAAIqH,MAAM,KAC3BsrJ,EAAShtJ,QACTmpB,OAAOk0B,SAASwD,KAAOmsG,EAASjlK,OAAS,EAAIilK,EAASz2J,KAAK,KAAO,EACtE,CgC+MoB02J,CAAyBH,GAQ7B,aAL+BnyJ,KAAKuyJ,eAChCnX,EACA3J,EAIP,CAAM,IAAKzxI,KAAK5P,OAAO0C,KAAKK,0BAIzB,OAHA6M,KAAK+tG,OAAOsK,QACR,mEAESr4G,KAAKuyJ,eACdnX,EACA3J,GAED,IACFlJ,MACDvoI,KAAK5P,OAAOmD,OAAOy4H,sBACrB,CAKEhsH,KAAK++H,eAAee,kBAChBoF,GAAAA,GAAmBkB,SACnBz3B,GACA,GAEJ,MAAM24C,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMsC,sBACbn9I,QAASpK,KAAK5P,OAAOmD,OAAOu4H,0BAC5BjG,WAAW,GAOf,IAAI2sC,GAAiC,EACrC,GAAKL,GAAuC,SAApBA,EAmBpBnyJ,KAAK+tG,OAAOsK,QACR,kCAAkC85C,KAEtCK,QACUxyJ,KAAKyrH,iBAAiB/F,iBACxBysC,EACA7K,OAzBwC,CAEhD,MAAMmL,ahCvNtB,MACMniD,EADa,IAAItB,GAAUxgF,OAAOk0B,SAASjtD,MAChB85G,mBACjC,MAAO,GAAGe,EAAcZ,aAAaY,EAAcd,kBACvD,CgCoNqCkjD,GAEjB1yJ,KAAK++H,eAAee,kBAChBoF,GAAAA,GAAmBiB,WACnBssB,GACA,GAEJzyJ,KAAK+tG,OAAOE,QACR,8EAEJukD,QACUxyJ,KAAKyrH,iBAAiB/F,iBACxB+sC,EACAnL,EAEX,CAaD,IAAKkL,EACD,aAAaxyJ,KAAKuyJ,eACdnX,EACA3J,EAGX,CAED,OAAO,IACV,CAAC,MAAOhgJ,GAQL,MAPIA,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAE9CuO,KAAK++H,eAAe2H,8BAChB+nB,GAAAA,GAAgBmD,UAEdngK,CACT,EAQKygK,mBAAAA,CACNS,GAEA3yJ,KAAK+tG,OAAOsK,QAAQ,kCAEpB,IAAI1J,EAAiBgkD,EAChBhkD,IAKGA,EAHA3uG,KAAK5P,OAAO0C,KAAKw3H,YAAYC,qBAC7BC,EAAAA,GAAmBujB,MAEFv/G,OAAOk0B,SAASl0C,OAEhBggB,OAAOk0B,SAASwD,MAGzC,IAAIx3D,EAAWg/J,GAAiC/+C,GAEhD,GAAIjgH,EAAU,CACV,cHzTRA,EACA+vI,EACAkI,GAEA,IAAKj4I,EAASo0B,MACV,MAAMgmG,GAAuB5C,IAGjC,MAAM0sC,EAAmBp0B,GACrBC,EACA/vI,EAASo0B,OAEb,IAAK8vI,EACD,MAAM9pC,GAAuB1C,IAGjC,GAAIwsC,EAAiBjsB,kBAAoBA,EACrC,MAAM7d,GACFzC,GAGZ,CGqSgBwsC,CACInkK,EACAsR,KAAKy+H,cACLgwB,GAAAA,GAAgBmD,SAEvB,CAAC,MAAOngK,GAML,OALIA,aAAa6uG,EAAAA,IACbtgG,KAAK+tG,OAAOjiH,MACR,6CAA6C2F,EAAE8uG,cAAc9uG,EAAEsgH,gBAGhE,CAAC,KAAM,GACjB,CAMD,OhC1Wc1/B,EgCsWS7jD,QhCpWjBk0B,SAASwD,KAAO,GACoB,oBAAvCmsB,EAAcygF,QAAQC,cAE7B1gF,EAAcygF,QAAQC,aAClB,KACA,GACA,GAAG1gF,EAAc3vB,SAASoH,SAASuoB,EAAc3vB,SAAS57C,WAAWurE,EAAc3vB,SAASl0C,UgC+V5FxO,KAAK+tG,OAAOsK,QACR,2DAEG,CAAC3pH,EAAUigH,EACrB,ChC3WH,IAAoBt8B,EgC6WlB,MAAM2gF,EAAahzJ,KAAK++H,eAAe6E,kBACnCsB,GAAAA,GAAmBkB,UACnB,GAMJ,OAJApmI,KAAK++H,eAAejnB,WAChB93G,KAAK++H,eAAe+D,iBAAiBoC,GAAAA,GAAmBkB,WAGxD4sB,IACAtkK,EAAWg/J,GAAiCsF,GACxCtkK,IACAsR,KAAK+tG,OAAOsK,QACR,iEAEG,CAAC3pH,EAAUskK,IAInB,CAAC,KAAM,IAQR,oBAAMT,CACZnX,EACA3J,GAEA,MAAM3uH,EAAQs4H,EAAat4H,MAC3B,IAAKA,EACD,MAAMgmG,GAAuB5C,IAGjC,MAAMmhB,EAAgBrnI,KAAK++H,eAAeiI,iBAAiBlkH,GAG3D,GAFA9iB,KAAK+tG,OAAOsK,QAAQ,mDAEhB+iC,EAAapjC,UAAW,CAIxB,GAHAh4G,KAAK+tG,OAAOsK,QACR,oDAECr4G,KAAKogJ,qBACN,MAAMt3B,GACFR,IAGR,MAAM8mC,EAA0B,IAAI9J,GAChCtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMsJ,kBACNvuJ,KAAKi5G,kBACLj5G,KAAKogJ,qBACLhF,EAAapjC,UACbh4G,KAAK6tJ,cACLxmB,EAAchzB,gBAEZ,iBAAE4pB,GAAqBZ,GAAcQ,kBACvC79H,KAAKy+H,cACL37G,GAEJ,OAAOssI,EACFrU,aAAa,IACP1T,EACHvkH,MAAOm7G,EACPryI,YAAQyB,IAEX0c,SAAQ,KACL/J,KAAK++H,eAAeyH,oBAAoB1jH,EAAM,GAEzD,CAGD,MAAMmwI,EAAmBjzJ,KAAK++H,eAAeyG,mBAAmB1iH,GAChE,IAAKmwI,EACD,MAAMnqC,GACFzB,IAIR,MAAMsnC,QAAmBt5B,GACrBr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALgBghB,CAMvBoc,EAAwBwhB,GAE1BroB,GAAgBkB,eACZ9rI,KAAK++H,eACL/+H,KAAK5P,OAAO0C,KAAKC,SACjBs0I,GASJ,OAP2B,IAAI8pB,GAC3BxC,EACA3uJ,KAAK++H,eACLsI,EACArnI,KAAK+tG,OACL/tG,KAAKi5G,mBAEiBi0C,mBAAmB9R,EAAct4H,GAQ/D,YAAMsiI,CAAO9J,GACTt7I,KAAK+tG,OAAOsK,QAAQ,yBACpB,MAAM+pC,EAAqBpiJ,KAAKmiJ,wBAAwB7G,GAClD7J,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMG,QAGV,IACIplJ,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUugH,aACVb,GAAAA,GAAgBmD,SAChBtW,SAIEt7I,KAAKsgJ,mBAAmB8B,EAAmBlzG,SAEjD,MAAMo4G,EAAuC,CACzC5J,MAAOuH,GAAAA,GAAMG,OACbh7I,QAASpK,KAAK5P,OAAOmD,OAAOu4H,0BAC5BjG,WAAW,GAGT8oC,QAAmBt5B,GACrBr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALgBghB,CAOrBoc,EACA6J,GAAiBA,EAActoJ,eAC/B3F,EACCiuJ,GAAiBA,EAAcpsG,cAAY7hD,GAGhD,GAAIshK,EAAW37J,UAAUk6G,eAAiB5P,EACtC,IACIqxD,EAAW37J,UAAUmlI,kBACxB,CAAC,MACE,GAAIiqB,EAAmBlzG,SAAS0zD,cAW5B,OAVK5iG,KAAK++H,eAAepnB,cACrByqC,EAAmBlzG,SAAS0zD,oBAGhC5iG,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUygH,eACVf,GAAAA,GAAgBmD,SAChBxP,EAKX,CAIL,MAAMsN,EACFf,EAAWtT,aAAa+G,GAQ5B,GANApiJ,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUygH,eACVf,GAAAA,GAAgBmD,SAChBxP,IAIA9G,GAC4C,oBAArCA,EAAc+L,mBAiCrB,OAPKrnJ,KAAK++H,eAAewI,4BACrBvnI,KAAK++H,eAAewH,0BAAyB,cAE3CvmI,KAAKyrH,iBAAiB7F,iBACxB8pC,EACApI,GA3BJ,IAAiB,IAFAhM,EAAc+L,mBAAmBqI,GAc9C,OAXA1vJ,KAAK+tG,OAAOsK,QACR,8DAGCr4G,KAAK++H,eAAewI,4BACrBvnI,KAAK++H,eAAewH,0BAAyB,cAE3CvmI,KAAKyrH,iBAAiB7F,iBACxB8pC,EACApI,GAKJtnJ,KAAK++H,eAAewH,0BAAyB,GAC7CvmI,KAAK+tG,OAAOsK,QACR,gEAcf,CAAC,MAAO5mH,GAeL,MAdIA,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAE9CuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU6gH,eACVnB,GAAAA,GAAgBmD,SAChB,KACAngK,GAEJuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU8gH,WACVpB,GAAAA,GAAgBmD,UAEdngK,CACT,CAEDuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU8gH,WACVpB,GAAAA,GAAgBmD,UAQdI,oBAAAA,CAAqBkB,GAC3B,MAAM9B,EAAoB8B,GAAoB1kI,OAAOk0B,SAASjtD,KAC9D,OAAOu5G,GAAU2B,eACbygD,EACA3oB,OCjmBLv6I,eAAe+gK,GAClBa,EACA72C,EACAlL,EACAsG,EACAwX,GAOA,GALA5S,EAAkBgM,oBACdtG,GAAkBqC,iCAClB3M,IAGCy7C,EAGD,MADA/hD,EAAOj6G,KAAK,yBACNg1H,GAAuB9C,IAEjC,OAAI6F,EACOwJ,GACH89B,GACAx0C,GAAkBuC,uBAClBnT,EACAkL,EACA5E,EALGghB,CAMLy6B,EAAYjkC,EAAmB5S,EAAmB5E,GAEjD4gB,GACHm+B,GACAz0C,GAAkBwC,2BAClBpT,EACAkL,EACA5E,EALG4gB,CAML66B,EACN,CAOO5hK,eAAemlK,GAClBC,EACAlpJ,EACA+hH,EACAlT,EACAlL,EACAsG,EACAhxD,GAOA,OALA41D,EAAkBgM,oBACdtG,GAAkBsC,kCAClB5M,GAGG,IAAIpsG,SAAgB,CAACqB,EAASiQ,KAC7BnP,EAAUq/G,IACV1b,EAAOE,QACH,qEAAqE7jG,iEAQ7E,MAAMmiJ,EAAY/9H,OAAOxf,YAAW,KAChCwf,OAAO0hI,cAAcH,GACrBx2I,EACIuvG,GACInC,IAEP,GACFv8G,GAEG2lJ,EAAavhI,OAAOwhI,aAAY,KAClC,IAAIv6J,EAAe,GACnB,MAAM48E,EAAgBihF,EAAOjhF,cAC7B,IAMI58E,EAAO48E,EAAgBA,EAAc3vB,SAASjtD,KAAO,EACxD,CAAC,MAAOhE,GAAI,CAEb,IAAKgE,GAAiB,gBAATA,EACT,OAGJ,IAAIk5G,EAAiB,GACjBt8B,IAEIs8B,EADAtrD,IAAiBmnE,EAAAA,GAAmBujB,MACnB17D,EAAc3vB,SAASl0C,OAEvB6jE,EAAc3vB,SAASwD,MAGhD13B,OAAOtf,aAAaq9I,GACpB/9H,OAAO0hI,cAAcH,GACrBzmJ,EAAQqlG,EAAe,GACxBwd,EAAyB,IAC7BpiH,SAAQ,KACPkrH,GACIs+B,GACA50C,GAAkB6E,mBAClBzV,EACAkL,EACA5E,EALJ4gB,CAMEq+B,EAAO,GAEjB,CAQA,SAASH,GACL/C,EACAvkC,EACA5S,EACA5E,GAYA,OAVA4E,EAAkBgM,oBACdtG,GAAkBuC,uBAClB7M,GAQG,IAAIpsG,SAAQ,CAACqB,EAASiQ,KACzB,MAAMi6I,EAAcC,KAEpBjlI,OAAOxf,YAAW,KACTwkJ,GAKLA,EAAY1+J,IAAMs7J,EAElB9mJ,EAAQkqJ,IANJj6I,EAAO,wBAMS,GACrBsyG,EAAkB,GAE7B,CAQA,SAASunC,GAAchD,GACnB,MAAMoD,EAAcC,KAIpB,OAFAD,EAAY1+J,IAAMs7J,EAEXoD,CACX,CAOA,SAASC,KACL,MAAMC,EAAYthK,SAASynC,cAAc,UAazC,OAXA65H,EAAU3oK,UAAY,mBACtB2oK,EAAU/+J,MAAMk4C,WAAa,SAC7B6mH,EAAU/+J,MAAMg/J,SAAW,WAC3BD,EAAU/+J,MAAM4oC,MAAQm2H,EAAU/+J,MAAM2oC,OAAS,IACjDo2H,EAAU/+J,MAAMi/J,OAAS,IACzBF,EAAU3wH,aACN,UACA,+CAEJ3wC,SAASpD,KAAK2vE,YAAY+0F,GAEnBA,CACX,CAOA,SAASH,GAAmBD,GACpBlhK,SAASpD,OAASskK,EAAOnwF,YACzB/wE,SAASpD,KAAK0vE,YAAY40F,EAElC,CCnLM,MAAOO,WAA2B9R,GAIpC/kJ,WAAAA,CACI5M,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAiyB,EACAzkC,EACAusC,EACApF,EACA/rC,GAEAv0G,MACI1P,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAmnC,EACA/rC,GAEJr0G,KAAK09I,MAAQA,EACb19I,KAAK6tJ,cAAgBrI,EAOzB,kBAAMzK,CACFlpJ,GAEAmO,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBW,+BAClBztH,EAAQwiH,eAIPxiH,EAAQgiH,WACRhiH,EAAQ++B,KACP/+B,EAAQq9C,SAAYr9C,EAAQq9C,QAAQh9C,UAEtC8N,KAAK+tG,OAAOE,QACR,uGAKR,MAAM6lD,EAAe,IAAKjiK,GACtBiiK,EAAaloK,OAETkoK,EAAaloK,SAAWihJ,EAAAA,GAAYyP,MACpCwX,EAAaloK,SAAWihJ,EAAAA,GAAYknB,aAEpC/zJ,KAAK+tG,OAAOE,QACR,gDAAgD6lD,EAAaloK,eAAeihJ,EAAAA,GAAYyP,QAE5FwX,EAAaloK,OAASihJ,EAAAA,GAAYyP,MAGtCwX,EAAaloK,OAASihJ,EAAAA,GAAYyP,KAItC,MAAM0I,QAA+C3vB,GACjDr1H,KAAK0iJ,+BAA+Bn2J,KAAKyT,MACzC2+G,GAAkB2C,wDAClBthH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALyCghB,CAMnDy+B,EAAcrF,GAAAA,GAAgBuF,QAChC3qB,GAAwB2b,EAAchyJ,WAEtC,MAAMy+I,EAAyBzxI,KAAKygJ,iCAChCzgJ,KAAK09I,OAGT,IAEI,MAAMiR,QAA4Ct5B,GAC9Cr1H,KAAKsiJ,qBAAqB/1J,KAAKyT,MAC/B2+G,GAAkByC,8CAClBphH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALsCghB,CAO9Coc,EACAuT,EAAchyJ,UACdgyJ,EAAcn6B,kBACdm6B,EAAc91G,SAGlB,aAAammF,GACTr1H,KAAKi0J,kBAAkB1nK,KAAKyT,MAC5B2+G,GAAkBoC,8BAClB/gH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALCghB,CAMXs5B,EAAY3J,EACjB,CAAC,MAAOvzJ,GAKL,MAJIA,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAExCA,CACT,EAML2zJ,MAAAA,GAEI,OAAOn9I,QAAQsR,OACXuvG,GACI9B,KAWF,uBAAMitC,CACZtF,EACA3J,GAEA,MAAM3wC,EAAgB2wC,EAAc3wC,cACpCr0G,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBoC,8BAClB1M,GAIJ,MAAMyyB,QACIzR,GACFr1H,KAAKgiJ,mCAAmCz1J,KAAKyT,MAC7C2+G,GAAkB4C,4DAClBvhH,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALEghB,CAMJ2vB,GAGA6J,QAAoBx5B,GACtBs5B,EAAW9T,eAAetuJ,KAAKoiK,GAC/BhwC,GAAkB6C,eAClBxhH,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALsBghB,CAMxB,IACK2vB,EACHrI,aAAc0O,GAAqBwB,kBAC/B7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAKogJ,qBACL4E,EAAc9qC,wBAKhB40C,EAAqB,IAAI/B,GAC3B4B,EACA3uJ,KAAK++H,eACL+H,EACA9mI,KAAK+tG,OACL/tG,KAAKi5G,mBAGHi7C,QAAkB7+B,GACpB45B,GACAtwC,GAAkBqC,iCAClBhhH,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALoBghB,CAOpBw5B,EACA7uJ,KAAKi5G,kBACLj5G,KAAK+tG,OACLsG,EACAr0G,KAAK5P,OAAOmD,OAAOs4H,mBAEjBxoE,EAAerjD,KAAK5P,OAAO0C,KAAKw3H,YAAYC,mBAE5C5b,QAAuB0mB,GACzBg+B,GACA10C,GAAkBsC,kCAClBjhH,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALyBghB,CAOzB6+B,EACAl0J,KAAK5P,OAAOmD,OAAOq4H,kBACnB5rH,KAAK5P,OAAOmD,OAAO44H,yBACnBnsH,KAAKi5G,kBACLj5G,KAAK+tG,OACLsG,EACAhxD,GAEE+3F,EAAenmB,GACjBu4B,GACA7uC,GAAkBwD,oBAClBniH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALY4gB,CAMnBtmB,EAAgBtrD,EAAcrjD,KAAK+tG,QAErC,GAAIqtC,EAAapjC,UAAW,CAIxB,GAHAh4G,KAAK+tG,OAAOsK,QACR,oDAECr4G,KAAKogJ,qBACN,MAAMt3B,GACFR,IAGR,MAAM8mC,EAA0B,IAAI9J,GAChCtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLzrH,KAAK09I,MACL19I,KAAKi5G,kBACLj5G,KAAKogJ,qBACLhF,EAAapjC,UACbh4G,KAAK++H,eACL1qB,IAEE,iBAAE4pB,GAAqBZ,GAAcQ,kBACvC79H,KAAKy+H,cACLumB,EAAcliI,OAElB,OAAOuyG,GACH+5B,EAAwBrU,aAAaxuJ,KACjC6iK,GAEJzwC,GAAkBiB,oCAClB5/G,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EAPGghB,CAQL,IACK2vB,EACHliI,MAAOm7G,EACPryI,OAAQo5J,EAAcp5J,QAAUihJ,EAAAA,GAAYyP,MAEnD,CAGD,OAAOjnB,GACHy5B,EAAmB5B,mBAAmB3gK,KAAKuiK,GAC3CnwC,GAAkB+C,mBAClB1hH,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALGghB,CAML+lB,EAAc4J,IC3RlB,MAAOmP,WAA4BpS,GAKrC,kBAAMhH,CACFlpJ,GAEAmO,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBa,gCAClB3tH,EAAQwiH,eAGZ,MAAMytC,QAAoBzsB,GACtBssB,GACAhjC,GAAkBiC,sBAClB5gH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALcghB,CAMxBxjI,EAASmO,KAAK5P,OAAQ4P,KAAKi5G,kBAAmBj5G,KAAK+tG,QAC/Ci3C,EAAyC,IACxCnzJ,KACAiwJ,GAGHjwJ,EAAQoB,cAER+xJ,EAAc/xJ,YAAc+M,KAAKugJ,eAC7B1uJ,EAAQoB,cAIhB,MAAMw+I,EAAyBzxI,KAAKygJ,iCAChCwE,GAAAA,GAAMC,+BAGJkP,QAA2Bp0J,KAAKq0J,yBAClC5iB,EACAuT,EAAchyJ,UACdgyJ,EAAcn6B,kBACdm6B,EAAc91G,SAGlB,OAAOmmF,GACH++B,EAAmB7Q,2BAA2Bh3J,KAC1C6nK,GAEJz1C,GAAkB2B,6CAClBtgH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cAPLghB,CAQL2vB,GAAen5J,OAAO4F,IAGpB,MAFCA,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,GACpCA,CAAC,IAOf2zJ,MAAAA,GAEI,OAAOn9I,QAAQsR,OACXuvG,GACI9B,KAUF,8BAAMqtC,CACZ5iB,EACA8Q,EACA13B,EACA37E,GAGA,MAAMszG,QAAqBntB,GACvBr1H,KAAKyiJ,uBAAuBl2J,KAAKyT,MACjC2+G,GAAkB0C,gDAClBrhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLj5G,KAAKq0G,cALkBghB,CAMzBoc,EAAwB8Q,EAAc13B,EAAmB37E,GAC3D,OAAO,IAAIm0G,GAAmBb,EAAcxiJ,KAAKi5G,0BCtE5Cq7C,GAYTt3J,WAAAA,CACIs1I,EACAiiB,EACAxmD,EACAC,GAEAhuG,KAAK6pH,qBAAyC,qBAAXr7F,OACnCxuB,KAAK5P,OAASkiJ,EACdtyI,KAAKu0J,QAAUA,EACfv0J,KAAK+tG,OAASA,EACd/tG,KAAKguG,UAAYA,EAYrBwmD,kBAAAA,CACI3iK,EACAnD,EACAlB,GAEA,IAAKwS,KAAK6pH,qBACN,MAAMf,GACFtB,IAIR,MAAMn8H,EAAgBqD,EAASmpJ,SACzB/P,GAA6Bp5I,EAASmpJ,SAAUj3C,SAChDvzG,EAEA2pI,EAAqC,CACvC9pB,aAAcltG,KAAK5P,OAAO0C,KAAKo6G,aAC/B6O,iBAAkB/7G,KAAK5P,OAAO0C,KAAKipH,iBACnCzK,uBAAwBtxG,KAAK5P,OAAO0C,KAAKw+G,uBACzCjM,kBAAmBrlG,KAAK5P,OAAO0C,KAAKuyG,kBACpCylB,2BACI9qH,KAAK5P,OAAO0C,KAAKg4H,4BAEnB93H,EAAYnB,EAAQmB,UACpB,IAAI8jI,GACAA,GAAUmF,kBACNpqI,EAAQmB,UACRnB,EAAQg5H,mBAEZ7qH,KAAK5P,OAAOmD,OAAOi4H,cACnBxrH,KAAKu0J,QACLv9B,EACAh3H,KAAK+tG,OACLl8G,EAAQwiH,eAAiB1T,WAE7BtzG,EAEAonK,EAAoCz0J,KAAK00J,YAC3C7iK,EACArE,EAAQu/G,YAAcr+G,EAASqpJ,aAAe,GAC9C1sJ,EACA2H,GAGE8vG,EAAU9iG,KAAK20J,YACjBjmK,EACA+lK,EAAmB7xD,cACnB6xD,EAAmB5xD,YACnB4xD,EAAmBtxD,OAGjB7wG,EAAc0N,KAAK40J,gBACrB/iK,EACAnD,EACA+lK,EAAmB7xD,cACnB6xD,EAAmB5xD,YACnB4xD,EAAmBtxD,MACnB31G,GAGE+E,EAAeyN,KAAK60J,iBACtBnmK,EACA+lK,EAAmB7xD,cACnB6xD,EAAmB5xD,aAGvB,OAAO7iG,KAAKo4I,6BACRvmJ,EACA,CACIq9C,QAASulH,EACT3xD,UACAxwG,cACAC,gBAEJlH,EACA2H,GAaA0hK,WAAAA,CACJ7iK,EACAk7G,EACA1hH,EACA2H,GAIA,GAFAgN,KAAK+tG,OAAOsK,QAAQ,gCAEhBxmH,EAAQq9C,QAAS,CACjB,MAAM4jE,EAAgB3G,GAAcuB,sBAChC77G,EAAQq9C,SAGZ,OADAlvC,KAAKu0J,QAAQjgD,WAAWxB,GACjBA,CACV,CAAM,IAAK9/G,IAAe+5G,IAAe1hH,EAItC,MAHA2U,KAAK+tG,OAAOjiH,MACR,mIAEEg9H,GACFjB,IAIR,MAAMjlB,EAAgBuJ,GAAcyB,sBAChCb,EACA/5G,EAAUw5G,cACVxsG,KAAK+tG,OACL/tG,KAAKguG,UACL3iH,GAGEitJ,EAAiBjtJ,GAAemlC,IAEhCgoH,EAAgBC,GAClBz4I,KAAKu0J,QACLvhK,EACA4vG,EACAhC,GACAv1G,EACA0hH,EACA/5G,EAAU6kI,gBACVygB,OACAjrJ,OACAA,EACA2S,KAAK+tG,QAIT,OADA/tG,KAAKu0J,QAAQjgD,WAAWkkC,GACjBA,EAWHmc,WAAAA,CACJjmK,EACAk0G,EACAC,EACAE,GAEA,IAAKr0G,EAASmpJ,SAEV,OADA73I,KAAK+tG,OAAOsK,QAAQ,8CACb,KAGXr4G,KAAK+tG,OAAOsK,QAAQ,iCACpB,MAAMkoB,EAAgBF,GAClBz9B,EACAC,EACAn0G,EAASmpJ,SACT73I,KAAK5P,OAAO0C,KAAKC,SACjBgwG,GAIJ,OADA/iG,KAAKu0J,QAAQhgD,qBAAqBgsB,GAC3BA,EAYHq0B,eAAAA,CACJ/iK,EACAnD,EACAk0G,EACAC,EACAE,EACAv1G,GAEA,IAAKkB,EAASiqJ,aAIV,OAHA34I,KAAK+tG,OAAOsK,QACR,kDAEG,KACJ,IAAK3pH,EAASoqJ,WAIjB,OAHA94I,KAAK+tG,OAAOjiH,MACR,mFAEG,KACJ,IACF4C,EAASk6G,SACR/2G,EAAQC,SAAWD,EAAQC,OAAO1E,QAKpC,OAHA4S,KAAK+tG,OAAOjiH,MACR,gGAEG,KAGXkU,KAAK+tG,OAAOsK,QAAQ,qCAEpB,MAAMvmH,EAASpD,EAASk6G,MAClBL,GAASM,WAAWn6G,EAASk6G,OAC7B,IAAIL,GAAS12G,EAAQC,QACrBkwG,EACFx0G,EAAQw0G,WACRtzG,EAASoqJ,YAAa,IAAIhhJ,MAAO24C,UAAY,IAE3CszD,EACFv2G,EAAQu2G,oBACPr1G,EAASsqJ,gBAAkBtqJ,EAASoqJ,aACjC,IAAIhhJ,MAAO24C,UAAY,IAEzBiwF,EAAoBL,GACtBz9B,EACAC,EACAn0G,EAASiqJ,aACT34I,KAAK5P,OAAO0C,KAAKC,SACjBgwG,EACAjxG,EAAO64G,cACP3I,EACA+B,EACAnD,IAIJ,OADA5gG,KAAKu0J,QAAQj/C,yBAAyBorB,GAC/BA,EAWHm0B,gBAAAA,CACJnmK,EACAk0G,EACAC,GAEA,IAAKn0G,EAASqlJ,cAIV,OAHA/zI,KAAK+tG,OAAOsK,QACR,mDAEG,KAGXr4G,KAAK+tG,OAAOsK,QAAQ,sCACpB,MAAMsoB,EAAqBN,GACvBz9B,EACAC,EACAn0G,EAASqlJ,cACT/zI,KAAK5P,OAAO0C,KAAKC,SACjBrE,EAASgrJ,UACTrsJ,EACAqB,EAAS+qJ,0BAIb,OADAz5I,KAAKu0J,QAAQ9/C,0BAA0BksB,GAChCA,EAWHyX,4BAAAA,CACJvmJ,EACAsiH,EACA9oH,EACA2H,GAEA,IAGIqwG,EAHA/wG,EAAsB,GACtBsmJ,EAAgC,GAChC52C,EAAyB,KAGzBmS,GAAa7hH,cACbA,EAAc6hH,EAAY7hH,YAAY0jE,OACtC4iF,EAAiBrwC,GAASM,WACtBsL,EAAY7hH,YAAYZ,QAC1Bk4G,UACF5H,EAAY,IAAIlqG,KACgC,IAA5C0X,OAAO2kG,EAAY7hH,YAAY0vG,YAEnCqB,EAAe,IAAIvrG,KACqC,IAApD0X,OAAO2kG,EAAY7hH,YAAYyxG,qBAIvC,MAAM+O,EAAgBqB,EAAYjlE,QAElC,MAAO,CACHl8C,UAAWA,EAAYA,EAAU2oH,mBAAqB,GACtDs+B,SAAU9lC,EAAYjlE,QAAQo8D,eAC9BvI,SAAUoR,EAAYjlE,QAAQi0D,MAC9BrxG,OAAQ8mJ,EACR1pG,QAAS4jE,EAAcxG,iBACvBxJ,QAASqR,EAAYrR,SAAS9sC,QAAU,GACxC3qE,cAAeA,GAAiB,CAAC,EACjCiH,YAAaA,EACb4nJ,WAAW,EACXl4C,UAAWA,EACXqS,cAAexiH,EAAQwiH,eAAiB,GACxCwlC,UAAW,GACXx2C,aAAcA,EACdmB,SAAU2P,EAAY5hH,cAAciyG,UAAY,GAChDjB,UAAW4Q,GAAa7hH,aAAaixG,WAAa,GAClDzgF,MAAOjxB,EAAQixB,OAAS,GACxB0qF,mBAAoBsF,EAActF,oBAAsB,GACxDC,YAAaqF,EAAcrF,aAAe,GAC1C2sC,kBAAkB,ICzYxB,MAAO0a,WAAyCpa,GAClD19I,WAAAA,CAAY5M,GACR0P,MAAM1P,GACN4P,KAAK26I,oBAAqB,GCkB5B,MAAOoa,WAA6BhT,GAGtC/kJ,WAAAA,CACI5M,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAiyB,EACAzkC,EACAmnC,EACA/rC,GAEAv0G,MACI1P,EACA8vJ,EACAzhB,EACA1wB,EACAoyC,EACA10B,EACAxS,EACAmnC,EACA/rC,GAEJr0G,KAAK09I,MAAQA,EAOjB,kBAAM3C,CACFlpJ,GAGA,IAAKA,EAAQqO,KACT,MAAM4oH,GACFf,IAKR,MAAMi9B,QAA+C3vB,GACjDr1H,KAAK0iJ,+BAA+Bn2J,KAAKyT,MACzC2+G,GAAkB2C,wDAClBthH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALyCghB,CAMnDxjI,EAAS48J,GAAAA,GAAgBuF,QAErBviB,EAAyBzxI,KAAKygJ,iCAChCzgJ,KAAK09I,OAGT,IAEI,MAAM5W,EAAkD,IACjDke,EACH9kJ,KAAMrO,EAAQqO,MAIZsiJ,QAAqBntB,GACvBr1H,KAAKyiJ,uBAAuBl2J,KAAKyT,MACjC2+G,GAAkB0C,gDAClBrhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALeghB,CAOvBoc,EACAuT,EAAchyJ,UACdgyJ,EAAcn6B,kBACdm6B,EAAc91G,SAEZy/G,EACF,IAAImG,GAAiCtS,GACzCxiJ,KAAK+tG,OAAOsK,QAAQ,4BAGpB,MAAMy2C,EAAqB,IAAI/B,GAC3B4B,EACA3uJ,KAAK++H,eACL+H,EACA9mI,KAAK+tG,OACL/tG,KAAKi5G,mBAIT,aAAaoc,GACTy5B,EAAmB1B,6BAA6B7gK,KAC5CuiK,GAEJnwC,GAAkB8C,6BAClBzhH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cAPCghB,CAST,CACIn1H,KAAMrO,EAAQqO,KACdq6I,aAAc1oJ,EAAQ47G,YACtB6sC,sBAAuBzoJ,EAAQ27G,mBAC/B8/C,yBAA0Bz7J,EAAQmjK,uBAEtChQ,GACA,EAEP,CAAC,MAAOvzJ,GAKL,MAJIA,aAAa6uG,EAAAA,KACZ7uG,EAAgB49J,iBAAiBrvJ,KAAKq0G,eACvCo9B,EAAuBuN,mBAAmBvtJ,IAExCA,CACT,EAML2zJ,MAAAA,GAEI,OAAOn9I,QAAQsR,OACXuvG,GACI9B,MCnEhB,SAASiuC,GACL/lH,GAEA,MAAM7jD,EAAgB6jD,GAAS7jD,cAC/B,OAAIA,GAAekgH,KAAOlgH,GAAemgH,IAC9B,MAGNngH,GAAemlC,IAEc,yCAAvBnlC,GAAemlC,IACf,MAEJ,WALP,CAMJ,CAEA,SAASu4G,GACLD,EACAosB,GAEA,IACIC,GAA4BrsB,EAC/B,CAAC,MAAOr3I,GAEL,MADAyjK,EAAiB7kH,IAAI,CAAE+jF,SAAS,GAAS3iI,GACnCA,CACT,CACL,OAEa2jK,GAmFTp4J,WAAAA,CAAYq4J,GACRr1J,KAAKq1J,iBAAmBA,EACxBr1J,KAAK6pH,qBACD7pH,KAAKq1J,iBAAiBxrC,uBAE1B7pH,KAAK5P,OAASilK,EAAiBtoC,YAC/B/sH,KAAK8oI,aAAc,EAGnB9oI,KAAK+tG,OAAS/tG,KAAKq1J,iBAAiBroC,YAGpChtH,KAAKwrH,cAAgBxrH,KAAK5P,OAAOmD,OAAOi4H,cAGxCxrH,KAAKyrH,iBAAmBzrH,KAAK5P,OAAOmD,OAAOk4H,iBAG3CzrH,KAAKs1J,iBAAmB,IAAI/1H,IAG5Bv/B,KAAKu1J,wBAA0B,IAAIh2H,IAGnCv/B,KAAKi5G,kBAAoBj5G,KAAK5P,OAAO65H,UAAU75G,OAG/CpQ,KAAKy+H,cAAgBz+H,KAAK6pH,qBACpB,IAAI6I,GAAU1yH,KAAK+tG,OAAQ/tG,KAAKi5G,mBAChCvY,GAEN1gG,KAAKmgJ,aAAe,IAAI3W,GAAaxpI,KAAK+tG,OAAQ/tG,KAAKy+H,eAGvDz+H,KAAK++H,eAAiB/+H,KAAK6pH,qBACrB,IAAI8U,GACA3+H,KAAK5P,OAAO0C,KAAKC,SACjBiN,KAAK5P,OAAOgD,MACZ4M,KAAKy+H,cACLz+H,KAAK+tG,OhDglCjB,SACF0Q,GAEA,MAAM+2C,EAA4B/2C,EAAYnN,uBAC9C,IAAIA,EAEJ,GAAIkkD,EACA,IACIlkD,EAAyB1iH,KAAKC,MAAM2mK,EACvC,CAAC,MAAO/jK,GACL,MAAMq2G,GACFZ,GAEP,CAEL,MAAO,CACHyU,mBAAoB8C,EAAYzrH,UAC1BmqI,GAAmB1e,EAAYzrH,gBAC/B3F,EACN0uH,iBAAkB0C,EAAY1C,iBAC9BzK,uBAAwBA,EAEhC,CgDrmCkBmkD,CAA4Bz1J,KAAK5P,OAAO0C,MACxCkN,KAAKi5G,mBxC8oDsBy8C,EACzC3iK,EACAg7G,KAEA,MAAM4kC,EAAuC,CACzCt/I,cAAe23H,GAAAA,GAAqBiH,cACpC/G,uBAAwBF,GAAAA,GAAqBiH,cAC7C3+H,wBAAwB,EACxB63H,eAAe,EACfC,uBAAuB,EACvB/N,2BAA2B,GAE/B,OAAO,IAAIshB,GACP5rI,EACA4/I,EACAjyC,GACAqN,EACH,EwC7pDS2nD,CACI11J,KAAK5P,OAAO0C,KAAKC,SACjBiN,KAAK+tG,QAIf,MAAM4nD,EAA6C,CAC/CtiK,cAAe23H,GAAAA,GAAqBiH,cACpC/G,uBAAwBF,GAAAA,GAAqBiH,cAC7C3+H,wBAAwB,EACxB63H,eAAe,EACfC,uBAAuB,EACvB/N,2BAA2B,GAE/Br9G,KAAK41J,sBAAwB,IAAIj3B,GAC7B3+H,KAAK5P,OAAO0C,KAAKC,SACjB4iK,EACA31J,KAAKy+H,cACLz+H,KAAK+tG,YACL1gH,EACA2S,KAAKi5G,mBAITj5G,KAAKy1I,WAAa,IAAI6e,GAClBt0J,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAK+tG,OACL/tG,KAAKy+H,eAGTz+H,KAAK61J,0BAA4B,IAAIt2H,IAGrCv/B,KAAK81J,oBAAsB91J,KAAK81J,oBAAoBvpK,KAAKyT,MAGzDA,KAAK+1J,mCACD/1J,KAAK+1J,mCAAmCxpK,KAAKyT,MAGrD,6BAAag2J,CACTX,EACAxjK,GAEA,MAAMiS,EAAa,IAAIsxJ,GAAmBC,GAE1C,aADMvxJ,EAAWypH,WAAW17H,GACrBiS,EAGHgyJ,mBAAAA,CAAoBzhD,GACnBA,IAGLr0G,KAAK+tG,OAAOj6G,KAAK,oCACjBkM,KAAKi5G,kBAAkBsM,gBACnB,CAAE0wC,sBAAuB,GACzB5hD,IAQR,gBAAMkZ,CAAW17H,GAEb,GADAmO,KAAK+tG,OAAOwD,MAAM,qBACdvxG,KAAK8oI,YAIL,YAHA9oI,KAAK+tG,OAAOj6G,KACR,sDAKR,MAAMoiK,EACFrkK,GAASwiH,eAAiBr0G,KAAKm2J,0BAC7BlqC,EAAoBjsH,KAAK5P,OAAOmD,OAAO04H,kBACvCmqC,EAAkBp2J,KAAKi5G,kBAAkBiL,iBAC3CvF,GAAkBmC,4BAClBo1C,GAIJ,GAFAl2J,KAAKmgJ,aAAanW,UAAUj7F,GAAAA,EAAUsnH,kBAElCpqC,EACA,IACIjsH,KAAK8sJ,8BACKzB,GAAqBW,eACvBhsJ,KAAK+tG,OACL/tG,KAAK5P,OAAOmD,OAAO24H,6BACnBlsH,KAAKi5G,kBAEhB,CAAC,MAAOxnH,GACLuO,KAAK+tG,OAAOsK,QAAQ5mH,EACvB,CAGAuO,KAAK5P,OAAOgD,MAAMiqH,4BACnBr9G,KAAK+tG,OAAOsK,QACR,mFAGEgd,GACFr1H,KAAK++H,eAAemF,6BAA6B33I,KAC7CyT,KAAK++H,gBAETpgB,GAAkB8E,6BAClBzjH,KAAK+tG,OACL/tG,KAAKi5G,kBACLi9C,EAPE7gC,CAQJr1H,KAAKi5G,kBAAmBi9C,IAG9Bl2J,KAAK8oI,aAAc,EACnB9oI,KAAKmgJ,aAAanW,UAAUj7F,GAAAA,EAAUunH,gBAEtCF,EAAgB/lH,IAAI,CAAE47E,oBAAmBmI,SAAS,IAYtD,2BAAMmzB,CACFrhG,GAMA,GAJAlmD,KAAK+tG,OAAOsK,QAAQ,gCAEpBwwB,GAA2C7oI,KAAK8oI,aAE5C9oI,KAAK6pH,qBAAsB,CAM3B,MAAM0sC,EAAsBrwG,GAAQ,GACpC,IAAIx3D,EAAWsR,KAAKs1J,iBAAiBx4J,IAAIy5J,GAazC,MAZwB,qBAAb7nK,GACPA,EAAWsR,KAAKw2J,8BAA8BtwG,GAC9ClmD,KAAKs1J,iBAAiB33J,IAAI44J,EAAqB7nK,GAC/CsR,KAAK+tG,OAAOsK,QACR,kFAGJr4G,KAAK+tG,OAAOsK,QACR,8FAID3pH,CACV,CAID,OAHAsR,KAAK+tG,OAAOsK,QACR,+DAEG,KAQH,mCAAMm+C,CACVtwG,GAEA,MAAMuwG,EAAmBz2J,KAAK0uC,iBACxB78C,EACFmO,KAAK++H,eAAeqI,yBAClBsvB,EACF7kK,GACAw5J,GAAqBwB,kBACjB7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAK8sJ,0BAET9sJ,KAAK8sJ,0BACJ5mG,EACCmuD,EAAgBqiD,EAChB7kK,GAASwiH,cACTr0G,KAAK++H,eAAe6E,kBAChBsB,GAAAA,GAAmBmB,gBACnB,IACC,GACL8gB,EAAkBnnJ,KAAKi5G,kBAAkBiL,iBAC3CvF,GAAkBO,qBAClB7K,GAOJ,IAAIihD,EACJ,GANAt1J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU4nH,sBACVlI,GAAAA,GAAgBmD,UAIhB8E,GAAa12J,KAAK8sJ,wBAAyB,CAC3C9sJ,KAAK+tG,OAAOwD,MACR,gEAEJ,MAAMqlD,EAAe,IAAItR,GACrBtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMsC,sBACNvnJ,KAAKi5G,kBACLj5G,KAAK8sJ,wBACLj7J,EAAQmmH,UACRh4G,KAAK41J,sBACL/jK,EAAQwiH,eAGZihD,EAAmBjgC,GACfuhC,EAAarP,sBAAsBh7J,KAAKqqK,GACxCj4C,GAAkBwE,uCAClBnjH,KAAK+tG,OACL/tG,KAAKi5G,kBACLkuC,EAAgBxiJ,MAAM0vG,cALPghB,CAMjBr1H,KAAKi5G,kBAAmBkuC,EAAgBxiJ,MAAM0vG,cACnD,KAAM,CACHr0G,KAAK+tG,OAAOwD,MACR,yDAEJ,MAAMslD,EAAiB72J,KAAK82J,qBAAqBziD,GACjDihD,EAAmBjgC,GACfwhC,EAAetP,sBAAsBh7J,KAAKsqK,GAC1Cl4C,GAAkBuE,iCAClBljH,KAAK+tG,OACL/tG,KAAKi5G,kBACLkuC,EAAgBxiJ,MAAM0vG,cALPghB,CAMjBnvE,EAAMihG,EACX,CAED,OAAOmO,EACF5rJ,MAAMvG,IACH,GAAIA,EAAQ,CAIJszJ,EAAiBrpK,OAAS4S,KAAK0uC,iBAAiBthD,QAEhD4S,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUC,cACVy/G,GAAAA,GAAgBmD,SAChBzuJ,GAEJnD,KAAK+tG,OAAOsK,QACR,2DAGJr4G,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgoH,sBACVtI,GAAAA,GAAgBmD,SAChBzuJ,GAEJnD,KAAK+tG,OAAOsK,QACR,kEAGR8uC,EAAgB92G,IAAI,CAChB+jF,SAAS,EACT4iC,YAAa/B,GAAe9xJ,EAAO+rC,UAE1C,MAKOi4G,EAAgBxiJ,MAAM47F,UACtB4mD,EAAgB92G,IAAI,CAAE+jF,SAAS,IAE/B+yB,EAAgB3iC,UASxB,OALAxkH,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUkoH,oBACVxI,GAAAA,GAAgBmD,UAGbzuJ,CAAM,IAEhBtX,OAAO4F,IACJ,MAAMylK,EAAazlK,EA6BnB,MA3BIglK,EAAiBrpK,OAAS,EAC1B4S,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUooH,sBACV1I,GAAAA,GAAgBmD,SAChB,KACAsF,GAGJl3J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUqoH,cACV3I,GAAAA,GAAgBmD,SAChB,KACAsF,GAGRl3J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUkoH,oBACVxI,GAAAA,GAAgBmD,UAGpBzK,EAAgB92G,IACZ,CACI+jF,SAAS,GAEb8iC,GAGEzlK,CAAC,IAanB,0BAAMmB,CAAqBf,GAEvB,MAAMwiH,EAAgBr0G,KAAKm2J,wBAAwBtkK,GACnDmO,KAAK+tG,OAAOsK,QAAQ,8BAA+BhE,GAEnD,MAAMgjD,EAAiBr3J,KAAKi5G,kBAAkBiL,iBAC1CvF,GAAkBM,wBAClB5K,GAEJgjD,EAAej0H,IAAI,CACf4zH,YAAa/B,GAAepjK,EAAQq9C,SACpCooH,WAAYzlK,EAAQylK,aAGxB,MAAMC,EAAuB1lK,EAAQw1J,mBACrCx1J,EAAQw1J,mBAAsB3nJ,IAC1B,MAAM83J,EAC8B,oBAAzBD,EACDA,EAAqB73J,QACrBrS,EAMV,OALiB,IAAbmqK,EACAH,EAAehnH,IAAI,CAAE+jF,SAAS,IAE9BijC,EAAe7yC,UAEZgzC,CAAQ,EAInB,MAAMC,EAAaz3J,KAAK0uC,iBAAiBthD,OAAS,EAClD,IAkBI,IAAI+V,EAEJ,GAnBA+lI,GAAoClpI,KAAK8oI,YAAa9oI,KAAK5P,QAC3D4P,KAAK++H,eAAewH,0BAAyB,GAEzCkxB,EACAz3J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU2oH,oBACVjJ,GAAAA,GAAgBmD,SAChB//J,GAGJmO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU4oH,YACVlJ,GAAAA,GAAgBmD,SAChB//J,GAMJmO,KAAK8sJ,yBAA2B9sJ,KAAK43J,aAAa/lK,GAAU,CAe5DsR,EAdqB,IAAImiJ,GACrBtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMryJ,qBACNoN,KAAKi5G,kBACLj5G,KAAK8sJ,wBACL9sJ,KAAK63J,mBAAmBhmK,GACxBmO,KAAK41J,sBACLvhD,GAGCzhH,qBAAqBf,EAASwlK,GAC9BxrK,OAAO4F,IACJ,GACIA,aAAasxJ,IACbE,GAAuBxxJ,GACzB,CACEuO,KAAK8sJ,6BAA0Bz/J,EAG/B,OADI2S,KAAK82J,qBAAqBziD,GACR0mC,aAAalpJ,EACtC,CAAM,GAAIJ,aAAaiB,GAAAA,GAA8B,CAClDsN,KAAK+tG,OAAOsK,QACR,mHAIJ,OADIr4G,KAAK82J,qBAAqBziD,GACR0mC,aAAalpJ,EACtC,CAED,MADAmO,KAAK++H,eAAewH,0BAAyB,GACvC90I,CAAC,GAElB,KAAM,CAEH0R,EADuBnD,KAAK82J,qBAAqBziD,GACzB0mC,aAAalpJ,EACxC,CAED,aAAasR,CAChB,CAAC,MAAO1R,GAiBL,MAhBA4lK,EAAehnH,IAAI,CAAE+jF,SAAS,GAAS3iI,GACnCgmK,EACAz3J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUooH,sBACV1I,GAAAA,GAAgBmD,SAChB,KACAngK,GAGJuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUqoH,cACV3I,GAAAA,GAAgBmD,SAChB,KACAngK,GAGFA,CACT,EAcL88J,iBAAAA,CAAkB18J,GACd,MAAMwiH,EAAgBr0G,KAAKm2J,wBAAwBtkK,GAC7CimK,EAAqB93J,KAAKi5G,kBAAkBiL,iBAC9CvF,GAAkBK,kBAClB3K,GAGJyjD,EAAmB10H,IAAI,CACnBk0H,WAAYzlK,EAAQylK,WACpBN,YAAa/B,GAAepjK,EAAQq9C,WAGxC,IACIlvC,KAAK+tG,OAAOsK,QAAQ,2BAA4BhE,GAChD00B,GAAe/oI,KAAK8oI,YAAagvB,GACjC93J,KAAK++H,eAAewH,0BAAyB,EAChD,CAAC,MAAO90I,GAEL,OAAOwW,QAAQsR,OAAO9nB,EACzB,CAGD,MAAMglK,EAAmBz2J,KAAK0uC,iBAe9B,IAAIvrC,EAEJ,GAhBIszJ,EAAiBrpK,OAAS,EAC1B4S,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU2oH,oBACVjJ,GAAAA,GAAgBC,MAChB78J,GAGJmO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU4oH,YACVlJ,GAAAA,GAAgBC,MAChB78J,GAMJmO,KAAK43J,aAAa/lK,GAClBsR,EAASnD,KAAK+3J,mBACV,IACOlmK,EACHwiH,iBAEJ4wC,GAAAA,GAAMsJ,mBAEL7kJ,MAAMhb,IACHsR,KAAK++H,eAAewH,0BAAyB,GAC7CuxB,EAAmBznH,IAAI,CACnB+jF,SAAS,EACTmyB,gBAAgB,EAChB1M,UAAWnrJ,EAASmrJ,UACpBmd,YAAa/B,GAAevmK,EAASwgD,WAElCxgD,KAEV7C,OAAO4F,IACJ,GACIA,aAAasxJ,IACbE,GAAuBxxJ,GACzB,CACEuO,KAAK8sJ,6BAA0Bz/J,EAG/B,OADI2S,KAAKg4J,kBAAkB3jD,GACR0mC,aAAalpJ,EACnC,CAAM,GAAIJ,aAAaiB,GAAAA,GAA8B,CAClDsN,KAAK+tG,OAAOsK,QACR,gHAIJ,OADIr4G,KAAKg4J,kBAAkB3jD,GACR0mC,aAAalpJ,EACnC,CAED,MADAmO,KAAK++H,eAAewH,0BAAyB,GACvC90I,CAAC,QAEZ,CAEH0R,EADoBnD,KAAKg4J,kBAAkB3jD,GACtB0mC,aAAalpJ,EACrC,CAED,OAAOsR,EACFuG,MAAMvG,IAKCszJ,EAAiBrpK,OAAS4S,KAAK0uC,iBAAiBthD,OAEhD4S,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUC,cACVy/G,GAAAA,GAAgBC,MAChBvrJ,GAGJnD,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgoH,sBACVtI,GAAAA,GAAgBC,MAChBvrJ,GAIR20J,EAAmBznH,IAAI,CACnB+jF,SAAS,EACTylB,UAAW12I,EAAO02I,UAClBoe,gBAAiB90J,EAAO7Q,YAAYlF,OACpC8qK,YAAa/0J,EAAO2/F,QAAQ11G,OAC5B4pK,YAAa/B,GAAe9xJ,EAAO+rC,WAEhC/rC,KAEVtX,OAAO4F,IACAglK,EAAiBrpK,OAAS,EAC1B4S,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUooH,sBACV1I,GAAAA,GAAgBC,MAChB,KACAj9J,GAGJuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUqoH,cACV3I,GAAAA,GAAgBC,MAChB,KACAj9J,GAIRqmK,EAAmBznH,IACf,CACI+jF,SAAS,GAEb3iI,GAIGwW,QAAQsR,OAAO9nB,MAI1BskK,kCAAAA,GACJ,MAAMjxC,EACF9kH,KAAKm4J,sBACLn4J,KAAKo4J,mCACJtzC,IAIL9kH,KAAK+tG,OAAOj6G,KACR,uCACAgxH,EAAYngH,MAAM5S,MAEtB+yH,EAAYL,UAAU,CAClBwxC,sBAAuB,KAsB/B,eAAMvL,CAAU74J,GACZ,MAAMwiH,EAAgBr0G,KAAKm2J,wBAAwBtkK,GAC7C28J,EAAe,IACd38J,EAEHjG,OAAQiG,EAAQjG,OAChByoH,cAAeA,GA0BnB,IAAIlxG,EAEJ,GA1BAnD,KAAKm4J,qBAAuBn4J,KAAKi5G,kBAAkBiL,iBAC/CvF,GAAkBc,UAClBpL,GAEJr0G,KAAKm4J,sBAAsB/0H,IAAI,CAC3Bk0H,WAAYzlK,EAAQylK,WACpBN,YAAa/B,GAAepjK,EAAQq9C,WAExC65F,GAAe/oI,KAAK8oI,YAAa9oI,KAAKm4J,sBACtCn4J,KAAKm4J,sBAAsB1zC,UAAU,CACjCwxC,sBAAuB,IAG3B7jK,SAAS2c,iBACL,mBACA/O,KAAK+1J,oCAET/1J,KAAK+tG,OAAOsK,QAAQ,mBAAoBhE,GACxCr0G,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUspH,iBACV5J,GAAAA,GAAgBuF,OAChBxF,GAKAxuJ,KAAK43J,aAAapJ,GAClBrrJ,EAASnD,KAAK+3J,mBACVvJ,EACAvJ,GAAAA,GAAMyF,WACR7+J,OAAO4F,IAEL,GAAIA,aAAasxJ,IAAmBE,GAAuBxxJ,GAAI,CAC3DuO,KAAK8sJ,6BAA0Bz/J,EAI/B,OAH2B2S,KAAKs4J,yBAC5B9J,EAAan6C,eAES0mC,aAAayT,EAC1C,CACD,MAAM/8J,CAAC,QAER,CAIH0R,EAH2BnD,KAAKs4J,yBAC5B9J,EAAan6C,eAEW0mC,aAAayT,EAC5C,CAED,OAAOrrJ,EACFuG,MAAMhb,IACHsR,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUwpH,mBACV9J,GAAAA,GAAgBuF,OAChBtlK,GAEJsR,KAAKm4J,sBAAsB9nH,IAAI,CAC3B+jF,SAAS,EACTmyB,eAAgB73J,EAAS0rJ,iBACzBP,UAAWnrJ,EAASmrJ,UACpBoe,gBAAiBvpK,EAAS4D,YAAYlF,OACtC8qK,YAAaxpK,EAASo0G,QAAQ11G,OAC9B4pK,YAAa/B,GAAevmK,EAASwgD,WAElCxgD,KAEV7C,OAAO4F,IAaJ,MAZAuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUypH,mBACV/J,GAAAA,GAAgBuF,OAChB,KACAviK,GAEJuO,KAAKm4J,sBAAsB9nH,IACvB,CACI+jF,SAAS,GAEb3iI,GAEEA,CAAC,IAEVsY,SAAQ,KACL3X,SAAS8nC,oBACL,mBACAl6B,KAAK+1J,mCACR,IAcb,wBAAM0C,CACF5mK,GAEA,MAAMwiH,EAAgBr0G,KAAKm2J,wBAAwBtkK,GACnDmO,KAAK+tG,OAAOwD,MAAM,4BAA6B8C,GAC/C,MAAMqkD,EAAkB14J,KAAKi5G,kBAAkBiL,iBAC3CvF,GAAkBC,mBAClBvK,GAEJ00B,GAAe/oI,KAAK8oI,YAAa4vB,GACjC14J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU4pH,4BACVlK,GAAAA,GAAgBuF,OAChBniK,GAEJ6mK,EAAgBt1H,IAAI,CAAEk0H,WAAYzlK,EAAQylK,aAE1C,IACI,GAAIzlK,EAAQqO,MAAQrO,EAAQ06G,gBAExB,MAAMuc,GACFb,IAED,GAAIp2H,EAAQqO,KAAM,CACrB,MAAM04J,EAAiB/mK,EAAQqO,KAC/B,IAAIxR,EAAWsR,KAAKu1J,wBAAwBz4J,IAAI87J,GAmDhD,OAlDKlqK,GA4CDsR,KAAK+tG,OAAOsK,QACR,4CACAhE,GAEJqkD,EAAgBl0C,YA/ChBxkH,KAAK+tG,OAAOsK,QACR,4CACAhE,GAEJ3lH,EAAWsR,KAAK64J,wBAAwB,IACjChnK,EACHwiH,kBAEC3qG,MAAMvG,IACHnD,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU+pH,8BACVrK,GAAAA,GAAgBuF,OAChB7wJ,GAEJnD,KAAKu1J,wBAAwBlqJ,OAAOutJ,GACpCF,EAAgBroH,IAAI,CAChB+jF,SAAS,EACTmyB,eAAgBpjJ,EAAOi3I,iBACvBP,UAAW12I,EAAO02I,UAClBoe,gBAAiB90J,EAAO7Q,YAAYlF,OACpC8qK,YAAa/0J,EAAO2/F,QAAQ11G,OAC5B4pK,YAAa/B,GAAe9xJ,EAAO+rC,WAEhC/rC,KAEVtX,OAAOC,IAcJ,MAbAkU,KAAKu1J,wBAAwBlqJ,OAAOutJ,GACpC54J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgqH,8BACVtK,GAAAA,GAAgBuF,OAChB,KACAloK,GAEJ4sK,EAAgBroH,IACZ,CACI+jF,SAAS,GAEbtoI,GAEEA,CAAK,IAEnBkU,KAAKu1J,wBAAwB53J,IAAIi7J,EAAgBlqK,UAQxCA,CAChB,CAAM,GAAImD,EAAQ06G,gBAAiB,CAChC,GAAIvsG,KAAK43J,aAAa/lK,EAASA,EAAQ06G,iBAAkB,CACrD,MAAMppG,QAAenD,KAAK+3J,mBACtB,IACOlmK,EACHwiH,iBAEJ4wC,GAAAA,GAAMwT,mBACN5mK,EAAQ06G,iBACV1gH,OAAO4F,IAQL,MALIA,aAAasxJ,IACbE,GAAuBxxJ,KAEvBuO,KAAK8sJ,6BAA0Bz/J,GAE7BoE,CAAC,IAMX,OAJAinK,EAAgBroH,IAAI,CAChB2mH,YAAa/B,GAAe9xJ,EAAO+rC,SACnCklF,SAAS,IAENjxH,CACV,CACG,MAAM2lH,GACFX,GAGX,CACG,MAAMW,GACFd,GAGX,CAAC,MAAOv2H,GAaL,MAZAuO,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgqH,8BACVtK,GAAAA,GAAgBuF,OAChB,KACAviK,GAEJinK,EAAgBroH,IACZ,CACI+jF,SAAS,GAEb3iI,GAEEA,CACT,EAQG,6BAAMonK,CACVhnK,GAEAmO,KAAK+tG,OAAOwD,MACR,iCACA1/G,EAAQwiH,eAEZr0G,KAAKo4J,mCACDp4J,KAAKi5G,kBAAkBiL,iBACnBvF,GAAkBoE,wBAClBlxH,EAAQwiH,eAEhBr0G,KAAKo4J,oCAAoC3zC,UAAU,CAC/CwxC,sBAAuB,IAE3B7jK,SAAS2c,iBACL,mBACA/O,KAAK+1J,oCAET,MAAMiD,EAAuBh5J,KAAKi5J,2BAC9BpnK,EAAQwiH,eA4BZ,aA1BgC2kD,EAC3Bje,aAAalpJ,GACb6X,MAAMhb,IACHsR,KAAKo4J,oCAAoC/nH,IAAI,CACzC+jF,SAAS,EACT8lB,UAAWxrJ,EAASwrJ,UACpBqM,eAAgB73J,EAAS0rJ,iBACzBP,UAAWnrJ,EAASmrJ,YAEjBnrJ,KAEV7C,OAAOqtK,IAOJ,MANAl5J,KAAKo4J,oCAAoC/nH,IACrC,CACI+jF,SAAS,GAEb8kC,GAEEA,CAAiB,IAE1BnvJ,SAAQ,KACL3X,SAAS8nC,oBACL,mBACAl6B,KAAK+1J,mCACR,IAYH,2BAAMoD,CACZC,EACAC,GAMA,OAJAr5J,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkB6B,sBAClB44C,EAAc/kD,eAEVglD,GACJ,KAAKC,GAAAA,GAAkBC,QACvB,KAAKD,GAAAA,GAAkBE,YACvB,KAAKF,GAAAA,GAAkBG,2BACnB,MAAM/T,EAAoB1lJ,KAAK05J,wBAC3BN,EAAc/kD,eAElB,OAAOghB,GACHqwB,EAAkB3K,aAAaxuJ,KAAKm5J,GACpC/mC,GAAkBU,8BAClBr/G,KAAK+tG,OACL/tG,KAAKi5G,kBACLmgD,EAAc/kD,cALXghB,CAML+jC,GACN,QACI,MAAM34D,GACFi+B,IAWT,gCAAM6kB,CACT6V,EACAC,GAMA,OAJAr5J,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBE,2BAClBu6C,EAAc/kD,eAEVglD,GACJ,KAAKC,GAAAA,GAAkBC,QACvB,KAAKD,GAAAA,GAAkBG,2BACvB,KAAKH,GAAAA,GAAkBK,aACvB,KAAKL,GAAAA,GAAkBM,uBACnB,MAAMC,EAAsB75J,KAAK85J,0BAC7BV,EAAc/kD,eAGlB,OAAOghB,GACHwkC,EAAoB9e,aAAaxuJ,KAAKstK,GACtCl7C,GAAkBa,gCAClBx/G,KAAK+tG,OACL/tG,KAAKi5G,kBACLmgD,EAAc/kD,cALXghB,CAML+jC,GACN,QACI,MAAM34D,GACFi+B,IAUN,gCAAMq7B,CACZloK,GAEAmO,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBgC,2BAClB9uH,EAAQwiH,eAGZ,MAAM2lD,EAAqBh6J,KAAKs4J,yBAC5BzmK,EAAQwiH,eAGZ,OAAOghB,GACH2kC,EAAmBjf,aAAaxuJ,KAAKytK,GACrCr7C,GAAkBW,+BAClBt/G,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALLghB,CAMLxjI,GAYN,YAAMuzJ,CAAO9J,GACT,MAAMjnC,EAAgBr0G,KAAKm2J,wBAAwB7a,GAKnD,OAJAt7I,KAAK+tG,OAAOE,QACR,mGACAoG,GAEGr0G,KAAKsuC,eAAe,CACvB+lE,mBACGinC,IASX,oBAAMhtG,CAAegtG,GACjB,MAAMjnC,EAAgBr0G,KAAKm2J,wBAAwB7a,GACnDpS,GAAoClpI,KAAK8oI,YAAa9oI,KAAK5P,QAC3D4P,KAAK++H,eAAewH,0BAAyB,GAG7C,OADuBvmI,KAAK82J,qBAAqBziD,GAC3B+wC,OAAO9J,GAOjCiU,WAAAA,CAAYjU,GACR,IACI,MAAMjnC,EAAgBr0G,KAAKm2J,wBAAwB7a,GACnD6Z,GAA4Bn1J,KAAK8oI,aACjC9oI,KAAK++H,eAAewH,0BAAyB,GAG7C,OADoBvmI,KAAKg4J,kBAAkB3jD,GACxB+wC,OAAO9J,EAC7B,CAAC,MAAO7pJ,GAEL,OAAOwW,QAAQsR,OAAO9nB,EACzB,EAOL,gBAAMwoK,CAAW3e,GACb,MAAMjnC,EAAgBr0G,KAAKm2J,wBAAwB7a,GAEnD,OADoBt7I,KAAK05J,wBAAwBrlD,GAC9B+wC,OAAO9J,GAY9B5sG,cAAAA,CAAe2jE,GACX,OC1yCF,SACFtE,EACAgxB,EACAm7B,EACA7nD,GAGA,OADAtE,EAAOsK,QAAQ,yBACR6hD,EAAcn7B,EAAerwF,eAAe2jE,GAAiB,EACxE,CDkyCe3jE,CACH1uC,KAAK+tG,OACL/tG,KAAK++H,eACL/+H,KAAK6pH,qBACLxX,GASRuD,UAAAA,CAAWvD,GACP,gBCxyCJA,EACAtE,EACAgxB,GAGA,GADAhxB,EAAOwD,MAAM,qBAC6B,IAAtCh5G,OAAO+E,KAAK+0G,GAAejlH,OAE3B,OADA2gH,EAAOE,QAAQ,yCACR,KAGX,MAAM/+D,EACF6vF,EAAevsB,yBAAyBH,GAE5C,OAAInjE,GACA6+D,EAAOsK,QACH,iEAEGnpE,IAEP6+D,EAAOsK,QAAQ,yDACR,KAEf,CDkxCezC,CACHvD,EACAryG,KAAK+tG,OACL/tG,KAAK++H,gBAYbo7B,oBAAAA,CAAqBjoK,GACjB,gBCvxCJA,EACA67G,EACAgxB,GAGA,GADAhxB,EAAOwD,MAAM,gCACRr/G,EAED,OADA67G,EAAOE,QAAQ,8CACR,KAGX,MAAM/+D,EAAU6vF,EAAevsB,yBAAyB,CACpDtgH,aAEJ,OAAIg9C,GACA6+D,EAAOsK,QACH,oEAEJtK,EAAOstB,WACH,yEAAyEnpI,KAEtEg9C,IAEP6+D,EAAOsK,QACH,mEAEG,KAEf,CD4vCe8hD,CACHjoK,EACA8N,KAAK+tG,OACL/tG,KAAK++H,gBAWbq7B,kBAAAA,CAAmBx3D,GACf,gBCjwCJA,EACAmL,EACAgxB,GAGA,GADAhxB,EAAOwD,MAAM,8BACR3O,EAED,OADAmL,EAAOE,QAAQ,iDACR,KAGX,MAAM/+D,EAAU6vF,EAAevsB,yBAAyB,CACpD5P,kBAEJ,OAAI1zD,GACA6+D,EAAOsK,QACH,uEAEJtK,EAAOstB,WACH,4EAA4Ez4B,KAEzE1zD,IAEP6+D,EAAOsK,QACH,iEAEG,KAEf,CDsuCe+hD,CACHx3D,EACA5iG,KAAK+tG,OACL/tG,KAAK++H,gBAWbs7B,mBAAAA,CAAoB/uD,GAChB,gBC3uCJA,EACAyC,EACAgxB,GAGA,GADAhxB,EAAOwD,MAAM,+BACRjG,EAED,OADAyC,EAAOE,QAAQ,mDACR,KAGX,MAAM/+D,EAAU6vF,EAAevsB,yBAAyB,CACpDlH,mBAEJ,OAAIp8D,GACA6+D,EAAOsK,QACH,yEAEJtK,EAAOstB,WACH,8EAA8E/vB,KAE3Ep8D,IAEP6+D,EAAOsK,QACH,kEAEG,KAEf,CDgtCegiD,CACH/uD,EACAtrG,KAAK+tG,OACL/tG,KAAK++H,gBAQbpwF,gBAAAA,CAAiBO,ICrtCL,SACZA,EACA6vF,GAEAA,EAAepwF,iBAAiBO,EACpC,CDitCQP,CAAgCO,EAASlvC,KAAK++H,gBAMlDl0I,gBAAAA,GACI,OAAuCmV,KAAK++H,eChtC1Bl0I,mBD2tCtB,kBAAMq9I,CACF/kI,EACAtR,GAMAmO,KAAK+tG,OAAOsK,QAAQ,uBAGpB,MAAMvF,EAAgB3G,GAAcuB,sBAChCvqG,EAAO+rC,QACP/rC,EAAOqqG,mBACPrqG,EAAOsqG,aAIX,OAFAztG,KAAK++H,eAAezqB,WAAWxB,GAE3B3vG,EAAOi3I,kBACPp6I,KAAK+tG,OAAOsK,QACR,sDAGGr4G,KAAK41J,sBAAsB1tB,aAAa/kI,EAAQtR,IAEhDmO,KAAK++H,eAAemJ,aAAa/kI,EAAQtR,GAUjD,wBAAMkmK,CACTlmK,EACA6rJ,EACA1lC,GAGA,GADAh4G,KAAK+tG,OAAOwD,MAAM,8BACbvxG,KAAK8sJ,wBACN,MAAMhkC,GACFR,IAmBR,OAfqB,IAAIg9B,GACrBtlJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLiyB,EACA19I,KAAKi5G,kBACLj5G,KAAK8sJ,wBACL90C,GAAah4G,KAAK63J,mBAAmBhmK,GACrCmO,KAAK41J,sBACL/jK,EAAQwiH,eAGQ0mC,aAAalpJ,GAO9B+lK,YAAAA,CACH/lK,EACAmmH,GAGA,GADAh4G,KAAK+tG,OAAOwD,MAAM,wBAEb85C,GAAqBwB,kBAClB7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAK8sJ,wBACLj7J,EAAQqoH,sBAMZ,OAHAl6G,KAAK+tG,OAAOwD,MACR,oEAEG,EAGX,GAAI1/G,EAAQjG,OACR,OAAQiG,EAAQjG,QACZ,KAAKihJ,EAAAA,GAAYyP,KACjB,KAAKzP,EAAAA,GAAY8d,QACjB,KAAK9d,EAAAA,GAAY+d,MACb5qJ,KAAK+tG,OAAOwD,MACR,uDAEJ,MACJ,QAII,OAHAvxG,KAAK+tG,OAAOwD,MACR,0BAA0B1/G,EAAQjG,+DAE/B,EAInB,SAAKosH,IAAch4G,KAAK63J,mBAAmBhmK,MACvCmO,KAAK+tG,OAAOwD,MACR,oEAEG,GAWRsmD,kBAAAA,CACHhmK,GAEA,MAAMq9C,EACFr9C,EAAQq9C,SACRlvC,KAAK41G,WAAW,CACZ/B,UAAWhiH,EAAQgiH,UACnBjjF,IAAK/+B,EAAQ++B,OAEjB5wB,KAAKnV,mBAET,OAAQqkD,GAAWA,EAAQq9D,iBAAoB,GAO5CyrD,iBAAAA,CAAkB3jD,GACrB,OAAO,IAAIs5C,GACP3tJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLzrH,KAAKi5G,kBACLj5G,KAAK41J,sBACL51J,KAAK8sJ,wBACLz4C,GAQEyiD,oBAAAA,CAAqBziD,GAC3B,OAAO,IAAIs9C,GACP3xJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLzrH,KAAKi5G,kBACLj5G,KAAK41J,sBACL51J,KAAK8sJ,wBACLz4C,GAQDikD,wBAAAA,CACHjkD,GAEA,OAAO,IAAIw/C,GACP7zJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMyF,UACN1qJ,KAAKi5G,kBACLj5G,KAAK41J,sBACL51J,KAAK8sJ,wBACLz4C,GAOEqlD,uBAAAA,CACNrlD,GAEA,OAAO,IAAI0wC,GACP/kJ,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLzrH,KAAKi5G,kBACLj5G,KAAK8sJ,wBACLz4C,GAOEylD,yBAAAA,CACNzlD,GAEA,OAAO,IAAI8/C,GACPn0J,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLzrH,KAAKi5G,kBACLj5G,KAAK8sJ,wBACLz4C,GAOE4kD,0BAAAA,CACN5kD,GAEA,OAAO,IAAI0gD,GACP/0J,KAAK5P,OACL4P,KAAK++H,eACL/+H,KAAKy+H,cACLz+H,KAAK+tG,OACL/tG,KAAKmgJ,aACLngJ,KAAKyrH,iBACLw5B,GAAAA,GAAMwT,mBACNz4J,KAAKi5G,kBACLj5G,KAAK8sJ,wBACLz4C,GAQRzlE,gBAAAA,CAAiBhW,GACb,OAAO54B,KAAKmgJ,aAAavxG,iBAAiBhW,GAO9CixG,mBAAAA,CAAoBD,GAChB5pI,KAAKmgJ,aAAatW,oBAAoBD,GAS1CvkB,sBAAAA,CAAuBzsF,GACnB,OAAO54B,KAAKi5G,kBAAkBoM,uBAAuBzsF,GASzDwsF,yBAAAA,CAA0BwkB,GACtB,OAAO5pI,KAAKi5G,kBAAkBmM,0BAA0BwkB,GAM5DE,0BAAAA,GACI9pI,KAAKmgJ,aAAarW,6BAMtBC,2BAAAA,GACI/pI,KAAKmgJ,aAAapW,8BAMtBuwB,aAAAA,GACI,OAAOt6J,KAAKy1I,WAMTzoB,SAAAA,GACH,OAAOhtH,KAAK+tG,OAOhBwsD,SAAAA,CAAUxsD,GACN/tG,KAAK+tG,OAASA,EAQlBysD,wBAAAA,CAAyB98C,EAAiB3rG,GAEtC/R,KAAK++H,eAAeuD,mBAAmB5kB,EAAK3rG,GAOhD0oJ,mBAAAA,CAAoBhvC,GAChBzrH,KAAKyrH,iBAAmBA,EAMrBivC,gBAAAA,GACH,OAAO16J,KAAK5P,OAMTuqK,oBAAAA,GACH,OAAO36J,KAAKi5G,kBAMT2hD,YAAAA,GACH,OAAO56J,KAAK6pH,qBAMhBgxC,eAAAA,GACI,OAAO76J,KAAKmgJ,aAUNgW,uBAAAA,CACNtkK,GAEA,OAAIA,GAASwiH,cACFxiH,EAAQwiH,cAGfr0G,KAAK6pH,qBACElpB,KAOJoI,EAAAA,GAAUC,aAcrB,mBAAMt9G,CAAcmG,GAChB,MAAMwiH,EAAwBr0G,KAAKm2J,wBAAwBtkK,GAE3D,OADAmO,KAAK+tG,OAAOsK,QAAQ,uBAAwBhE,GACrCr0G,KAAKpN,qBAAqB,CAC7ByhH,mBACIxiH,GAAWipK,GAAAA,KAWvBC,UAAAA,CAAWlpK,GACP,MAAMwiH,EAAwBr0G,KAAKm2J,wBAAwBtkK,GAE3D,OADAmO,KAAK+tG,OAAOsK,QAAQ,oBAAqBhE,GAClCr0G,KAAKuuJ,kBAAkB,CAC1Bl6C,mBACIxiH,GAAWipK,GAAAA,KAUvB,wBAAME,CACFnpK,GAEA,MAAMwiH,EAAgBr0G,KAAKm2J,wBAAwBtkK,GAC7CopK,EAAiBj7J,KAAKi5G,kBAAkBiL,iBAC1CvF,GAAkBG,mBAClBzK,GAEJ4mD,EAAe73H,IAAI,CACfi2H,kBAAmBxnK,EAAQwnK,kBAC3B/B,WAAYzlK,EAAQylK,aAGxBvuB,GAAe/oI,KAAK8oI,YAAamyB,GACjCj7J,KAAK+tG,OAAOsK,QAAQ,4BAA6BhE,GAEjD,MAAMnlE,EAAUr9C,EAAQq9C,SAAWlvC,KAAKnV,mBACxC,IAAKqkD,EACD,MAAM45E,GAAuB7B,IAEjCg0C,EAAe73H,IAAI,CAAE4zH,YAAa/B,GAAe/lH,KAEjD,MAAM47F,EAAgC,CAClC/3I,SAAUiN,KAAK5P,OAAO0C,KAAKC,SAC3BC,UAAWnB,EAAQmB,WAAa+1G,EAAAA,GAAUC,aAC1Cl3G,OAAQD,EAAQC,OAChBi6I,sBAAuB78F,EAAQ0zD,cAC/B/yE,OAAQh+B,EAAQg+B,OAChBqqF,qBAAsBroH,EAAQqoH,qBAC9B+Z,sBAAuBpiI,EAAQoiI,sBAC/BE,mBAAoBtiI,EAAQsiI,mBAC5B6X,UAAWn6I,EAAQm6I,UACnB7xB,OAAQtoH,EAAQsoH,OAChBka,WAAYxiI,EAAQwiI,YAElB6mC,EAAmBtsK,KAAKiB,UAAUi7I,GAElCqwB,EACFn7J,KAAK61J,0BAA0B/4J,IAAIo+J,GACvC,GAA8B,qBAAnBC,EAAgC,CACvCn7J,KAAK+tG,OAAOsK,QACR,uEACAhE,GAGJ,MAAM3lH,EAAW2mI,GACbr1H,KAAKo7J,wBAAwB7uK,KAAKyT,MAClC2+G,GAAkBI,wBAClB/+G,KAAK+tG,OACL/tG,KAAKi5G,kBACL5E,EALaghB,CAOb,IACOxjI,EACHwiH,iBAEJnlE,GAECxlC,MAAMvG,IACHnD,KAAK61J,0BAA0BxqJ,OAAO6vJ,GACtCD,EAAe5qH,IAAI,CACf+jF,SAAS,EACT8lB,UAAW/2I,EAAO+2I,UAClBqM,eAAgBpjJ,EAAOi3I,iBACvBif,kBAAmBxnK,EAAQwnK,kBAC3Bxf,UAAW12I,EAAO02I,UAClBoe,gBAAiB90J,EAAO7Q,YAAYlF,OACpC8qK,YAAa/0J,EAAO2/F,QAAQ11G,SAEzB+V,KAEVtX,OAAOC,IAQJ,MAPAkU,KAAK61J,0BAA0BxqJ,OAAO6vJ,GACtCD,EAAe5qH,IACX,CACI+jF,SAAS,GAEbtoI,GAEEA,CAAK,IAGnB,OADAkU,KAAK61J,0BAA0Bl4J,IAAIu9J,EAAkBxsK,GAC9C,UACOA,EACVo0B,MAAOjxB,EAAQixB,MAEtB,CAOG,OANA9iB,KAAK+tG,OAAOsK,QACR,0FACAhE,GAGJ4mD,EAAez2C,UACR,UACO22C,EACVr4I,MAAOjxB,EAAQixB,OAWjB,6BAAMs4I,CACZvpK,EACAq9C,GAEA,MAAM4mH,EAAsBA,IACxB91J,KAAK81J,oBAAoBjkK,EAAQwiH,eACrCr0G,KAAKi5G,kBAAkBgM,oBACnBtG,GAAkBI,wBAClBltH,EAAQwiH,eAGZr0G,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAU2oH,oBACVjJ,GAAAA,GAAgBuF,OAChBniK,GAGAA,EAAQwiH,eACRr0G,KAAKi5G,kBAAkBsM,gBACnB,CAAE0wC,sBAAuB,GACzBpkK,EAAQwiH,eAIhBjiH,SAAS2c,iBAAiB,mBAAoB+mJ,GAE9C,MAAM9Q,QAAsB3vB,GACxBwsB,GACAljC,GAAkBkC,wBAClB7gH,KAAK+tG,OACL/tG,KAAKi5G,kBACLpnH,EAAQwiH,cALgBghB,CAM1BxjI,EAASq9C,EAASlvC,KAAK5P,OAAQ4P,KAAKi5G,kBAAmBj5G,KAAK+tG,QACxDsrD,EACFxnK,EAAQwnK,mBAAqBC,GAAAA,GAAkBC,QAqGnD,OAnGev5J,KAAKq7J,2BAChBrW,EACAqU,GACFxtK,OAAMqC,UACJ,MAAMotK,EAsNlB,SACIC,EACAlC,GAEA,MAAMmC,IACFD,aAA6B7oK,GAAAA,IAE7B6oK,EAAkB7wB,WACd0Y,GAAAA,IAIFqY,EACFF,EAAkBh7D,YAAc6rB,GAAAA,GAAiBw3B,qBACjD2X,EAAkBh7D,YACdm+B,EAGFg9B,EACDF,GAAyBC,GAC1BF,EAAkBh7D,YACd6iD,GAAAA,IACJmY,EAAkBh7D,YACd6iD,GAAAA,GAGFuY,EAAmBC,GAAAA,GAAsB9yJ,SAASuwJ,GAExD,OAAOqC,GAAwBC,CACnC,CAlPgBE,CACIN,EACAlC,GAGR,GAAIiC,EAA4B,CAC5B,GAAKt7J,KAAK87J,oBA+BH,IAAIzC,IAAsBC,GAAAA,GAAkByC,KAAM,CACrD,MAAOC,EAAeC,GAClBj8J,KAAK87J,oBACT97J,KAAK+tG,OAAOsK,QACR,8FAA8F4jD,IAC9FjX,EAAc3wC,eAElB,MAAM6nD,EACFl8J,KAAKi5G,kBAAkBiL,iBACnBvF,GAAkBY,sBAClBylC,EAAc3wC,eAEtB6nD,EAA6B94H,IAAI,CAC7B+4H,yBAA0BF,IAG9B,MAAMG,QAA4BJ,EAIlC,GAHAE,EAA6B7rH,IAAI,CAC7B+jF,QAASgoC,IAETA,EAMA,OALAp8J,KAAK+tG,OAAOsK,QACR,+CAA+C4jD,mDAC/CjX,EAAc3wC,eAGXr0G,KAAKq7J,2BACRrW,EACAqU,GAOJ,MAJAr5J,KAAK+tG,OAAOj6G,KACR,sCAAsCmoK,sCAGpCV,CAEb,CAMG,OAJAv7J,KAAK+tG,OAAOE,QACR,wQACA+2C,EAAc3wC,eAEXghB,GACHr1H,KAAK+5J,2BAA2BxtK,KAAKyT,MACrC2+G,GAAkBgC,2BAClB3gH,KAAK+tG,OACL/tG,KAAKi5G,kBACL+rC,EAAc3wC,cALXghB,CAML2vB,EACL,CAjF8B,CAC3B,IAAIqX,EAYJ,OAVAr8J,KAAK87J,oBAAsB,CACvB,IAAI7zJ,SAASqB,IACT+yJ,EAAW/yJ,CAAO,IAEtB07I,EAAc3wC,eAElBr0G,KAAK+tG,OAAOsK,QACR,yGACA2sC,EAAc3wC,eAEXghB,GACHr1H,KAAK+5J,2BAA2BxtK,KAAKyT,MACrC2+G,GAAkBgC,2BAClB3gH,KAAK+tG,OACL/tG,KAAKi5G,kBACL+rC,EAAc3wC,cALXghB,CAML2vB,GACGt7I,MAAM4yJ,IACHD,GAAS,GACFC,KAEVzwK,OAAO4F,IAEJ,MADA4qK,GAAS,GACH5qK,CAAC,IAEVsY,SAAQ,KACL/J,KAAK87J,yBAAsBzuK,CAAS,GAE/C,CAmDJ,CAEG,MAAMkuK,CACT,IAIA7xJ,MAAMhb,IACHsR,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUgoH,sBACVtI,GAAAA,GAAgBuF,OAChBtlK,GAEAmD,EAAQwiH,eACRr0G,KAAKi5G,kBAAkBQ,UACnB,CACIygC,UAAWxrJ,EAASwrJ,UACpBqM,eAAgB73J,EAAS0rJ,iBACzBP,UAAWnrJ,EAASmrJ,WAExBhoJ,EAAQwiH,eAIT3lH,KAEV7C,OAAOqtK,IAOJ,MANAl5J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUooH,sBACV1I,GAAAA,GAAgBuF,OAChB,KACAkF,GAEEA,CAAiB,IAE1BnvJ,SAAQ,KACL3X,SAAS8nC,oBACL,mBACA47H,EACH,IAUL,gCAAMuF,CACVrW,EACAqU,GAEA,OACIhO,GAAqBwB,kBACjB7sJ,KAAK5P,OACL4P,KAAK+tG,OACL/tG,KAAK8sJ,wBACL9H,EAAc9qC,uBAElB8qC,EAAc91G,QAAQq9D,iBAEtBvsG,KAAK+tG,OAAOsK,QACR,yEAEGr4G,KAAK+3J,mBACR/S,EACAC,GAAAA,GAAMC,+BACRr5J,OAAMqC,UAEJ,GAAIuD,aAAasxJ,IAAmBE,GAAuBxxJ,GAOvD,MANAuO,KAAK+tG,OAAOsK,QACR,8EAEJr4G,KAAK8sJ,6BAA0Bz/J,EAGzBozG,GACFi+B,GAGR,MAAMjtI,CAAC,MAGXuO,KAAK+tG,OAAOsK,QACR,kEAEGgd,GACHr1H,KAAKm5J,sBAAsB5sK,KAAKyT,MAChC2+G,GAAkB6B,sBAClBxgH,KAAK+tG,OACL/tG,KAAKi5G,kBACL+rC,EAAc3wC,cALXghB,CAML2vB,EAAeqU,GAAmBxtK,OAC/B0wK,IACG,GAAIlD,IAAsBC,GAAAA,GAAkBE,YACxC,MAAM+C,EASV,OANAv8J,KAAKmgJ,aAAanW,UACdj7F,GAAAA,EAAUytH,4BACV/N,GAAAA,GAAgBuF,OAChBhP,GAGG3vB,GACHr1H,KAAKujJ,2BAA2Bh3J,KAAKyT,MACrC2+G,GAAkBE,2BAClB7+G,KAAK+tG,OACL/tG,KAAKi5G,kBACL+rC,EAAc3wC,cALXghB,CAML2vB,EAAeqU,EAAkB,YE1nE1CllK,GAQF,0CAAasoK,CAChBnqB,GAEA,MAAMxuI,QCpCP5V,eACHkC,EACAyB,GAEA,MAAM6qK,EAAW,IAAIxvC,GAAyB98H,GAG9C,aADMssK,EAASnvC,aACR6nC,GAAmBY,iBAAiB0G,EAAU7qK,EACzD,CD4BiC8qK,CACrBrqB,GAIJ,OAFY,IAAIn+I,GAAwBm+I,EAAexuI,GA2B3D9G,WAAAA,CAAmBs1I,EAA8BxuI,GAC7C9D,KAAK8D,WACDA,GACA,IAAIsxJ,GAAmB,IAAIloC,GAAyBolB,IAO5D,gBAAM/kB,CAAW17H,GACb,OAAOmO,KAAK8D,WAAWypH,WAAW17H,GAUtC,uBAAM08J,CACF18J,GAEA,OAAOmO,KAAK8D,WAAWyqJ,kBAAkB18J,GAY7Ce,oBAAAA,CAAqBf,GACjB,OAAOmO,KAAK8D,WAAWlR,qBAAqBf,GAShDmpK,kBAAAA,CACIhW,GAEA,OAAOhlJ,KAAK8D,WAAWk3J,mBAAmBhW,GAa9CyT,kBAAAA,CACI5mK,GAEA,OAAOmO,KAAK8D,WAAW20J,mBAAmB5mK,GAO9C+8C,gBAAAA,CAAiBhW,GACb,OAAO54B,KAAK8D,WAAW8qC,iBAAiBhW,GAO5CixG,mBAAAA,CAAoBD,GAChB,OAAO5pI,KAAK8D,WAAW+lI,oBAAoBD,GAS/CvkB,sBAAAA,CAAuBzsF,GACnB,OAAO54B,KAAK8D,WAAWuhH,uBAAuBzsF,GASlDwsF,yBAAAA,CAA0BwkB,GACtB,OAAO5pI,KAAK8D,WAAWshH,0BAA0BwkB,GAMrDE,0BAAAA,GACI9pI,KAAK8D,WAAWgmI,6BAMpBC,2BAAAA,GACI/pI,KAAK8D,WAAWimI,8BAQpBn0B,UAAAA,CAAWvD,GACP,OAAOryG,KAAK8D,WAAW8xG,WAAWvD,GAWtC+nD,kBAAAA,CAAmBx3D,GACf,OAAO5iG,KAAK8D,WAAWs2J,mBAAmBx3D,GAW9Cy3D,mBAAAA,CAAoBuC,GAChB,OAAO58J,KAAK8D,WAAWu2J,oBAAoBuC,GAY/CzC,oBAAAA,CAAqB0C,GACjB,OAAO78J,KAAK8D,WAAWq2J,qBAAqB0C,GAQhDnuH,cAAAA,CAAe2jE,GACX,OAAOryG,KAAK8D,WAAW4qC,eAAe2jE,GAU1Ck1C,qBAAAA,CACIrhG,GAEA,OAAOlmD,KAAK8D,WAAWyjJ,sBAAsBrhG,GAUjD60G,UAAAA,CACIlpK,GAEA,OAAOmO,KAAK8D,WAAWi3J,WAAWlpK,GAYtCnG,aAAAA,CAAcmG,GACV,OAAOmO,KAAK8D,WAAWpY,cAAcmG,GAQzCuzJ,MAAAA,CAAO9J,GACH,OAAOt7I,KAAK8D,WAAWshJ,OAAO9J,GAQlChtG,cAAAA,CAAegtG,GACX,OAAOt7I,KAAK8D,WAAWwqC,eAAegtG,GAO1CiU,WAAAA,CAAYjU,GACR,OAAOt7I,KAAK8D,WAAWyrJ,YAAYjU,GAkBvCoP,SAAAA,CAAU74J,GACN,OAAOmO,KAAK8D,WAAW4mJ,UAAU74J,GAMrCyoK,aAAAA,GACI,OAAOt6J,KAAK8D,WAAWw2J,gBAM3BttC,SAAAA,GACI,OAAOhtH,KAAK8D,WAAWkpH,YAO3ButC,SAAAA,CAAUxsD,GACN/tG,KAAK8D,WAAWy2J,UAAUxsD,GAO9Bp/D,gBAAAA,CAAiBO,GACblvC,KAAK8D,WAAW6qC,iBAAiBO,GAMrCrkD,gBAAAA,GACI,OAAOmV,KAAK8D,WAAWjZ,mBAQ3B2vK,wBAAAA,CAAyB98C,EAAiB3rG,GACtC,OAAO/R,KAAK8D,WAAW02J,yBAAyB98C,EAAK3rG,GAOzD0oJ,mBAAAA,CAAoBhvC,GAChBzrH,KAAK8D,WAAW22J,oBAAoBhvC,GAOxCivC,gBAAAA,GACI,OAAO16J,KAAK8D,WAAW42J,mBAS3B,kBAAMxyB,CACF/kI,EACAtR,GAMA,OAAOmO,KAAK8D,WAAWokI,aAAa/kI,EAAQtR,GAOhDooK,UAAAA,CAAW3e,GACP,OAAOt7I,KAAK8D,WAAWm2J,WAAW3e,yEE3Z7B,MAAAwhB,EAAwC,CACjD,CAACv+B,EAAAA,IACG,wDACJ,CAACw+B,EAAAA,IACG,iLACJ,CAAC3zB,EAAAA,IACG,yRASM7K,EAAAA,GACAu+B,EACFv+B,EAAAA,IAIEw+B,EAAAA,GACAD,EACFC,EAAAA,IAKE3zB,EAAAA,GACA0zB,EACF1zB,EAAAA,IAQN,MAAO4zB,UAAsC18D,EAAAA,GAC/CtjG,WAAAA,CAAYujG,EAAmBwR,GAC3BjyG,MAAMygG,EAAWwR,GACjB/xG,KAAKjO,KAAO,gCAEZwG,OAAOi9B,eAAex1B,KAAMg9J,EAA8BxkK,YAI5D,SAAU8lI,EACZ/9B,GAEA,OAAO,IAAIy8D,EACPz8D,EACAu8D,EAAsCv8D,GAE9C,kEC1DO,MAAMg+B,EAAsB,wBACtBw+B,EACT,2CACS3zB,EAA2B,2ECH3B,MAAAr6F,EAAY,CACrBsnH,iBAAkB,uBAClBC,eAAgB,qBAChB/rB,cAAe,oBACfC,gBAAiB,sBACjBN,uBAAwB,4BACxBytB,YAAa,kBACb3oH,cAAe,oBACfooH,cAAe,oBACfM,oBAAqB,yBACrBX,sBAAuB,2BACvBI,sBAAuB,2BACvBqF,4BAA6B,oCAC7BnE,iBAAkB,sBAClBE,mBAAoB,wBACpBC,mBAAoB,wBACpBG,4BAA6B,+BAC7BG,8BAA+B,iCAC/BC,8BAA+B,iCAC/BpC,sBAAuB,2BACvBM,oBAAqB,yBACrB/H,aAAc,mBACdI,aAAc,mBACdE,eAAgB,qBAChBI,eAAgB,qBAChBC,WAAY,iBACZkC,qBAAsB,0QCnBb,MAAA3lC,EAAmB,CAI5B6wC,8BAA+B,0BAI/BrZ,oBAAqB,gBAIrBqN,YAAa,IAIbC,aAAc,IAIdtoB,kBAAmB,OAInBvc,yBAA0B,GAI1Bg0B,SAAU,mBAGDuF,EAAkB,CAC3BkG,WAAY,uCACZjG,uBAAwB,mCACxBmF,eAAgB,QAGPtE,EAAwB,CACjC0F,iBAAkB,YAClBQ,kBAAmB,oBACnBjG,SAAU,WACV9nJ,SAAU,YAKDmsH,EAAuB,CAChCK,aAAc,eACdJ,eAAgB,iBAChBgH,cAAe,iBAQNjJ,EAAoB,CAC7BC,IAAK,MACLK,KAAM,QAQG4b,EAAqB,CAC9BC,UAAW,YACX+3B,sBAAuB,uBACvBC,cAAe,gBACf53B,cAAe,gBACfF,cAAe,iBACfc,WAAY,iBACZi3B,aAAc,qBACdh3B,SAAU,UACVF,eAAgB,iBAChBm3B,OAAQ,SACR71B,uBAAwB,qBACxBxB,eAAgB,iBAChBK,eAAgB,wBAChBC,eAAgB,iBAChBg3B,iBAAkB,4BAKTt9B,EAAkB,CAC3BC,aAAc,oBACdC,WAAY,mBAQHuC,EAAoB,CAC7BC,YAAa,cACbC,YAAa,mBAWJsiB,EAAQ,CACjBryJ,qBAAsB,IACtB27J,kBAAmB,IACnB7D,UAAW,IACX6S,4BAA6B,IAC7BhW,sBAAuB,IACvBkR,mBAAoB,IACpBvT,8BAA+B,GAC/BE,OAAQ,IACRmK,YAAa,SAOLd,GAAZ,SAAYA,GACRA,EAAA,oBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACH,CALD,CAAYA,IAAAA,EAKX,KAMY,MAAA+O,EAAoB,CAI7BC,QAAS,UAITC,MAAO,QAIPC,OAAQ,SAIRC,aAAc,eAIdn+C,UAAW,YAIXo+C,eAAgB,iBAIhBC,KAAM,QAKGhD,EAAkD,CAC3DhpK,OAAQq8I,EAAAA,IAMC7d,EAAiB,MAGjBytC,EAAa,CACtBvnK,MAAO,oBACPwnK,QAAS,uBAKArtC,EAAU,UACVC,EAAa,EACbE,EAAgB,GAAGH,SAEnB2oC,EAAoB,CAM7BC,QAAS,EAKTC,YAAa,EAMbC,2BAA4B,EAM5BE,aAAc,EAMdC,uBAAwB,EAKxBmC,KAAM,GAKGH,EAA6C,CACtDtC,EAAkBC,QAClBD,EAAkByC,KAClBzC,EAAkBM,wBAGTjtC,EAAsB,yBACtBE,EAAoB,oGChPpB,MAAAoxC,EAAoB,CAC7B,CAACC,EAAAA,GAAiC,sCAClC,CAACx2C,EAAAA,GACG,wIASMw2C,EAAAA,EACAD,EAAkBC,EAAAA,GAGlBx2C,EAAAA,EACAu2C,EAAkBv2C,EAAAA,GAO1B,MAAOpnB,UAAkBxyG,MAqB3BkP,WAAAA,CAAYujG,EAAoBwR,EAAuB25B,GAInD5rI,MAHoBiyG,EACd,GAAGxR,MAAcwR,IACjBxR,GAENhoG,OAAOi9B,eAAex1B,KAAMsgG,EAAU9nG,WAEtCwH,KAAKugG,UAAYA,GAAawI,EAAAA,GAAUC,aACxChpG,KAAK+xG,aAAeA,GAAgBhJ,EAAAA,GAAUC,aAC9ChpG,KAAK0qI,SAAWgB,GAAY3iC,EAAAA,GAAUC,aACtChpG,KAAKjO,KAAO,YAGhBs9J,gBAAAA,CAAiBh7C,GACbr0G,KAAKq0G,cAAgBA,GAIb,SAAA+1C,EACZlqJ,EACAsgG,GAEA,OAAO,IAAIF,EACPpgG,EACAsgG,EACM,GAAGy9D,EAAkB/9J,MAASsgG,IAC9By9D,EAAkB/9J,GAEhC,uDC1EO,MAAMg+J,EAAkB,mBAClBx2C,EAAoB,mHCIpB,MAAAy2C,EAAwC,CACjDC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAra,EAAAA,IAGSsa,EAAyC,CAClD,eACA,oBACA,eACA,wBACA,mBACA,aAGEC,EAAuC,CACzC,CAAC9a,EAAAA,IACG,uDACJ,CAAC+a,EAAAA,GACG,sJACJ,CAAC1a,EAAAA,IACG,6BACJ,CAACE,EAAAA,IACG,iIASMP,EAAAA,GACA8a,EACF9a,EAAAA,IAIE+a,EAAAA,EACAD,EACFC,EAAAA,GAIExa,EAAAA,GACAua,EACFva,EAAAA,IAQN,MAAOvxJ,UAAqC4tG,EAAAA,GA2B9CtjG,WAAAA,CACIujG,EACAwR,EACA24B,EACAT,EACAy0B,EACArqD,EACAxkF,EACA86G,GAEA7qI,MAAMygG,EAAWwR,EAAc24B,GAC/BnyI,OAAOi9B,eAAex1B,KAAMtN,EAA6B8F,WAEzDwH,KAAKiqI,UAAYA,GAAalhC,EAAAA,GAAUC,aACxChpG,KAAK0+J,QAAUA,GAAW31D,EAAAA,GAAUC,aACpChpG,KAAKq0G,cAAgBA,GAAiBtL,EAAAA,GAAUC,aAChDhpG,KAAK6vB,OAASA,GAAUk5E,EAAAA,GAAUC,aAClChpG,KAAKjO,KAAO,+BACZiO,KAAK2qI,QAAUA,YAUP6L,EACZj2C,EACAo+D,EACAj0B,GAEA,MAAMk0B,IACAr+D,GACF49D,EAAsCh4J,QAAQo6F,IAAc,EAC1Ds+D,IACAn0B,GACF6zB,EAAuCp4J,QAAQukI,IAAa,EAC1Do0B,IACAH,GACFR,EAAsChiJ,MAAM4iJ,GACjCJ,EAAYx4J,QAAQ44J,IAAgB,IAGnD,OACIH,GACAE,GACAD,CAER,CAKM,SAAU1b,EACZ5iD,GAEA,OAAO,IAAI7tG,EACP6tG,EACAi+D,EAAqCj+D,GAE7C,oGCvJO,MAAMmjD,EAAgB,kBAChB+a,EAA2B,6BAC3B1a,EAAsB,wBAGtBqa,EAAsB,uBACtBC,EAAkB,mBAClBC,EAAgB,iBAChBra,EAAW,qECOZrwJ,YAAZ,SAAYA,GACRA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,gBACH,CAND,CAAYA,IAAAA,EAMX,WAYY04H,EAmBTtvH,WAAAA,CACIxJ,EACAwrK,EACAC,GAjBI,KAAAvrK,MAAkBE,EAASC,KAmB/B,MAGMqrK,EACF1rK,GAAiB84H,EAAO6yC,6BAC5Bn/J,KAAKo/J,cACDF,EAAiBzrK,gBANS4rK,MACpB,GAMVr/J,KAAKk9G,kBAAoBgiD,EAAiBhiD,oBAAqB,EAC/Dl9G,KAAKtM,MACoC,kBAA9BwrK,EAAiB/hD,SAClB+hD,EAAiB/hD,SACjBvpH,EAASC,KACnBmM,KAAKq0G,cACD6qD,EAAiB7qD,eAAiBtL,EAAAA,GAAUC,aAChDhpG,KAAKg/J,YAAcA,GAAej2D,EAAAA,GAAUC,aAC5ChpG,KAAKi/J,eAAiBA,GAAkBl2D,EAAAA,GAAUC,aAG9C,iCAAOm2D,GACX,MAAO,CACH1rK,eAAgBA,OAGhBypH,mBAAmB,EACnBC,SAAUvpH,EAASC,MAOpBu+G,KAAAA,CACH4sD,EACAC,EACA5qD,GAEA,OAAO,IAAIiY,EACP,CACI74H,eAAgBuM,KAAKo/J,cACrBliD,kBAAmBl9G,KAAKk9G,kBACxBC,SAAUn9G,KAAKtM,MACf2gH,cAAeA,GAAiBr0G,KAAKq0G,eAEzC2qD,EACAC,GAOAK,UAAAA,CACJA,EACA9xK,GAEA,GACIA,EAAQ2vH,SAAWn9G,KAAKtM,QACtBsM,KAAKk9G,mBAAqB1vH,EAAQmG,YAEpC,OAEJ,MAOM3H,EAAM,GAJM,KAHA,IAAI8L,MAAOgtI,qBAIzBt3I,EAAQ6mH,eAAiBr0G,KAAKq0G,eAAiB,WAGrBr0G,KAAKg/J,eAC/Bh/J,KAAKi/J,oBACHrrK,EAASpG,EAAQ2vH,eAAemiD,IAEtCt/J,KAAKu/J,gBACD/xK,EAAQ2vH,SACRnxH,EACAwB,EAAQmG,cAAe,GAO/B4rK,eAAAA,CACI7rK,EACAtF,EACAuF,GAEIqM,KAAKo/J,eACLp/J,KAAKo/J,cAAc1rK,EAAOtF,EAASuF,GAO3C7H,KAAAA,CAAMsC,EAAiBimH,GACnBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAAS9F,MACnB6F,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlD4L,QAAAA,CAASxmH,EAAiBimH,GACtBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAAS9F,MACnB6F,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDiF,OAAAA,CAAQ7/G,EAAiBimH,GACrBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASK,QACnBN,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDw2D,UAAAA,CAAWpxK,EAAiBimH,GACxBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASK,QACnBN,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDl1G,IAAAA,CAAK1F,EAAiBimH,GAClBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASC,KACnBF,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDq4B,OAAAA,CAAQjzI,EAAiBimH,GACrBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASC,KACnBF,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDqP,OAAAA,CAAQjqH,EAAiBimH,GACrBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASG,QACnBJ,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDqyB,UAAAA,CAAWjtI,EAAiBimH,GACxBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAASG,QACnBJ,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDuI,KAAAA,CAAMnjH,EAAiBimH,GACnBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAAS6rK,MACnB9rK,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlDs3B,QAAAA,CAASlyI,EAAiBimH,GACtBr0G,KAAKs/J,WAAWlxK,EAAS,CACrB+uH,SAAUvpH,EAAS6rK,MACnB9rK,aAAa,EACb0gH,cAAeA,GAAiBtL,EAAAA,GAAUC,eAOlD02D,mBAAAA,GACI,OAAO1/J,KAAKk9G,oBAAqB,uUCxQ5B,MAAAnU,EAAY,CACrB42D,aAAc,UACdhiD,IAAK,iBAEL2hB,aAAc,OAEdlV,kBAAmB,4CACnBgS,uBAAwB,4BACxBje,sBAAuB,SAEvBsZ,KAAM,OACNC,KAAM,SAENiE,6BACI,sGAEJnE,cAAe,iBACf0F,yBAA0B,mBAE1BQ,eAAgB,IAEhBkiC,WAAY,aAEZC,OAAQ,SAERC,cAAe,uCAEfn1C,aAAc,SACdC,cAAe,UACfvhB,qBAAsB,iBACtB02D,YAAa,QAEbvyB,mBAAoB,OACpBwyB,gBAAiB,qBACjBC,cAAe,gBACfC,uBAAwB,WACxBhe,2BAA4B,OAC5BvO,sBAAuB,kDACvBwsB,sBAAuB,wBACvBC,YAAa,cACbp3D,aAAc,GACdsyB,eAAgB,MAChBwb,cAAe,gBACfjmC,cAAe,IACf8lB,cAAe,4DACfT,aAAc,aACdU,aAAc,IACdgE,gCAAiC,gBACjCiC,kCAAmC,sBACnCN,oBAAqB,CACjB,4BACA,oBACA,sBACA,mBAEJmR,oBAAqB,QACrBC,uBAAwB,WACxB2a,mBAAoB,IACpBvsB,iBAAkB,oBAGTib,EAAa,CACtBqpB,QAAS,IACTC,oBAAqB,IACrBC,kBAAmB,IACnBC,SAAU,IACVC,aAAc,IACdtpB,yBAA0B,IAC1BupB,YAAa,IACbC,aAAc,IACdC,UAAW,IACXC,gBAAiB,IACjBC,kBAAmB,IACnB1pB,uBAAwB,IACxB2pB,aAAc,IACd9pB,yBAA0B,IAC1B+pB,oBAAqB,IACrBC,gBAAiB,IACjB/pB,uBAAwB,IACxBgqB,kBAAmB,KAIV/yB,EAAsB,CAC/BplC,EAAU4hB,aACV5hB,EAAU6hB,cACV7hB,EAAUM,sBAGDS,EAAc,IAAIqkC,EAAqBplC,EAAUg3D,aAKjDx0B,EAAc,CACvBmI,aAAc,eACdlI,YAAa,cACbsD,WAAY,kBACZqyB,gBAAiB,mBACjBC,mBAAoB,sBACpBnmB,gBAAiB,kBACjBhH,kBAAmB,gBAOV1U,EAAsB,CAC/Br8B,SAAU,UACVu8B,YAAa,cACbsF,cAAe,eACfpF,MAAO,QACPE,WAAY,oBACZqD,eAAgB,iBAChBH,uBAAwB,0BAQf9yB,EAAwB,CACjCC,OAAQ,SACRC,cAAe,gBACfitB,UAAW,aAQF2T,EAAoB,CAC7BltC,aAAc,eACdmtC,OAAQ,UAUCnE,EAAc,CACvB+d,MAAO,QACPvO,eAAgB,iBAChBsO,QAAS,UACTrO,KAAM,OACN+kB,OAAQ,SACRtN,WAAY,cAMH5mB,EAA4B,CACrCC,MAAO,QACPC,KAAM,QAMG7iB,EAAqB,CAC9BujB,MAAO,QACPtjB,SAAU,YAQDqjB,EAAe,IACrBtjB,EACH82C,UAAW,aAOFxlB,EAAY,CACrBylB,eAAgB,WAChBxlB,yBAA0B,qBAC1BylB,yBAA0B,qBAC1BC,8BAA+B,WAC/Btd,oBAAqB,gBACrBud,kBAAmB,cACnBC,WAAY,+CAOH30D,EAAmB,CAC5BG,mBAAoB,QACpBF,kBAAmB,OACnB20D,mBAAoB,MACpBx0D,qBAAsB,WAQb3K,EAAa,CACtBC,oBAAqB,IACrBuI,sBAAuB,KAOdhI,EAAiB,CAC1BC,SAAU,UACVW,aAAc,cACdK,8BAA+B,8BAC/BQ,cAAe,gBAwBNyX,EAAe,cACfsjB,EAAc,cACdnpB,EAAgB,IAEhBpR,EAA+B,CACxCkX,UAAW,qBACXjX,qBAAsB,OAGbyW,EAA0B,CACnCC,OAAQ,SACR6d,MAAO,QACPO,QAAS,UACTne,iBAAkB,oBAKTqmB,EAAyB,CAClCic,eAAgB,EAChByjB,qBAAsB,GACtBriB,sBAAuB,IACvBP,kBAAmB,GACnB7iC,UAAW,mBACXiiC,mBAAoB,IACpBR,gBAAiB,IACjBgB,cAAe,IACfC,eAAgB,IAChBI,cAAe,iBAMNl7C,EAAuB,CAChCC,OAAQ,SACRE,IAAK,MACLG,IAAK,YAQIm/B,EAAsB,CAE/BmI,8BAA+B,GAE/BC,kCAAmC,KAEnCnI,kBAAmB,aAEnBmO,0BAA2B,qBAGlBvjH,EAAS,CAClBs1H,oBAAqB,gBACrBC,sBAAuB,mBAMd3S,EAAyB,CAClCh/I,SAAU,WACVF,SAAU,YAQDmkI,EAAgB,CACzBC,YAAa,IACbE,eAAgB,KAOPT,EAAyB,CAClCY,sBAAuB,IACvBqrC,eAAgB,IAChBhsC,qBAAsB,IACtBO,KAAM,KAQGwE,EAA0B,CACnCknC,4BAA6B,IAC7BjnC,6BAA8B,IAC9BknC,wBAAyB,IACzBhnC,oCAAqC,IACrCC,gCAAiC,KAQxBwiB,EAAe,CAExBniB,eAAgB,IAEhBmpB,wBAAyB,IAEzBG,uBAAwB,IAExBC,4BAA6B,IAE7BN,sBAAuB,KAIdp2B,EAAoB,CAC7B8zC,IAAK,MACLC,IAAK,MACL9zC,IAAK,OAQIrR,EAAmC,2GClTnC,MAAAolD,EAA2D,CACpE50C,WAAYA,IACDtlH,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZxO,kBAAmBA,IACRtmJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZnqK,qBAAsBA,IACXqV,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZ/B,mBAAoBA,IACT/yJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZtE,mBAAoBA,IACTxwJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZruH,eAAgBA,IACL,GAEXknE,WAAYA,IACD,KAEXwkD,mBAAoBA,IACT,KAEXD,qBAAsBA,IACX,KAEXE,oBAAqBA,IACV,KAEX9S,sBAAuBA,IACZt/I,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZhC,WAAYA,IACD9yJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZrxK,cAAeA,IACJuc,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZ3X,OAAQA,IACGn9I,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZzuH,eAAgBA,IACLrmC,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZxN,YAAaA,IACFtnJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZrS,UAAWA,IACAziJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZnuH,iBAAkBA,IACP,KAEXi7F,oBAAqBA,KACX,EAEVxkB,uBAAwBA,IACb,GAEXD,0BAA2BA,KAChB,EAEX0kB,2BAA4BA,KAClB,EAEVC,4BAA6BA,KACnB,EAEVuwB,cAAeA,KACX,MAAMh8B,EAAAA,EAAAA,IACFy+B,EAAAA,GACH,EAEL/vC,UAAWA,KACP,MAAMsR,EAAAA,EAAAA,IACFy+B,EAAAA,GACH,EAELxC,UAAWA,KACD,EAEV5rH,iBAAkBA,KACR,EAEV9jD,iBAAkBA,IACP,KAEX2vK,yBAA0BA,KAChB,EAEVC,oBAAqBA,KACX,EAEVC,iBAAkBA,KACd,MAAMp8B,EAAAA,EAAAA,IACFy+B,EAAAA,GACH,EAEL70B,aAAcA,IACHjgI,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,KAIZ9C,WAAYA,IACDhyJ,QAAQsR,QACX+kH,EAAAA,EAAAA,IACIy+B,EAAAA,4BCrNhB,MAAMqF,EAAmC,CACrC13K,SAAUy3K,EACV16B,WAAY+1B,EAAAA,GAAkBM,KAC9BrvH,SAAU,GACVs/D,OAAQ,IAAIue,EAAAA,EAAO,CAAC,IAGX+1C,EACT7rK,EAAAA,cAAkC4rK,GACVC,EAAYhqG,4BCU3BiqG,EAMT,oCAAOC,CACHn0K,EACAo0K,GAEA,OAAQp0K,EAAQ0gD,WACZ,KAAKC,EAAAA,EAAU4oH,YACX,OAAO6F,EAAAA,GAAkBE,MAC7B,KAAK3uH,EAAAA,EAAUspH,iBACX,OAAOmF,EAAAA,GAAkB/9C,UAC7B,KAAK1wE,EAAAA,EAAU2oH,oBACX,GACItpK,EAAQu4I,kBAAoB8nB,EAAAA,GAAgBmD,UAC5CxjK,EAAQu4I,kBAAoB8nB,EAAAA,GAAgBC,MAE5C,OAAO8O,EAAAA,GAAkBI,aAE7B,MACJ,KAAK7uH,EAAAA,EAAU4nH,sBACX,OAAO6G,EAAAA,GAAkBK,eAC7B,KAAK9uH,EAAAA,EAAUugH,aACX,OAAOkO,EAAAA,GAAkBG,OAC7B,KAAK5uH,EAAAA,EAAUwpH,mBACf,KAAKxpH,EAAAA,EAAUypH,mBACX,GACIgK,GACAA,IAAkBhF,EAAAA,GAAkB/9C,UAGpC,MAEJ,OAAO+9C,EAAAA,GAAkBM,KAC7B,KAAK/uH,EAAAA,EAAU8gH,WACX,GACI2S,GACAA,IAAkBhF,EAAAA,GAAkBG,OAGpC,MAEJ,OAAOH,EAAAA,GAAkBM,KAC7B,KAAK/uH,EAAAA,EAAUkoH,oBACX,GACIuL,GACAA,IAAkBhF,EAAAA,GAAkBK,eAGpC,MAEJ,OAAOL,EAAAA,GAAkBM,KAC7B,KAAK/uH,EAAAA,EAAUC,cACf,KAAKD,EAAAA,EAAUqoH,cACf,KAAKroH,EAAAA,EAAUgoH,sBACf,KAAKhoH,EAAAA,EAAUooH,sBACf,KAAKpoH,EAAAA,EAAUgjH,qBACX,GACI3jK,EAAQu4I,kBAAoB8nB,EAAAA,GAAgBmD,UAC5CxjK,EAAQu4I,kBAAoB8nB,EAAAA,GAAgBC,MAC9C,CACE,GACI8T,GACAA,IAAkBhF,EAAAA,GAAkBE,OACpC8E,IAAkBhF,EAAAA,GAAkBI,aAGpC,MAEJ,OAAOJ,EAAAA,GAAkBM,IAC5B,EAKT,OAAO,MChHC,SAAA2E,EACZz3K,EACA2oB,GAEA,MAAwB,oBAAb3oB,EACAA,EAAS2oB,GAEb3oB,CACX,CAmBgB,SAAA03K,EACZC,EACAC,GAEA,GAAID,EAAOv1K,SAAWw1K,EAAOx1K,OACzB,OAAO,EAGX,MAAMy1K,EAAkB,IAAID,GAE5B,OAAOD,EAAOtxJ,OAAOyxJ,IACjB,MAAMC,EAAWF,EAAgBx9J,QACjC,SAAKy9J,IAAaC,KAKdD,EAASlgE,gBAAkBmgE,EAASngE,eACpCkgE,EAASx3D,iBAAmBy3D,EAASz3D,gBACrCw3D,EAAS5wK,WAAa6wK,EAAS7wK,SAAQ,GAGnD,CC1DO,MAAMH,EAAO,oBACPggB,EAAU,SC+BjBixJ,EAAyB,CAC3BC,mBAAoB,qBACpBC,MAAO,SAmBLC,EAAUA,CACZC,EACA3vJ,KAEA,MAAM,KAAEliB,EAAI,QAAE09C,GAAYx7B,EAC1B,IAAI4vJ,EAAgBD,EAAc37B,WAElC,OAAQl2I,GACJ,KAAKyxK,EAAuBC,mBACpBG,EAAc37B,aAAe+1B,EAAAA,GAAkBC,UAC/C4F,EAAgB7F,EAAAA,GAAkBM,KAClC7uH,EAAQ8+D,OAAOj6G,KACX,gFAGR,MACJ,KAAKkvK,EAAuBE,MACxB,MAAM90K,EAAU6gD,EAAQ7gD,QAClByR,EAASyiK,EAAkBC,8BAC7Bn0K,EACAg1K,EAAc37B,YAEd5nI,IACAovC,EAAQ8+D,OAAOj6G,KACX,kBAAkB1F,EAAQ0gD,gDAAgDs0H,EAAc37B,iBAAiB5nI,KAE7GwjK,EAAgBxjK,GAEpB,MACJ,QACI,MAAM,IAAI/R,MAAM,wBAAwByD,KAGhD,MAAM+xK,EAAkBr0H,EAAQvkD,SAASgkD,iBACzC,OACI20H,IAAkBD,EAAc37B,YAC/Bi7B,EAAsBY,EAAiBF,EAAc30H,UAQ/C40H,IAAkBD,EAAc37B,WAEhC,IACA27B,EACH37B,WAAY47B,GAGfX,EAAsBY,EAAiBF,EAAc30H,UAS/C20H,EANA,IACAA,EACH30H,SAAU60H,GAjBP,IACAF,EACH37B,WAAY47B,EACZ50H,SAAU60H,EAmBjB,WAMWn3K,EAAYD,GAGR,IAHS,SACzBxB,EAAQ,SACRM,GACgBkB,GAChBsyC,EAAAA,EAAAA,YAAU,KACN9zC,EAAS8vK,yBAAyBuD,EAAAA,GAAWvnK,MAAOub,EAAQ,GAC7D,CAACrnB,IAEJ,MAAMqjH,GAAS5xE,EAAAA,EAAAA,UAAQ,IACZzxC,EAASsiI,YAAY5a,MAAMrgH,EAAKggB,IACxC,CAACrnB,KAEGo4B,EAAOygJ,IAAezgF,EAAAA,EAAAA,YAAWqgF,OAAS91K,GAAW,KAEjD,CACHo6I,WAAY+1B,EAAAA,GAAkBC,QAC9BhvH,SAAU/jD,EAASgkD,sBAI3BlQ,EAAAA,EAAAA,YAAU,KACN,MAAMorG,EAAal/I,EAASkkD,kBACvBxgD,IACGm1K,EAAY,CACRt0H,QAAS,CACLvkD,WACAqjH,SACA3/G,WAEJmD,KAAMyxK,EAAuBE,OAC/B,IAmCV,OAhCAn1D,EAAOsK,QACH,qDAAqDuxB,KAGzDl/I,EACK6iI,aACA7jH,MAAK,KACFhf,EACK68J,wBACA17J,OAAM,KAEG,IAETke,SAAQ,KAKLw5J,EAAY,CACRt0H,QAAS,CACLvkD,WACAqjH,UAEJx8G,KAAMyxK,EAAuBC,oBAC/B,GACJ,IAETp3K,OAAM,KAEG,IAGP,KAEC+9I,IACA77B,EAAOsK,QACH,0CAA0CuxB,KAE9Cl/I,EAASm/I,oBAAoBD,GAChC,CACJ,GACF,CAACl/I,EAAUqjH,IAEd,MAAMy1D,EAA6B,CAC/B94K,WACA+8I,WAAY3kH,EAAM2kH,WAClBh5F,SAAU3rB,EAAM2rB,SAChBs/D,UAGJ,OACI01D,EAAAA,cAACpB,EAAY9oI,SAAQ,CAACpqC,MAAOq0K,GACxBx4K,EAGb,CCtMa,MAAAL,EAAUA,KAAoB0zC,EAAAA,EAAAA,YAAWgkI,GCoBhD,SAAUqB,EAAmBC,GAC/B,MAAQl1H,SAAUgkE,EAAW,WAAEg1B,GAAe98I,IAExCi5K,GAAsBznI,EAAAA,EAAAA,UAAQ,IAC5BsrG,IAAe+1B,EAAAA,GAAkBC,SAxB7C,SACIhrD,EACAkxD,GAEA,OACIA,IACCA,EAAazxK,UACVyxK,EAAa/gE,eACb+gE,EAAar4D,kBJ0CT,SACZmH,EACAoxD,GAEA,OACIpxD,EAAYrlH,OAAS,IACpBy2K,EAAmBjhE,eAChBihE,EAAmBv4D,gBACnBu4D,EAAmB3xK,WAECugH,EAAYl2G,QAAQqkI,KAEpCijC,EAAmB3xK,UACnB2xK,EAAmB3xK,SAAS5E,gBACxBszI,EAAW1uI,SAAS5E,kBAKxBu2K,EAAmBjhE,eACnBihE,EAAmBjhE,cAAct1G,gBAC7BszI,EAAWh+B,cAAct1G,kBAK7Bu2K,EAAmBv4D,gBACnBu4D,EAAmBv4D,eAAeh+G,gBAC9BszI,EAAWt1B,eAAeh+G,iBAQf,IAEhB,IAEf,CIhFiBw2K,CAAwBrxD,EAAakxD,GAG3ClxD,EAAYrlH,OAAS,CAChC,CAae22K,CAAgBtxD,EAAakxD,IACrC,CAAClxD,EAAag1B,EAAYk8B,IAE7B,OAAOC,CACX,CCxBM,SAAU14K,EAAqBgB,GAKR,IALS,SAClCgG,EAAQ,cACR0wG,EAAa,eACb0I,EAAc,SACdtgH,GACyBkB,EACzB,MAAMgqC,EAAUvrC,IAUhB,OAFwB+4K,GAPsBvnI,EAAAA,EAAAA,UAAQ,KAC3C,CACHjqC,WACA0wG,gBACA0I,oBAEL,CAACp5G,EAAU0wG,EAAe0I,MAGNp1E,EAAQuxG,aAAe+1B,EAAAA,GAAkBC,QAExDgG,EAAAA,cAACA,EAAAA,SACI,KAAAhB,EAAsBz3K,EAAUkrC,IAItC,IACX,CCvBM,SAAU5qC,EAAuBY,GAKR,IALS,SACpCgG,EAAQ,cACR0wG,EAAa,eACb0I,EAAc,SACdtgH,GAC2BkB,EAC3B,MAAMgqC,EAAUvrC,IAUhB,OAFwB+4K,GAPsBvnI,EAAAA,EAAAA,UAAQ,KAC3C,CACHjqC,WACA0wG,gBACA0I,oBAEL,CAACp5G,EAAU0wG,EAAe0I,MAKzBp1E,EAAQuxG,aAAe+1B,EAAAA,GAAkBC,SACzCvnI,EAAQuxG,aAAe+1B,EAAAA,GAAkBK,eAQtC,KALC4F,EAAAA,cAACA,EAAAA,SACI,KAAAhB,EAAsBz3K,EAAUkrC,GAKjD,QC7BoCoqE,UAAAA,KCjBhC0jE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB72K,IAAjB82K,EACH,OAAOA,EAAan0H,QAGrB,IAAImlB,EAAS6uG,EAAyBE,GAAY,CAGjDl0H,QAAS,CAAC,GAOX,OAHAo0H,EAAoBF,GAAUhpK,KAAKi6D,EAAOnlB,QAASmlB,EAAQA,EAAOnlB,QAASi0H,GAGpE9uG,EAAOnlB,OACf,OCtBA,IAAIq0H,EAAkC,oBAAXppK,OAAwBA,OAAO,kBAAoB,qBAC1EqpK,EAAmC,oBAAXrpK,OAAwBA,OAAO,mBAAqB,sBAC5EspK,EAAiC,oBAAXtpK,OAAwBA,OAAO,iBAAmB,oBACxEupK,EAAgBp/J,IAChBA,GAASA,EAAM6qC,EAAI,IACrB7qC,EAAM6qC,EAAI,EACV7qC,EAAMsV,SAASxhB,GAAQA,EAAG8a,MAC1B5O,EAAMsV,SAASxhB,GAAQA,EAAG8a,IAAM9a,EAAG8a,IAAM9a,MAC1C,EAyBD+qK,EAAoB7nI,EAAI,CAAC+4B,EAAQnmE,EAAMy1K,KACtC,IAAIr/J,EACJq/J,KAAcr/J,EAAQ,IAAI6qC,GAAK,GAC/B,IAEIy0H,EACAC,EACAprJ,EAJAqrJ,EAAY,IAAIlhK,IAChBssC,EAAUmlB,EAAOnlB,QAIjB+b,EAAU,IAAI9jD,SAAQ,CAACqB,EAASu7J,KACnCtrJ,EAASsrJ,EACTF,EAAer7J,CAAO,IAEvByiD,EAAQu4G,GAAkBt0H,EAC1B+b,EAAQs4G,GAAkBnrK,IAAQkM,GAASlM,EAAGkM,GAAQw/J,EAAUlqJ,QAAQxhB,GAAK6yD,EAAe,OAAElkD,SAC9FstD,EAAOnlB,QAAU+b,EACjB/8D,GAAMwyF,IAEL,IAAItoF,EADJwrK,EAvCa,CAACljF,GAAUA,EAAKtwF,KAAK4zK,IACnC,GAAW,OAARA,GAA+B,kBAARA,EAAkB,CAC3C,GAAGA,EAAIT,GAAgB,OAAOS,EAC9B,GAAGA,EAAIp7J,KAAM,CACZ,IAAItE,EAAQ,GACZA,EAAM6qC,EAAI,EACV60H,EAAIp7J,MAAMsK,IACTtX,EAAI4nK,GAAkBtwJ,EACtBwwJ,EAAap/J,EAAM,IAChB3T,IACHiL,EAAI6nK,GAAgB9yK,EACpB+yK,EAAap/J,EAAM,IAEpB,IAAI1I,EAAM,CAAC,EAEX,OADAA,EAAI2nK,GAAkBnrK,GAAQA,EAAGkM,GAC1B1I,CACR,CACD,CACA,IAAIuiB,EAAM,CAAC,EAGX,OAFAA,EAAIolJ,GAAiBx8J,MACrBoX,EAAIqlJ,GAAkBQ,EACf7lJ,CAAG,IAkBK8lJ,CAASvjF,GAEvB,IAAIwjF,EAAY,IAAON,EAAYxzK,KAAK++C,IACvC,GAAGA,EAAEs0H,GAAe,MAAMt0H,EAAEs0H,GAC5B,OAAOt0H,EAAEq0H,EAAe,IAErBv4G,EAAU,IAAI9jD,SAASqB,KAC1BpQ,EAAK,IAAOoQ,EAAQ07J,IACjBhxJ,EAAI,EACP,IAAIixJ,EAAWpvH,GAAOA,IAAMzwC,IAAUw/J,EAAUxrK,IAAIy8C,KAAO+uH,EAAUxhI,IAAIyS,GAAIA,IAAMA,EAAE5F,IAAM/2C,EAAG8a,IAAK6hC,EAAEhpD,KAAKqM,KAC1GwrK,EAAYxzK,KAAK4zK,GAASA,EAAIT,GAAeY,IAAU,IAExD,OAAO/rK,EAAG8a,EAAI+3C,EAAUi5G,GAAW,IAChCn/J,IAAUA,EAAM0T,EAAOwyC,EAAQw4G,GAAgB1+J,GAAO8+J,EAAa30H,GAAWw0H,EAAap/J,MAC/FA,GAASA,EAAM6qC,EAAI,IAAM7qC,EAAM6qC,EAAI,EAAE,MC9DtCg0H,EAAoBjxJ,EAAKmiD,IACxB,IAAI+vG,EAAS/vG,GAAUA,EAAOgwG,WAC7B,IAAOhwG,EAAiB,QACxB,IAAM,EAEP,OADA8uG,EAAoBh0H,EAAEi1H,EAAQ,CAAE9oI,EAAG8oI,IAC5BA,CAAM,ECLdjB,EAAoBh0H,EAAI,CAACD,EAASo1H,KACjC,IAAI,IAAI1rK,KAAO0rK,EACXnB,EAAoBhuI,EAAEmvI,EAAY1rK,KAASuqK,EAAoBhuI,EAAE+Z,EAASt2C,IAC5EnB,OAAO0Q,eAAe+mC,EAASt2C,EAAK,CAAEwP,YAAY,EAAMpM,IAAKsoK,EAAW1rK,IAE1E,ECNDuqK,EAAoBnyH,EAAI,WACvB,GAA0B,kBAAfyI,WAAyB,OAAOA,WAC3C,IACC,OAAOv6C,MAAQ,IAAIuqC,SAAS,cAAb,EAChB,CAAE,MAAO94C,GACR,GAAsB,kBAAX+8B,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBy1I,EAAoBhuI,EAAI,CAACv5B,EAAK+L,IAAUlQ,OAAOC,UAAUC,eAAeyC,KAAKwB,EAAK+L,GCGxDw7J,EAAoB","sources":["App.tsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","chatbot.ts","../node_modules/uuid/dist/esm-browser/v4.js","apis/chatbox.tsx","authConfig.ts","components/Banner/index.tsx","../node_modules/react-bootstrap/esm/Table.js","utils/claimUtils.ts","../node_modules/openai/src/internal/qs/formats.ts","../node_modules/openai/src/internal/qs/utils.ts","../node_modules/openai/src/internal/qs/stringify.ts","../node_modules/openai/src/version.ts","../node_modules/openai/src/_shims/registry.ts","../node_modules/openai/src/_shims/MultipartBody.ts","../node_modules/openai/_shims/index.mjs","../node_modules/openai/src/_shims/web-runtime.ts","../node_modules/openai/src/error.ts","../node_modules/openai/src/internal/decoders/line.ts","../node_modules/openai/src/internal/stream-utils.ts","../node_modules/openai/src/streaming.ts","../node_modules/openai/src/uploads.ts","../node_modules/openai/src/core.ts","../node_modules/openai/src/resource.ts","../node_modules/openai/src/resources/completions.ts","../node_modules/openai/src/resources/chat/completions/messages.ts","../node_modules/openai/src/pagination.ts","../node_modules/openai/src/resources/chat/completions/completions.ts","../node_modules/openai/src/resources/chat/chat.ts","../node_modules/openai/src/resources/embeddings.ts","../node_modules/openai/src/resources/files.ts","../node_modules/openai/src/resources/images.ts","../node_modules/openai/src/resources/audio/speech.ts","../node_modules/openai/src/resources/audio/transcriptions.ts","../node_modules/openai/src/resources/audio/translations.ts","../node_modules/openai/src/resources/audio/audio.ts","../node_modules/openai/src/resources/moderations.ts","../node_modules/openai/src/resources/models.ts","../node_modules/openai/src/resources/fine-tuning/jobs/checkpoints.ts","../node_modules/openai/src/resources/fine-tuning/jobs/jobs.ts","../node_modules/openai/src/resources/fine-tuning/fine-tuning.ts","../node_modules/openai/src/resources/beta/assistants.ts","../node_modules/openai/src/lib/RunnableFunction.ts","../node_modules/openai/src/lib/chatCompletionUtils.ts","../node_modules/openai/src/lib/EventStream.ts","../node_modules/openai/src/lib/parser.ts","../node_modules/openai/src/lib/AbstractChatCompletionRunner.ts","../node_modules/openai/src/lib/ChatCompletionRunner.ts","../node_modules/openai/src/_vendor/partial-json-parser/parser.ts","../node_modules/openai/src/lib/ChatCompletionStream.ts","../node_modules/openai/src/lib/ChatCompletionStreamingRunner.ts","../node_modules/openai/src/resources/beta/chat/completions.ts","../node_modules/openai/src/resources/beta/chat/chat.ts","../node_modules/openai/src/resources/beta/realtime/sessions.ts","../node_modules/openai/src/resources/beta/realtime/realtime.ts","../node_modules/openai/src/lib/AssistantStream.ts","../node_modules/openai/src/resources/beta/threads/messages.ts","../node_modules/openai/src/resources/beta/threads/runs/steps.ts","../node_modules/openai/src/resources/beta/threads/runs/runs.ts","../node_modules/openai/src/resources/beta/threads/threads.ts","../node_modules/openai/src/resources/beta/vector-stores/files.ts","../node_modules/openai/src/resources/beta/vector-stores/file-batches.ts","../node_modules/openai/src/lib/Util.ts","../node_modules/openai/src/resources/beta/vector-stores/vector-stores.ts","../node_modules/openai/src/resources/beta/beta.ts","../node_modules/openai/src/resources/batches.ts","../node_modules/openai/src/resources/uploads/parts.ts","../node_modules/openai/src/resources/uploads/uploads.ts","../node_modules/openai/src/index.ts","chatGPT.ts","modules/chatGPTComponents.tsx","components/DataDisplay.tsx","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","components/NavigationBar.tsx","components/PageLayout.tsx","index.tsx","modules/heroModule.tsx","utils/fetchContent.ts","../ampDynamicContent/webpack/universalModuleDefinition","../ampDynamicContent/node_modules/is-retry-allowed/index.js","../ampDynamicContent/webpack/bootstrap","../ampDynamicContent/webpack/runtime/define property getters","../ampDynamicContent/webpack/runtime/hasOwnProperty shorthand","../ampDynamicContent/webpack/runtime/make namespace object","../ampDynamicContent/src/lib/config/index.ts","../ampDynamicContent/src/lib/utils/Url.ts","../ampDynamicContent/src/lib/rendering/model/RenderedContentItem.ts","../ampDynamicContent/src/lib/content/model/Edition.ts","../ampDynamicContent/src/lib/content/model/ContentLifecycle.ts","../ampDynamicContent/src/lib/rendering/coordinators/RenderContentItem.ts","../ampDynamicContent/src/lib/content/model/HttpError.ts","../ampDynamicContent/src/lib/content/coordinators/FilterByImpl.ts","../ampDynamicContent/src/lib/content/coordinators/FilterBy.ts","../ampDynamicContent/src/lib/utils/JsonWalker.ts","../ampDynamicContent/src/lib/content/model/ContentItem.ts","../ampDynamicContent/src/lib/content/model/ContentNotFoundError.ts","../ampDynamicContent/src/lib/content/coordinators/GetContentItemV1Impl.ts","../ampDynamicContent/src/lib/content/model/FragmentMeta.ts","../ampDynamicContent/src/lib/content/model/ContentMeta.ts","../ampDynamicContent/src/lib/media/Media.ts","../ampDynamicContent/src/lib/media/MediaMeta.ts","../ampDynamicContent/src/lib/media/ImageUrlBuilder.ts","../ampDynamicContent/src/lib/media/Image.ts","../ampDynamicContent/src/lib/media/Video.ts","../ampDynamicContent/src/lib/content/model/ContentReference.ts","../ampDynamicContent/src/lib/content/mapper/ContentMapper.ts","../ampDynamicContent/src/lib/content/coordinators/GetContentItemV2Impl.ts","../ampDynamicContent/src/lib/content/coordinators/GetContentItemsV2Impl.ts","../ampDynamicContent/node_modules/axios-retry/lib/esm/index.js","../ampDynamicContent/node_modules/axios/lib/helpers/bind.js","../ampDynamicContent/node_modules/axios/lib/utils.js","../ampDynamicContent/node_modules/axios/lib/core/AxiosError.js","../ampDynamicContent/node_modules/axios/lib/helpers/toFormData.js","../ampDynamicContent/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../ampDynamicContent/node_modules/axios/lib/helpers/buildURL.js","../ampDynamicContent/node_modules/axios/lib/core/InterceptorManager.js","../ampDynamicContent/node_modules/axios/lib/defaults/transitional.js","../ampDynamicContent/node_modules/axios/lib/platform/browser/index.js","../ampDynamicContent/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../ampDynamicContent/node_modules/axios/lib/platform/browser/classes/FormData.js","../ampDynamicContent/node_modules/axios/lib/platform/browser/classes/Blob.js","../ampDynamicContent/node_modules/axios/lib/platform/common/utils.js","../ampDynamicContent/node_modules/axios/lib/platform/index.js","../ampDynamicContent/node_modules/axios/lib/helpers/formDataToJSON.js","../ampDynamicContent/node_modules/axios/lib/defaults/index.js","../ampDynamicContent/node_modules/axios/lib/helpers/toURLEncodedForm.js","../ampDynamicContent/node_modules/axios/lib/helpers/parseHeaders.js","../ampDynamicContent/node_modules/axios/lib/core/AxiosHeaders.js","../ampDynamicContent/node_modules/axios/lib/core/transformData.js","../ampDynamicContent/node_modules/axios/lib/cancel/isCancel.js","../ampDynamicContent/node_modules/axios/lib/cancel/CanceledError.js","../ampDynamicContent/node_modules/axios/lib/core/settle.js","../ampDynamicContent/node_modules/axios/lib/helpers/speedometer.js","../ampDynamicContent/node_modules/axios/lib/helpers/progressEventReducer.js","../ampDynamicContent/node_modules/axios/lib/helpers/throttle.js","../ampDynamicContent/node_modules/axios/lib/helpers/isURLSameOrigin.js","../ampDynamicContent/node_modules/axios/lib/helpers/cookies.js","../ampDynamicContent/node_modules/axios/lib/core/buildFullPath.js","../ampDynamicContent/node_modules/axios/lib/helpers/isAbsoluteURL.js","../ampDynamicContent/node_modules/axios/lib/helpers/combineURLs.js","../ampDynamicContent/node_modules/axios/lib/core/mergeConfig.js","../ampDynamicContent/node_modules/axios/lib/helpers/resolveConfig.js","../ampDynamicContent/node_modules/axios/lib/adapters/xhr.js","../ampDynamicContent/node_modules/axios/lib/helpers/parseProtocol.js","../ampDynamicContent/node_modules/axios/lib/helpers/composeSignals.js","../ampDynamicContent/node_modules/axios/lib/helpers/trackStream.js","../ampDynamicContent/node_modules/axios/lib/adapters/fetch.js","../ampDynamicContent/node_modules/axios/lib/adapters/adapters.js","../ampDynamicContent/node_modules/axios/lib/helpers/null.js","../ampDynamicContent/node_modules/axios/lib/core/dispatchRequest.js","../ampDynamicContent/node_modules/axios/lib/env/data.js","../ampDynamicContent/node_modules/axios/lib/helpers/validator.js","../ampDynamicContent/node_modules/axios/lib/core/Axios.js","../ampDynamicContent/node_modules/axios/lib/cancel/CancelToken.js","../ampDynamicContent/node_modules/axios/lib/helpers/HttpStatusCode.js","../ampDynamicContent/node_modules/axios/lib/axios.js","../ampDynamicContent/node_modules/axios/lib/helpers/spread.js","../ampDynamicContent/node_modules/axios/lib/helpers/isAxiosError.js","../ampDynamicContent/src/lib/client/createBaseContentClient.ts","../ampDynamicContent/src/lib/client/createContentClientV2Fresh.ts","../ampDynamicContent/src/lib/content/model/NotSupportedError.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/UrlBuilder.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/GetHierarchyImpl.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/assemblers/HierarchyAssembler.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/assemblers/FilteringHierachyAssemblerImpl.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/assemblers/HierarchyAssemblerImpl.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/assemblers/MutatingHierarchyAssembler.ts","../ampDynamicContent/src/lib/content/coordinators/GetByHierarchy/assemblers/FilteringAndMutatingHierarchyAssembler.ts","../ampDynamicContent/src/lib/ContentClient.ts","../ampDynamicContent/src/lib/client/createContentClient.ts","../ampDynamicContent/src/lib/staging-environment/StagingEnvironmentFactory.ts","../ampDynamicContent/src/lib/media/model/ImageFormat.ts","../node_modules/invariant/browser.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/text-encoding/index.js","../node_modules/text-encoding/lib/encoding-indexes.js","../node_modules/text-encoding/lib/encoding.js","../node_modules/classnames/index.js","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-common/src/error/ClientAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/cache/utils/CacheHelpers.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/account/AccountInfo.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-common/src/account/TokenClaims.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/utils/UrlUtils.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-common/src/error/CacheErrorCodes.ts","../node_modules/@azure/msal-common/src/error/CacheError.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-browser/src/operatingcontext/BaseOperatingContext.ts","../node_modules/@azure/msal-browser/src/operatingcontext/StandardOperatingContext.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderErrorCodes.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/encode/Base64Decode.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-common/src/utils/FunctionWrappers.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryErrorResponse.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-browser/src/cache/BrowserStorage.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-common/src/error/ServerError.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/network/NetworkManager.ts","../node_modules/@azure/msal-common/src/constants/AADServerParamKeys.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/utils/ClientAssertionUtils.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/crypto/PkceGenerator.ts","../node_modules/@azure/msal-browser/src/request/RequestHelpers.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeStatusCodes.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/response/ResponseHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-browser/src/interaction_client/HybridSpaAuthorizationCodeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/controllers/StandardController.ts","../node_modules/@azure/msal-browser/src/cache/AccountManager.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","../node_modules/@azure/msal-browser/src/controllers/ControllerFactory.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-common/src/error/AuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts","../node_modules/@azure/msal-react/src/MsalContext.ts","../node_modules/@azure/msal-browser/src/event/EventMessage.ts","../node_modules/@azure/msal-react/src/utils/utilities.ts","../node_modules/@azure/msal-react/src/packageMetadata.ts","../node_modules/@azure/msal-react/src/MsalProvider.tsx","../node_modules/@azure/msal-react/src/hooks/useMsal.ts","../node_modules/@azure/msal-react/src/hooks/useIsAuthenticated.ts","../node_modules/@azure/msal-react/src/components/AuthenticatedTemplate.tsx","../node_modules/@azure/msal-react/src/components/UnauthenticatedTemplate.tsx","../node_modules/@azure/msal-react/src/error/ReactAuthError.ts","../webpack/bootstrap","../webpack/runtime/async module","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/startup"],"sourcesContent":["import { MsalProvider, AuthenticatedTemplate, useMsal, UnauthenticatedTemplate } from '@azure/msal-react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { PageLayout } from './components/PageLayout.tsx';\r\nimport { IdTokenData } from './components/DataDisplay.tsx';\r\nimport { loginRequest } from './authConfig.ts';\r\nimport React from 'react';\r\nimport './styles/App.css';\r\n\r\n/**\r\n * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \r\n * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \r\n * only render their children if a user is authenticated or unauthenticated, respectively. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nconst MainContent = () => {\r\n    /**\r\n     * useMsal is hook that returns the PublicClientApplication instance,\r\n     * that tells you what msal is currently doing. For more, visit:\r\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\r\n     */\r\n    const { instance } = useMsal();\r\n    const activeAccount = instance.getActiveAccount();\r\n\r\n    const handleRedirect = () => {\r\n        instance\r\n            .loginRedirect({\r\n                ...loginRequest,\r\n                prompt: 'create',\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n            <AuthenticatedTemplate>\r\n                {activeAccount ? (\r\n                    <Container>\r\n                        <IdTokenData idTokenClaims={activeAccount.idTokenClaims} />\r\n                    </Container>\r\n                ) : null}\r\n            </AuthenticatedTemplate>\r\n            <UnauthenticatedTemplate>\r\n                <Button className=\"signInButton\" onClick={handleRedirect} variant=\"primary\">\r\n                    Sign up\r\n                </Button>\r\n            </UnauthenticatedTemplate>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * msal-react is built on the React context API and all parts of your app that require authentication must be \r\n * wrapped in the MsalProvider component. You will first need to initialize an instance of PublicClientApplication \r\n * then pass this to MsalProvider as a prop. All components underneath MsalProvider will have access to the \r\n * PublicClientApplication instance via context as well as all hooks and components provided by msal-react. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nconst App = ({ instance }) => {\r\n    return (\r\n        <MsalProvider instance={instance}>\r\n            <PageLayout>\r\n                <MainContent />\r\n            </PageLayout>\r\n        </MsalProvider>\r\n    );\r\n};\r\n\r\nexport default App;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import { msalInstance } from \"./authConfig.ts\";\r\nimport { TextDecoder } from 'text-encoding';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface AuthResponse {\r\n  code: number;\r\n  message: string;\r\n  data?: {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  };\r\n}\r\n\r\ninterface groupIdResponse {\r\n  statusCode: number,\r\n  body: {\r\n    data: {\r\n      userNo: string,\r\n      userName: string,\r\n      userType: number,\r\n      is_ad_user: boolean,\r\n      is_org_group_admin: boolean,\r\n      roles: [\r\n        {\r\n          groupId: string,\r\n          group: string,\r\n          role: string,\r\n          isOverUsageLimit: boolean,\r\n        }\r\n      ],\r\n      permissionSettings: [],\r\n    }\r\n  },\r\n}\r\n\r\ninterface modelIdResponse {\r\n  statusCode: number,\r\n  body: [{\r\n    data: {\r\n      id: string,\r\n      provider: string,\r\n      model: number,\r\n      model_id: boolean,\r\n      lite_model: boolean,\r\n      type: string,\r\n      api_parameter: {},\r\n    }\r\n  }]\r\n}\r\n\r\nfunction generateUUID(): string{\r\n  const result = uuidv4();\r\n  return result;\r\n}\r\n\r\nexport const uuid = generateUUID();\r\nexport const api_key = 'zv9lMX/Gk2O+gzaw2bAgwctEaAXrpYFS/0znbcIuf3o=';\r\n\r\nexport async function azureAuthenticateChatbot(): Promise<string> {\r\n  const options: RequestInit = {\r\n    method: \"GET\",\r\n    headers: { \"accept\": \"text/plain\" },\r\n  };\r\n\r\n  const response = await fetch(\"https://s-chatbot-adminapi.giantcycling.com/Api/Auth/AzureAuthenticate\", options);\r\n  const data: any = await response.body?.getReader().read();\r\n  const reader = new TextDecoder().decode(data.value);\r\n\r\n  return reader;\r\n}\r\n\r\nexport async function authenticateChatbot(name: string, password: string): Promise<any> {\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"accept\": `text/json`,\r\n    },\r\n    body: JSON.stringify({\r\n      username: name,\r\n      userPassport: password,\r\n    }),\r\n  };\r\n\r\n  const response = await fetch(\"https://s-chatbot-adminapi.giantcycling.com/Api/Auth/Authenticate\", options);\r\n  const data: any = await response.body?.getReader().read();\r\n  const reader = new TextDecoder().decode(data.value);\r\n\r\n  if (reader) {\r\n    document.cookie = `chatbotAccessToken=${data.data.accessToken}; path=/; secure; HttpOnly; SameSite=Strict`;\r\n    document.cookie = `chatbotRefreshToken=${data.data.refreshToken}; path=/; secure; HttpOnly; SameSite=Strict`;\r\n  } else {\r\n    console.error(\"Chatbot Authentication Failed:\", data.message);\r\n  }\r\n}\r\n\r\nexport async function refreshChatbotToken(accessToken: string): Promise<void> {\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${accessToken}` },\r\n  };\r\n  const response = await fetch(\r\n    `https://chatbot-adminapi.giantcycling.com/api/auth/RefreshToken?refreshToken=${uuid}`, options\r\n  );\r\n\r\n  const data: AuthResponse = await response.json();\r\n  if (data.code === 20000 && data.data) {\r\n    sessionStorage.setItem(\"chatbotAccessToken\", data.data.accessToken);\r\n    sessionStorage.setItem(\"chatbotRefreshToken\", data.data.refreshToken);\r\n  } else {\r\n    console.error(\"Token Refresh Failed:\", data.message);\r\n  }\r\n}\r\n\r\nexport async function getUserPermission(accessToken: string): Promise<any> {\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    headers: { \"Authorization\": `Bearer ${accessToken}` },\r\n  };\r\n\r\n  const response = await fetch(\"https://s-chatbot.giantcycling.com/api/Auth/getUserPermission\", options);\r\n  console.log(response);\r\n}\r\n\r\nexport async function getGroupId(api_key: string) {\r\n  const options: RequestInit = {\r\n    method: \"GET\",\r\n    headers: { \"accept\": \"application/json\", \"Authorization\": `Bearer ${api_key}` },\r\n  };\r\n  const response = await fetch(\"https://s-chatbot-adminapi.giantcycling.com/userinfo\", options);\r\n  const reader: groupIdResponse = JSON.parse(new TextDecoder().decode((await response.body?.getReader().read())?.value));\r\n  return reader.body.data.roles[0].groupId;\r\n}\r\n\r\nexport async function getModelId(group_id: string) {\r\n  const options: RequestInit = {\r\n    method: \"GET\",\r\n    headers: { \"accept\": \"application/json\" },\r\n  };\r\n  const response = await fetch(`https://s-chatbot-adminapi.giantcycling.com/llms?group_id=${group_id}`, options);\r\n  console.log(response);\r\n  const reader: modelIdResponse = JSON.parse(new TextDecoder().decode((await response.body?.getReader().read())?.value));\r\n  return reader.body[0].data.model_id;\r\n}\r\n\r\nexport async function sendMessageToBot(message: string) {\r\n  const group_id = await getGroupId(api_key);\r\n  const model_name = await getModelId(group_id);\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${api_key}` },\r\n    body: JSON.stringify({\r\n      conversation_id: uuid,\r\n      group_id: group_id,\r\n      message: {\r\n        content: {\r\n          prompts: message,\r\n          files: [],\r\n          workspace: {},\r\n        }\r\n      },\r\n      model: model_name,\r\n      config: {\r\n        max_tokens: 2000,\r\n        top_p: 0.8,\r\n        top_k: 3,\r\n        temperature: 0.9,\r\n      },\r\n    }),\r\n  };\r\n  const response = await fetch('https://s-chatbot-adminapi.giantcycling.com/chat', options);\r\n  console.log(response);\r\n}\r\n\r\nexport async function logout(): Promise<void> {\r\n  await fetch(\"https://chatbot-adminapi.giantcycling.com/api/auth/Logout\", {\r\n    method: \"POST\",\r\n    headers: { \"Authorization\": `Bearer ${sessionStorage.getItem(\"chatbotAccessToken\")}` },\r\n    body: JSON.stringify({ idle: true }),\r\n  });\r\n\r\n  sessionStorage.clear();\r\n  await msalInstance.logoutPopup();\r\n  window.location.href = \"/login\";\r\n}\r\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import React, { useState } from \"react\";\r\nimport { msalInstance } from \"../authConfig.ts\";\r\nimport { InteractionRequiredAuthError } from \"@azure/msal-browser\";\r\nimport { authenticateChatbot, sendMessageToBot } from \"../chatbot.ts\";\r\n\r\n\r\nconst Chatbox: React.FC = () => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    const [messages, setMessages] = useState<any[]>([]);\r\n    const [input, setInput] = useState<string>(\"\");\r\n\r\n    // Toggle chatbox visibility\r\n    const toggleChat = () => setIsOpen(!isOpen);\r\n\r\n    // Send message to chatbot API\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n        const request = {\r\n            scopes: [\"User.Read\"],\r\n        };\r\n        try {\r\n            await authenticateChatbot(\"\", \"\");\r\n            const resMessage = await sendMessageToBot(input);\r\n            \r\n            setMessages([...messages, { text: input, sender: \"user\" }, { text: resMessage, sender: \"bot\" }]);\r\n            setInput(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error acquiring token or calling API:\", error);\r\n            if (error instanceof InteractionRequiredAuthError) {\r\n                await msalInstance.acquireTokenRedirect(request);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <button className=\"chat-toggle\" onClick={toggleChat}>\r\n                💬 Chat\r\n            </button>\r\n            \r\n            {isOpen && (\r\n                <div className=\"chatbox\">\r\n                    <div className=\"chat-header\">\r\n                        <span>Chat with Bot</span>\r\n                        <button onClick={toggleChat}>✖</button>\r\n                    </div>\r\n                    <div className=\"chat-messages\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={msg.sender === \"user\" ? \"message user\" : \"message bot\"}>\r\n                                {msg.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chat-input\">\r\n                        <input \r\n                            type=\"text\" \r\n                            value={input} \r\n                            onChange={(e) => setInput(e.target.value)} \r\n                            placeholder=\"Type a message...\" \r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbox;","import { LogLevel, Configuration, PublicClientApplication } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig: Configuration = {\r\n    auth: {\r\n        clientId: \"51451f72-1f39-458d-b506-e8d8a263ddf9\",\r\n        authority: \"https://login.microsoftonline.com/4d7304c5-dd9d-46df-9b60-7b0f1a164fce\", // Replace the placeholder with your tenant subdomain \r\n        redirectUri: \"http://localhost:3000/redirect\", // Must be registered in Microsoft Entra admin center\r\n        postLogoutRedirectUri: \"/\", // Page to navigate after logout\r\n        navigateToLoginRequestUrl: false,\r\n    },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // \"sessionStorage\" is more secure; \"localStorage\" enables SSO between tabs\r\n        storeAuthStateInCookie: false, // Set to \"true\" for IE11 or Edge issues\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback: (level: LogLevel, message: string, containsPii: boolean) => {\r\n                if (containsPii) return;\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        break;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        break;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        break;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        break;\r\n                }\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest: { scopes: string[] } = {\r\n    scopes: [],\r\n};\r\n\r\nexport const msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n/**\r\n * An optional silentRequest object can be used to achieve silent SSO\r\n * between applications by providing a \"login_hint\" property.\r\n */\r\n// export const silentRequest = {\r\n//     scopes: [\"openid\", \"profile\"],\r\n//     loginHint: \"example@domain.net\"\r\n// };\r\n","import './style.css';\r\nimport React from 'react';\r\n\r\ntype ButtonLink = {\r\n    internalLink: string;\r\n    target?: string;\r\n    linkText: string;\r\n};\r\n\r\ntype Button = {\r\n    link: ButtonLink;\r\n};\r\n\r\ntype ImageObject = {\r\n    diImage: {\r\n        image: {\r\n            defaultHost: string;\r\n            endpoint: string;\r\n            name: string;\r\n        };\r\n    };\r\n    alt: string;\r\n};\r\n\r\ntype Content = {\r\n    imageObject?: ImageObject;\r\n    title: string;\r\n    heroText: string;\r\n    buttonGroup?: Button[];\r\n};\r\n\r\ntype BannerProps = {\r\n    content?: Content;\r\n};\r\n\r\nconst Banner: React.FC<BannerProps> = ({ content }) => {\r\n    if (!content || !content.imageObject) return <div>Loading...</div>;\r\n\r\n    // Extract image details\r\n    const { defaultHost, endpoint, name } = content.imageObject.diImage.image;\r\n    const imageUrl = `https://${defaultHost}/i/${endpoint}/${name}`;\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            {/* Display Image */}\r\n            <img \r\n                src={imageUrl} \r\n                alt={content.imageObject.alt} \r\n            />\r\n\r\n            {/* Title & Hero Text */}\r\n            <h1>{content.title}</h1>\r\n            <p style={{ whiteSpace: \"pre-line\" }}>{content.heroText}</p>\r\n\r\n            {/* Render Buttons */}\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"15px\", marginTop: \"20px\" }}>\r\n                {content.buttonGroup?.map((btn, index) => (\r\n                    <a \r\n                        key={index}\r\n                        href={btn.link.internalLink}\r\n                        target={btn.link.target || \"_self\"}\r\n                        style={{\r\n                            padding: \"12px 24px\",\r\n                            backgroundColor: \"#007bff\",\r\n                            color: \"white\",\r\n                            textDecoration: \"none\",\r\n                            borderRadius: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            fontWeight: \"bold\",\r\n                            display: \"inline-block\",\r\n                            textAlign: \"center\",\r\n                            transition: \"background 0.3s\",\r\n                            minWidth: \"180px\"\r\n                        }}\r\n                        onMouseOver={(e) => (e.currentTarget.style.backgroundColor = \"#0056b3\")}\r\n                        onMouseOut={(e) => (e.currentTarget.style.backgroundColor = \"#007bff\")}\r\n                    >\r\n                        {btn.link.linkText}\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","/**\r\n * Populate claims table with appropriate description\r\n * @param {Object} claims ID token claims\r\n * @returns claimsObject\r\n */\r\nexport const createClaimsTable = (claims: Record<string, string | number>): Record<number, [string, string | number, string]> => {\r\n    let claimsObj: Record<number, [string, string | number, string]> = {};\r\n    let index = 0;\r\n\r\n    Object.keys(claims).forEach((key) => {\r\n        if (typeof claims[key] !== 'string' && typeof claims[key] !== 'number') return;\r\n        \r\n        const descriptions: Record<string, string> = {\r\n            aud: \"Identifies the intended recipient of the token. In ID tokens, the audience is your app's Application ID, assigned to your app in the Microsoft Entra admin center.\",\r\n            iss: \"Identifies the issuer, or authorization server that constructs and returns the token...\",\r\n            iat: \"Issued At indicates when the authentication for this token occurred.\",\r\n            nbf: \"The nbf (not before) claim identifies the time (as UNIX timestamp) before which the JWT must not be accepted for processing.\",\r\n            exp: \"The exp (expiration time) claim identifies the expiration time (as UNIX timestamp) on or after which the JWT must not be accepted for processing.\",\r\n            name: \"The name claim provides a human-readable value that identifies the subject of the token...\",\r\n            preferred_username: \"The primary username that represents the user...\",\r\n            nonce: \"The nonce matches the parameter included in the original /authorize request to the IDP...\",\r\n            oid: \"The oid (user’s object id) is the only claim that should be used to uniquely identify a user in an external tenant...\",\r\n            tid: \"The tenant ID. You will use this claim to ensure that only users from the current external tenant can access this app.\",\r\n            upn: \"(user principal name) – might be unique amongst the active set of users in a tenant...\",\r\n            email: \"Email might be unique amongst the active set of users in a tenant...\",\r\n            acct: \"Available as an optional claim, it lets you know what the type of user (homed, guest) is...\",\r\n            sid: \"Session ID, used for per-session user sign-out.\",\r\n            sub: \"The sub claim is a pairwise identifier - it is unique to a particular application ID...\",\r\n            ver: \"Version of the token issued by the Microsoft identity platform\",\r\n        };\r\n        \r\n        if (key === 'iat' || key === 'nbf' || key === 'exp') {\r\n            populateClaim(key, changeDateFormat(claims[key] as number), descriptions[key] || '', index, claimsObj);\r\n        } else if (!['uti', 'rh', '_claim_names', '_claim_sources'].includes(key)) {\r\n            populateClaim(key, claims[key], descriptions[key] || '', index, claimsObj);\r\n        }\r\n        \r\n        index++;\r\n    });\r\n\r\n    return claimsObj;\r\n};\r\n\r\nconst populateClaim = (\r\n    claim: string,\r\n    value: string | number,\r\n    description: string,\r\n    index: number,\r\n    claimsObject: Record<number, [string, string | number, string]>\r\n): void => {\r\n    claimsObject[index] = [claim, value, description];\r\n};\r\n\r\nconst changeDateFormat = (date: number): string => {\r\n    let dateObj = new Date(date * 1000);\r\n    return `${date} - [${dateObj.toString()}]`;\r\n};\r\n","import type { Format } from './types';\n\nexport const default_format: Format = 'RFC3986';\nexport const formatters: Record<Format, (str: PropertyKey) => string> = {\n  RFC1738: (v: PropertyKey) => String(v).replace(/%20/g, '+'),\n  RFC3986: (v: PropertyKey) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n","import { RFC1738 } from './formats';\nimport type { DefaultEncoder, Format } from './types';\n\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\n\nconst hex_table = (() => {\n  const array = [];\n  for (let i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n  }\n\n  return array;\n})();\n\nfunction compact_queue<T extends Record<string, any>>(queue: Array<{ obj: T; prop: string }>) {\n  while (queue.length > 1) {\n    const item = queue.pop();\n    if (!item) continue;\n\n    const obj = item.obj[item.prop];\n\n    if (is_array(obj)) {\n      const compacted: unknown[] = [];\n\n      for (let j = 0; j < obj.length; ++j) {\n        if (typeof obj[j] !== 'undefined') {\n          compacted.push(obj[j]);\n        }\n      }\n\n      // @ts-ignore\n      item.obj[item.prop] = compacted;\n    }\n  }\n}\n\nfunction array_to_object(source: any[], options: { plainObjects: boolean }) {\n  const obj = options && options.plainObjects ? Object.create(null) : {};\n  for (let i = 0; i < source.length; ++i) {\n    if (typeof source[i] !== 'undefined') {\n      obj[i] = source[i];\n    }\n  }\n\n  return obj;\n}\n\nexport function merge(\n  target: any,\n  source: any,\n  options: { plainObjects?: boolean; allowPrototypes?: boolean } = {},\n) {\n  if (!source) {\n    return target;\n  }\n\n  if (typeof source !== 'object') {\n    if (is_array(target)) {\n      target.push(source);\n    } else if (target && typeof target === 'object') {\n      if (\n        (options && (options.plainObjects || options.allowPrototypes)) ||\n        !has.call(Object.prototype, source)\n      ) {\n        target[source] = true;\n      }\n    } else {\n      return [target, source];\n    }\n\n    return target;\n  }\n\n  if (!target || typeof target !== 'object') {\n    return [target].concat(source);\n  }\n\n  let mergeTarget = target;\n  if (is_array(target) && !is_array(source)) {\n    // @ts-ignore\n    mergeTarget = array_to_object(target, options);\n  }\n\n  if (is_array(target) && is_array(source)) {\n    source.forEach(function (item, i) {\n      if (has.call(target, i)) {\n        const targetItem = target[i];\n        if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n          target[i] = merge(targetItem, item, options);\n        } else {\n          target.push(item);\n        }\n      } else {\n        target[i] = item;\n      }\n    });\n    return target;\n  }\n\n  return Object.keys(source).reduce(function (acc, key) {\n    const value = source[key];\n\n    if (has.call(acc, key)) {\n      acc[key] = merge(acc[key], value, options);\n    } else {\n      acc[key] = value;\n    }\n    return acc;\n  }, mergeTarget);\n}\n\nexport function assign_single_source(target: any, source: any) {\n  return Object.keys(source).reduce(function (acc, key) {\n    acc[key] = source[key];\n    return acc;\n  }, target);\n}\n\nexport function decode(str: string, _: any, charset: string) {\n  const strWithoutPlus = str.replace(/\\+/g, ' ');\n  if (charset === 'iso-8859-1') {\n    // unescape never throws, no try...catch needed:\n    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n  }\n  // utf-8\n  try {\n    return decodeURIComponent(strWithoutPlus);\n  } catch (e) {\n    return strWithoutPlus;\n  }\n}\n\nconst limit = 1024;\n\nexport const encode: (\n  str: any,\n  defaultEncoder: DefaultEncoder,\n  charset: string,\n  type: 'key' | 'value',\n  format: Format,\n) => string = (str, _defaultEncoder, charset, _kind, format: Format) => {\n  // This code was originally written by Brian White for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str;\n  }\n\n  let string = str;\n  if (typeof str === 'symbol') {\n    string = Symbol.prototype.toString.call(str);\n  } else if (typeof str !== 'string') {\n    string = String(str);\n  }\n\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n    });\n  }\n\n  let out = '';\n  for (let j = 0; j < string.length; j += limit) {\n    const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n    const arr = [];\n\n    for (let i = 0; i < segment.length; ++i) {\n      let c = segment.charCodeAt(i);\n      if (\n        c === 0x2d || // -\n        c === 0x2e || // .\n        c === 0x5f || // _\n        c === 0x7e || // ~\n        (c >= 0x30 && c <= 0x39) || // 0-9\n        (c >= 0x41 && c <= 0x5a) || // a-z\n        (c >= 0x61 && c <= 0x7a) || // A-Z\n        (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n      ) {\n        arr[arr.length] = segment.charAt(i);\n        continue;\n      }\n\n      if (c < 0x80) {\n        arr[arr.length] = hex_table[c];\n        continue;\n      }\n\n      if (c < 0x800) {\n        arr[arr.length] = hex_table[0xc0 | (c >> 6)]! + hex_table[0x80 | (c & 0x3f)];\n        continue;\n      }\n\n      if (c < 0xd800 || c >= 0xe000) {\n        arr[arr.length] =\n          hex_table[0xe0 | (c >> 12)]! + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n        continue;\n      }\n\n      i += 1;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n\n      arr[arr.length] =\n        hex_table[0xf0 | (c >> 18)]! +\n        hex_table[0x80 | ((c >> 12) & 0x3f)] +\n        hex_table[0x80 | ((c >> 6) & 0x3f)] +\n        hex_table[0x80 | (c & 0x3f)];\n    }\n\n    out += arr.join('');\n  }\n\n  return out;\n};\n\nexport function compact(value: any) {\n  const queue = [{ obj: { o: value }, prop: 'o' }];\n  const refs = [];\n\n  for (let i = 0; i < queue.length; ++i) {\n    const item = queue[i];\n    // @ts-ignore\n    const obj = item.obj[item.prop];\n\n    const keys = Object.keys(obj);\n    for (let j = 0; j < keys.length; ++j) {\n      const key = keys[j]!;\n      const val = obj[key];\n      if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n        queue.push({ obj: obj, prop: key });\n        refs.push(val);\n      }\n    }\n  }\n\n  compact_queue(queue);\n\n  return value;\n}\n\nexport function is_regexp(obj: any) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nexport function is_buffer(obj: any) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\n\nexport function combine(a: any, b: any) {\n  return [].concat(a, b);\n}\n\nexport function maybe_map<T>(val: T[], fn: (v: T) => T) {\n  if (is_array(val)) {\n    const mapped = [];\n    for (let i = 0; i < val.length; i += 1) {\n      mapped.push(fn(val[i]!));\n    }\n    return mapped;\n  }\n  return fn(val);\n}\n","import { encode, is_buffer, maybe_map } from './utils';\nimport { default_format, formatters } from './formats';\nimport type { NonNullableProperties, StringifyOptions } from './types';\n\nconst has = Object.prototype.hasOwnProperty;\n\nconst array_prefix_generators = {\n  brackets(prefix: PropertyKey) {\n    return String(prefix) + '[]';\n  },\n  comma: 'comma',\n  indices(prefix: PropertyKey, key: string) {\n    return String(prefix) + '[' + key + ']';\n  },\n  repeat(prefix: PropertyKey) {\n    return String(prefix);\n  },\n};\n\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr: any[], value_or_array: any) {\n  push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\n\nconst to_ISO = Date.prototype.toISOString;\n\nconst defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  allowEmptyArrays: false,\n  arrayFormat: 'indices',\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encodeDotInKeys: false,\n  encoder: encode,\n  encodeValuesOnly: false,\n  format: default_format,\n  formatter: formatters[default_format],\n  /** @deprecated */\n  indices: false,\n  serializeDate(date) {\n    return to_ISO.call(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false,\n} as NonNullableProperties<StringifyOptions & { formatter: (typeof formatters)['RFC1738'] }>;\n\nfunction is_non_nullish_primitive(v: unknown): v is string | number | boolean | symbol | bigint {\n  return (\n    typeof v === 'string' ||\n    typeof v === 'number' ||\n    typeof v === 'boolean' ||\n    typeof v === 'symbol' ||\n    typeof v === 'bigint'\n  );\n}\n\nconst sentinel = {};\n\nfunction inner_stringify(\n  object: any,\n  prefix: PropertyKey,\n  generateArrayPrefix: StringifyOptions['arrayFormat'] | ((prefix: string, key: string) => string),\n  commaRoundTrip: boolean,\n  allowEmptyArrays: boolean,\n  strictNullHandling: boolean,\n  skipNulls: boolean,\n  encodeDotInKeys: boolean,\n  encoder: StringifyOptions['encoder'],\n  filter: StringifyOptions['filter'],\n  sort: StringifyOptions['sort'],\n  allowDots: StringifyOptions['allowDots'],\n  serializeDate: StringifyOptions['serializeDate'],\n  format: StringifyOptions['format'],\n  formatter: StringifyOptions['formatter'],\n  encodeValuesOnly: boolean,\n  charset: StringifyOptions['charset'],\n  sideChannel: WeakMap<any, any>,\n) {\n  let obj = object;\n\n  let tmp_sc = sideChannel;\n  let step = 0;\n  let find_flag = false;\n  while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n    // Where object last appeared in the ref tree\n    const pos = tmp_sc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      } else {\n        find_flag = true; // Break while\n      }\n    }\n    if (typeof tmp_sc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate?.(obj);\n  } else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n    obj = maybe_map(obj, function (value) {\n      if (value instanceof Date) {\n        return serializeDate?.(value);\n      }\n      return value;\n    });\n  }\n\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ?\n          // @ts-expect-error\n          encoder(prefix, defaults.encoder, charset, 'key', format)\n        : prefix;\n    }\n\n    obj = '';\n  }\n\n  if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n    if (encoder) {\n      const key_value =\n        encodeValuesOnly ? prefix\n          // @ts-expect-error\n        : encoder(prefix, defaults.encoder, charset, 'key', format);\n      return [\n        formatter?.(key_value) +\n          '=' +\n          // @ts-expect-error\n          formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n      ];\n    }\n    return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n  }\n\n  const values: string[] = [];\n\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n\n  let obj_keys;\n  if (generateArrayPrefix === 'comma' && is_array(obj)) {\n    // we need to join elements in\n    if (encodeValuesOnly && encoder) {\n      // @ts-expect-error values only\n      obj = maybe_map(obj, encoder);\n    }\n    obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n  } else if (is_array(filter)) {\n    obj_keys = filter;\n  } else {\n    const keys = Object.keys(obj);\n    obj_keys = sort ? keys.sort(sort) : keys;\n  }\n\n  const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n  const adjusted_prefix =\n    commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n\n  if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n    return adjusted_prefix + '[]';\n  }\n\n  for (let j = 0; j < obj_keys.length; ++j) {\n    const key = obj_keys[j];\n    const value =\n      // @ts-ignore\n      typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key as any];\n\n    if (skipNulls && value === null) {\n      continue;\n    }\n\n    // @ts-ignore\n    const encoded_key = allowDots && encodeDotInKeys ? (key as any).replace(/\\./g, '%2E') : key;\n    const key_prefix =\n      is_array(obj) ?\n        typeof generateArrayPrefix === 'function' ?\n          generateArrayPrefix(adjusted_prefix, encoded_key)\n        : adjusted_prefix\n      : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n\n    sideChannel.set(object, step);\n    const valueSideChannel = new WeakMap();\n    valueSideChannel.set(sentinel, sideChannel);\n    push_to_array(\n      values,\n      inner_stringify(\n        value,\n        key_prefix,\n        generateArrayPrefix,\n        commaRoundTrip,\n        allowEmptyArrays,\n        strictNullHandling,\n        skipNulls,\n        encodeDotInKeys,\n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder,\n        filter,\n        sort,\n        allowDots,\n        serializeDate,\n        format,\n        formatter,\n        encodeValuesOnly,\n        charset,\n        valueSideChannel,\n      ),\n    );\n  }\n\n  return values;\n}\n\nfunction normalize_stringify_options(\n  opts: StringifyOptions = defaults,\n): NonNullableProperties<Omit<StringifyOptions, 'indices'>> & { indices?: boolean } {\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n\n  if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n    throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n\n  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n\n  const charset = opts.charset || defaults.charset;\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  let format = default_format;\n  if (typeof opts.format !== 'undefined') {\n    if (!has.call(formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n    format = opts.format;\n  }\n  const formatter = formatters[format];\n\n  let filter = defaults.filter;\n  if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n    filter = opts.filter;\n  }\n\n  let arrayFormat: StringifyOptions['arrayFormat'];\n  if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n    arrayFormat = opts.arrayFormat;\n  } else if ('indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = defaults.arrayFormat;\n  }\n\n  if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n  }\n\n  const allowDots =\n    typeof opts.allowDots === 'undefined' ?\n      !!opts.encodeDotInKeys === true ?\n        true\n      : defaults.allowDots\n    : !!opts.allowDots;\n\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    // @ts-ignore\n    allowDots: allowDots,\n    allowEmptyArrays:\n      typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    arrayFormat: arrayFormat,\n    charset: charset,\n    charsetSentinel:\n      typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    commaRoundTrip: !!opts.commaRoundTrip,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encodeDotInKeys:\n      typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly:\n      typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    format: format,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    // @ts-ignore\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling:\n      typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n  };\n}\n\nexport function stringify(object: any, opts: StringifyOptions = {}) {\n  let obj = object;\n  const options = normalize_stringify_options(opts);\n\n  let obj_keys: PropertyKey[] | undefined;\n  let filter;\n\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (is_array(options.filter)) {\n    filter = options.filter;\n    obj_keys = filter;\n  }\n\n  const keys: string[] = [];\n\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n\n  const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n  const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n  if (!obj_keys) {\n    obj_keys = Object.keys(obj);\n  }\n\n  if (options.sort) {\n    obj_keys.sort(options.sort);\n  }\n\n  const sideChannel = new WeakMap();\n  for (let i = 0; i < obj_keys.length; ++i) {\n    const key = obj_keys[i]!;\n\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n    push_to_array(\n      keys,\n      inner_stringify(\n        obj[key],\n        key,\n        // @ts-expect-error\n        generateArrayPrefix,\n        commaRoundTrip,\n        options.allowEmptyArrays,\n        options.strictNullHandling,\n        options.skipNulls,\n        options.encodeDotInKeys,\n        options.encode ? options.encoder : null,\n        options.filter,\n        options.sort,\n        options.allowDots,\n        options.serializeDate,\n        options.format,\n        options.formatter,\n        options.encodeValuesOnly,\n        options.charset,\n        sideChannel,\n      ),\n    );\n  }\n\n  const joined = keys.join(options.delimiter);\n  let prefix = options.addQueryPrefix === true ? '?' : '';\n\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('✓')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n\n  return joined.length > 0 ? prefix + joined : '';\n}\n","export const VERSION = '4.86.1'; // x-release-please-version\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { type RequestOptions } from '../core';\n\nexport interface Shims {\n  kind: string;\n  fetch: any;\n  Request: any;\n  Response: any;\n  Headers: any;\n  FormData: any;\n  Blob: any;\n  File: any;\n  ReadableStream: any;\n  getMultipartRequestOptions: <T = Record<string, unknown>>(\n    form: Shims['FormData'],\n    opts: RequestOptions<T>,\n  ) => Promise<RequestOptions<T>>;\n  getDefaultAgent: (url: string) => any;\n  fileFromPath:\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\n  isFsReadStream: (value: any) => boolean;\n}\n\nexport let auto = false;\nexport let kind: Shims['kind'] | undefined = undefined;\nexport let fetch: Shims['fetch'] | undefined = undefined;\nexport let Request: Shims['Request'] | undefined = undefined;\nexport let Response: Shims['Response'] | undefined = undefined;\nexport let Headers: Shims['Headers'] | undefined = undefined;\nexport let FormData: Shims['FormData'] | undefined = undefined;\nexport let Blob: Shims['Blob'] | undefined = undefined;\nexport let File: Shims['File'] | undefined = undefined;\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\n\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\n  if (auto) {\n    throw new Error(\n      `you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`,\n    );\n  }\n  if (kind) {\n    throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n  constructor(public body: any) {}\n  get [Symbol.toStringTag](): string {\n    return 'MultipartBody';\n  }\n}\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { MultipartBody } from './MultipartBody';\nimport { type RequestOptions } from '../core';\nimport { type Shims } from './registry';\n\nexport function getRuntime({ manuallyImported }: { manuallyImported?: boolean } = {}): Shims {\n  const recommendation =\n    manuallyImported ?\n      `You may need to use polyfills`\n    : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n\n  let _fetch, _Request, _Response, _Headers;\n  try {\n    // @ts-ignore\n    _fetch = fetch;\n    // @ts-ignore\n    _Request = Request;\n    // @ts-ignore\n    _Response = Response;\n    // @ts-ignore\n    _Headers = Headers;\n  } catch (error) {\n    throw new Error(\n      `this environment is missing the following Web Fetch API type: ${\n        (error as any).message\n      }. ${recommendation}`,\n    );\n  }\n\n  return {\n    kind: 'web',\n    fetch: _fetch,\n    Request: _Request,\n    Response: _Response,\n    Headers: _Headers,\n    FormData:\n      // @ts-ignore\n      typeof FormData !== 'undefined' ? FormData : (\n        class FormData {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    Blob:\n      typeof Blob !== 'undefined' ? Blob : (\n        class Blob {\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    File:\n      // @ts-ignore\n      typeof File !== 'undefined' ? File : (\n        class File {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    ReadableStream:\n      // @ts-ignore\n      typeof ReadableStream !== 'undefined' ? ReadableStream : (\n        class ReadableStream {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    getMultipartRequestOptions: async <T = Record<string, unknown>>(\n      // @ts-ignore\n      form: FormData,\n      opts: RequestOptions<T>,\n    ): Promise<RequestOptions<T>> => ({\n      ...opts,\n      body: new MultipartBody(form) as any,\n    }),\n    getDefaultAgent: (url: string) => undefined,\n    fileFromPath: () => {\n      throw new Error(\n        'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads',\n      );\n    },\n    isFsReadStream: (value: any) => false,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class OpenAIError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends OpenAIError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  readonly request_id: string | null | undefined;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.request_id = headers?.['x-request-id'];\n    this.error = error;\n\n    const data = error as Record<string, any>;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\n\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\n","import { OpenAIError } from '../../error';\n\nexport type Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n\n  buffer: Uint8Array;\n  #carriageReturnIndex: number | null;\n  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either \"dom\" or \"node\" types.\n\n  constructor() {\n    this.buffer = new Uint8Array();\n    this.#carriageReturnIndex = null;\n  }\n\n  decode(chunk: Bytes): string[] {\n    if (chunk == null) {\n      return [];\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n      : chunk;\n\n    let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n    newData.set(this.buffer);\n    newData.set(binaryChunk, this.buffer.length);\n    this.buffer = newData;\n\n    const lines: string[] = [];\n    let patternIndex;\n    while ((patternIndex = findNewlineIndex(this.buffer, this.#carriageReturnIndex)) != null) {\n      if (patternIndex.carriage && this.#carriageReturnIndex == null) {\n        // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n        this.#carriageReturnIndex = patternIndex.index;\n        continue;\n      }\n\n      // we got double \\r or \\rtext\\n\n      if (\n        this.#carriageReturnIndex != null &&\n        (patternIndex.index !== this.#carriageReturnIndex + 1 || patternIndex.carriage)\n      ) {\n        lines.push(this.decodeText(this.buffer.slice(0, this.#carriageReturnIndex - 1)));\n        this.buffer = this.buffer.slice(this.#carriageReturnIndex);\n        this.#carriageReturnIndex = null;\n        continue;\n      }\n\n      const endIndex =\n        this.#carriageReturnIndex !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n\n      const line = this.decodeText(this.buffer.slice(0, endIndex));\n      lines.push(line);\n\n      this.buffer = this.buffer.slice(patternIndex.index);\n      this.#carriageReturnIndex = null;\n    }\n\n    return lines;\n  }\n\n  decodeText(bytes: Bytes): string {\n    if (bytes == null) return '';\n    if (typeof bytes === 'string') return bytes;\n\n    // Node:\n    if (typeof Buffer !== 'undefined') {\n      if (bytes instanceof Buffer) {\n        return bytes.toString();\n      }\n      if (bytes instanceof Uint8Array) {\n        return Buffer.from(bytes).toString();\n      }\n\n      throw new OpenAIError(\n        `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`,\n      );\n    }\n\n    // Browser\n    if (typeof TextDecoder !== 'undefined') {\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n        this.textDecoder ??= new TextDecoder('utf8');\n        return this.textDecoder.decode(bytes);\n      }\n\n      throw new OpenAIError(\n        `Unexpected: received non-Uint8Array/ArrayBuffer (${\n          (bytes as any).constructor.name\n        }) in a web platform. Please report this error.`,\n      );\n    }\n\n    throw new OpenAIError(\n      `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`,\n    );\n  }\n\n  flush(): string[] {\n    if (!this.buffer.length) {\n      return [];\n    }\n    return this.decode('\\n');\n  }\n}\n\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(\n  buffer: Uint8Array,\n  startIndex: number | null,\n): { preceding: number; index: number; carriage: boolean } | null {\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = startIndex ?? 0; i < buffer.length; i++) {\n    if (buffer[i] === newline) {\n      return { preceding: i, index: i + 1, carriage: false };\n    }\n\n    if (buffer[i] === carriage) {\n      return { preceding: i, index: i + 1, carriage: true };\n    }\n  }\n\n  return null;\n}\n\nexport function findDoubleNewlineIndex(buffer: Uint8Array): number {\n  // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n  // and returns the index right after the first occurrence of any pattern,\n  // or -1 if none of the patterns are found.\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = 0; i < buffer.length - 1; i++) {\n    if (buffer[i] === newline && buffer[i + 1] === newline) {\n      // \\n\\n\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n      // \\r\\r\n      return i + 2;\n    }\n    if (\n      buffer[i] === carriage &&\n      buffer[i + 1] === newline &&\n      i + 3 < buffer.length &&\n      buffer[i + 2] === carriage &&\n      buffer[i + 3] === newline\n    ) {\n      // \\r\\n\\r\\n\n      return i + 4;\n    }\n  }\n\n  return -1;\n}\n","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n","import { ReadableStream, type Response } from './_shims/index';\nimport { OpenAIError } from './error';\nimport { findDoubleNewlineIndex, LineDecoder } from './internal/decoders/line';\nimport { ReadableStreamToAsyncIterable } from './internal/stream-utils';\n\nimport { APIError } from './error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\n\nexport type ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item> {\n  controller: AbortController;\n\n  constructor(\n    private iterator: () => AsyncIterator<Item>,\n    controller: AbortController,\n  ) {\n    this.controller = controller;\n  }\n\n  static fromSSEResponse<Item>(response: Response, controller: AbortController): Stream<Item> {\n    let consumed = false;\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of _iterSSEMessages(response, controller)) {\n          if (done) continue;\n\n          if (sse.data.startsWith('[DONE]')) {\n            done = true;\n            continue;\n          }\n\n          if (sse.event === null) {\n            let data;\n\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n\n            if (data && data.error) {\n              throw new APIError(undefined, data.error, undefined, undefined);\n            }\n\n            yield data;\n          } else {\n            let data;\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n            // TODO: Is this where the error should be thrown?\n            if (sse.event == 'error') {\n              throw new APIError(undefined, data.error, data.message, undefined);\n            }\n            yield { event: sse.event, data: data } as any;\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream<Item>(readableStream: ReadableStream, controller: AbortController): Stream<Item> {\n    let consumed = false;\n\n    async function* iterLines(): AsyncGenerator<string, void, unknown> {\n      const lineDecoder = new LineDecoder();\n\n      const iter = ReadableStreamToAsyncIterable<Bytes>(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<Item> {\n    return this.iterator();\n  }\n\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee(): [Stream<Item>, Stream<Item>] {\n    const left: Array<Promise<IteratorResult<Item>>> = [];\n    const right: Array<Promise<IteratorResult<Item>>> = [];\n    const iterator = this.iterator();\n\n    const teeIterator = (queue: Array<Promise<IteratorResult<Item>>>): AsyncIterator<Item> => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift()!;\n        },\n      };\n    };\n\n    return [\n      new Stream(() => teeIterator(left), this.controller),\n      new Stream(() => teeIterator(right), this.controller),\n    ];\n  }\n\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream(): ReadableStream {\n    const self = this;\n    let iter: AsyncIterator<Item>;\n    const encoder = new TextEncoder();\n\n    return new ReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl: any) {\n        try {\n          const { value, done } = await iter.next();\n          if (done) return ctrl.close();\n\n          const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      },\n    });\n  }\n}\n\nexport async function* _iterSSEMessages(\n  response: Response,\n  controller: AbortController,\n): AsyncGenerator<ServerSentEvent, void, unknown> {\n  if (!response.body) {\n    controller.abort();\n    throw new OpenAIError(`Attempted to iterate over a response with no body`);\n  }\n\n  const sseDecoder = new SSEDecoder();\n  const lineDecoder = new LineDecoder();\n\n  const iter = ReadableStreamToAsyncIterable<Bytes>(response.body);\n  for await (const sseChunk of iterSSEChunks(iter)) {\n    for (const line of lineDecoder.decode(sseChunk)) {\n      const sse = sseDecoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n\n  for (const line of lineDecoder.flush()) {\n    const sse = sseDecoder.decode(line);\n    if (sse) yield sse;\n  }\n}\n\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator: AsyncIterableIterator<Bytes>): AsyncGenerator<Uint8Array> {\n  let data = new Uint8Array();\n\n  for await (const chunk of iterator) {\n    if (chunk == null) {\n      continue;\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n      : chunk;\n\n    let newData = new Uint8Array(data.length + binaryChunk.length);\n    newData.set(data);\n    newData.set(binaryChunk, data.length);\n    data = newData;\n\n    let patternIndex;\n    while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n      yield data.slice(0, patternIndex);\n      data = data.slice(patternIndex);\n    }\n  }\n\n  if (data.length > 0) {\n    yield data;\n  }\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n","import { type RequestOptions } from './core';\nimport {\n  FormData,\n  File,\n  type Blob,\n  type FilePropertyBag,\n  getMultipartRequestOptions,\n  type FsReadStream,\n  isFsReadStream,\n} from './_shims/index';\nimport { MultipartBody } from './_shims/MultipartBody';\nexport { fileFromPath } from './_shims/index';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | Uint8Array | DataView;\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\n\n/**\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\n */\nexport interface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\n}\n\n/**\n * Intended to match web.File, node.File, node-fetch.File, etc.\n */\nexport interface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name: string;\n}\n\n/**\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nexport const isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport const isFileLike = (value: any): value is FileLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\nexport const isUploadable = (value: any): value is Uploadable => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n\nexport type ToFileInput = Uploadable | Exclude<BlobLikePart, string> | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<FileLike> {\n  // If it's a promise, resolve it.\n  value = await value;\n\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    return value;\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\n\n    // we need to convert the `Blob` into an array buffer because the `Blob` class\n    // that `node-fetch` defines is incompatible with the web standard which results\n    // in `new File` interpreting it as a string instead of binary data.\n    const data = isBlobLike(blob) ? [(await blob.arrayBuffer()) as any] : [blob];\n\n    return new File(data, name, options);\n  }\n\n  const bits = await getBytes(value);\n\n  name ||= getName(value) ?? 'unknown_file';\n\n  if (!options?.type) {\n    const type = (bits[0] as any)?.type;\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return new File(bits, name, options);\n}\n\nasync function getBytes(value: ToFileInput): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk as BlobPart); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(\n      `Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n        ?.name}; props: ${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: any): string {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n\nfunction getName(value: any): string | undefined {\n  return (\n    getStringFromMaybeBuffer(value.name) ||\n    getStringFromMaybeBuffer(value.filename) ||\n    // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\n  );\n}\n\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\n\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\nexport const isMultipartBody = (body: any): body is MultipartBody =>\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const multipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file as File);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n","import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/index';\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<WithRequestID<T>> {\n  const { response } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n    }\n\n    return Stream.fromSSEResponse(response, props.controller) as any;\n  }\n\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as WithRequestID<T>;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as WithRequestID<T>;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const isJSON =\n    contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return _addRequestID(json, response);\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as WithRequestID<T>;\n}\n\ntype WithRequestID<T> =\n  T extends Array<any> | Response | AbstractPage<any> ? T\n  : T extends Record<string, any> ? T & { _request_id?: string | null }\n  : T;\n\nfunction _addRequestID<T>(value: T, response: Response): WithRequestID<T> {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value as WithRequestID<T>;\n  }\n\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('x-request-id'),\n    enumerable: false,\n  }) as WithRequestID<T>;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<WithRequestID<T>> {\n  private parsedPromise: Promise<WithRequestID<T>> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (\n      props: APIResponseProps,\n    ) => PromiseOrValue<WithRequestID<T>> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      _addRequestID(transform(await this.parseResponse(props), props), props.response),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the X-Request-ID header which is useful for debugging requests and reporting\n   * issues to OpenAI.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response; request_id: string | null | undefined }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response, request_id: response.headers.get('x-request-id') };\n  }\n\n  private parse(): Promise<WithRequestID<T>> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse) as any as Promise<WithRequestID<T>>;\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = WithRequestID<T>, TResult2 = never>(\n    onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<WithRequestID<T> | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<WithRequestID<T>> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overriddenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overriddenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req>(\n    options: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: RequestInit; url: string; timeout: number } {\n    options = { ...options };\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = options.timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout: options.timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n    // for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    if (\n      getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n      getHeader(headers, 'x-stainless-timeout') === undefined &&\n      options.timeout\n    ) {\n      reqHeaders['x-stainless-timeout'] = String(options.timeout);\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new OpenAIError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const fetchOptions = {\n      signal: controller.signal as any,\n      ...options,\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new OpenAIError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) =>\n        new Page(\n          client,\n          props.response,\n          await defaultParseResponse(props),\n          props.options,\n        ) as WithRequestID<PageClass>,\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __metadata?: Record<string, unknown>;\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __metadata: true,\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    const modifiedArgs = args.map((arg) => {\n      if (!arg) {\n        return arg;\n      }\n\n      // Check for sensitive headers in request body 'headers' object\n      if (arg['headers']) {\n        // clone so we don't mutate\n        const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n\n        for (const header in arg['headers']) {\n          if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n            modifiedArg['headers'][header] = 'REDACTED';\n          }\n        }\n\n        return modifiedArg;\n      }\n\n      let modifiedArg = null;\n\n      // Check for sensitive headers in headers object\n      for (const header in arg) {\n        if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n          // avoid making a copy until we need to\n          modifiedArg ??= { ...arg };\n          modifiedArg[header] = 'REDACTED';\n        }\n      }\n\n      return modifiedArg ?? arg;\n    });\n    console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { OpenAI } from './index';\n\nexport class APIResource {\n  protected _client: OpenAI;\n\n  constructor(client: OpenAI) {\n    this._client = client;\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { APIPromise } from '../core';\nimport * as Core from '../core';\nimport * as CompletionsAPI from './completions';\nimport * as CompletionsCompletionsAPI from './chat/completions/completions';\nimport { Stream } from '../streaming';\n\nexport class Completions extends APIResource {\n  /**\n   * Creates a completion for the provided prompt and parameters.\n   */\n  create(body: CompletionCreateParamsNonStreaming, options?: Core.RequestOptions): APIPromise<Completion>;\n  create(\n    body: CompletionCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<Completion>>;\n  create(\n    body: CompletionCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<Completion> | Completion>;\n  create(\n    body: CompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): APIPromise<Completion> | APIPromise<Stream<Completion>> {\n    return this._client.post('/completions', { body, ...options, stream: body.stream ?? false }) as\n      | APIPromise<Completion>\n      | APIPromise<Stream<Completion>>;\n  }\n}\n\n/**\n * Represents a completion response from the API. Note: both the streamed and\n * non-streamed response objects share the same shape (unlike the chat endpoint).\n */\nexport interface Completion {\n  /**\n   * A unique identifier for the completion.\n   */\n  id: string;\n\n  /**\n   * The list of completion choices the model generated for the input prompt.\n   */\n  choices: Array<CompletionChoice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the completion was created.\n   */\n  created: number;\n\n  /**\n   * The model used for completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"text_completion\"\n   */\n  object: 'text_completion';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * Usage statistics for the completion request.\n   */\n  usage?: CompletionUsage;\n}\n\nexport interface CompletionChoice {\n  /**\n   * The reason the model stopped generating tokens. This will be `stop` if the model\n   * hit a natural stop point or a provided stop sequence, `length` if the maximum\n   * number of tokens specified in the request was reached, or `content_filter` if\n   * content was omitted due to a flag from our content filters.\n   */\n  finish_reason: 'stop' | 'length' | 'content_filter';\n\n  index: number;\n\n  logprobs: CompletionChoice.Logprobs | null;\n\n  text: string;\n}\n\nexport namespace CompletionChoice {\n  export interface Logprobs {\n    text_offset?: Array<number>;\n\n    token_logprobs?: Array<number>;\n\n    tokens?: Array<string>;\n\n    top_logprobs?: Array<Record<string, number>>;\n  }\n}\n\n/**\n * Usage statistics for the completion request.\n */\nexport interface CompletionUsage {\n  /**\n   * Number of tokens in the generated completion.\n   */\n  completion_tokens: number;\n\n  /**\n   * Number of tokens in the prompt.\n   */\n  prompt_tokens: number;\n\n  /**\n   * Total number of tokens used in the request (prompt + completion).\n   */\n  total_tokens: number;\n\n  /**\n   * Breakdown of tokens used in a completion.\n   */\n  completion_tokens_details?: CompletionUsage.CompletionTokensDetails;\n\n  /**\n   * Breakdown of tokens used in the prompt.\n   */\n  prompt_tokens_details?: CompletionUsage.PromptTokensDetails;\n}\n\nexport namespace CompletionUsage {\n  /**\n   * Breakdown of tokens used in a completion.\n   */\n  export interface CompletionTokensDetails {\n    /**\n     * When using Predicted Outputs, the number of tokens in the prediction that\n     * appeared in the completion.\n     */\n    accepted_prediction_tokens?: number;\n\n    /**\n     * Audio input tokens generated by the model.\n     */\n    audio_tokens?: number;\n\n    /**\n     * Tokens generated by the model for reasoning.\n     */\n    reasoning_tokens?: number;\n\n    /**\n     * When using Predicted Outputs, the number of tokens in the prediction that did\n     * not appear in the completion. However, like reasoning tokens, these tokens are\n     * still counted in the total completion tokens for purposes of billing, output,\n     * and context window limits.\n     */\n    rejected_prediction_tokens?: number;\n  }\n\n  /**\n   * Breakdown of tokens used in the prompt.\n   */\n  export interface PromptTokensDetails {\n    /**\n     * Audio input tokens present in the prompt.\n     */\n    audio_tokens?: number;\n\n    /**\n     * Cached tokens present in the prompt.\n     */\n    cached_tokens?: number;\n  }\n}\n\nexport type CompletionCreateParams = CompletionCreateParamsNonStreaming | CompletionCreateParamsStreaming;\n\nexport interface CompletionCreateParamsBase {\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | 'gpt-3.5-turbo-instruct' | 'davinci-002' | 'babbage-002';\n\n  /**\n   * The prompt(s) to generate completions for, encoded as a string, array of\n   * strings, array of tokens, or array of token arrays.\n   *\n   * Note that <|endoftext|> is the document separator that the model sees during\n   * training, so if a prompt is not specified the model will generate as if from the\n   * beginning of a new document.\n   */\n  prompt: string | Array<string> | Array<number> | Array<Array<number>> | null;\n\n  /**\n   * Generates `best_of` completions server-side and returns the \"best\" (the one with\n   * the highest log probability per token). Results cannot be streamed.\n   *\n   * When used with `n`, `best_of` controls the number of candidate completions and\n   * `n` specifies how many to return – `best_of` must be greater than `n`.\n   *\n   * **Note:** Because this parameter generates many completions, it can quickly\n   * consume your token quota. Use carefully and ensure that you have reasonable\n   * settings for `max_tokens` and `stop`.\n   */\n  best_of?: number | null;\n\n  /**\n   * Echo back the prompt in addition to the completion\n   */\n  echo?: boolean | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\n   * existing frequency in the text so far, decreasing the model's likelihood to\n   * repeat the same line verbatim.\n   *\n   * [See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Modify the likelihood of specified tokens appearing in the completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the GPT\n   * tokenizer) to an associated bias value from -100 to 100. You can use this\n   * [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs.\n   * Mathematically, the bias is added to the logits generated by the model prior to\n   * sampling. The exact effect will vary per model, but values between -1 and 1\n   * should decrease or increase likelihood of selection; values like -100 or 100\n   * should result in a ban or exclusive selection of the relevant token.\n   *\n   * As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token\n   * from being generated.\n   */\n  logit_bias?: Record<string, number> | null;\n\n  /**\n   * Include the log probabilities on the `logprobs` most likely output tokens, as\n   * well the chosen tokens. For example, if `logprobs` is 5, the API will return a\n   * list of the 5 most likely tokens. The API will always return the `logprob` of\n   * the sampled token, so there may be up to `logprobs+1` elements in the response.\n   *\n   * The maximum value for `logprobs` is 5.\n   */\n  logprobs?: number | null;\n\n  /**\n   * The maximum number of [tokens](/tokenizer) that can be generated in the\n   * completion.\n   *\n   * The token count of your prompt plus `max_tokens` cannot exceed the model's\n   * context length.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)\n   * for counting tokens.\n   */\n  max_tokens?: number | null;\n\n  /**\n   * How many completions to generate for each prompt.\n   *\n   * **Note:** Because this parameter generates many completions, it can quickly\n   * consume your token quota. Use carefully and ensure that you have reasonable\n   * settings for `max_tokens` and `stop`.\n   */\n  n?: number | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\n   * whether they appear in the text so far, increasing the model's likelihood to\n   * talk about new topics.\n   *\n   * [See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * If specified, our system will make a best effort to sample deterministically,\n   * such that repeated requests with the same `seed` and parameters should return\n   * the same result.\n   *\n   * Determinism is not guaranteed, and you should refer to the `system_fingerprint`\n   * response parameter to monitor changes in the backend.\n   */\n  seed?: number | null;\n\n  /**\n   * Up to 4 sequences where the API will stop generating further tokens. The\n   * returned text will not contain the stop sequence.\n   */\n  stop?: string | null | Array<string>;\n\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: boolean | null;\n\n  /**\n   * Options for streaming response. Only set this when you set `stream: true`.\n   */\n  stream_options?: CompletionsCompletionsAPI.ChatCompletionStreamOptions | null;\n\n  /**\n   * The suffix that comes after a completion of inserted text.\n   *\n   * This parameter is only supported for `gpt-3.5-turbo-instruct`.\n   */\n  suffix?: string | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   *\n   * We generally recommend altering this or `top_p` but not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace CompletionCreateParams {\n  export type CompletionCreateParamsNonStreaming = CompletionsAPI.CompletionCreateParamsNonStreaming;\n  export type CompletionCreateParamsStreaming = CompletionsAPI.CompletionCreateParamsStreaming;\n}\n\nexport interface CompletionCreateParamsNonStreaming extends CompletionCreateParamsBase {\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: false | null;\n}\n\nexport interface CompletionCreateParamsStreaming extends CompletionCreateParamsBase {\n  /**\n   * Whether to stream back partial progress. If set, tokens will be sent as\n   * data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream: true;\n}\n\nexport declare namespace Completions {\n  export {\n    type Completion as Completion,\n    type CompletionChoice as CompletionChoice,\n    type CompletionUsage as CompletionUsage,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as CompletionsAPI from './completions';\nimport { ChatCompletionStoreMessagesPage } from './completions';\nimport { type CursorPageParams } from '../../../pagination';\n\nexport class Messages extends APIResource {\n  /**\n   * Get the messages in a stored chat completion. Only chat completions that have\n   * been created with the `store` parameter set to `true` will be returned.\n   */\n  list(\n    completionId: string,\n    query?: MessageListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage>;\n  list(\n    completionId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage>;\n  list(\n    completionId: string,\n    query: MessageListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage> {\n    if (isRequestOptions(query)) {\n      return this.list(completionId, {}, query);\n    }\n    return this._client.getAPIList(\n      `/chat/completions/${completionId}/messages`,\n      ChatCompletionStoreMessagesPage,\n      { query, ...options },\n    );\n  }\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * Sort order for messages by timestamp. Use `asc` for ascending order or `desc`\n   * for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Messages {\n  export { type MessageListParams as MessageListParams };\n}\n\nexport { ChatCompletionStoreMessagesPage };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { AbstractPage, Response, APIClient, FinalRequestOptions, PageInfo } from './core';\n\nexport interface PageResponse<Item> {\n  data: Array<Item>;\n\n  object: string;\n}\n\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page<Item> extends AbstractPage<Item> implements PageResponse<Item> {\n  data: Array<Item>;\n\n  object: string;\n\n  constructor(client: APIClient, response: Response, body: PageResponse<Item>, options: FinalRequestOptions) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.object = body.object;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  // @deprecated Please use `nextPageInfo()` instead\n  /**\n   * This page represents a response that isn't actually paginated at the API level\n   * so there will never be any next page params.\n   */\n  nextPageParams(): null {\n    return null;\n  }\n\n  nextPageInfo(): null {\n    return null;\n  }\n}\n\nexport interface CursorPageResponse<Item> {\n  data: Array<Item>;\n\n  has_more: boolean;\n}\n\nexport interface CursorPageParams {\n  after?: string;\n\n  limit?: number;\n}\n\nexport class CursorPage<Item extends { id: string }>\n  extends AbstractPage<Item>\n  implements CursorPageResponse<Item>\n{\n  data: Array<Item>;\n\n  has_more: boolean;\n\n  constructor(\n    client: APIClient,\n    response: Response,\n    body: CursorPageResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data || [];\n    this.has_more = body.has_more || false;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data ?? [];\n  }\n\n  override hasNextPage(): boolean {\n    if (this.has_more === false) {\n      return false;\n    }\n\n    return super.hasNextPage();\n  }\n\n  // @deprecated Please use `nextPageInfo()` instead\n  nextPageParams(): Partial<CursorPageParams> | null {\n    const info = this.nextPageInfo();\n    if (!info) return null;\n    if ('params' in info) return info.params;\n    const params = Object.fromEntries(info.url.searchParams);\n    if (!Object.keys(params).length) return null;\n    return params;\n  }\n\n  nextPageInfo(): PageInfo | null {\n    const data = this.getPaginatedItems();\n    if (!data.length) {\n      return null;\n    }\n\n    const id = data[data.length - 1]?.id;\n    if (!id) {\n      return null;\n    }\n\n    return { params: { after: id } };\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport { APIPromise } from '../../../core';\nimport * as Core from '../../../core';\nimport * as CompletionsCompletionsAPI from './completions';\nimport * as CompletionsAPI from '../../completions';\nimport * as Shared from '../../shared';\nimport * as ChatAPI from '../chat';\nimport * as MessagesAPI from './messages';\nimport { MessageListParams, Messages } from './messages';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\nimport { Stream } from '../../../streaming';\n\nexport class Completions extends APIResource {\n  messages: MessagesAPI.Messages = new MessagesAPI.Messages(this._client);\n\n  /**\n   * Creates a model response for the given chat conversation. Learn more in the\n   * [text generation](https://platform.openai.com/docs/guides/text-generation),\n   * [vision](https://platform.openai.com/docs/guides/vision), and\n   * [audio](https://platform.openai.com/docs/guides/audio) guides.\n   *\n   * Parameter support can differ depending on the model used to generate the\n   * response, particularly for newer reasoning models. Parameters that are only\n   * supported for reasoning models are noted below. For the current state of\n   * unsupported parameters in reasoning models,\n   * [refer to the reasoning guide](https://platform.openai.com/docs/guides/reasoning).\n   */\n  create(\n    body: ChatCompletionCreateParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<ChatCompletionChunk>>;\n  create(\n    body: ChatCompletionCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<ChatCompletionChunk> | ChatCompletion>;\n  create(\n    body: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): APIPromise<ChatCompletion> | APIPromise<Stream<ChatCompletionChunk>> {\n    return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false }) as\n      | APIPromise<ChatCompletion>\n      | APIPromise<Stream<ChatCompletionChunk>>;\n  }\n\n  /**\n   * Get a stored chat completion. Only chat completions that have been created with\n   * the `store` parameter set to `true` will be returned.\n   */\n  retrieve(completionId: string, options?: Core.RequestOptions): Core.APIPromise<ChatCompletion> {\n    return this._client.get(`/chat/completions/${completionId}`, options);\n  }\n\n  /**\n   * Modify a stored chat completion. Only chat completions that have been created\n   * with the `store` parameter set to `true` can be modified. Currently, the only\n   * supported modification is to update the `metadata` field.\n   */\n  update(\n    completionId: string,\n    body: ChatCompletionUpdateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ChatCompletion> {\n    return this._client.post(`/chat/completions/${completionId}`, { body, ...options });\n  }\n\n  /**\n   * List stored chat completions. Only chat completions that have been stored with\n   * the `store` parameter set to `true` will be returned.\n   */\n  list(\n    query?: ChatCompletionListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionsPage, ChatCompletion>;\n  list(options?: Core.RequestOptions): Core.PagePromise<ChatCompletionsPage, ChatCompletion>;\n  list(\n    query: ChatCompletionListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionsPage, ChatCompletion> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/chat/completions', ChatCompletionsPage, { query, ...options });\n  }\n\n  /**\n   * Delete a stored chat completion. Only chat completions that have been created\n   * with the `store` parameter set to `true` can be deleted.\n   */\n  del(completionId: string, options?: Core.RequestOptions): Core.APIPromise<ChatCompletionDeleted> {\n    return this._client.delete(`/chat/completions/${completionId}`, options);\n  }\n}\n\nexport class ChatCompletionsPage extends CursorPage<ChatCompletion> {}\n\nexport class ChatCompletionStoreMessagesPage extends CursorPage<ChatCompletionStoreMessage> {}\n\n/**\n * Represents a chat completion response returned by model, based on the provided\n * input.\n */\nexport interface ChatCompletion {\n  /**\n   * A unique identifier for the chat completion.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can be more than one if `n` is greater\n   * than 1.\n   */\n  choices: Array<ChatCompletion.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created.\n   */\n  created: number;\n\n  /**\n   * The model used for the chat completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion`.\n   */\n  object: 'chat.completion';\n\n  /**\n   * The service tier used for processing the request.\n   */\n  service_tier?: 'scale' | 'default' | null;\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * Usage statistics for the completion request.\n   */\n  usage?: CompletionsAPI.CompletionUsage;\n}\n\nexport namespace ChatCompletion {\n  export interface Choice {\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, `tool_calls` if the\n     * model called a tool, or `function_call` (deprecated) if the model called a\n     * function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'content_filter' | 'function_call';\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs: Choice.Logprobs | null;\n\n    /**\n     * A chat completion message generated by the model.\n     */\n    message: CompletionsCompletionsAPI.ChatCompletionMessage;\n  }\n\n  export namespace Choice {\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n\n      /**\n       * A list of message refusal tokens with log probability information.\n       */\n      refusal: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n}\n\n/**\n * Messages sent by the model in response to user messages.\n */\nexport interface ChatCompletionAssistantMessageParam {\n  /**\n   * The role of the messages author, in this case `assistant`.\n   */\n  role: 'assistant';\n\n  /**\n   * Data about a previous audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAssistantMessageParam.Audio | null;\n\n  /**\n   * The contents of the assistant message. Required unless `tool_calls` or\n   * `function_call` is specified.\n   */\n  content?: string | Array<ChatCompletionContentPartText | ChatCompletionContentPartRefusal> | null;\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionAssistantMessageParam.FunctionCall | null;\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n\n  /**\n   * The refusal message by the assistant.\n   */\n  refusal?: string | null;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionAssistantMessageParam {\n  /**\n   * Data about a previous audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  export interface Audio {\n    /**\n     * Unique identifier for a previous audio response from the model.\n     */\n    id: string;\n  }\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * If the audio output modality is requested, this object contains data about the\n * audio response from the model.\n * [Learn more](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionAudio {\n  /**\n   * Unique identifier for this audio response.\n   */\n  id: string;\n\n  /**\n   * Base64 encoded audio bytes generated by the model, in the format specified in\n   * the request.\n   */\n  data: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when this audio response will no longer be\n   * accessible on the server for use in multi-turn conversations.\n   */\n  expires_at: number;\n\n  /**\n   * Transcript of the audio generated by the model.\n   */\n  transcript: string;\n}\n\n/**\n * Parameters for audio output. Required when audio output is requested with\n * `modalities: [\"audio\"]`.\n * [Learn more](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionAudioParam {\n  /**\n   * Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`, `opus`,\n   * or `pcm16`.\n   */\n  format: 'wav' | 'mp3' | 'flac' | 'opus' | 'pcm16';\n\n  /**\n   * The voice the model uses to respond. Supported voices are `ash`, `ballad`,\n   * `coral`, `sage`, and `verse` (also supported but not recommended are `alloy`,\n   * `echo`, and `shimmer`; these voices are less expressive).\n   */\n  voice: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n}\n\n/**\n * Represents a streamed chunk of a chat completion response returned by model,\n * based on the provided input.\n */\nexport interface ChatCompletionChunk {\n  /**\n   * A unique identifier for the chat completion. Each chunk has the same ID.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can contain more than one elements if `n` is\n   * greater than 1. Can also be empty for the last chunk if you set\n   * `stream_options: {\"include_usage\": true}`.\n   */\n  choices: Array<ChatCompletionChunk.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created. Each\n   * chunk has the same timestamp.\n   */\n  created: number;\n\n  /**\n   * The model to generate the completion.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `chat.completion.chunk`.\n   */\n  object: 'chat.completion.chunk';\n\n  /**\n   * The service tier used for processing the request.\n   */\n  service_tier?: 'scale' | 'default' | null;\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n\n  /**\n   * An optional field that will only be present when you set\n   * `stream_options: {\"include_usage\": true}` in your request. When present, it\n   * contains a null value except for the last chunk which contains the token usage\n   * statistics for the entire request.\n   */\n  usage?: CompletionsAPI.CompletionUsage | null;\n}\n\nexport namespace ChatCompletionChunk {\n  export interface Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    delta: Choice.Delta;\n\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, `tool_calls` if the\n     * model called a tool, or `function_call` (deprecated) if the model called a\n     * function.\n     */\n    finish_reason: 'stop' | 'length' | 'tool_calls' | 'content_filter' | 'function_call' | null;\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs?: Choice.Logprobs | null;\n  }\n\n  export namespace Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    export interface Delta {\n      /**\n       * The contents of the chunk message.\n       */\n      content?: string | null;\n\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      function_call?: Delta.FunctionCall;\n\n      /**\n       * The refusal message generated by the model.\n       */\n      refusal?: string | null;\n\n      /**\n       * The role of the author of this message.\n       */\n      role?: 'developer' | 'system' | 'user' | 'assistant' | 'tool';\n\n      tool_calls?: Array<Delta.ToolCall>;\n    }\n\n    export namespace Delta {\n      /**\n       * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n       * function that should be called, as generated by the model.\n       */\n      export interface FunctionCall {\n        /**\n         * The arguments to call the function with, as generated by the model in JSON\n         * format. Note that the model does not always generate valid JSON, and may\n         * hallucinate parameters not defined by your function schema. Validate the\n         * arguments in your code before calling your function.\n         */\n        arguments?: string;\n\n        /**\n         * The name of the function to call.\n         */\n        name?: string;\n      }\n\n      export interface ToolCall {\n        index: number;\n\n        /**\n         * The ID of the tool call.\n         */\n        id?: string;\n\n        function?: ToolCall.Function;\n\n        /**\n         * The type of the tool. Currently, only `function` is supported.\n         */\n        type?: 'function';\n      }\n\n      export namespace ToolCall {\n        export interface Function {\n          /**\n           * The arguments to call the function with, as generated by the model in JSON\n           * format. Note that the model does not always generate valid JSON, and may\n           * hallucinate parameters not defined by your function schema. Validate the\n           * arguments in your code before calling your function.\n           */\n          arguments?: string;\n\n          /**\n           * The name of the function to call.\n           */\n          name?: string;\n        }\n      }\n    }\n\n    /**\n     * Log probability information for the choice.\n     */\n    export interface Logprobs {\n      /**\n       * A list of message content tokens with log probability information.\n       */\n      content: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n\n      /**\n       * A list of message refusal tokens with log probability information.\n       */\n      refusal: Array<CompletionsCompletionsAPI.ChatCompletionTokenLogprob> | null;\n    }\n  }\n}\n\n/**\n * Learn about\n * [text inputs](https://platform.openai.com/docs/guides/text-generation).\n */\nexport type ChatCompletionContentPart =\n  | ChatCompletionContentPartText\n  | ChatCompletionContentPartImage\n  | ChatCompletionContentPartInputAudio;\n\n/**\n * Learn about [image inputs](https://platform.openai.com/docs/guides/vision).\n */\nexport interface ChatCompletionContentPartImage {\n  image_url: ChatCompletionContentPartImage.ImageURL;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'image_url';\n}\n\nexport namespace ChatCompletionContentPartImage {\n  export interface ImageURL {\n    /**\n     * Either a URL of the image or the base64 encoded image data.\n     */\n    url: string;\n\n    /**\n     * Specifies the detail level of the image. Learn more in the\n     * [Vision guide](https://platform.openai.com/docs/guides/vision#low-or-high-fidelity-image-understanding).\n     */\n    detail?: 'auto' | 'low' | 'high';\n  }\n}\n\n/**\n * Learn about [audio inputs](https://platform.openai.com/docs/guides/audio).\n */\nexport interface ChatCompletionContentPartInputAudio {\n  input_audio: ChatCompletionContentPartInputAudio.InputAudio;\n\n  /**\n   * The type of the content part. Always `input_audio`.\n   */\n  type: 'input_audio';\n}\n\nexport namespace ChatCompletionContentPartInputAudio {\n  export interface InputAudio {\n    /**\n     * Base64 encoded audio data.\n     */\n    data: string;\n\n    /**\n     * The format of the encoded audio data. Currently supports \"wav\" and \"mp3\".\n     */\n    format: 'wav' | 'mp3';\n  }\n}\n\nexport interface ChatCompletionContentPartRefusal {\n  /**\n   * The refusal message generated by the model.\n   */\n  refusal: string;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'refusal';\n}\n\n/**\n * Learn about\n * [text inputs](https://platform.openai.com/docs/guides/text-generation).\n */\nexport interface ChatCompletionContentPartText {\n  /**\n   * The text content.\n   */\n  text: string;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'text';\n}\n\nexport interface ChatCompletionDeleted {\n  /**\n   * The ID of the chat completion that was deleted.\n   */\n  id: string;\n\n  /**\n   * Whether the chat completion was deleted.\n   */\n  deleted: boolean;\n\n  /**\n   * The type of object being deleted.\n   */\n  object: 'chat.completion.deleted';\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, `developer` messages\n * replace the previous `system` messages.\n */\nexport interface ChatCompletionDeveloperMessageParam {\n  /**\n   * The contents of the developer message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `developer`.\n   */\n  role: 'developer';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\n/**\n * Specifying a particular function via `{\"name\": \"my_function\"}` forces the model\n * to call that function.\n */\nexport interface ChatCompletionFunctionCallOption {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\n/**\n * @deprecated\n */\nexport interface ChatCompletionFunctionMessageParam {\n  /**\n   * The contents of the function message.\n   */\n  content: string | null;\n\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n\n  /**\n   * The role of the messages author, in this case `function`.\n   */\n  role: 'function';\n}\n\n/**\n * A chat completion message generated by the model.\n */\nexport interface ChatCompletionMessage {\n  /**\n   * The contents of the message.\n   */\n  content: string | null;\n\n  /**\n   * The refusal message generated by the model.\n   */\n  refusal: string | null;\n\n  /**\n   * The role of the author of this message.\n   */\n  role: 'assistant';\n\n  /**\n   * If the audio output modality is requested, this object contains data about the\n   * audio response from the model.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAudio | null;\n\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  function_call?: ChatCompletionMessage.FunctionCall | null;\n\n  /**\n   * The tool calls generated by the model, such as function calls.\n   */\n  tool_calls?: Array<ChatCompletionMessageToolCall>;\n}\n\nexport namespace ChatCompletionMessage {\n  /**\n   * @deprecated Deprecated and replaced by `tool_calls`. The name and arguments of a\n   * function that should be called, as generated by the model.\n   */\n  export interface FunctionCall {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, `developer` messages\n * replace the previous `system` messages.\n */\nexport type ChatCompletionMessageParam =\n  | ChatCompletionDeveloperMessageParam\n  | ChatCompletionSystemMessageParam\n  | ChatCompletionUserMessageParam\n  | ChatCompletionAssistantMessageParam\n  | ChatCompletionToolMessageParam\n  | ChatCompletionFunctionMessageParam;\n\nexport interface ChatCompletionMessageToolCall {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The function that the model called.\n   */\n  function: ChatCompletionMessageToolCall.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionMessageToolCall {\n  /**\n   * The function that the model called.\n   */\n  export interface Function {\n    /**\n     * The arguments to call the function with, as generated by the model in JSON\n     * format. Note that the model does not always generate valid JSON, and may\n     * hallucinate parameters not defined by your function schema. Validate the\n     * arguments in your code before calling your function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\nexport type ChatCompletionModality = 'text' | 'audio';\n\n/**\n * Specifies a tool the model should use. Use to force the model to call a specific\n * function.\n */\nexport interface ChatCompletionNamedToolChoice {\n  function: ChatCompletionNamedToolChoice.Function;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\nexport namespace ChatCompletionNamedToolChoice {\n  export interface Function {\n    /**\n     * The name of the function to call.\n     */\n    name: string;\n  }\n}\n\n/**\n * Static predicted output content, such as the content of a text file that is\n * being regenerated.\n */\nexport interface ChatCompletionPredictionContent {\n  /**\n   * The content that should be matched when generating a model response. If\n   * generated tokens would match this content, the entire model response can be\n   * returned much more quickly.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The type of the predicted content you want to provide. This type is currently\n   * always `content`.\n   */\n  type: 'content';\n}\n\n/**\n * **o1 and o3-mini models only**\n *\n * Constrains effort on reasoning for\n * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n * result in faster responses and fewer tokens used on reasoning in a response.\n */\nexport type ChatCompletionReasoningEffort = 'low' | 'medium' | 'high' | null;\n\n/**\n * The role of the author of a message\n */\nexport type ChatCompletionRole = 'developer' | 'system' | 'user' | 'assistant' | 'tool' | 'function';\n\n/**\n * A chat completion message generated by the model.\n */\nexport interface ChatCompletionStoreMessage extends ChatCompletionMessage {\n  /**\n   * The identifier of the chat message.\n   */\n  id: string;\n}\n\n/**\n * Options for streaming response. Only set this when you set `stream: true`.\n */\nexport interface ChatCompletionStreamOptions {\n  /**\n   * If set, an additional chunk will be streamed before the `data: [DONE]` message.\n   * The `usage` field on this chunk shows the token usage statistics for the entire\n   * request, and the `choices` field will always be an empty array. All other chunks\n   * will also include a `usage` field, but with a null value.\n   */\n  include_usage?: boolean;\n}\n\n/**\n * Developer-provided instructions that the model should follow, regardless of\n * messages sent by the user. With o1 models and newer, use `developer` messages\n * for this purpose instead.\n */\nexport interface ChatCompletionSystemMessageParam {\n  /**\n   * The contents of the system message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `system`.\n   */\n  role: 'system';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\nexport interface ChatCompletionTokenLogprob {\n  /**\n   * The token.\n   */\n  token: string;\n\n  /**\n   * A list of integers representing the UTF-8 bytes representation of the token.\n   * Useful in instances where characters are represented by multiple tokens and\n   * their byte representations must be combined to generate the correct text\n   * representation. Can be `null` if there is no bytes representation for the token.\n   */\n  bytes: Array<number> | null;\n\n  /**\n   * The log probability of this token, if it is within the top 20 most likely\n   * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n   * unlikely.\n   */\n  logprob: number;\n\n  /**\n   * List of the most likely tokens and their log probability, at this token\n   * position. In rare cases, there may be fewer than the number of requested\n   * `top_logprobs` returned.\n   */\n  top_logprobs: Array<ChatCompletionTokenLogprob.TopLogprob>;\n}\n\nexport namespace ChatCompletionTokenLogprob {\n  export interface TopLogprob {\n    /**\n     * The token.\n     */\n    token: string;\n\n    /**\n     * A list of integers representing the UTF-8 bytes representation of the token.\n     * Useful in instances where characters are represented by multiple tokens and\n     * their byte representations must be combined to generate the correct text\n     * representation. Can be `null` if there is no bytes representation for the token.\n     */\n    bytes: Array<number> | null;\n\n    /**\n     * The log probability of this token, if it is within the top 20 most likely\n     * tokens. Otherwise, the value `-9999.0` is used to signify that the token is very\n     * unlikely.\n     */\n    logprob: number;\n  }\n}\n\nexport interface ChatCompletionTool {\n  function: Shared.FunctionDefinition;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: 'function';\n}\n\n/**\n * Controls which (if any) tool is called by the model. `none` means the model will\n * not call any tool and instead generates a message. `auto` means the model can\n * pick between generating a message or calling one or more tools. `required` means\n * the model must call one or more tools. Specifying a particular tool via\n * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n * call that tool.\n *\n * `none` is the default when no tools are present. `auto` is the default if tools\n * are present.\n */\nexport type ChatCompletionToolChoiceOption = 'none' | 'auto' | 'required' | ChatCompletionNamedToolChoice;\n\nexport interface ChatCompletionToolMessageParam {\n  /**\n   * The contents of the tool message.\n   */\n  content: string | Array<ChatCompletionContentPartText>;\n\n  /**\n   * The role of the messages author, in this case `tool`.\n   */\n  role: 'tool';\n\n  /**\n   * Tool call that this message is responding to.\n   */\n  tool_call_id: string;\n}\n\n/**\n * Messages sent by an end user, containing prompts or additional context\n * information.\n */\nexport interface ChatCompletionUserMessageParam {\n  /**\n   * The contents of the user message.\n   */\n  content: string | Array<ChatCompletionContentPart>;\n\n  /**\n   * The role of the messages author, in this case `user`.\n   */\n  role: 'user';\n\n  /**\n   * An optional name for the participant. Provides the model information to\n   * differentiate between participants of the same role.\n   */\n  name?: string;\n}\n\n/**\n * @deprecated ChatCompletionMessageParam should be used instead\n */\nexport type CreateChatCompletionRequestMessage = ChatCompletionMessageParam;\n\nexport type ChatCompletionCreateParams =\n  | ChatCompletionCreateParamsNonStreaming\n  | ChatCompletionCreateParamsStreaming;\n\nexport interface ChatCompletionCreateParamsBase {\n  /**\n   * A list of messages comprising the conversation so far. Depending on the\n   * [model](https://platform.openai.com/docs/models) you use, different message\n   * types (modalities) are supported, like\n   * [text](https://platform.openai.com/docs/guides/text-generation),\n   * [images](https://platform.openai.com/docs/guides/vision), and\n   * [audio](https://platform.openai.com/docs/guides/audio).\n   */\n  messages: Array<ChatCompletionMessageParam>;\n\n  /**\n   * ID of the model to use. See the\n   * [model endpoint compatibility](https://platform.openai.com/docs/models#model-endpoint-compatibility)\n   * table for details on which models work with the Chat API.\n   */\n  model: (string & {}) | ChatAPI.ChatModel;\n\n  /**\n   * Parameters for audio output. Required when audio output is requested with\n   * `modalities: [\"audio\"]`.\n   * [Learn more](https://platform.openai.com/docs/guides/audio).\n   */\n  audio?: ChatCompletionAudioParam | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\n   * existing frequency in the text so far, decreasing the model's likelihood to\n   * repeat the same line verbatim.\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Deprecated in favor of `tool_choice`.\n   *\n   * Controls which (if any) function is called by the model.\n   *\n   * `none` means the model will not call a function and instead generates a message.\n   *\n   * `auto` means the model can pick between generating a message or calling a\n   * function.\n   *\n   * Specifying a particular function via `{\"name\": \"my_function\"}` forces the model\n   * to call that function.\n   *\n   * `none` is the default when no functions are present. `auto` is the default if\n   * functions are present.\n   */\n  function_call?: 'none' | 'auto' | ChatCompletionFunctionCallOption;\n\n  /**\n   * Deprecated in favor of `tools`.\n   *\n   * A list of functions the model may generate JSON inputs for.\n   */\n  functions?: Array<ChatCompletionCreateParams.Function>;\n\n  /**\n   * Modify the likelihood of specified tokens appearing in the completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the\n   * tokenizer) to an associated bias value from -100 to 100. Mathematically, the\n   * bias is added to the logits generated by the model prior to sampling. The exact\n   * effect will vary per model, but values between -1 and 1 should decrease or\n   * increase likelihood of selection; values like -100 or 100 should result in a ban\n   * or exclusive selection of the relevant token.\n   */\n  logit_bias?: Record<string, number> | null;\n\n  /**\n   * Whether to return log probabilities of the output tokens or not. If true,\n   * returns the log probabilities of each output token returned in the `content` of\n   * `message`.\n   */\n  logprobs?: boolean | null;\n\n  /**\n   * An upper bound for the number of tokens that can be generated for a completion,\n   * including visible output tokens and\n   * [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of [tokens](/tokenizer) that can be generated in the chat\n   * completion. This value can be used to control\n   * [costs](https://openai.com/api/pricing/) for text generated via API.\n   *\n   * This value is now deprecated in favor of `max_completion_tokens`, and is not\n   * compatible with\n   * [o1 series models](https://platform.openai.com/docs/guides/reasoning).\n   */\n  max_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Output types that you would like the model to generate for this request. Most\n   * models are capable of generating text, which is the default:\n   *\n   * `[\"text\"]`\n   *\n   * The `gpt-4o-audio-preview` model can also be used to\n   * [generate audio](https://platform.openai.com/docs/guides/audio). To request that\n   * this model generate both text and audio responses, you can use:\n   *\n   * `[\"text\", \"audio\"]`\n   */\n  modalities?: Array<ChatCompletionModality> | null;\n\n  /**\n   * How many chat completion choices to generate for each input message. Note that\n   * you will be charged based on the number of generated tokens across all of the\n   * choices. Keep `n` as `1` to minimize costs.\n   */\n  n?: number | null;\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Static predicted output content, such as the content of a text file that is\n   * being regenerated.\n   */\n  prediction?: ChatCompletionPredictionContent | null;\n\n  /**\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\n   * whether they appear in the text so far, increasing the model's likelihood to\n   * talk about new topics.\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * **o1 and o3-mini models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: ChatCompletionReasoningEffort | null;\n\n  /**\n   * An object specifying the format that the model must output.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?:\n    | Shared.ResponseFormatText\n    | Shared.ResponseFormatJSONObject\n    | Shared.ResponseFormatJSONSchema;\n\n  /**\n   * This feature is in Beta. If specified, our system will make a best effort to\n   * sample deterministically, such that repeated requests with the same `seed` and\n   * parameters should return the same result. Determinism is not guaranteed, and you\n   * should refer to the `system_fingerprint` response parameter to monitor changes\n   * in the backend.\n   */\n  seed?: number | null;\n\n  /**\n   * Specifies the latency tier to use for processing the request. This parameter is\n   * relevant for customers subscribed to the scale tier service:\n   *\n   * - If set to 'auto', and the Project is Scale tier enabled, the system will\n   *   utilize scale tier credits until they are exhausted.\n   * - If set to 'auto', and the Project is not Scale tier enabled, the request will\n   *   be processed using the default service tier with a lower uptime SLA and no\n   *   latency guarantee.\n   * - If set to 'default', the request will be processed using the default service\n   *   tier with a lower uptime SLA and no latency guarantee.\n   * - When not set, the default behavior is 'auto'.\n   */\n  service_tier?: 'auto' | 'default' | null;\n\n  /**\n   * Up to 4 sequences where the API will stop generating further tokens.\n   */\n  stop?: string | null | Array<string>;\n\n  /**\n   * Whether or not to store the output of this chat completion request for use in\n   * our [model distillation](https://platform.openai.com/docs/guides/distillation)\n   * or [evals](https://platform.openai.com/docs/guides/evals) products.\n   */\n  store?: boolean | null;\n\n  /**\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\n   * sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: boolean | null;\n\n  /**\n   * Options for streaming response. Only set this when you set `stream: true`.\n   */\n  stream_options?: ChatCompletionStreamOptions | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic. We generally recommend altering this or `top_p` but\n   * not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tool and instead generates a message. `auto` means the model can\n   * pick between generating a message or calling one or more tools. `required` means\n   * the model must call one or more tools. Specifying a particular tool via\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   *\n   * `none` is the default when no tools are present. `auto` is the default if tools\n   * are present.\n   */\n  tool_choice?: ChatCompletionToolChoiceOption;\n\n  /**\n   * A list of tools the model may call. Currently, only functions are supported as a\n   * tool. Use this to provide a list of functions the model may generate JSON inputs\n   * for. A max of 128 functions are supported.\n   */\n  tools?: Array<ChatCompletionTool>;\n\n  /**\n   * An integer between 0 and 20 specifying the number of most likely tokens to\n   * return at each token position, each with an associated log probability.\n   * `logprobs` must be set to `true` if this parameter is used.\n   */\n  top_logprobs?: number | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport namespace ChatCompletionCreateParams {\n  /**\n   * @deprecated\n   */\n  export interface Function {\n    /**\n     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain\n     * underscores and dashes, with a maximum length of 64.\n     */\n    name: string;\n\n    /**\n     * A description of what the function does, used by the model to choose when and\n     * how to call the function.\n     */\n    description?: string;\n\n    /**\n     * The parameters the functions accepts, described as a JSON Schema object. See the\n     * [guide](https://platform.openai.com/docs/guides/function-calling) for examples,\n     * and the\n     * [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for\n     * documentation about the format.\n     *\n     * Omitting `parameters` defines a function with an empty parameter list.\n     */\n    parameters?: Shared.FunctionParameters;\n  }\n\n  export type ChatCompletionCreateParamsNonStreaming =\n    CompletionsCompletionsAPI.ChatCompletionCreateParamsNonStreaming;\n  export type ChatCompletionCreateParamsStreaming =\n    CompletionsCompletionsAPI.ChatCompletionCreateParamsStreaming;\n}\n\n/**\n * @deprecated Use ChatCompletionCreateParams instead\n */\nexport type CompletionCreateParams = ChatCompletionCreateParams;\n\nexport interface ChatCompletionCreateParamsNonStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\n   * sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream?: false | null;\n}\n\n/**\n * @deprecated Use ChatCompletionCreateParamsNonStreaming instead\n */\nexport type CompletionCreateParamsNonStreaming = ChatCompletionCreateParamsNonStreaming;\n\nexport interface ChatCompletionCreateParamsStreaming extends ChatCompletionCreateParamsBase {\n  /**\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\n   * sent as data-only\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\n   * as they become available, with the stream terminated by a `data: [DONE]`\n   * message.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n   */\n  stream: true;\n}\n\n/**\n * @deprecated Use ChatCompletionCreateParamsStreaming instead\n */\nexport type CompletionCreateParamsStreaming = ChatCompletionCreateParamsStreaming;\n\nexport interface ChatCompletionUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n}\n\n/**\n * @deprecated Use ChatCompletionUpdateParams instead\n */\nexport type CompletionUpdateParams = ChatCompletionUpdateParams;\n\nexport interface ChatCompletionListParams extends CursorPageParams {\n  /**\n   * A list of metadata keys to filter the chat completions by. Example:\n   *\n   * `metadata[key1]=value1&metadata[key2]=value2`\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The model used to generate the chat completions.\n   */\n  model?: string;\n\n  /**\n   * Sort order for chat completions by timestamp. Use `asc` for ascending order or\n   * `desc` for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\n/**\n * @deprecated Use ChatCompletionListParams instead\n */\nexport type CompletionListParams = ChatCompletionListParams;\n\nCompletions.ChatCompletionsPage = ChatCompletionsPage;\nCompletions.Messages = Messages;\n\nexport declare namespace Completions {\n  export {\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type CreateChatCompletionRequestMessage as CreateChatCompletionRequestMessage,\n    ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type CompletionCreateParams as CompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type CompletionUpdateParams as CompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n    type CompletionListParams as CompletionListParams,\n  };\n\n  export { Messages as Messages, type MessageListParams as MessageListParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as CompletionsAPI from './completions/completions';\nimport {\n  ChatCompletion,\n  ChatCompletionAssistantMessageParam,\n  ChatCompletionAudio,\n  ChatCompletionAudioParam,\n  ChatCompletionChunk,\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n  ChatCompletionContentPartInputAudio,\n  ChatCompletionContentPartRefusal,\n  ChatCompletionContentPartText,\n  ChatCompletionCreateParams,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletionDeleted,\n  ChatCompletionDeveloperMessageParam,\n  ChatCompletionFunctionCallOption,\n  ChatCompletionFunctionMessageParam,\n  ChatCompletionListParams,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionMessageToolCall,\n  ChatCompletionModality,\n  ChatCompletionNamedToolChoice,\n  ChatCompletionPredictionContent,\n  ChatCompletionReasoningEffort,\n  ChatCompletionRole,\n  ChatCompletionStoreMessage,\n  ChatCompletionStreamOptions,\n  ChatCompletionSystemMessageParam,\n  ChatCompletionTokenLogprob,\n  ChatCompletionTool,\n  ChatCompletionToolChoiceOption,\n  ChatCompletionToolMessageParam,\n  ChatCompletionUpdateParams,\n  ChatCompletionUserMessageParam,\n  ChatCompletionsPage,\n  CompletionCreateParams,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  CompletionListParams,\n  CompletionUpdateParams,\n  Completions,\n  CreateChatCompletionRequestMessage,\n} from './completions/completions';\n\nexport class Chat extends APIResource {\n  completions: CompletionsAPI.Completions = new CompletionsAPI.Completions(this._client);\n}\n\nexport type ChatModel =\n  | 'o3-mini'\n  | 'o3-mini-2025-01-31'\n  | 'o1'\n  | 'o1-2024-12-17'\n  | 'o1-preview'\n  | 'o1-preview-2024-09-12'\n  | 'o1-mini'\n  | 'o1-mini-2024-09-12'\n  | 'gpt-4.5-preview'\n  | 'gpt-4.5-preview-2025-02-27'\n  | 'gpt-4o'\n  | 'gpt-4o-2024-11-20'\n  | 'gpt-4o-2024-08-06'\n  | 'gpt-4o-2024-05-13'\n  | 'gpt-4o-audio-preview'\n  | 'gpt-4o-audio-preview-2024-10-01'\n  | 'gpt-4o-audio-preview-2024-12-17'\n  | 'gpt-4o-mini-audio-preview'\n  | 'gpt-4o-mini-audio-preview-2024-12-17'\n  | 'chatgpt-4o-latest'\n  | 'gpt-4o-mini'\n  | 'gpt-4o-mini-2024-07-18'\n  | 'gpt-4-turbo'\n  | 'gpt-4-turbo-2024-04-09'\n  | 'gpt-4-0125-preview'\n  | 'gpt-4-turbo-preview'\n  | 'gpt-4-1106-preview'\n  | 'gpt-4-vision-preview'\n  | 'gpt-4'\n  | 'gpt-4-0314'\n  | 'gpt-4-0613'\n  | 'gpt-4-32k'\n  | 'gpt-4-32k-0314'\n  | 'gpt-4-32k-0613'\n  | 'gpt-3.5-turbo'\n  | 'gpt-3.5-turbo-16k'\n  | 'gpt-3.5-turbo-0301'\n  | 'gpt-3.5-turbo-0613'\n  | 'gpt-3.5-turbo-1106'\n  | 'gpt-3.5-turbo-0125'\n  | 'gpt-3.5-turbo-16k-0613';\n\nChat.Completions = Completions;\nChat.ChatCompletionsPage = ChatCompletionsPage;\n\nexport declare namespace Chat {\n  export { type ChatModel as ChatModel };\n\n  export {\n    Completions as Completions,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    type CreateChatCompletionRequestMessage as CreateChatCompletionRequestMessage,\n    ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type CompletionCreateParams as CompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type CompletionUpdateParams as CompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n    type CompletionListParams as CompletionListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Embeddings extends APIResource {\n  /**\n   * Creates an embedding vector representing the input text.\n   */\n  create(\n    body: EmbeddingCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<CreateEmbeddingResponse> {\n    return this._client.post('/embeddings', { body, ...options });\n  }\n}\n\nexport interface CreateEmbeddingResponse {\n  /**\n   * The list of embeddings generated by the model.\n   */\n  data: Array<Embedding>;\n\n  /**\n   * The name of the model used to generate the embedding.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"list\".\n   */\n  object: 'list';\n\n  /**\n   * The usage information for the request.\n   */\n  usage: CreateEmbeddingResponse.Usage;\n}\n\nexport namespace CreateEmbeddingResponse {\n  /**\n   * The usage information for the request.\n   */\n  export interface Usage {\n    /**\n     * The number of tokens used by the prompt.\n     */\n    prompt_tokens: number;\n\n    /**\n     * The total number of tokens used by the request.\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * Represents an embedding vector returned by embedding endpoint.\n */\nexport interface Embedding {\n  /**\n   * The embedding vector, which is a list of floats. The length of vector depends on\n   * the model as listed in the\n   * [embedding guide](https://platform.openai.com/docs/guides/embeddings).\n   */\n  embedding: Array<number>;\n\n  /**\n   * The index of the embedding in the list of embeddings.\n   */\n  index: number;\n\n  /**\n   * The object type, which is always \"embedding\".\n   */\n  object: 'embedding';\n}\n\nexport type EmbeddingModel = 'text-embedding-ada-002' | 'text-embedding-3-small' | 'text-embedding-3-large';\n\nexport interface EmbeddingCreateParams {\n  /**\n   * Input text to embed, encoded as a string or array of tokens. To embed multiple\n   * inputs in a single request, pass an array of strings or array of token arrays.\n   * The input must not exceed the max input tokens for the model (8192 tokens for\n   * `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048\n   * dimensions or less.\n   * [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)\n   * for counting tokens. Some models may also impose a limit on total number of\n   * tokens summed across inputs.\n   */\n  input: string | Array<string> | Array<number> | Array<Array<number>>;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | EmbeddingModel;\n\n  /**\n   * The number of dimensions the resulting output embeddings should have. Only\n   * supported in `text-embedding-3` and later models.\n   */\n  dimensions?: number;\n\n  /**\n   * The format to return the embeddings in. Can be either `float` or\n   * [`base64`](https://pypi.org/project/pybase64/).\n   */\n  encoding_format?: 'float' | 'base64';\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport declare namespace Embeddings {\n  export {\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingModel as EmbeddingModel,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { isRequestOptions } from '../core';\nimport { sleep } from '../core';\nimport { APIConnectionTimeoutError } from '../error';\nimport * as Core from '../core';\nimport { CursorPage, type CursorPageParams } from '../pagination';\nimport { type Response } from '../_shims/index';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\n    return this._client.get(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns a list of files.\n   */\n  list(query?: FileListParams, options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject>;\n  list(options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject>;\n  list(\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FileObjectsPage, FileObject> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n  }\n\n  /**\n   * Delete a file.\n   */\n  del(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleted> {\n    return this._client.delete(`/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId: string, options?: Core.RequestOptions): Core.APIPromise<Response> {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      headers: { Accept: 'application/binary', ...options?.headers },\n      __binaryResponse: true,\n    });\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   *\n   * @deprecated The `.content()` method should be used instead\n   */\n  retrieveContent(fileId: string, options?: Core.RequestOptions): Core.APIPromise<string> {\n    return this._client.get(`/files/${fileId}/content`, options);\n  }\n\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(\n    id: string,\n    { pollInterval = 5000, maxWait = 30 * 60 * 1000 }: { pollInterval?: number; maxWait?: number } = {},\n  ): Promise<FileObject> {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n\n    const start = Date.now();\n    let file = await this.retrieve(id);\n\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n        });\n      }\n    }\n\n    return file;\n  }\n}\n\nexport class FileObjectsPage extends CursorPage<FileObject> {}\n\nexport type FileContent = string;\n\nexport interface FileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'file';\n}\n\n/**\n * The `File` object represents a document that has been uploaded to OpenAI.\n */\nexport interface FileObject {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the file.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `assistants`,\n   * `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results`\n   * and `vision`.\n   */\n  purpose:\n    | 'assistants'\n    | 'assistants_output'\n    | 'batch'\n    | 'batch_output'\n    | 'fine-tune'\n    | 'fine-tune-results'\n    | 'vision';\n\n  /**\n   * @deprecated Deprecated. The current status of the file, which can be either\n   * `uploaded`, `processed`, or `error`.\n   */\n  status: 'uploaded' | 'processed' | 'error';\n\n  /**\n   * The Unix timestamp (in seconds) for when the file will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * @deprecated Deprecated. For details on why a fine-tuning training file failed\n   * validation, see the `error` field on `fine_tuning.job`.\n   */\n  status_details?: string;\n}\n\n/**\n * The intended purpose of the uploaded file.\n *\n * Use \"assistants\" for\n * [Assistants](https://platform.openai.com/docs/api-reference/assistants) and\n * [Message](https://platform.openai.com/docs/api-reference/messages) files,\n * \"vision\" for Assistants image file inputs, \"batch\" for\n * [Batch API](https://platform.openai.com/docs/guides/batch), and \"fine-tune\" for\n * [Fine-tuning](https://platform.openai.com/docs/api-reference/fine-tuning).\n */\nexport type FilePurpose = 'assistants' | 'batch' | 'fine-tune' | 'vision';\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * The intended purpose of the uploaded file.\n   *\n   * Use \"assistants\" for\n   * [Assistants](https://platform.openai.com/docs/api-reference/assistants) and\n   * [Message](https://platform.openai.com/docs/api-reference/messages) files,\n   * \"vision\" for Assistants image file inputs, \"batch\" for\n   * [Batch API](https://platform.openai.com/docs/guides/batch), and \"fine-tune\" for\n   * [Fine-tuning](https://platform.openai.com/docs/api-reference/fine-tuning).\n   */\n  purpose: FilePurpose;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Only return files with the given purpose.\n   */\n  purpose?: string;\n}\n\nFiles.FileObjectsPage = FileObjectsPage;\n\nexport declare namespace Files {\n  export {\n    type FileContent as FileContent,\n    type FileDeleted as FileDeleted,\n    type FileObject as FileObject,\n    type FilePurpose as FilePurpose,\n    FileObjectsPage as FileObjectsPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Images extends APIResource {\n  /**\n   * Creates a variation of a given image.\n   */\n  createVariation(\n    body: ImageCreateVariationParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ImagesResponse> {\n    return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Creates an edited or extended image given an original image and a prompt.\n   */\n  edit(body: ImageEditParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\n    return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Creates an image given a prompt.\n   */\n  generate(body: ImageGenerateParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\n    return this._client.post('/images/generations', { body, ...options });\n  }\n}\n\n/**\n * Represents the url or the content of an image generated by the OpenAI API.\n */\nexport interface Image {\n  /**\n   * The base64-encoded JSON of the generated image, if `response_format` is\n   * `b64_json`.\n   */\n  b64_json?: string;\n\n  /**\n   * The prompt that was used to generate the image, if there was any revision to the\n   * prompt.\n   */\n  revised_prompt?: string;\n\n  /**\n   * The URL of the generated image, if `response_format` is `url` (default).\n   */\n  url?: string;\n}\n\nexport type ImageModel = 'dall-e-2' | 'dall-e-3';\n\nexport interface ImagesResponse {\n  created: number;\n\n  data: Array<Image>;\n}\n\nexport interface ImageCreateVariationParams {\n  /**\n   * The image to use as the basis for the variation(s). Must be a valid PNG file,\n   * less than 4MB, and square.\n   */\n  image: Core.Uploadable;\n\n  /**\n   * The model to use for image generation. Only `dall-e-2` is supported at this\n   * time.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only\n   * `n=1` is supported.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`. URLs are only valid for 60 minutes after the image has been\n   * generated.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageEditParams {\n  /**\n   * The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask\n   * is not provided, image must have transparency, which will be used as the mask.\n   */\n  image: Core.Uploadable;\n\n  /**\n   * A text description of the desired image(s). The maximum length is 1000\n   * characters.\n   */\n  prompt: string;\n\n  /**\n   * An additional image whose fully transparent areas (e.g. where alpha is zero)\n   * indicate where `image` should be edited. Must be a valid PNG file, less than\n   * 4MB, and have the same dimensions as `image`.\n   */\n  mask?: Core.Uploadable;\n\n  /**\n   * The model to use for image generation. Only `dall-e-2` is supported at this\n   * time.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10.\n   */\n  n?: number | null;\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`. URLs are only valid for 60 minutes after the image has been\n   * generated.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024`.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport interface ImageGenerateParams {\n  /**\n   * A text description of the desired image(s). The maximum length is 1000\n   * characters for `dall-e-2` and 4000 characters for `dall-e-3`.\n   */\n  prompt: string;\n\n  /**\n   * The model to use for image generation.\n   */\n  model?: (string & {}) | ImageModel | null;\n\n  /**\n   * The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only\n   * `n=1` is supported.\n   */\n  n?: number | null;\n\n  /**\n   * The quality of the image that will be generated. `hd` creates images with finer\n   * details and greater consistency across the image. This param is only supported\n   * for `dall-e-3`.\n   */\n  quality?: 'standard' | 'hd';\n\n  /**\n   * The format in which the generated images are returned. Must be one of `url` or\n   * `b64_json`. URLs are only valid for 60 minutes after the image has been\n   * generated.\n   */\n  response_format?: 'url' | 'b64_json' | null;\n\n  /**\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\n   * `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or\n   * `1024x1792` for `dall-e-3` models.\n   */\n  size?: '256x256' | '512x512' | '1024x1024' | '1792x1024' | '1024x1792' | null;\n\n  /**\n   * The style of the generated images. Must be one of `vivid` or `natural`. Vivid\n   * causes the model to lean towards generating hyper-real and dramatic images.\n   * Natural causes the model to produce more natural, less hyper-real looking\n   * images. This param is only supported for `dall-e-3`.\n   */\n  style?: 'vivid' | 'natural' | null;\n\n  /**\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\n   * and detect abuse.\n   * [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n   */\n  user?: string;\n}\n\nexport declare namespace Images {\n  export {\n    type Image as Image,\n    type ImageModel as ImageModel,\n    type ImagesResponse as ImagesResponse,\n    type ImageCreateVariationParams as ImageCreateVariationParams,\n    type ImageEditParams as ImageEditParams,\n    type ImageGenerateParams as ImageGenerateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport { type Response } from '../../_shims/index';\n\nexport class Speech extends APIResource {\n  /**\n   * Generates audio from the input text.\n   */\n  create(body: SpeechCreateParams, options?: Core.RequestOptions): Core.APIPromise<Response> {\n    return this._client.post('/audio/speech', {\n      body,\n      ...options,\n      headers: { Accept: 'application/octet-stream', ...options?.headers },\n      __binaryResponse: true,\n    });\n  }\n}\n\nexport type SpeechModel = 'tts-1' | 'tts-1-hd';\n\nexport interface SpeechCreateParams {\n  /**\n   * The text to generate audio for. The maximum length is 4096 characters.\n   */\n  input: string;\n\n  /**\n   * One of the available [TTS models](https://platform.openai.com/docs/models#tts):\n   * `tts-1` or `tts-1-hd`\n   */\n  model: (string & {}) | SpeechModel;\n\n  /**\n   * The voice to use when generating the audio. Supported voices are `alloy`, `ash`,\n   * `coral`, `echo`, `fable`, `onyx`, `nova`, `sage` and `shimmer`. Previews of the\n   * voices are available in the\n   * [Text to speech guide](https://platform.openai.com/docs/guides/text-to-speech#voice-options).\n   */\n  voice: 'alloy' | 'ash' | 'coral' | 'echo' | 'fable' | 'onyx' | 'nova' | 'sage' | 'shimmer';\n\n  /**\n   * The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`,\n   * `wav`, and `pcm`.\n   */\n  response_format?: 'mp3' | 'opus' | 'aac' | 'flac' | 'wav' | 'pcm';\n\n  /**\n   * The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is\n   * the default.\n   */\n  speed?: number;\n}\n\nexport declare namespace Speech {\n  export { type SpeechModel as SpeechModel, type SpeechCreateParams as SpeechCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport * as AudioAPI from './audio';\n\nexport class Transcriptions extends APIResource {\n  /**\n   * Transcribes audio into the input language.\n   */\n  create(\n    body: TranscriptionCreateParams<'json' | undefined>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Transcription>;\n  create(\n    body: TranscriptionCreateParams<'verbose_json'>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<TranscriptionVerbose>;\n  create(\n    body: TranscriptionCreateParams<'srt' | 'vtt' | 'text'>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<string>;\n  create(body: TranscriptionCreateParams, options?: Core.RequestOptions): Core.APIPromise<Transcription>;\n  create(\n    body: TranscriptionCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<TranscriptionCreateResponse | string> {\n    return this._client.post(\n      '/audio/transcriptions',\n      Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }),\n    );\n  }\n}\n\n/**\n * Represents a transcription response returned by model, based on the provided\n * input.\n */\nexport interface Transcription {\n  /**\n   * The transcribed text.\n   */\n  text: string;\n}\n\nexport interface TranscriptionSegment {\n  /**\n   * Unique identifier of the segment.\n   */\n  id: number;\n\n  /**\n   * Average logprob of the segment. If the value is lower than -1, consider the\n   * logprobs failed.\n   */\n  avg_logprob: number;\n\n  /**\n   * Compression ratio of the segment. If the value is greater than 2.4, consider the\n   * compression failed.\n   */\n  compression_ratio: number;\n\n  /**\n   * End time of the segment in seconds.\n   */\n  end: number;\n\n  /**\n   * Probability of no speech in the segment. If the value is higher than 1.0 and the\n   * `avg_logprob` is below -1, consider this segment silent.\n   */\n  no_speech_prob: number;\n\n  /**\n   * Seek offset of the segment.\n   */\n  seek: number;\n\n  /**\n   * Start time of the segment in seconds.\n   */\n  start: number;\n\n  /**\n   * Temperature parameter used for generating the segment.\n   */\n  temperature: number;\n\n  /**\n   * Text content of the segment.\n   */\n  text: string;\n\n  /**\n   * Array of token IDs for the text content.\n   */\n  tokens: Array<number>;\n}\n\n/**\n * Represents a verbose json transcription response returned by model, based on the\n * provided input.\n */\nexport interface TranscriptionVerbose {\n  /**\n   * The duration of the input audio.\n   */\n  duration: number;\n\n  /**\n   * The language of the input audio.\n   */\n  language: string;\n\n  /**\n   * The transcribed text.\n   */\n  text: string;\n\n  /**\n   * Segments of the transcribed text and their corresponding details.\n   */\n  segments?: Array<TranscriptionSegment>;\n\n  /**\n   * Extracted words and their corresponding timestamps.\n   */\n  words?: Array<TranscriptionWord>;\n}\n\nexport interface TranscriptionWord {\n  /**\n   * End time of the word in seconds.\n   */\n  end: number;\n\n  /**\n   * Start time of the word in seconds.\n   */\n  start: number;\n\n  /**\n   * The text content of the word.\n   */\n  word: string;\n}\n\n/**\n * Represents a transcription response returned by model, based on the provided\n * input.\n */\nexport type TranscriptionCreateResponse = Transcription | TranscriptionVerbose;\n\nexport interface TranscriptionCreateParams<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> {\n  /**\n   * The audio file object (not file name) to transcribe, in one of these formats:\n   * flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-1` (which is powered by our open source\n   * Whisper V2 model) is currently available.\n   */\n  model: (string & {}) | AudioAPI.AudioModel;\n\n  /**\n   * The language of the input audio. Supplying the input language in\n   * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n   * format will improve accuracy and latency.\n   */\n  language?: string;\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n   * should match the audio language.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the output, in one of these options: `json`, `text`, `srt`,\n   * `verbose_json`, or `vtt`.\n   */\n  response_format?: ResponseFormat;\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n\n  /**\n   * The timestamp granularities to populate for this transcription.\n   * `response_format` must be set `verbose_json` to use timestamp granularities.\n   * Either or both of these options are supported: `word`, or `segment`. Note: There\n   * is no additional latency for segment timestamps, but generating word timestamps\n   * incurs additional latency.\n   */\n  timestamp_granularities?: Array<'word' | 'segment'>;\n}\n\nexport declare namespace Transcriptions {\n  export {\n    type Transcription as Transcription,\n    type TranscriptionSegment as TranscriptionSegment,\n    type TranscriptionVerbose as TranscriptionVerbose,\n    type TranscriptionWord as TranscriptionWord,\n    type TranscriptionCreateResponse as TranscriptionCreateResponse,\n    type TranscriptionCreateParams as TranscriptionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport * as AudioAPI from './audio';\nimport * as TranscriptionsAPI from './transcriptions';\n\nexport class Translations extends APIResource {\n  /**\n   * Translates audio into English.\n   */\n  create(\n    body: TranslationCreateParams<'json' | undefined>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Translation>;\n  create(\n    body: TranslationCreateParams<'verbose_json'>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<TranslationVerbose>;\n  create(\n    body: TranslationCreateParams<'text' | 'srt' | 'vtt'>,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<string>;\n  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation>;\n  create(\n    body: TranslationCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<TranslationCreateResponse | string> {\n    return this._client.post(\n      '/audio/translations',\n      Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }),\n    );\n  }\n}\n\nexport interface Translation {\n  text: string;\n}\n\nexport interface TranslationVerbose {\n  /**\n   * The duration of the input audio.\n   */\n  duration: number;\n\n  /**\n   * The language of the output translation (always `english`).\n   */\n  language: string;\n\n  /**\n   * The translated text.\n   */\n  text: string;\n\n  /**\n   * Segments of the translated text and their corresponding details.\n   */\n  segments?: Array<TranscriptionsAPI.TranscriptionSegment>;\n}\n\nexport type TranslationCreateResponse = Translation | TranslationVerbose;\n\nexport interface TranslationCreateParams<\n  ResponseFormat extends AudioAPI.AudioResponseFormat | undefined = AudioAPI.AudioResponseFormat | undefined,\n> {\n  /**\n   * The audio file object (not file name) translate, in one of these formats: flac,\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * ID of the model to use. Only `whisper-1` (which is powered by our open source\n   * Whisper V2 model) is currently available.\n   */\n  model: (string & {}) | AudioAPI.AudioModel;\n\n  /**\n   * An optional text to guide the model's style or continue a previous audio\n   * segment. The\n   * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n   * should be in English.\n   */\n  prompt?: string;\n\n  /**\n   * The format of the output, in one of these options: `json`, `text`, `srt`,\n   * `verbose_json`, or `vtt`.\n   */\n  response_format?: ResponseFormat;\n\n  /**\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\n   * output more random, while lower values like 0.2 will make it more focused and\n   * deterministic. If set to 0, the model will use\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\n   * automatically increase the temperature until certain thresholds are hit.\n   */\n  temperature?: number;\n}\n\nexport declare namespace Translations {\n  export {\n    type Translation as Translation,\n    type TranslationVerbose as TranslationVerbose,\n    type TranslationCreateResponse as TranslationCreateResponse,\n    type TranslationCreateParams as TranslationCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as SpeechAPI from './speech';\nimport { Speech, SpeechCreateParams, SpeechModel } from './speech';\nimport * as TranscriptionsAPI from './transcriptions';\nimport {\n  Transcription,\n  TranscriptionCreateParams,\n  TranscriptionCreateResponse,\n  TranscriptionSegment,\n  TranscriptionVerbose,\n  TranscriptionWord,\n  Transcriptions,\n} from './transcriptions';\nimport * as TranslationsAPI from './translations';\nimport {\n  Translation,\n  TranslationCreateParams,\n  TranslationCreateResponse,\n  TranslationVerbose,\n  Translations,\n} from './translations';\n\nexport class Audio extends APIResource {\n  transcriptions: TranscriptionsAPI.Transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n  translations: TranslationsAPI.Translations = new TranslationsAPI.Translations(this._client);\n  speech: SpeechAPI.Speech = new SpeechAPI.Speech(this._client);\n}\n\nexport type AudioModel = 'whisper-1';\n\n/**\n * The format of the output, in one of these options: `json`, `text`, `srt`,\n * `verbose_json`, or `vtt`.\n */\nexport type AudioResponseFormat = 'json' | 'text' | 'srt' | 'verbose_json' | 'vtt';\n\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n\nexport declare namespace Audio {\n  export { type AudioModel as AudioModel, type AudioResponseFormat as AudioResponseFormat };\n\n  export {\n    Transcriptions as Transcriptions,\n    type Transcription as Transcription,\n    type TranscriptionSegment as TranscriptionSegment,\n    type TranscriptionVerbose as TranscriptionVerbose,\n    type TranscriptionWord as TranscriptionWord,\n    type TranscriptionCreateResponse as TranscriptionCreateResponse,\n    type TranscriptionCreateParams as TranscriptionCreateParams,\n  };\n\n  export {\n    Translations as Translations,\n    type Translation as Translation,\n    type TranslationVerbose as TranslationVerbose,\n    type TranslationCreateResponse as TranslationCreateResponse,\n    type TranslationCreateParams as TranslationCreateParams,\n  };\n\n  export { Speech as Speech, type SpeechModel as SpeechModel, type SpeechCreateParams as SpeechCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Moderations extends APIResource {\n  /**\n   * Classifies if text and/or image inputs are potentially harmful. Learn more in\n   * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n   */\n  create(\n    body: ModerationCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ModerationCreateResponse> {\n    return this._client.post('/moderations', { body, ...options });\n  }\n}\n\nexport interface Moderation {\n  /**\n   * A list of the categories, and whether they are flagged or not.\n   */\n  categories: Moderation.Categories;\n\n  /**\n   * A list of the categories along with the input type(s) that the score applies to.\n   */\n  category_applied_input_types: Moderation.CategoryAppliedInputTypes;\n\n  /**\n   * A list of the categories along with their scores as predicted by model.\n   */\n  category_scores: Moderation.CategoryScores;\n\n  /**\n   * Whether any of the below categories are flagged.\n   */\n  flagged: boolean;\n}\n\nexport namespace Moderation {\n  /**\n   * A list of the categories, and whether they are flagged or not.\n   */\n  export interface Categories {\n    /**\n     * Content that expresses, incites, or promotes harassing language towards any\n     * target.\n     */\n    harassment: boolean;\n\n    /**\n     * Harassment content that also includes violence or serious harm towards any\n     * target.\n     */\n    'harassment/threatening': boolean;\n\n    /**\n     * Content that expresses, incites, or promotes hate based on race, gender,\n     * ethnicity, religion, nationality, sexual orientation, disability status, or\n     * caste. Hateful content aimed at non-protected groups (e.g., chess players) is\n     * harassment.\n     */\n    hate: boolean;\n\n    /**\n     * Hateful content that also includes violence or serious harm towards the targeted\n     * group based on race, gender, ethnicity, religion, nationality, sexual\n     * orientation, disability status, or caste.\n     */\n    'hate/threatening': boolean;\n\n    /**\n     * Content that includes instructions or advice that facilitate the planning or\n     * execution of wrongdoing, or that gives advice or instruction on how to commit\n     * illicit acts. For example, \"how to shoplift\" would fit this category.\n     */\n    illicit: boolean | null;\n\n    /**\n     * Content that includes instructions or advice that facilitate the planning or\n     * execution of wrongdoing that also includes violence, or that gives advice or\n     * instruction on the procurement of any weapon.\n     */\n    'illicit/violent': boolean | null;\n\n    /**\n     * Content that promotes, encourages, or depicts acts of self-harm, such as\n     * suicide, cutting, and eating disorders.\n     */\n    'self-harm': boolean;\n\n    /**\n     * Content that encourages performing acts of self-harm, such as suicide, cutting,\n     * and eating disorders, or that gives instructions or advice on how to commit such\n     * acts.\n     */\n    'self-harm/instructions': boolean;\n\n    /**\n     * Content where the speaker expresses that they are engaging or intend to engage\n     * in acts of self-harm, such as suicide, cutting, and eating disorders.\n     */\n    'self-harm/intent': boolean;\n\n    /**\n     * Content meant to arouse sexual excitement, such as the description of sexual\n     * activity, or that promotes sexual services (excluding sex education and\n     * wellness).\n     */\n    sexual: boolean;\n\n    /**\n     * Sexual content that includes an individual who is under 18 years old.\n     */\n    'sexual/minors': boolean;\n\n    /**\n     * Content that depicts death, violence, or physical injury.\n     */\n    violence: boolean;\n\n    /**\n     * Content that depicts death, violence, or physical injury in graphic detail.\n     */\n    'violence/graphic': boolean;\n  }\n\n  /**\n   * A list of the categories along with the input type(s) that the score applies to.\n   */\n  export interface CategoryAppliedInputTypes {\n    /**\n     * The applied input type(s) for the category 'harassment'.\n     */\n    harassment: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'harassment/threatening'.\n     */\n    'harassment/threatening': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'hate'.\n     */\n    hate: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'hate/threatening'.\n     */\n    'hate/threatening': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'illicit'.\n     */\n    illicit: Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'illicit/violent'.\n     */\n    'illicit/violent': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm'.\n     */\n    'self-harm': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm/instructions'.\n     */\n    'self-harm/instructions': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'self-harm/intent'.\n     */\n    'self-harm/intent': Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'sexual'.\n     */\n    sexual: Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'sexual/minors'.\n     */\n    'sexual/minors': Array<'text'>;\n\n    /**\n     * The applied input type(s) for the category 'violence'.\n     */\n    violence: Array<'text' | 'image'>;\n\n    /**\n     * The applied input type(s) for the category 'violence/graphic'.\n     */\n    'violence/graphic': Array<'text' | 'image'>;\n  }\n\n  /**\n   * A list of the categories along with their scores as predicted by model.\n   */\n  export interface CategoryScores {\n    /**\n     * The score for the category 'harassment'.\n     */\n    harassment: number;\n\n    /**\n     * The score for the category 'harassment/threatening'.\n     */\n    'harassment/threatening': number;\n\n    /**\n     * The score for the category 'hate'.\n     */\n    hate: number;\n\n    /**\n     * The score for the category 'hate/threatening'.\n     */\n    'hate/threatening': number;\n\n    /**\n     * The score for the category 'illicit'.\n     */\n    illicit: number;\n\n    /**\n     * The score for the category 'illicit/violent'.\n     */\n    'illicit/violent': number;\n\n    /**\n     * The score for the category 'self-harm'.\n     */\n    'self-harm': number;\n\n    /**\n     * The score for the category 'self-harm/instructions'.\n     */\n    'self-harm/instructions': number;\n\n    /**\n     * The score for the category 'self-harm/intent'.\n     */\n    'self-harm/intent': number;\n\n    /**\n     * The score for the category 'sexual'.\n     */\n    sexual: number;\n\n    /**\n     * The score for the category 'sexual/minors'.\n     */\n    'sexual/minors': number;\n\n    /**\n     * The score for the category 'violence'.\n     */\n    violence: number;\n\n    /**\n     * The score for the category 'violence/graphic'.\n     */\n    'violence/graphic': number;\n  }\n}\n\n/**\n * An object describing an image to classify.\n */\nexport interface ModerationImageURLInput {\n  /**\n   * Contains either an image URL or a data URL for a base64 encoded image.\n   */\n  image_url: ModerationImageURLInput.ImageURL;\n\n  /**\n   * Always `image_url`.\n   */\n  type: 'image_url';\n}\n\nexport namespace ModerationImageURLInput {\n  /**\n   * Contains either an image URL or a data URL for a base64 encoded image.\n   */\n  export interface ImageURL {\n    /**\n     * Either a URL of the image or the base64 encoded image data.\n     */\n    url: string;\n  }\n}\n\nexport type ModerationModel =\n  | 'omni-moderation-latest'\n  | 'omni-moderation-2024-09-26'\n  | 'text-moderation-latest'\n  | 'text-moderation-stable';\n\n/**\n * An object describing an image to classify.\n */\nexport type ModerationMultiModalInput = ModerationImageURLInput | ModerationTextInput;\n\n/**\n * An object describing text to classify.\n */\nexport interface ModerationTextInput {\n  /**\n   * A string of text to classify.\n   */\n  text: string;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\n/**\n * Represents if a given text input is potentially harmful.\n */\nexport interface ModerationCreateResponse {\n  /**\n   * The unique identifier for the moderation request.\n   */\n  id: string;\n\n  /**\n   * The model used to generate the moderation results.\n   */\n  model: string;\n\n  /**\n   * A list of moderation objects.\n   */\n  results: Array<Moderation>;\n}\n\nexport interface ModerationCreateParams {\n  /**\n   * Input (or inputs) to classify. Can be a single string, an array of strings, or\n   * an array of multi-modal input objects similar to other models.\n   */\n  input: string | Array<string> | Array<ModerationMultiModalInput>;\n\n  /**\n   * The content moderation model you would like to use. Learn more in\n   * [the moderation guide](https://platform.openai.com/docs/guides/moderation), and\n   * learn about available models\n   * [here](https://platform.openai.com/docs/models#moderation).\n   */\n  model?: (string & {}) | ModerationModel;\n}\n\nexport declare namespace Moderations {\n  export {\n    type Moderation as Moderation,\n    type ModerationImageURLInput as ModerationImageURLInput,\n    type ModerationModel as ModerationModel,\n    type ModerationMultiModalInput as ModerationMultiModalInput,\n    type ModerationTextInput as ModerationTextInput,\n    type ModerationCreateResponse as ModerationCreateResponse,\n    type ModerationCreateParams as ModerationCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\nimport { Page } from '../pagination';\n\nexport class Models extends APIResource {\n  /**\n   * Retrieves a model instance, providing basic information about the model such as\n   * the owner and permissioning.\n   */\n  retrieve(model: string, options?: Core.RequestOptions): Core.APIPromise<Model> {\n    return this._client.get(`/models/${model}`, options);\n  }\n\n  /**\n   * Lists the currently available models, and provides basic information about each\n   * one such as the owner and availability.\n   */\n  list(options?: Core.RequestOptions): Core.PagePromise<ModelsPage, Model> {\n    return this._client.getAPIList('/models', ModelsPage, options);\n  }\n\n  /**\n   * Delete a fine-tuned model. You must have the Owner role in your organization to\n   * delete a model.\n   */\n  del(model: string, options?: Core.RequestOptions): Core.APIPromise<ModelDeleted> {\n    return this._client.delete(`/models/${model}`, options);\n  }\n}\n\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page<Model> {}\n\n/**\n * Describes an OpenAI model offering that can be used with the API.\n */\nexport interface Model {\n  /**\n   * The model identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) when the model was created.\n   */\n  created: number;\n\n  /**\n   * The object type, which is always \"model\".\n   */\n  object: 'model';\n\n  /**\n   * The organization that owns the model.\n   */\n  owned_by: string;\n}\n\nexport interface ModelDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: string;\n}\n\nModels.ModelsPage = ModelsPage;\n\nexport declare namespace Models {\n  export { type Model as Model, type ModelDeleted as ModelDeleted, ModelsPage as ModelsPage };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class Checkpoints extends APIResource {\n  /**\n   * List checkpoints for a fine-tuning job.\n   */\n  list(\n    fineTuningJobId: string,\n    query?: CheckpointListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobCheckpointsPage, FineTuningJobCheckpoint>;\n  list(\n    fineTuningJobId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobCheckpointsPage, FineTuningJobCheckpoint>;\n  list(\n    fineTuningJobId: string,\n    query: CheckpointListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobCheckpointsPage, FineTuningJobCheckpoint> {\n    if (isRequestOptions(query)) {\n      return this.list(fineTuningJobId, {}, query);\n    }\n    return this._client.getAPIList(\n      `/fine_tuning/jobs/${fineTuningJobId}/checkpoints`,\n      FineTuningJobCheckpointsPage,\n      { query, ...options },\n    );\n  }\n}\n\nexport class FineTuningJobCheckpointsPage extends CursorPage<FineTuningJobCheckpoint> {}\n\n/**\n * The `fine_tuning.job.checkpoint` object represents a model checkpoint for a\n * fine-tuning job that is ready to use.\n */\nexport interface FineTuningJobCheckpoint {\n  /**\n   * The checkpoint identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the checkpoint was created.\n   */\n  created_at: number;\n\n  /**\n   * The name of the fine-tuned checkpoint model that is created.\n   */\n  fine_tuned_model_checkpoint: string;\n\n  /**\n   * The name of the fine-tuning job that this checkpoint was created from.\n   */\n  fine_tuning_job_id: string;\n\n  /**\n   * Metrics at the step number during the fine-tuning job.\n   */\n  metrics: FineTuningJobCheckpoint.Metrics;\n\n  /**\n   * The object type, which is always \"fine_tuning.job.checkpoint\".\n   */\n  object: 'fine_tuning.job.checkpoint';\n\n  /**\n   * The step number that the checkpoint was created at.\n   */\n  step_number: number;\n}\n\nexport namespace FineTuningJobCheckpoint {\n  /**\n   * Metrics at the step number during the fine-tuning job.\n   */\n  export interface Metrics {\n    full_valid_loss?: number;\n\n    full_valid_mean_token_accuracy?: number;\n\n    step?: number;\n\n    train_loss?: number;\n\n    train_mean_token_accuracy?: number;\n\n    valid_loss?: number;\n\n    valid_mean_token_accuracy?: number;\n  }\n}\n\nexport interface CheckpointListParams extends CursorPageParams {}\n\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n\nexport declare namespace Checkpoints {\n  export {\n    type FineTuningJobCheckpoint as FineTuningJobCheckpoint,\n    FineTuningJobCheckpointsPage as FineTuningJobCheckpointsPage,\n    type CheckpointListParams as CheckpointListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as CheckpointsAPI from './checkpoints';\nimport {\n  CheckpointListParams,\n  Checkpoints,\n  FineTuningJobCheckpoint,\n  FineTuningJobCheckpointsPage,\n} from './checkpoints';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class Jobs extends APIResource {\n  checkpoints: CheckpointsAPI.Checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n\n  /**\n   * Creates a fine-tuning job which begins the process of creating a new model from\n   * a given dataset.\n   *\n   * Response includes details of the enqueued job including job status and the name\n   * of the fine-tuned models once complete.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n   */\n  create(body: JobCreateParams, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\n    return this._client.post('/fine_tuning/jobs', { body, ...options });\n  }\n\n  /**\n   * Get info about a fine-tuning job.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n   */\n  retrieve(fineTuningJobId: string, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\n    return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n  }\n\n  /**\n   * List your organization's fine-tuning jobs\n   */\n  list(\n    query?: JobListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobsPage, FineTuningJob>;\n  list(options?: Core.RequestOptions): Core.PagePromise<FineTuningJobsPage, FineTuningJob>;\n  list(\n    query: JobListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobsPage, FineTuningJob> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n  }\n\n  /**\n   * Immediately cancel a fine-tune job.\n   */\n  cancel(fineTuningJobId: string, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\n    return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n  }\n\n  /**\n   * Get status updates for a fine-tuning job.\n   */\n  listEvents(\n    fineTuningJobId: string,\n    query?: JobListEventsParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent>;\n  listEvents(\n    fineTuningJobId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent>;\n  listEvents(\n    fineTuningJobId: string,\n    query: JobListEventsParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent> {\n    if (isRequestOptions(query)) {\n      return this.listEvents(fineTuningJobId, {}, query);\n    }\n    return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n      query,\n      ...options,\n    });\n  }\n}\n\nexport class FineTuningJobsPage extends CursorPage<FineTuningJob> {}\n\nexport class FineTuningJobEventsPage extends CursorPage<FineTuningJobEvent> {}\n\n/**\n * The `fine_tuning.job` object represents a fine-tuning job that has been created\n * through the API.\n */\nexport interface FineTuningJob {\n  /**\n   * The object identifier, which can be referenced in the API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was created.\n   */\n  created_at: number;\n\n  /**\n   * For fine-tuning jobs that have `failed`, this will contain more information on\n   * the cause of the failure.\n   */\n  error: FineTuningJob.Error | null;\n\n  /**\n   * The name of the fine-tuned model that is being created. The value will be null\n   * if the fine-tuning job is still running.\n   */\n  fine_tuned_model: string | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was finished. The\n   * value will be null if the fine-tuning job is still running.\n   */\n  finished_at: number | null;\n\n  /**\n   * The hyperparameters used for the fine-tuning job. This value will only be\n   * returned when running `supervised` jobs.\n   */\n  hyperparameters: FineTuningJob.Hyperparameters;\n\n  /**\n   * The base model that is being fine-tuned.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always \"fine_tuning.job\".\n   */\n  object: 'fine_tuning.job';\n\n  /**\n   * The organization that owns the fine-tuning job.\n   */\n  organization_id: string;\n\n  /**\n   * The compiled results file ID(s) for the fine-tuning job. You can retrieve the\n   * results with the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  result_files: Array<string>;\n\n  /**\n   * The seed used for the fine-tuning job.\n   */\n  seed: number;\n\n  /**\n   * The current status of the fine-tuning job, which can be either\n   * `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.\n   */\n  status: 'validating_files' | 'queued' | 'running' | 'succeeded' | 'failed' | 'cancelled';\n\n  /**\n   * The total number of billable tokens processed by this fine-tuning job. The value\n   * will be null if the fine-tuning job is still running.\n   */\n  trained_tokens: number | null;\n\n  /**\n   * The file ID used for training. You can retrieve the training data with the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  training_file: string;\n\n  /**\n   * The file ID used for validation. You can retrieve the validation results with\n   * the\n   * [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).\n   */\n  validation_file: string | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job is estimated to\n   * finish. The value will be null if the fine-tuning job is not running.\n   */\n  estimated_finish?: number | null;\n\n  /**\n   * A list of integrations to enable for this fine-tuning job.\n   */\n  integrations?: Array<FineTuningJobWandbIntegrationObject> | null;\n\n  /**\n   * The method used for fine-tuning.\n   */\n  method?: FineTuningJob.Method;\n}\n\nexport namespace FineTuningJob {\n  /**\n   * For fine-tuning jobs that have `failed`, this will contain more information on\n   * the cause of the failure.\n   */\n  export interface Error {\n    /**\n     * A machine-readable error code.\n     */\n    code: string;\n\n    /**\n     * A human-readable error message.\n     */\n    message: string;\n\n    /**\n     * The parameter that was invalid, usually `training_file` or `validation_file`.\n     * This field will be null if the failure was not parameter-specific.\n     */\n    param: string | null;\n  }\n\n  /**\n   * The hyperparameters used for the fine-tuning job. This value will only be\n   * returned when running `supervised` jobs.\n   */\n  export interface Hyperparameters {\n    /**\n     * Number of examples in each batch. A larger batch size means that model\n     * parameters are updated less frequently, but with lower variance.\n     */\n    batch_size?: 'auto' | number;\n\n    /**\n     * Scaling factor for the learning rate. A smaller learning rate may be useful to\n     * avoid overfitting.\n     */\n    learning_rate_multiplier?: 'auto' | number;\n\n    /**\n     * The number of epochs to train the model for. An epoch refers to one full cycle\n     * through the training dataset.\n     */\n    n_epochs?: 'auto' | number;\n  }\n\n  /**\n   * The method used for fine-tuning.\n   */\n  export interface Method {\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    dpo?: Method.Dpo;\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    supervised?: Method.Supervised;\n\n    /**\n     * The type of method. Is either `supervised` or `dpo`.\n     */\n    type?: 'supervised' | 'dpo';\n  }\n\n  export namespace Method {\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    export interface Dpo {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      hyperparameters?: Dpo.Hyperparameters;\n    }\n\n    export namespace Dpo {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      export interface Hyperparameters {\n        /**\n         * Number of examples in each batch. A larger batch size means that model\n         * parameters are updated less frequently, but with lower variance.\n         */\n        batch_size?: 'auto' | number;\n\n        /**\n         * The beta value for the DPO method. A higher beta value will increase the weight\n         * of the penalty between the policy and reference model.\n         */\n        beta?: 'auto' | number;\n\n        /**\n         * Scaling factor for the learning rate. A smaller learning rate may be useful to\n         * avoid overfitting.\n         */\n        learning_rate_multiplier?: 'auto' | number;\n\n        /**\n         * The number of epochs to train the model for. An epoch refers to one full cycle\n         * through the training dataset.\n         */\n        n_epochs?: 'auto' | number;\n      }\n    }\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    export interface Supervised {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      hyperparameters?: Supervised.Hyperparameters;\n    }\n\n    export namespace Supervised {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      export interface Hyperparameters {\n        /**\n         * Number of examples in each batch. A larger batch size means that model\n         * parameters are updated less frequently, but with lower variance.\n         */\n        batch_size?: 'auto' | number;\n\n        /**\n         * Scaling factor for the learning rate. A smaller learning rate may be useful to\n         * avoid overfitting.\n         */\n        learning_rate_multiplier?: 'auto' | number;\n\n        /**\n         * The number of epochs to train the model for. An epoch refers to one full cycle\n         * through the training dataset.\n         */\n        n_epochs?: 'auto' | number;\n      }\n    }\n  }\n}\n\n/**\n * Fine-tuning job event object\n */\nexport interface FineTuningJobEvent {\n  /**\n   * The object identifier.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the fine-tuning job was created.\n   */\n  created_at: number;\n\n  /**\n   * The log level of the event.\n   */\n  level: 'info' | 'warn' | 'error';\n\n  /**\n   * The message of the event.\n   */\n  message: string;\n\n  /**\n   * The object type, which is always \"fine_tuning.job.event\".\n   */\n  object: 'fine_tuning.job.event';\n\n  /**\n   * The data associated with the event.\n   */\n  data?: unknown;\n\n  /**\n   * The type of event.\n   */\n  type?: 'message' | 'metrics';\n}\n\nexport type FineTuningJobIntegration = FineTuningJobWandbIntegrationObject;\n\n/**\n * The settings for your integration with Weights and Biases. This payload\n * specifies the project that metrics will be sent to. Optionally, you can set an\n * explicit display name for your run, add tags to your run, and set a default\n * entity (team, username, etc) to be associated with your run.\n */\nexport interface FineTuningJobWandbIntegration {\n  /**\n   * The name of the project that the new run will be created under.\n   */\n  project: string;\n\n  /**\n   * The entity to use for the run. This allows you to set the team or username of\n   * the WandB user that you would like associated with the run. If not set, the\n   * default entity for the registered WandB API key is used.\n   */\n  entity?: string | null;\n\n  /**\n   * A display name to set for the run. If not set, we will use the Job ID as the\n   * name.\n   */\n  name?: string | null;\n\n  /**\n   * A list of tags to be attached to the newly created run. These tags are passed\n   * through directly to WandB. Some default tags are generated by OpenAI:\n   * \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".\n   */\n  tags?: Array<string>;\n}\n\nexport interface FineTuningJobWandbIntegrationObject {\n  /**\n   * The type of the integration being enabled for the fine-tuning job\n   */\n  type: 'wandb';\n\n  /**\n   * The settings for your integration with Weights and Biases. This payload\n   * specifies the project that metrics will be sent to. Optionally, you can set an\n   * explicit display name for your run, add tags to your run, and set a default\n   * entity (team, username, etc) to be associated with your run.\n   */\n  wandb: FineTuningJobWandbIntegration;\n}\n\nexport interface JobCreateParams {\n  /**\n   * The name of the model to fine-tune. You can select one of the\n   * [supported models](https://platform.openai.com/docs/guides/fine-tuning#which-models-can-be-fine-tuned).\n   */\n  model: (string & {}) | 'babbage-002' | 'davinci-002' | 'gpt-3.5-turbo' | 'gpt-4o-mini';\n\n  /**\n   * The ID of an uploaded file that contains training data.\n   *\n   * See [upload file](https://platform.openai.com/docs/api-reference/files/create)\n   * for how to upload a file.\n   *\n   * Your dataset must be formatted as a JSONL file. Additionally, you must upload\n   * your file with the purpose `fine-tune`.\n   *\n   * The contents of the file should differ depending on if the model uses the\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input),\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * format, or if the fine-tuning method uses the\n   * [preference](https://platform.openai.com/docs/api-reference/fine-tuning/preference-input)\n   * format.\n   *\n   * See the [fine-tuning guide](https://platform.openai.com/docs/guides/fine-tuning)\n   * for more details.\n   */\n  training_file: string;\n\n  /**\n   * The hyperparameters used for the fine-tuning job. This value is now deprecated\n   * in favor of `method`, and should be passed in under the `method` parameter.\n   */\n  hyperparameters?: JobCreateParams.Hyperparameters;\n\n  /**\n   * A list of integrations to enable for your fine-tuning job.\n   */\n  integrations?: Array<JobCreateParams.Integration> | null;\n\n  /**\n   * The method used for fine-tuning.\n   */\n  method?: JobCreateParams.Method;\n\n  /**\n   * The seed controls the reproducibility of the job. Passing in the same seed and\n   * job parameters should produce the same results, but may differ in rare cases. If\n   * a seed is not specified, one will be generated for you.\n   */\n  seed?: number | null;\n\n  /**\n   * A string of up to 64 characters that will be added to your fine-tuned model\n   * name.\n   *\n   * For example, a `suffix` of \"custom-model-name\" would produce a model name like\n   * `ft:gpt-4o-mini:openai:custom-model-name:7p4lURel`.\n   */\n  suffix?: string | null;\n\n  /**\n   * The ID of an uploaded file that contains validation data.\n   *\n   * If you provide this file, the data is used to generate validation metrics\n   * periodically during fine-tuning. These metrics can be viewed in the fine-tuning\n   * results file. The same data should not be present in both train and validation\n   * files.\n   *\n   * Your dataset must be formatted as a JSONL file. You must upload your file with\n   * the purpose `fine-tune`.\n   *\n   * See the [fine-tuning guide](https://platform.openai.com/docs/guides/fine-tuning)\n   * for more details.\n   */\n  validation_file?: string | null;\n}\n\nexport namespace JobCreateParams {\n  /**\n   * @deprecated The hyperparameters used for the fine-tuning job. This value is now\n   * deprecated in favor of `method`, and should be passed in under the `method`\n   * parameter.\n   */\n  export interface Hyperparameters {\n    /**\n     * Number of examples in each batch. A larger batch size means that model\n     * parameters are updated less frequently, but with lower variance.\n     */\n    batch_size?: 'auto' | number;\n\n    /**\n     * Scaling factor for the learning rate. A smaller learning rate may be useful to\n     * avoid overfitting.\n     */\n    learning_rate_multiplier?: 'auto' | number;\n\n    /**\n     * The number of epochs to train the model for. An epoch refers to one full cycle\n     * through the training dataset.\n     */\n    n_epochs?: 'auto' | number;\n  }\n\n  export interface Integration {\n    /**\n     * The type of integration to enable. Currently, only \"wandb\" (Weights and Biases)\n     * is supported.\n     */\n    type: 'wandb';\n\n    /**\n     * The settings for your integration with Weights and Biases. This payload\n     * specifies the project that metrics will be sent to. Optionally, you can set an\n     * explicit display name for your run, add tags to your run, and set a default\n     * entity (team, username, etc) to be associated with your run.\n     */\n    wandb: Integration.Wandb;\n  }\n\n  export namespace Integration {\n    /**\n     * The settings for your integration with Weights and Biases. This payload\n     * specifies the project that metrics will be sent to. Optionally, you can set an\n     * explicit display name for your run, add tags to your run, and set a default\n     * entity (team, username, etc) to be associated with your run.\n     */\n    export interface Wandb {\n      /**\n       * The name of the project that the new run will be created under.\n       */\n      project: string;\n\n      /**\n       * The entity to use for the run. This allows you to set the team or username of\n       * the WandB user that you would like associated with the run. If not set, the\n       * default entity for the registered WandB API key is used.\n       */\n      entity?: string | null;\n\n      /**\n       * A display name to set for the run. If not set, we will use the Job ID as the\n       * name.\n       */\n      name?: string | null;\n\n      /**\n       * A list of tags to be attached to the newly created run. These tags are passed\n       * through directly to WandB. Some default tags are generated by OpenAI:\n       * \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".\n       */\n      tags?: Array<string>;\n    }\n  }\n\n  /**\n   * The method used for fine-tuning.\n   */\n  export interface Method {\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    dpo?: Method.Dpo;\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    supervised?: Method.Supervised;\n\n    /**\n     * The type of method. Is either `supervised` or `dpo`.\n     */\n    type?: 'supervised' | 'dpo';\n  }\n\n  export namespace Method {\n    /**\n     * Configuration for the DPO fine-tuning method.\n     */\n    export interface Dpo {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      hyperparameters?: Dpo.Hyperparameters;\n    }\n\n    export namespace Dpo {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      export interface Hyperparameters {\n        /**\n         * Number of examples in each batch. A larger batch size means that model\n         * parameters are updated less frequently, but with lower variance.\n         */\n        batch_size?: 'auto' | number;\n\n        /**\n         * The beta value for the DPO method. A higher beta value will increase the weight\n         * of the penalty between the policy and reference model.\n         */\n        beta?: 'auto' | number;\n\n        /**\n         * Scaling factor for the learning rate. A smaller learning rate may be useful to\n         * avoid overfitting.\n         */\n        learning_rate_multiplier?: 'auto' | number;\n\n        /**\n         * The number of epochs to train the model for. An epoch refers to one full cycle\n         * through the training dataset.\n         */\n        n_epochs?: 'auto' | number;\n      }\n    }\n\n    /**\n     * Configuration for the supervised fine-tuning method.\n     */\n    export interface Supervised {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      hyperparameters?: Supervised.Hyperparameters;\n    }\n\n    export namespace Supervised {\n      /**\n       * The hyperparameters used for the fine-tuning job.\n       */\n      export interface Hyperparameters {\n        /**\n         * Number of examples in each batch. A larger batch size means that model\n         * parameters are updated less frequently, but with lower variance.\n         */\n        batch_size?: 'auto' | number;\n\n        /**\n         * Scaling factor for the learning rate. A smaller learning rate may be useful to\n         * avoid overfitting.\n         */\n        learning_rate_multiplier?: 'auto' | number;\n\n        /**\n         * The number of epochs to train the model for. An epoch refers to one full cycle\n         * through the training dataset.\n         */\n        n_epochs?: 'auto' | number;\n      }\n    }\n  }\n}\n\nexport interface JobListParams extends CursorPageParams {}\n\nexport interface JobListEventsParams extends CursorPageParams {}\n\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n\nexport declare namespace Jobs {\n  export {\n    type FineTuningJob as FineTuningJob,\n    type FineTuningJobEvent as FineTuningJobEvent,\n    type FineTuningJobIntegration as FineTuningJobIntegration,\n    type FineTuningJobWandbIntegration as FineTuningJobWandbIntegration,\n    type FineTuningJobWandbIntegrationObject as FineTuningJobWandbIntegrationObject,\n    FineTuningJobsPage as FineTuningJobsPage,\n    FineTuningJobEventsPage as FineTuningJobEventsPage,\n    type JobCreateParams as JobCreateParams,\n    type JobListParams as JobListParams,\n    type JobListEventsParams as JobListEventsParams,\n  };\n\n  export {\n    Checkpoints as Checkpoints,\n    type FineTuningJobCheckpoint as FineTuningJobCheckpoint,\n    FineTuningJobCheckpointsPage as FineTuningJobCheckpointsPage,\n    type CheckpointListParams as CheckpointListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as JobsAPI from './jobs/jobs';\nimport {\n  FineTuningJob,\n  FineTuningJobEvent,\n  FineTuningJobEventsPage,\n  FineTuningJobIntegration,\n  FineTuningJobWandbIntegration,\n  FineTuningJobWandbIntegrationObject,\n  FineTuningJobsPage,\n  JobCreateParams,\n  JobListEventsParams,\n  JobListParams,\n  Jobs,\n} from './jobs/jobs';\n\nexport class FineTuning extends APIResource {\n  jobs: JobsAPI.Jobs = new JobsAPI.Jobs(this._client);\n}\n\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\n\nexport declare namespace FineTuning {\n  export {\n    Jobs as Jobs,\n    type FineTuningJob as FineTuningJob,\n    type FineTuningJobEvent as FineTuningJobEvent,\n    type FineTuningJobIntegration as FineTuningJobIntegration,\n    type FineTuningJobWandbIntegration as FineTuningJobWandbIntegration,\n    type FineTuningJobWandbIntegrationObject as FineTuningJobWandbIntegrationObject,\n    FineTuningJobsPage as FineTuningJobsPage,\n    FineTuningJobEventsPage as FineTuningJobEventsPage,\n    type JobCreateParams as JobCreateParams,\n    type JobListParams as JobListParams,\n    type JobListEventsParams as JobListEventsParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport { isRequestOptions } from '../../core';\nimport * as Core from '../../core';\nimport * as Shared from '../shared';\nimport * as ChatAPI from '../chat/chat';\nimport * as MessagesAPI from './threads/messages';\nimport * as ThreadsAPI from './threads/threads';\nimport * as VectorStoresAPI from './vector-stores/vector-stores';\nimport * as RunsAPI from './threads/runs/runs';\nimport * as StepsAPI from './threads/runs/steps';\nimport { CursorPage, type CursorPageParams } from '../../pagination';\n\nexport class Assistants extends APIResource {\n  /**\n   * Create an assistant with a model and instructions.\n   */\n  create(body: AssistantCreateParams, options?: Core.RequestOptions): Core.APIPromise<Assistant> {\n    return this._client.post('/assistants', {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves an assistant.\n   */\n  retrieve(assistantId: string, options?: Core.RequestOptions): Core.APIPromise<Assistant> {\n    return this._client.get(`/assistants/${assistantId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Modifies an assistant.\n   */\n  update(\n    assistantId: string,\n    body: AssistantUpdateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Assistant> {\n    return this._client.post(`/assistants/${assistantId}`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of assistants.\n   */\n  list(\n    query?: AssistantListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantsPage, Assistant>;\n  list(options?: Core.RequestOptions): Core.PagePromise<AssistantsPage, Assistant>;\n  list(\n    query: AssistantListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantsPage, Assistant> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/assistants', AssistantsPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete an assistant.\n   */\n  del(assistantId: string, options?: Core.RequestOptions): Core.APIPromise<AssistantDeleted> {\n    return this._client.delete(`/assistants/${assistantId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n}\n\nexport class AssistantsPage extends CursorPage<Assistant> {}\n\n/**\n * Represents an `assistant` that can call the model and use tools.\n */\nexport interface Assistant {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the assistant was created.\n   */\n  created_at: number;\n\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: string;\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name: string | null;\n\n  /**\n   * The object type, which is always `assistant`.\n   */\n  object: 'assistant';\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools: Array<AssistantTool>;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: Assistant.ToolResources | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace Assistant {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface AssistantDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'assistant.deleted';\n}\n\n/**\n * Represents an event emitted when streaming a Run.\n *\n * Each event in a server-sent events stream has an `event` and `data` property:\n *\n * ```\n * event: thread.created\n * data: {\"id\": \"thread_123\", \"object\": \"thread\", ...}\n * ```\n *\n * We emit events whenever a new object is created, transitions to a new state, or\n * is being streamed in parts (deltas). For example, we emit `thread.run.created`\n * when a new run is created, `thread.run.completed` when a run completes, and so\n * on. When an Assistant chooses to create a message during a run, we emit a\n * `thread.message.created event`, a `thread.message.in_progress` event, many\n * `thread.message.delta` events, and finally a `thread.message.completed` event.\n *\n * We may add additional events over time, so we recommend handling unknown events\n * gracefully in your code. See the\n * [Assistants API quickstart](https://platform.openai.com/docs/assistants/overview)\n * to learn how to integrate the Assistants API with streaming.\n */\nexport type AssistantStreamEvent =\n  | AssistantStreamEvent.ThreadCreated\n  | AssistantStreamEvent.ThreadRunCreated\n  | AssistantStreamEvent.ThreadRunQueued\n  | AssistantStreamEvent.ThreadRunInProgress\n  | AssistantStreamEvent.ThreadRunRequiresAction\n  | AssistantStreamEvent.ThreadRunCompleted\n  | AssistantStreamEvent.ThreadRunIncomplete\n  | AssistantStreamEvent.ThreadRunFailed\n  | AssistantStreamEvent.ThreadRunCancelling\n  | AssistantStreamEvent.ThreadRunCancelled\n  | AssistantStreamEvent.ThreadRunExpired\n  | AssistantStreamEvent.ThreadRunStepCreated\n  | AssistantStreamEvent.ThreadRunStepInProgress\n  | AssistantStreamEvent.ThreadRunStepDelta\n  | AssistantStreamEvent.ThreadRunStepCompleted\n  | AssistantStreamEvent.ThreadRunStepFailed\n  | AssistantStreamEvent.ThreadRunStepCancelled\n  | AssistantStreamEvent.ThreadRunStepExpired\n  | AssistantStreamEvent.ThreadMessageCreated\n  | AssistantStreamEvent.ThreadMessageInProgress\n  | AssistantStreamEvent.ThreadMessageDelta\n  | AssistantStreamEvent.ThreadMessageCompleted\n  | AssistantStreamEvent.ThreadMessageIncomplete\n  | AssistantStreamEvent.ErrorEvent;\n\nexport namespace AssistantStreamEvent {\n  /**\n   * Occurs when a new\n   * [thread](https://platform.openai.com/docs/api-reference/threads/object) is\n   * created.\n   */\n  export interface ThreadCreated {\n    /**\n     * Represents a thread that contains\n     * [messages](https://platform.openai.com/docs/api-reference/messages).\n     */\n    data: ThreadsAPI.Thread;\n\n    event: 'thread.created';\n\n    /**\n     * Whether to enable input audio transcription.\n     */\n    enabled?: boolean;\n  }\n\n  /**\n   * Occurs when a new\n   * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n   */\n  export interface ThreadRunCreated {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.created';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `queued` status.\n   */\n  export interface ThreadRunQueued {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.queued';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to an `in_progress` status.\n   */\n  export interface ThreadRunInProgress {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.in_progress';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `requires_action` status.\n   */\n  export interface ThreadRunRequiresAction {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.requires_action';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is completed.\n   */\n  export interface ThreadRunCompleted {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.completed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * ends with status `incomplete`.\n   */\n  export interface ThreadRunIncomplete {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.incomplete';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * fails.\n   */\n  export interface ThreadRunFailed {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.failed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `cancelling` status.\n   */\n  export interface ThreadRunCancelling {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelling';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is cancelled.\n   */\n  export interface ThreadRunCancelled {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelled';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * expires.\n   */\n  export interface ThreadRunExpired {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.expired';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is created.\n   */\n  export interface ThreadRunStepCreated {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.created';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * moves to an `in_progress` state.\n   */\n  export interface ThreadRunStepInProgress {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * are being streamed.\n   */\n  export interface ThreadRunStepDelta {\n    /**\n     * Represents a run step delta i.e. any changed fields on a run step during\n     * streaming.\n     */\n    data: StepsAPI.RunStepDeltaEvent;\n\n    event: 'thread.run.step.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is completed.\n   */\n  export interface ThreadRunStepCompleted {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * fails.\n   */\n  export interface ThreadRunStepFailed {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.failed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is cancelled.\n   */\n  export interface ThreadRunStepCancelled {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.cancelled';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * expires.\n   */\n  export interface ThreadRunStepExpired {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.expired';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * created.\n   */\n  export interface ThreadMessageCreated {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.created';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) moves\n   * to an `in_progress` state.\n   */\n  export interface ThreadMessageInProgress {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [Message](https://platform.openai.com/docs/api-reference/messages/object) are\n   * being streamed.\n   */\n  export interface ThreadMessageDelta {\n    /**\n     * Represents a message delta i.e. any changed fields on a message during\n     * streaming.\n     */\n    data: MessagesAPI.MessageDeltaEvent;\n\n    event: 'thread.message.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * completed.\n   */\n  export interface ThreadMessageCompleted {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) ends\n   * before it is completed.\n   */\n  export interface ThreadMessageIncomplete {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.incomplete';\n  }\n\n  /**\n   * Occurs when an\n   * [error](https://platform.openai.com/docs/guides/error-codes#api-errors) occurs.\n   * This can happen due to an internal server error or a timeout.\n   */\n  export interface ErrorEvent {\n    data: Shared.ErrorObject;\n\n    event: 'error';\n  }\n}\n\nexport type AssistantTool = CodeInterpreterTool | FileSearchTool | FunctionTool;\n\nexport interface CodeInterpreterTool {\n  /**\n   * The type of tool being defined: `code_interpreter`\n   */\n  type: 'code_interpreter';\n}\n\nexport interface FileSearchTool {\n  /**\n   * The type of tool being defined: `file_search`\n   */\n  type: 'file_search';\n\n  /**\n   * Overrides for the file search tool.\n   */\n  file_search?: FileSearchTool.FileSearch;\n}\n\nexport namespace FileSearchTool {\n  /**\n   * Overrides for the file search tool.\n   */\n  export interface FileSearch {\n    /**\n     * The maximum number of results the file search tool should output. The default is\n     * 20 for `gpt-4*` models and 5 for `gpt-3.5-turbo`. This number should be between\n     * 1 and 50 inclusive.\n     *\n     * Note that the file search tool may output fewer than `max_num_results` results.\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    max_num_results?: number;\n\n    /**\n     * The ranking options for the file search. If not specified, the file search tool\n     * will use the `auto` ranker and a score_threshold of 0.\n     *\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    ranking_options?: FileSearch.RankingOptions;\n  }\n\n  export namespace FileSearch {\n    /**\n     * The ranking options for the file search. If not specified, the file search tool\n     * will use the `auto` ranker and a score_threshold of 0.\n     *\n     * See the\n     * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n     * for more information.\n     */\n    export interface RankingOptions {\n      /**\n       * The score threshold for the file search. All values must be a floating point\n       * number between 0 and 1.\n       */\n      score_threshold: number;\n\n      /**\n       * The ranker to use for the file search. If not specified will use the `auto`\n       * ranker.\n       */\n      ranker?: 'auto' | 'default_2024_08_21';\n    }\n  }\n}\n\nexport interface FunctionTool {\n  function: Shared.FunctionDefinition;\n\n  /**\n   * The type of tool being defined: `function`\n   */\n  type: 'function';\n}\n\n/**\n * Occurs when a\n * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n * created.\n */\nexport type MessageStreamEvent =\n  | MessageStreamEvent.ThreadMessageCreated\n  | MessageStreamEvent.ThreadMessageInProgress\n  | MessageStreamEvent.ThreadMessageDelta\n  | MessageStreamEvent.ThreadMessageCompleted\n  | MessageStreamEvent.ThreadMessageIncomplete;\n\nexport namespace MessageStreamEvent {\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * created.\n   */\n  export interface ThreadMessageCreated {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.created';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) moves\n   * to an `in_progress` state.\n   */\n  export interface ThreadMessageInProgress {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [Message](https://platform.openai.com/docs/api-reference/messages/object) are\n   * being streamed.\n   */\n  export interface ThreadMessageDelta {\n    /**\n     * Represents a message delta i.e. any changed fields on a message during\n     * streaming.\n     */\n    data: MessagesAPI.MessageDeltaEvent;\n\n    event: 'thread.message.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) is\n   * completed.\n   */\n  export interface ThreadMessageCompleted {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [message](https://platform.openai.com/docs/api-reference/messages/object) ends\n   * before it is completed.\n   */\n  export interface ThreadMessageIncomplete {\n    /**\n     * Represents a message within a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: MessagesAPI.Message;\n\n    event: 'thread.message.incomplete';\n  }\n}\n\n/**\n * Occurs when a\n * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n * is created.\n */\nexport type RunStepStreamEvent =\n  | RunStepStreamEvent.ThreadRunStepCreated\n  | RunStepStreamEvent.ThreadRunStepInProgress\n  | RunStepStreamEvent.ThreadRunStepDelta\n  | RunStepStreamEvent.ThreadRunStepCompleted\n  | RunStepStreamEvent.ThreadRunStepFailed\n  | RunStepStreamEvent.ThreadRunStepCancelled\n  | RunStepStreamEvent.ThreadRunStepExpired;\n\nexport namespace RunStepStreamEvent {\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is created.\n   */\n  export interface ThreadRunStepCreated {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.created';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * moves to an `in_progress` state.\n   */\n  export interface ThreadRunStepInProgress {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.in_progress';\n  }\n\n  /**\n   * Occurs when parts of a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * are being streamed.\n   */\n  export interface ThreadRunStepDelta {\n    /**\n     * Represents a run step delta i.e. any changed fields on a run step during\n     * streaming.\n     */\n    data: StepsAPI.RunStepDeltaEvent;\n\n    event: 'thread.run.step.delta';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is completed.\n   */\n  export interface ThreadRunStepCompleted {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.completed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * fails.\n   */\n  export interface ThreadRunStepFailed {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.failed';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * is cancelled.\n   */\n  export interface ThreadRunStepCancelled {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.cancelled';\n  }\n\n  /**\n   * Occurs when a\n   * [run step](https://platform.openai.com/docs/api-reference/run-steps/step-object)\n   * expires.\n   */\n  export interface ThreadRunStepExpired {\n    /**\n     * Represents a step in execution of a run.\n     */\n    data: StepsAPI.RunStep;\n\n    event: 'thread.run.step.expired';\n  }\n}\n\n/**\n * Occurs when a new\n * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n */\nexport type RunStreamEvent =\n  | RunStreamEvent.ThreadRunCreated\n  | RunStreamEvent.ThreadRunQueued\n  | RunStreamEvent.ThreadRunInProgress\n  | RunStreamEvent.ThreadRunRequiresAction\n  | RunStreamEvent.ThreadRunCompleted\n  | RunStreamEvent.ThreadRunIncomplete\n  | RunStreamEvent.ThreadRunFailed\n  | RunStreamEvent.ThreadRunCancelling\n  | RunStreamEvent.ThreadRunCancelled\n  | RunStreamEvent.ThreadRunExpired;\n\nexport namespace RunStreamEvent {\n  /**\n   * Occurs when a new\n   * [run](https://platform.openai.com/docs/api-reference/runs/object) is created.\n   */\n  export interface ThreadRunCreated {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.created';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `queued` status.\n   */\n  export interface ThreadRunQueued {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.queued';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to an `in_progress` status.\n   */\n  export interface ThreadRunInProgress {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.in_progress';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `requires_action` status.\n   */\n  export interface ThreadRunRequiresAction {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.requires_action';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is completed.\n   */\n  export interface ThreadRunCompleted {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.completed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * ends with status `incomplete`.\n   */\n  export interface ThreadRunIncomplete {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.incomplete';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * fails.\n   */\n  export interface ThreadRunFailed {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.failed';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * moves to a `cancelling` status.\n   */\n  export interface ThreadRunCancelling {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelling';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * is cancelled.\n   */\n  export interface ThreadRunCancelled {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.cancelled';\n  }\n\n  /**\n   * Occurs when a [run](https://platform.openai.com/docs/api-reference/runs/object)\n   * expires.\n   */\n  export interface ThreadRunExpired {\n    /**\n     * Represents an execution run on a\n     * [thread](https://platform.openai.com/docs/api-reference/threads).\n     */\n    data: RunsAPI.Run;\n\n    event: 'thread.run.expired';\n  }\n}\n\n/**\n * Occurs when a new\n * [thread](https://platform.openai.com/docs/api-reference/threads/object) is\n * created.\n */\nexport interface ThreadStreamEvent {\n  /**\n   * Represents a thread that contains\n   * [messages](https://platform.openai.com/docs/api-reference/messages).\n   */\n  data: ThreadsAPI.Thread;\n\n  event: 'thread.created';\n\n  /**\n   * Whether to enable input audio transcription.\n   */\n  enabled?: boolean;\n}\n\nexport interface AssistantCreateParams {\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model: (string & {}) | ChatAPI.ChatModel;\n\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description?: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions?: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name?: string | null;\n\n  /**\n   * **o1 and o3-mini models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: 'low' | 'medium' | 'high' | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: AssistantCreateParams.ToolResources | null;\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools?: Array<AssistantTool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace AssistantCreateParams {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n\n      /**\n       * A helper to create a\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * with file_ids and attach it to this assistant. There can be a maximum of 1\n       * vector store attached to the assistant.\n       */\n      vector_stores?: Array<FileSearch.VectorStore>;\n    }\n\n    export namespace FileSearch {\n      export interface VectorStore {\n        /**\n         * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n         * strategy. Only applicable if `file_ids` is non-empty.\n         */\n        chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n         * add to the vector store. There can be a maximum of 10000 files in a vector\n         * store.\n         */\n        file_ids?: Array<string>;\n\n        /**\n         * Set of 16 key-value pairs that can be attached to an object. This can be useful\n         * for storing additional information about the object in a structured format, and\n         * querying for objects via API or the dashboard.\n         *\n         * Keys are strings with a maximum length of 64 characters. Values are strings with\n         * a maximum length of 512 characters.\n         */\n        metadata?: Shared.Metadata | null;\n      }\n    }\n  }\n}\n\nexport interface AssistantUpdateParams {\n  /**\n   * The description of the assistant. The maximum length is 512 characters.\n   */\n  description?: string | null;\n\n  /**\n   * The system instructions that the assistant uses. The maximum length is 256,000\n   * characters.\n   */\n  instructions?: string | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * ID of the model to use. You can use the\n   * [List models](https://platform.openai.com/docs/api-reference/models/list) API to\n   * see all of your available models, or see our\n   * [Model overview](https://platform.openai.com/docs/models) for descriptions of\n   * them.\n   */\n  model?:\n    | (string & {})\n    | 'o3-mini'\n    | 'o3-mini-2025-01-31'\n    | 'o1'\n    | 'o1-2024-12-17'\n    | 'gpt-4o'\n    | 'gpt-4o-2024-11-20'\n    | 'gpt-4o-2024-08-06'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4o-mini'\n    | 'gpt-4o-mini-2024-07-18'\n    | 'gpt-4.5-preview'\n    | 'gpt-4.5-preview-2025-02-27'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613';\n\n  /**\n   * The name of the assistant. The maximum length is 256 characters.\n   */\n  name?: string | null;\n\n  /**\n   * **o1 and o3-mini models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: 'low' | 'medium' | 'high' | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: AssistantUpdateParams.ToolResources | null;\n\n  /**\n   * A list of tool enabled on the assistant. There can be a maximum of 128 tools per\n   * assistant. Tools can be of types `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tools?: Array<AssistantTool>;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n}\n\nexport namespace AssistantUpdateParams {\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * Overrides the list of\n       * [file](https://platform.openai.com/docs/api-reference/files) IDs made available\n       * to the `code_interpreter` tool. There can be a maximum of 20 files associated\n       * with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * Overrides the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface AssistantListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nAssistants.AssistantsPage = AssistantsPage;\n\nexport declare namespace Assistants {\n  export {\n    type Assistant as Assistant,\n    type AssistantDeleted as AssistantDeleted,\n    type AssistantStreamEvent as AssistantStreamEvent,\n    type AssistantTool as AssistantTool,\n    type CodeInterpreterTool as CodeInterpreterTool,\n    type FileSearchTool as FileSearchTool,\n    type FunctionTool as FunctionTool,\n    type MessageStreamEvent as MessageStreamEvent,\n    type RunStepStreamEvent as RunStepStreamEvent,\n    type RunStreamEvent as RunStreamEvent,\n    type ThreadStreamEvent as ThreadStreamEvent,\n    AssistantsPage as AssistantsPage,\n    type AssistantCreateParams as AssistantCreateParams,\n    type AssistantUpdateParams as AssistantUpdateParams,\n    type AssistantListParams as AssistantListParams,\n  };\n}\n","import { type ChatCompletionRunner } from './ChatCompletionRunner';\nimport { type ChatCompletionStreamingRunner } from './ChatCompletionStreamingRunner';\nimport { JSONSchema } from './jsonschema';\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\nexport type RunnableFunctionWithParse<Args extends object> = {\n  /**\n   * @param args the return value from `parse`.\n   * @param runner the runner evaluating this callback.\n   * @returns a string to send back to OpenAI.\n   */\n  function: (\n    args: Args,\n    runner: ChatCompletionRunner<unknown> | ChatCompletionStreamingRunner<unknown>,\n  ) => PromiseOrValue<unknown>;\n  /**\n   * @param input the raw args from the OpenAI function call.\n   * @returns the parsed arguments to pass to `function`\n   */\n  parse: (input: string) => PromiseOrValue<Args>;\n  /**\n   * The parameters the function accepts, describes as a JSON Schema object.\n   */\n  parameters: JSONSchema;\n  /**\n   * A description of what the function does, used by the model to choose when and how to call the function.\n   */\n  description: string;\n  /**\n   * The name of the function to be called. Will default to function.name if omitted.\n   */\n  name?: string | undefined;\n  strict?: boolean | undefined;\n};\n\nexport type RunnableFunctionWithoutParse = {\n  /**\n   * @param args the raw args from the OpenAI function call.\n   * @returns a string to send back to OpenAI\n   */\n  function: (\n    args: string,\n    runner: ChatCompletionRunner<unknown> | ChatCompletionStreamingRunner<unknown>,\n  ) => PromiseOrValue<unknown>;\n  /**\n   * The parameters the function accepts, describes as a JSON Schema object.\n   */\n  parameters: JSONSchema;\n  /**\n   * A description of what the function does, used by the model to choose when and how to call the function.\n   */\n  description: string;\n  /**\n   * The name of the function to be called. Will default to function.name if omitted.\n   */\n  name?: string | undefined;\n  strict?: boolean | undefined;\n};\n\nexport type RunnableFunction<Args extends object | string> =\n  Args extends string ? RunnableFunctionWithoutParse\n  : Args extends object ? RunnableFunctionWithParse<Args>\n  : never;\n\nexport type RunnableToolFunction<Args extends object | string> =\n  Args extends string ? RunnableToolFunctionWithoutParse\n  : Args extends object ? RunnableToolFunctionWithParse<Args>\n  : never;\n\nexport type RunnableToolFunctionWithoutParse = {\n  type: 'function';\n  function: RunnableFunctionWithoutParse;\n};\nexport type RunnableToolFunctionWithParse<Args extends object> = {\n  type: 'function';\n  function: RunnableFunctionWithParse<Args>;\n};\n\nexport function isRunnableFunctionWithParse<Args extends object>(\n  fn: any,\n): fn is RunnableFunctionWithParse<Args> {\n  return typeof (fn as any).parse === 'function';\n}\n\nexport type BaseFunctionsArgs = readonly (object | string)[];\n\nexport type RunnableFunctions<FunctionsArgs extends BaseFunctionsArgs> =\n  [any[]] extends [FunctionsArgs] ? readonly RunnableFunction<any>[]\n  : {\n      [Index in keyof FunctionsArgs]: Index extends number ? RunnableFunction<FunctionsArgs[Index]>\n      : FunctionsArgs[Index];\n    };\n\nexport type RunnableTools<FunctionsArgs extends BaseFunctionsArgs> =\n  [any[]] extends [FunctionsArgs] ? readonly RunnableToolFunction<any>[]\n  : {\n      [Index in keyof FunctionsArgs]: Index extends number ? RunnableToolFunction<FunctionsArgs[Index]>\n      : FunctionsArgs[Index];\n    };\n\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction<Args extends object> {\n  function: RunnableFunctionWithParse<Args>['function'];\n  parse: RunnableFunctionWithParse<Args>['parse'];\n  parameters: RunnableFunctionWithParse<Args>['parameters'];\n  description: RunnableFunctionWithParse<Args>['description'];\n  name?: RunnableFunctionWithParse<Args>['name'];\n\n  constructor(input: RunnableFunctionWithParse<Args>) {\n    this.function = input.function;\n    this.parse = input.parse;\n    this.parameters = input.parameters;\n    this.description = input.description;\n    this.name = input.name;\n  }\n}\n\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction<Args extends object> {\n  type: 'function';\n  function: RunnableFunctionWithParse<Args>;\n\n  constructor(input: RunnableFunctionWithParse<Args>) {\n    this.type = 'function';\n    this.function = input;\n  }\n}\n","import {\n  type ChatCompletionAssistantMessageParam,\n  type ChatCompletionFunctionMessageParam,\n  type ChatCompletionMessageParam,\n  type ChatCompletionToolMessageParam,\n} from '../resources';\n\nexport const isAssistantMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionAssistantMessageParam => {\n  return message?.role === 'assistant';\n};\n\nexport const isFunctionMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionFunctionMessageParam => {\n  return message?.role === 'function';\n};\n\nexport const isToolMessage = (\n  message: ChatCompletionMessageParam | null | undefined,\n): message is ChatCompletionToolMessageParam => {\n  return message?.role === 'tool';\n};\n\nexport function isPresent<T>(obj: T | null | undefined): obj is T {\n  return obj != null;\n}\n","import { APIUserAbortError, OpenAIError } from '../error';\n\nexport class EventStream<EventTypes extends BaseEvents> {\n  controller: AbortController = new AbortController();\n\n  #connectedPromise: Promise<void>;\n  #resolveConnectedPromise: () => void = () => {};\n  #rejectConnectedPromise: (error: OpenAIError) => void = () => {};\n\n  #endPromise: Promise<void>;\n  #resolveEndPromise: () => void = () => {};\n  #rejectEndPromise: (error: OpenAIError) => void = () => {};\n\n  #listeners: {\n    [Event in keyof EventTypes]?: EventListeners<EventTypes, Event>;\n  } = {};\n\n  #ended = false;\n  #errored = false;\n  #aborted = false;\n  #catchingPromiseCreated = false;\n\n  constructor() {\n    this.#connectedPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveConnectedPromise = resolve;\n      this.#rejectConnectedPromise = reject;\n    });\n\n    this.#endPromise = new Promise<void>((resolve, reject) => {\n      this.#resolveEndPromise = resolve;\n      this.#rejectEndPromise = reject;\n    });\n\n    // Don't let these promises cause unhandled rejection errors.\n    // we will manually cause an unhandled rejection error later\n    // if the user hasn't registered any error listener or called\n    // any promise-returning method.\n    this.#connectedPromise.catch(() => {});\n    this.#endPromise.catch(() => {});\n  }\n\n  protected _run(this: EventStream<EventTypes>, executor: () => Promise<any>) {\n    // Unfortunately if we call `executor()` immediately we get runtime errors about\n    // references to `this` before the `super()` constructor call returns.\n    setTimeout(() => {\n      executor().then(() => {\n        this._emitFinal();\n        this._emit('end');\n      }, this.#handleError.bind(this));\n    }, 0);\n  }\n\n  protected _connected(this: EventStream<EventTypes>) {\n    if (this.ended) return;\n    this.#resolveConnectedPromise();\n    this._emit('connect');\n  }\n\n  get ended(): boolean {\n    return this.#ended;\n  }\n\n  get errored(): boolean {\n    return this.#errored;\n  }\n\n  get aborted(): boolean {\n    return this.#aborted;\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event.\n   * No checks are made to see if the listener has already been added. Multiple calls passing\n   * the same combination of event and listener will result in the listener being added, and\n   * called, multiple times.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  on<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners: EventListeners<EventTypes, Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener });\n    return this;\n  }\n\n  /**\n   * Removes the specified listener from the listener array for the event.\n   * off() will remove, at most, one instance of a listener from the listener array. If any single\n   * listener has been added multiple times to the listener array for the specified event, then\n   * off() must be called multiple times to remove each instance.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  off<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners = this.#listeners[event];\n    if (!listeners) return this;\n    const index = listeners.findIndex((l) => l.listener === listener);\n    if (index >= 0) listeners.splice(index, 1);\n    return this;\n  }\n\n  /**\n   * Adds a one-time listener function for the event. The next time the event is triggered,\n   * this listener is removed and then invoked.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  once<Event extends keyof EventTypes>(event: Event, listener: EventListener<EventTypes, Event>): this {\n    const listeners: EventListeners<EventTypes, Event> =\n      this.#listeners[event] || (this.#listeners[event] = []);\n    listeners.push({ listener, once: true });\n    return this;\n  }\n\n  /**\n   * This is similar to `.once()`, but returns a Promise that resolves the next time\n   * the event is triggered, instead of calling a listener callback.\n   * @returns a Promise that resolves the next time given event is triggered,\n   * or rejects if an error is emitted.  (If you request the 'error' event,\n   * returns a promise that resolves with the error).\n   *\n   * Example:\n   *\n   *   const message = await stream.emitted('message') // rejects if the stream errors\n   */\n  emitted<Event extends keyof EventTypes>(\n    event: Event,\n  ): Promise<\n    EventParameters<EventTypes, Event> extends [infer Param] ? Param\n    : EventParameters<EventTypes, Event> extends [] ? void\n    : EventParameters<EventTypes, Event>\n  > {\n    return new Promise((resolve, reject) => {\n      this.#catchingPromiseCreated = true;\n      if (event !== 'error') this.once('error', reject);\n      this.once(event, resolve as any);\n    });\n  }\n\n  async done(): Promise<void> {\n    this.#catchingPromiseCreated = true;\n    await this.#endPromise;\n  }\n\n  #handleError(this: EventStream<EventTypes>, error: unknown) {\n    this.#errored = true;\n    if (error instanceof Error && error.name === 'AbortError') {\n      error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n      this.#aborted = true;\n      return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n      return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n      const openAIError: OpenAIError = new OpenAIError(error.message);\n      // @ts-ignore\n      openAIError.cause = error;\n      return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n  }\n\n  _emit<Event extends keyof BaseEvents>(event: Event, ...args: EventParameters<BaseEvents, Event>): void;\n  _emit<Event extends keyof EventTypes>(event: Event, ...args: EventParameters<EventTypes, Event>): void;\n  _emit<Event extends keyof EventTypes>(\n    this: EventStream<EventTypes>,\n    event: Event,\n    ...args: EventParameters<EventTypes, Event>\n  ) {\n    // make sure we don't emit any events after end\n    if (this.#ended) {\n      return;\n    }\n\n    if (event === 'end') {\n      this.#ended = true;\n      this.#resolveEndPromise();\n    }\n\n    const listeners: EventListeners<EventTypes, Event> | undefined = this.#listeners[event];\n    if (listeners) {\n      this.#listeners[event] = listeners.filter((l) => !l.once) as any;\n      listeners.forEach(({ listener }: any) => listener(...(args as any)));\n    }\n\n    if (event === 'abort') {\n      const error = args[0] as APIUserAbortError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n      return;\n    }\n\n    if (event === 'error') {\n      // NOTE: _emit('error', error) should only be called from #handleError().\n\n      const error = args[0] as OpenAIError;\n      if (!this.#catchingPromiseCreated && !listeners?.length) {\n        // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n        // If you are seeing stack traces here, make sure to handle errors via either:\n        // - runner.on('error', () => ...)\n        // - await runner.done()\n        // - await runner.finalChatCompletion()\n        // - etc.\n        Promise.reject(error);\n      }\n      this.#rejectConnectedPromise(error);\n      this.#rejectEndPromise(error);\n      this._emit('end');\n    }\n  }\n\n  protected _emitFinal(): void {}\n}\n\ntype EventListener<Events, EventType extends keyof Events> = Events[EventType];\n\ntype EventListeners<Events, EventType extends keyof Events> = Array<{\n  listener: EventListener<Events, EventType>;\n  once?: boolean;\n}>;\n\nexport type EventParameters<Events, EventType extends keyof Events> = {\n  [Event in EventType]: EventListener<Events, EventType> extends (...args: infer P) => any ? P : never;\n}[EventType];\n\nexport interface BaseEvents {\n  connect: () => void;\n  error: (error: OpenAIError) => void;\n  abort: (error: APIUserAbortError) => void;\n  end: () => void;\n}\n","import {\n  ChatCompletion,\n  ChatCompletionCreateParams,\n  ChatCompletionMessageToolCall,\n  ChatCompletionTool,\n} from '../resources/chat/completions';\nimport {\n  ChatCompletionStreamingToolRunnerParams,\n  ChatCompletionStreamParams,\n  ChatCompletionToolRunnerParams,\n  ParsedChatCompletion,\n  ParsedChoice,\n  ParsedFunctionToolCall,\n} from '../resources/beta/chat/completions';\nimport { ResponseFormatJSONSchema } from '../resources/shared';\nimport { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from '../error';\n\ntype AnyChatCompletionCreateParams =\n  | ChatCompletionCreateParams\n  | ChatCompletionToolRunnerParams<any>\n  | ChatCompletionStreamingToolRunnerParams<any>\n  | ChatCompletionStreamParams;\n\nexport type ExtractParsedContentFromParams<Params extends AnyChatCompletionCreateParams> =\n  Params['response_format'] extends AutoParseableResponseFormat<infer P> ? P : null;\n\nexport type AutoParseableResponseFormat<ParsedT> = ResponseFormatJSONSchema & {\n  __output: ParsedT; // type-level only\n\n  $brand: 'auto-parseable-response-format';\n  $parseRaw(content: string): ParsedT;\n};\n\nexport function makeParseableResponseFormat<ParsedT>(\n  response_format: ResponseFormatJSONSchema,\n  parser: (content: string) => ParsedT,\n): AutoParseableResponseFormat<ParsedT> {\n  const obj = { ...response_format };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-response-format',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableResponseFormat<ParsedT>;\n}\n\nexport function isAutoParsableResponseFormat<ParsedT>(\n  response_format: any,\n): response_format is AutoParseableResponseFormat<ParsedT> {\n  return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\n\ntype ToolOptions = {\n  name: string;\n  arguments: any;\n  function?: ((args: any) => any) | undefined;\n};\n\nexport type AutoParseableTool<\n  OptionsT extends ToolOptions,\n  HasFunction = OptionsT['function'] extends Function ? true : false,\n> = ChatCompletionTool & {\n  __arguments: OptionsT['arguments']; // type-level only\n  __name: OptionsT['name']; // type-level only\n  __hasFunction: HasFunction; // type-level only\n\n  $brand: 'auto-parseable-tool';\n  $callback: ((args: OptionsT['arguments']) => any) | undefined;\n  $parseRaw(args: string): OptionsT['arguments'];\n};\n\nexport function makeParseableTool<OptionsT extends ToolOptions>(\n  tool: ChatCompletionTool,\n  {\n    parser,\n    callback,\n  }: {\n    parser: (content: string) => OptionsT['arguments'];\n    callback: ((args: any) => any) | undefined;\n  },\n): AutoParseableTool<OptionsT['arguments']> {\n  const obj = { ...tool };\n\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-tool',\n      enumerable: false,\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false,\n    },\n    $callback: {\n      value: callback,\n      enumerable: false,\n    },\n  });\n\n  return obj as AutoParseableTool<OptionsT['arguments']>;\n}\n\nexport function isAutoParsableTool(tool: any): tool is AutoParseableTool<any> {\n  return tool?.['$brand'] === 'auto-parseable-tool';\n}\n\nexport function maybeParseChatCompletion<\n  Params extends ChatCompletionCreateParams | null,\n  ParsedT = Params extends null ? null : ExtractParsedContentFromParams<NonNullable<Params>>,\n>(completion: ChatCompletion, params: Params): ParsedChatCompletion<ParsedT> {\n  if (!params || !hasAutoParseableInput(params)) {\n    return {\n      ...completion,\n      choices: completion.choices.map((choice) => ({\n        ...choice,\n        message: {\n          ...choice.message,\n          parsed: null,\n          ...(choice.message.tool_calls ?\n            {\n              tool_calls: choice.message.tool_calls,\n            }\n          : undefined),\n        },\n      })),\n    };\n  }\n\n  return parseChatCompletion(completion, params);\n}\n\nexport function parseChatCompletion<\n  Params extends ChatCompletionCreateParams,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(completion: ChatCompletion, params: Params): ParsedChatCompletion<ParsedT> {\n  const choices: Array<ParsedChoice<ParsedT>> = completion.choices.map((choice): ParsedChoice<ParsedT> => {\n    if (choice.finish_reason === 'length') {\n      throw new LengthFinishReasonError();\n    }\n\n    if (choice.finish_reason === 'content_filter') {\n      throw new ContentFilterFinishReasonError();\n    }\n\n    return {\n      ...choice,\n      message: {\n        ...choice.message,\n        ...(choice.message.tool_calls ?\n          {\n            tool_calls:\n              choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n          }\n        : undefined),\n        parsed:\n          choice.message.content && !choice.message.refusal ?\n            parseResponseFormat(params, choice.message.content)\n          : null,\n      },\n    };\n  });\n\n  return { ...completion, choices };\n}\n\nfunction parseResponseFormat<\n  Params extends ChatCompletionCreateParams,\n  ParsedT = ExtractParsedContentFromParams<Params>,\n>(params: Params, content: string): ParsedT | null {\n  if (params.response_format?.type !== 'json_schema') {\n    return null;\n  }\n\n  if (params.response_format?.type === 'json_schema') {\n    if ('$parseRaw' in params.response_format) {\n      const response_format = params.response_format as AutoParseableResponseFormat<ParsedT>;\n\n      return response_format.$parseRaw(content);\n    }\n\n    return JSON.parse(content);\n  }\n\n  return null;\n}\n\nfunction parseToolCall<Params extends ChatCompletionCreateParams>(\n  params: Params,\n  toolCall: ChatCompletionMessageToolCall,\n): ParsedFunctionToolCall {\n  const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n  return {\n    ...toolCall,\n    function: {\n      ...toolCall.function,\n      parsed_arguments:\n        isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n        : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n        : null,\n    },\n  };\n}\n\nexport function shouldParseToolCall(\n  params: ChatCompletionCreateParams | null | undefined,\n  toolCall: ChatCompletionMessageToolCall,\n): boolean {\n  if (!params) {\n    return false;\n  }\n\n  const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n  return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\n\nexport function hasAutoParseableInput(params: AnyChatCompletionCreateParams): boolean {\n  if (isAutoParsableResponseFormat(params.response_format)) {\n    return true;\n  }\n\n  return (\n    params.tools?.some(\n      (t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true),\n    ) ?? false\n  );\n}\n\nexport function validateInputTools(tools: ChatCompletionTool[] | undefined) {\n  for (const tool of tools ?? []) {\n    if (tool.type !== 'function') {\n      throw new OpenAIError(\n        `Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``,\n      );\n    }\n\n    if (tool.function.strict !== true) {\n      throw new OpenAIError(\n        `The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`,\n      );\n    }\n  }\n}\n","import * as Core from '../core';\nimport { type CompletionUsage } from '../resources/completions';\nimport {\n  type ChatCompletion,\n  type ChatCompletionMessage,\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParams,\n  type ChatCompletionTool,\n} from '../resources/chat/completions';\nimport { OpenAIError } from '../error';\nimport {\n  type RunnableFunction,\n  isRunnableFunctionWithParse,\n  type BaseFunctionsArgs,\n  RunnableToolFunction,\n} from './RunnableFunction';\nimport { ChatCompletionFunctionRunnerParams, ChatCompletionToolRunnerParams } from './ChatCompletionRunner';\nimport {\n  ChatCompletionStreamingFunctionRunnerParams,\n  ChatCompletionStreamingToolRunnerParams,\n} from './ChatCompletionStreamingRunner';\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from './chatCompletionUtils';\nimport { BaseEvents, EventStream } from './EventStream';\nimport { ParsedChatCompletion } from '../resources/beta/chat/completions';\nimport OpenAI from '../index';\nimport { isAutoParsableTool, parseChatCompletion } from '../lib/parser';\n\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport interface RunnerOptions extends Core.RequestOptions {\n  /** How many requests to make before canceling. Default 10. */\n  maxChatCompletions?: number;\n}\n\nexport class AbstractChatCompletionRunner<\n  EventTypes extends AbstractChatCompletionRunnerEvents,\n  ParsedT,\n> extends EventStream<EventTypes> {\n  protected _chatCompletions: ParsedChatCompletion<ParsedT>[] = [];\n  messages: ChatCompletionMessageParam[] = [];\n\n  protected _addChatCompletion(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n    chatCompletion: ParsedChatCompletion<ParsedT>,\n  ): ParsedChatCompletion<ParsedT> {\n    this._chatCompletions.push(chatCompletion);\n    this._emit('chatCompletion', chatCompletion);\n    const message = chatCompletion.choices[0]?.message;\n    if (message) this._addMessage(message as ChatCompletionMessageParam);\n    return chatCompletion;\n  }\n\n  protected _addMessage(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n    message: ChatCompletionMessageParam,\n    emit = true,\n  ) {\n    if (!('content' in message)) message.content = null;\n\n    this.messages.push(message);\n\n    if (emit) {\n      this._emit('message', message);\n      if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n        // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n        this._emit('functionCallResult', message.content as string);\n      } else if (isAssistantMessage(message) && message.function_call) {\n        this._emit('functionCall', message.function_call);\n      } else if (isAssistantMessage(message) && message.tool_calls) {\n        for (const tool_call of message.tool_calls) {\n          if (tool_call.type === 'function') {\n            this._emit('functionCall', tool_call.function);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns a promise that resolves with the final ChatCompletion, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n   */\n  async finalChatCompletion(): Promise<ParsedChatCompletion<ParsedT>> {\n    await this.done();\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (!completion) throw new OpenAIError('stream ended without producing a ChatCompletion');\n    return completion;\n  }\n\n  #getFinalContent(): string | null {\n    return this.#getFinalMessage().content ?? null;\n  }\n\n  /**\n   * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalContent(): Promise<string | null> {\n    await this.done();\n    return this.#getFinalContent();\n  }\n\n  #getFinalMessage(): ChatCompletionMessage {\n    let i = this.messages.length;\n    while (i-- > 0) {\n      const message = this.messages[i];\n      if (isAssistantMessage(message)) {\n        const { function_call, ...rest } = message;\n\n        // TODO: support audio here\n        const ret: Omit<ChatCompletionMessage, 'audio'> = {\n          ...rest,\n          content: (message as ChatCompletionMessage).content ?? null,\n          refusal: (message as ChatCompletionMessage).refusal ?? null,\n        };\n        if (function_call) {\n          ret.function_call = function_call;\n        }\n        return ret;\n      }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n  }\n\n  /**\n   * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n   * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalMessage(): Promise<ChatCompletionMessage> {\n    await this.done();\n    return this.#getFinalMessage();\n  }\n\n  #getFinalFunctionCall(): ChatCompletionMessage.FunctionCall | undefined {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n      const message = this.messages[i];\n      if (isAssistantMessage(message) && message?.function_call) {\n        return message.function_call;\n      }\n      if (isAssistantMessage(message) && message?.tool_calls?.length) {\n        return message.tool_calls.at(-1)?.function;\n      }\n    }\n\n    return;\n  }\n\n  /**\n   * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalFunctionCall(): Promise<ChatCompletionMessage.FunctionCall | undefined> {\n    await this.done();\n    return this.#getFinalFunctionCall();\n  }\n\n  #getFinalFunctionCallResult(): string | undefined {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n      const message = this.messages[i];\n      if (isFunctionMessage(message) && message.content != null) {\n        return message.content;\n      }\n      if (\n        isToolMessage(message) &&\n        message.content != null &&\n        typeof message.content === 'string' &&\n        this.messages.some(\n          (x) =>\n            x.role === 'assistant' &&\n            x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id),\n        )\n      ) {\n        return message.content;\n      }\n    }\n\n    return;\n  }\n\n  async finalFunctionCallResult(): Promise<string | undefined> {\n    await this.done();\n    return this.#getFinalFunctionCallResult();\n  }\n\n  #calculateTotalUsage(): CompletionUsage {\n    const total: CompletionUsage = {\n      completion_tokens: 0,\n      prompt_tokens: 0,\n      total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n      if (usage) {\n        total.completion_tokens += usage.completion_tokens;\n        total.prompt_tokens += usage.prompt_tokens;\n        total.total_tokens += usage.total_tokens;\n      }\n    }\n    return total;\n  }\n\n  async totalUsage(): Promise<CompletionUsage> {\n    await this.done();\n    return this.#calculateTotalUsage();\n  }\n\n  allChatCompletions(): ChatCompletion[] {\n    return [...this._chatCompletions];\n  }\n\n  protected override _emitFinal(\n    this: AbstractChatCompletionRunner<AbstractChatCompletionRunnerEvents, ParsedT>,\n  ) {\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (completion) this._emit('finalChatCompletion', completion);\n    const finalMessage = this.#getFinalMessage();\n    if (finalMessage) this._emit('finalMessage', finalMessage);\n    const finalContent = this.#getFinalContent();\n    if (finalContent) this._emit('finalContent', finalContent);\n\n    const finalFunctionCall = this.#getFinalFunctionCall();\n    if (finalFunctionCall) this._emit('finalFunctionCall', finalFunctionCall);\n\n    const finalFunctionCallResult = this.#getFinalFunctionCallResult();\n    if (finalFunctionCallResult != null) this._emit('finalFunctionCallResult', finalFunctionCallResult);\n\n    if (this._chatCompletions.some((c) => c.usage)) {\n      this._emit('totalUsage', this.#calculateTotalUsage());\n    }\n  }\n\n  #validateParams(params: ChatCompletionCreateParams): void {\n    if (params.n != null && params.n > 1) {\n      throw new OpenAIError(\n        'ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.',\n      );\n    }\n  }\n\n  protected async _createChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Promise<ParsedChatCompletion<ParsedT>> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#validateParams(params);\n\n    const chatCompletion = await client.chat.completions.create(\n      { ...params, stream: false },\n      { ...options, signal: this.controller.signal },\n    );\n    this._connected();\n    return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n  }\n\n  protected async _runChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Promise<ChatCompletion> {\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n    return await this._createChatCompletion(client, params, options);\n  }\n\n  protected async _runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    client: OpenAI,\n    params:\n      | ChatCompletionFunctionRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: RunnerOptions,\n  ) {\n    const role = 'function' as const;\n    const { function_call = 'auto', stream, ...restParams } = params;\n    const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n    const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n\n    const functionsByName: Record<string, RunnableFunction<any>> = {};\n    for (const f of params.functions) {\n      functionsByName[f.name || f.function.name] = f;\n    }\n\n    const functions: ChatCompletionCreateParams.Function[] = params.functions.map(\n      (f): ChatCompletionCreateParams.Function => ({\n        name: f.name || f.function.name,\n        parameters: f.parameters as Record<string, unknown>,\n        description: f.description,\n      }),\n    );\n\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n\n    for (let i = 0; i < maxChatCompletions; ++i) {\n      const chatCompletion: ChatCompletion = await this._createChatCompletion(\n        client,\n        {\n          ...restParams,\n          function_call,\n          functions,\n          messages: [...this.messages],\n        },\n        options,\n      );\n      const message = chatCompletion.choices[0]?.message;\n      if (!message) {\n        throw new OpenAIError(`missing message in ChatCompletion response`);\n      }\n      if (!message.function_call) return;\n      const { name, arguments: args } = message.function_call;\n      const fn = functionsByName[name];\n      if (!fn) {\n        const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n          .map((f) => JSON.stringify(f.name))\n          .join(', ')}. Please try again`;\n\n        this._addMessage({ role, name, content });\n        continue;\n      } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n        const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(\n          singleFunctionToCall,\n        )} requested. Please try again`;\n\n        this._addMessage({ role, name, content });\n        continue;\n      }\n\n      let parsed;\n      try {\n        parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n      } catch (error) {\n        this._addMessage({\n          role,\n          name,\n          content: error instanceof Error ? error.message : String(error),\n        });\n        continue;\n      }\n\n      // @ts-expect-error it can't rule out `never` type.\n      const rawContent = await fn.function(parsed, this);\n      const content = this.#stringifyFunctionCallResult(rawContent);\n\n      this._addMessage({ role, name, content });\n\n      if (singleFunctionToCall) return;\n    }\n  }\n\n  protected async _runTools<FunctionsArgs extends BaseFunctionsArgs>(\n    client: OpenAI,\n    params:\n      | ChatCompletionToolRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingToolRunnerParams<FunctionsArgs>,\n    options?: RunnerOptions,\n  ) {\n    const role = 'tool' as const;\n    const { tool_choice = 'auto', stream, ...restParams } = params;\n    const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n    const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n\n    // TODO(someday): clean this logic up\n    const inputTools = params.tools.map((tool): RunnableToolFunction<any> => {\n      if (isAutoParsableTool(tool)) {\n        if (!tool.$callback) {\n          throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n        }\n\n        return {\n          type: 'function',\n          function: {\n            function: tool.$callback,\n            name: tool.function.name,\n            description: tool.function.description || '',\n            parameters: tool.function.parameters as any,\n            parse: tool.$parseRaw,\n            strict: true,\n          },\n        };\n      }\n\n      return tool as any as RunnableToolFunction<any>;\n    });\n\n    const functionsByName: Record<string, RunnableFunction<any>> = {};\n    for (const f of inputTools) {\n      if (f.type === 'function') {\n        functionsByName[f.function.name || f.function.function.name] = f.function;\n      }\n    }\n\n    const tools: ChatCompletionTool[] =\n      'tools' in params ?\n        inputTools.map((t) =>\n          t.type === 'function' ?\n            {\n              type: 'function',\n              function: {\n                name: t.function.name || t.function.function.name,\n                parameters: t.function.parameters as Record<string, unknown>,\n                description: t.function.description,\n                strict: t.function.strict,\n              },\n            }\n          : (t as unknown as ChatCompletionTool),\n        )\n      : (undefined as any);\n\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n\n    for (let i = 0; i < maxChatCompletions; ++i) {\n      const chatCompletion: ChatCompletion = await this._createChatCompletion(\n        client,\n        {\n          ...restParams,\n          tool_choice,\n          tools,\n          messages: [...this.messages],\n        },\n        options,\n      );\n      const message = chatCompletion.choices[0]?.message;\n      if (!message) {\n        throw new OpenAIError(`missing message in ChatCompletion response`);\n      }\n      if (!message.tool_calls?.length) {\n        return;\n      }\n\n      for (const tool_call of message.tool_calls) {\n        if (tool_call.type !== 'function') continue;\n        const tool_call_id = tool_call.id;\n        const { name, arguments: args } = tool_call.function;\n        const fn = functionsByName[name];\n\n        if (!fn) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(\n            functionsByName,\n          )\n            .map((name) => JSON.stringify(name))\n            .join(', ')}. Please try again`;\n\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(\n            singleFunctionToCall,\n          )} requested. Please try again`;\n\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        }\n\n        let parsed;\n        try {\n          parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n        } catch (error) {\n          const content = error instanceof Error ? error.message : String(error);\n          this._addMessage({ role, tool_call_id, content });\n          continue;\n        }\n\n        // @ts-expect-error it can't rule out `never` type.\n        const rawContent = await fn.function(parsed, this);\n        const content = this.#stringifyFunctionCallResult(rawContent);\n        this._addMessage({ role, tool_call_id, content });\n\n        if (singleFunctionToCall) {\n          return;\n        }\n      }\n    }\n\n    return;\n  }\n\n  #stringifyFunctionCallResult(rawContent: unknown): string {\n    return (\n      typeof rawContent === 'string' ? rawContent\n      : rawContent === undefined ? 'undefined'\n      : JSON.stringify(rawContent)\n    );\n  }\n}\n\nexport interface AbstractChatCompletionRunnerEvents extends BaseEvents {\n  functionCall: (functionCall: ChatCompletionMessage.FunctionCall) => void;\n  message: (message: ChatCompletionMessageParam) => void;\n  chatCompletion: (completion: ChatCompletion) => void;\n  finalContent: (contentSnapshot: string) => void;\n  finalMessage: (message: ChatCompletionMessageParam) => void;\n  finalChatCompletion: (completion: ChatCompletion) => void;\n  finalFunctionCall: (functionCall: ChatCompletionMessage.FunctionCall) => void;\n  functionCallResult: (content: string) => void;\n  finalFunctionCallResult: (content: string) => void;\n  totalUsage: (usage: CompletionUsage) => void;\n}\n","import {\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from '../resources/chat/completions';\nimport { type RunnableFunctions, type BaseFunctionsArgs, RunnableTools } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n  RunnerOptions,\n} from './AbstractChatCompletionRunner';\nimport { isAssistantMessage } from './chatCompletionUtils';\nimport OpenAI from '../index';\nimport { AutoParseableTool } from '../lib/parser';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs> | AutoParseableTool<any, true>[];\n};\n\nexport class ChatCompletionRunner<ParsedT = null> extends AbstractChatCompletionRunner<\n  ChatCompletionRunnerEvents,\n  ParsedT\n> {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(\n    client: OpenAI,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<null> {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n\n  static runTools<ParsedT>(\n    client: OpenAI,\n    params: ChatCompletionToolRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<ParsedT> {\n    const runner = new ChatCompletionRunner<ParsedT>();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n\n  override _addMessage(\n    this: ChatCompletionRunner<ParsedT>,\n    message: ChatCompletionMessageParam,\n    emit: boolean = true,\n  ) {\n    super._addMessage(message, emit);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content as string);\n    }\n  }\n}\n","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\n\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\n\nconst Allow = {\n  STR,\n  NUM,\n  ARR,\n  OBJ,\n  NULL,\n  BOOL,\n  NAN,\n  INFINITY,\n  MINUS_INFINITY,\n  INF,\n  SPECIAL,\n  ATOM,\n  COLLECTION,\n  ALL,\n};\n\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {}\n\nclass MalformedJSON extends Error {}\n\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString: string, allowPartial: number = Allow.ALL): any {\n  if (typeof jsonString !== 'string') {\n    throw new TypeError(`expecting str, got ${typeof jsonString}`);\n  }\n  if (!jsonString.trim()) {\n    throw new Error(`${jsonString} is empty`);\n  }\n  return _parseJSON(jsonString.trim(), allowPartial);\n}\n\nconst _parseJSON = (jsonString: string, allow: number) => {\n  const length = jsonString.length;\n  let index = 0;\n\n  const markPartialJSON = (msg: string) => {\n    throw new PartialJSON(`${msg} at position ${index}`);\n  };\n\n  const throwMalformedError = (msg: string) => {\n    throw new MalformedJSON(`${msg} at position ${index}`);\n  };\n\n  const parseAny: () => any = () => {\n    skipBlank();\n    if (index >= length) markPartialJSON('Unexpected end of input');\n    if (jsonString[index] === '\"') return parseStr();\n    if (jsonString[index] === '{') return parseObj();\n    if (jsonString[index] === '[') return parseArr();\n    if (\n      jsonString.substring(index, index + 4) === 'null' ||\n      (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 4;\n      return null;\n    }\n    if (\n      jsonString.substring(index, index + 4) === 'true' ||\n      (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 4;\n      return true;\n    }\n    if (\n      jsonString.substring(index, index + 5) === 'false' ||\n      (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 5;\n      return false;\n    }\n    if (\n      jsonString.substring(index, index + 8) === 'Infinity' ||\n      (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 8;\n      return Infinity;\n    }\n    if (\n      jsonString.substring(index, index + 9) === '-Infinity' ||\n      (Allow.MINUS_INFINITY & allow &&\n        1 < length - index &&\n        length - index < 9 &&\n        '-Infinity'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 9;\n      return -Infinity;\n    }\n    if (\n      jsonString.substring(index, index + 3) === 'NaN' ||\n      (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))\n    ) {\n      index += 3;\n      return NaN;\n    }\n    return parseNum();\n  };\n\n  const parseStr: () => string = () => {\n    const start = index;\n    let escape = false;\n    index++; // skip initial quote\n    while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n      escape = jsonString[index] === '\\\\' ? !escape : false;\n      index++;\n    }\n    if (jsonString.charAt(index) == '\"') {\n      try {\n        return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    } else if (Allow.STR & allow) {\n      try {\n        return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n      } catch (e) {\n        // SyntaxError: Invalid escape sequence\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n      }\n    }\n    markPartialJSON('Unterminated string literal');\n  };\n\n  const parseObj = () => {\n    index++; // skip initial brace\n    skipBlank();\n    const obj: Record<string, any> = {};\n    try {\n      while (jsonString[index] !== '}') {\n        skipBlank();\n        if (index >= length && Allow.OBJ & allow) return obj;\n        const key = parseStr();\n        skipBlank();\n        index++; // skip colon\n        try {\n          const value = parseAny();\n          Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n        } catch (e) {\n          if (Allow.OBJ & allow) return obj;\n          else throw e;\n        }\n        skipBlank();\n        if (jsonString[index] === ',') index++; // skip comma\n      }\n    } catch (e) {\n      if (Allow.OBJ & allow) return obj;\n      else markPartialJSON(\"Expected '}' at end of object\");\n    }\n    index++; // skip final brace\n    return obj;\n  };\n\n  const parseArr = () => {\n    index++; // skip initial bracket\n    const arr = [];\n    try {\n      while (jsonString[index] !== ']') {\n        arr.push(parseAny());\n        skipBlank();\n        if (jsonString[index] === ',') {\n          index++; // skip comma\n        }\n      }\n    } catch (e) {\n      if (Allow.ARR & allow) {\n        return arr;\n      }\n      markPartialJSON(\"Expected ']' at end of array\");\n    }\n    index++; // skip final bracket\n    return arr;\n  };\n\n  const parseNum = () => {\n    if (index === 0) {\n      if (jsonString === '-' && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString);\n      } catch (e) {\n        if (Allow.NUM & allow) {\n          try {\n            if ('.' === jsonString[jsonString.length - 1])\n              return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n          } catch (e) {}\n        }\n        throwMalformedError(String(e));\n      }\n    }\n\n    const start = index;\n\n    if (jsonString[index] === '-') index++;\n    while (jsonString[index] && !',]}'.includes(jsonString[index]!)) index++;\n\n    if (index == length && !(Allow.NUM & allow)) markPartialJSON('Unterminated number literal');\n\n    try {\n      return JSON.parse(jsonString.substring(start, index));\n    } catch (e) {\n      if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n        markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    }\n  };\n\n  const skipBlank = () => {\n    while (index < length && ' \\n\\r\\t'.includes(jsonString[index]!)) {\n      index++;\n    }\n  };\n\n  return parseAny();\n};\n\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input: string) => parseJSON(input, Allow.ALL ^ Allow.NUM);\n\nexport { partialParse, PartialJSON, MalformedJSON };\n","import * as Core from '../core';\nimport {\n  OpenAIError,\n  APIUserAbortError,\n  LengthFinishReasonError,\n  ContentFilterFinishReasonError,\n} from '../error';\nimport {\n  ChatCompletionTokenLogprob,\n  type ChatCompletion,\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParams,\n  type ChatCompletionCreateParamsStreaming,\n  type ChatCompletionCreateParamsBase,\n  type ChatCompletionRole,\n} from '../resources/chat/completions/completions';\nimport {\n  AbstractChatCompletionRunner,\n  type AbstractChatCompletionRunnerEvents,\n} from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from '../_shims/index';\nimport { Stream } from '../streaming';\nimport OpenAI from '../index';\nimport { ParsedChatCompletion } from '../resources/beta/chat/completions';\nimport {\n  AutoParseableResponseFormat,\n  hasAutoParseableInput,\n  isAutoParsableResponseFormat,\n  isAutoParsableTool,\n  maybeParseChatCompletion,\n  shouldParseToolCall,\n} from '../lib/parser';\nimport { partialParse } from '../_vendor/partial-json-parser/parser';\n\nexport interface ContentDeltaEvent {\n  delta: string;\n  snapshot: string;\n  parsed: unknown | null;\n}\n\nexport interface ContentDoneEvent<ParsedT = null> {\n  content: string;\n  parsed: ParsedT | null;\n}\n\nexport interface RefusalDeltaEvent {\n  delta: string;\n  snapshot: string;\n}\n\nexport interface RefusalDoneEvent {\n  refusal: string;\n}\n\nexport interface FunctionToolCallArgumentsDeltaEvent {\n  name: string;\n\n  index: number;\n\n  arguments: string;\n\n  parsed_arguments: unknown;\n\n  arguments_delta: string;\n}\n\nexport interface FunctionToolCallArgumentsDoneEvent {\n  name: string;\n\n  index: number;\n\n  arguments: string;\n\n  parsed_arguments: unknown;\n}\n\nexport interface LogProbsContentDeltaEvent {\n  content: Array<ChatCompletionTokenLogprob>;\n  snapshot: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsContentDoneEvent {\n  content: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsRefusalDeltaEvent {\n  refusal: Array<ChatCompletionTokenLogprob>;\n  snapshot: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface LogProbsRefusalDoneEvent {\n  refusal: Array<ChatCompletionTokenLogprob>;\n}\n\nexport interface ChatCompletionStreamEvents<ParsedT = null> extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n\n  'content.delta': (props: ContentDeltaEvent) => void;\n  'content.done': (props: ContentDoneEvent<ParsedT>) => void;\n\n  'refusal.delta': (props: RefusalDeltaEvent) => void;\n  'refusal.done': (props: RefusalDoneEvent) => void;\n\n  'tool_calls.function.arguments.delta': (props: FunctionToolCallArgumentsDeltaEvent) => void;\n  'tool_calls.function.arguments.done': (props: FunctionToolCallArgumentsDoneEvent) => void;\n\n  'logprobs.content.delta': (props: LogProbsContentDeltaEvent) => void;\n  'logprobs.content.done': (props: LogProbsContentDoneEvent) => void;\n\n  'logprobs.refusal.delta': (props: LogProbsRefusalDeltaEvent) => void;\n  'logprobs.refusal.done': (props: LogProbsRefusalDoneEvent) => void;\n}\n\nexport type ChatCompletionStreamParams = Omit<ChatCompletionCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\ninterface ChoiceEventState {\n  content_done: boolean;\n  refusal_done: boolean;\n  logprobs_content_done: boolean;\n  logprobs_refusal_done: boolean;\n  current_tool_call_index: number | null;\n  done_tool_calls: Set<number>;\n}\n\nexport class ChatCompletionStream<ParsedT = null>\n  extends AbstractChatCompletionRunner<ChatCompletionStreamEvents<ParsedT>, ParsedT>\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  #params: ChatCompletionCreateParams | null;\n  #choiceEventStates: ChoiceEventState[];\n  #currentChatCompletionSnapshot: ChatCompletionSnapshot | undefined;\n\n  constructor(params: ChatCompletionCreateParams | null) {\n    super();\n    this.#params = params;\n    this.#choiceEventStates = [];\n  }\n\n  get currentChatCompletionSnapshot(): ChatCompletionSnapshot | undefined {\n    return this.#currentChatCompletionSnapshot;\n  }\n\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream: ReadableStream): ChatCompletionStream<null> {\n    const runner = new ChatCompletionStream(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static createChatCompletion<ParsedT>(\n    client: OpenAI,\n    params: ChatCompletionStreamParams,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStream<ParsedT> {\n    const runner = new ChatCompletionStream<ParsedT>(params as ChatCompletionCreateParamsStreaming);\n    runner._run(() =>\n      runner._runChatCompletion(\n        client,\n        { ...params, stream: true },\n        { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } },\n      ),\n    );\n    return runner;\n  }\n\n  #beginRequest() {\n    if (this.ended) return;\n    this.#currentChatCompletionSnapshot = undefined;\n  }\n\n  #getChoiceEventState(choice: ChatCompletionSnapshot.Choice): ChoiceEventState {\n    let state = this.#choiceEventStates[choice.index];\n    if (state) {\n      return state;\n    }\n\n    state = {\n      content_done: false,\n      refusal_done: false,\n      logprobs_content_done: false,\n      logprobs_refusal_done: false,\n      done_tool_calls: new Set(),\n      current_tool_call_index: null,\n    };\n    this.#choiceEventStates[choice.index] = state;\n    return state;\n  }\n\n  #addChunk(this: ChatCompletionStream<ParsedT>, chunk: ChatCompletionChunk) {\n    if (this.ended) return;\n\n    const completion = this.#accumulateChatCompletion(chunk);\n    this._emit('chunk', chunk, completion);\n\n    for (const choice of chunk.choices) {\n      const choiceSnapshot = completion.choices[choice.index]!;\n\n      if (\n        choice.delta.content != null &&\n        choiceSnapshot.message?.role === 'assistant' &&\n        choiceSnapshot.message?.content\n      ) {\n        this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n        this._emit('content.delta', {\n          delta: choice.delta.content,\n          snapshot: choiceSnapshot.message.content,\n          parsed: choiceSnapshot.message.parsed,\n        });\n      }\n\n      if (\n        choice.delta.refusal != null &&\n        choiceSnapshot.message?.role === 'assistant' &&\n        choiceSnapshot.message?.refusal\n      ) {\n        this._emit('refusal.delta', {\n          delta: choice.delta.refusal,\n          snapshot: choiceSnapshot.message.refusal,\n        });\n      }\n\n      if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.content.delta', {\n          content: choice.logprobs?.content,\n          snapshot: choiceSnapshot.logprobs?.content ?? [],\n        });\n      }\n\n      if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.refusal.delta', {\n          refusal: choice.logprobs?.refusal,\n          snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n        });\n      }\n\n      const state = this.#getChoiceEventState(choiceSnapshot);\n\n      if (choiceSnapshot.finish_reason) {\n        this.#emitContentDoneEvents(choiceSnapshot);\n\n        if (state.current_tool_call_index != null) {\n          this.#emitToolCallDoneEvent(choiceSnapshot, state.current_tool_call_index);\n        }\n      }\n\n      for (const toolCall of choice.delta.tool_calls ?? []) {\n        if (state.current_tool_call_index !== toolCall.index) {\n          this.#emitContentDoneEvents(choiceSnapshot);\n\n          // new tool call started, the previous one is done\n          if (state.current_tool_call_index != null) {\n            this.#emitToolCallDoneEvent(choiceSnapshot, state.current_tool_call_index);\n          }\n        }\n\n        state.current_tool_call_index = toolCall.index;\n      }\n\n      for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n        if (!toolCallSnapshot?.type) {\n          continue;\n        }\n\n        if (toolCallSnapshot?.type === 'function') {\n          this._emit('tool_calls.function.arguments.delta', {\n            name: toolCallSnapshot.function?.name,\n            index: toolCallDelta.index,\n            arguments: toolCallSnapshot.function.arguments,\n            parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n            arguments_delta: toolCallDelta.function?.arguments ?? '',\n          });\n        } else {\n          assertNever(toolCallSnapshot?.type);\n        }\n      }\n    }\n  }\n\n  #emitToolCallDoneEvent(choiceSnapshot: ChatCompletionSnapshot.Choice, toolCallIndex: number) {\n    const state = this.#getChoiceEventState(choiceSnapshot);\n    if (state.done_tool_calls.has(toolCallIndex)) {\n      // we've already fired the done event\n      return;\n    }\n\n    const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n    if (!toolCallSnapshot) {\n      throw new Error('no tool call snapshot');\n    }\n    if (!toolCallSnapshot.type) {\n      throw new Error('tool call snapshot missing `type`');\n    }\n\n    if (toolCallSnapshot.type === 'function') {\n      const inputTool = this.#params?.tools?.find(\n        (tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name,\n      );\n\n      this._emit('tool_calls.function.arguments.done', {\n        name: toolCallSnapshot.function.name,\n        index: toolCallIndex,\n        arguments: toolCallSnapshot.function.arguments,\n        parsed_arguments:\n          isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n          : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n          : null,\n      });\n    } else {\n      assertNever(toolCallSnapshot.type);\n    }\n  }\n\n  #emitContentDoneEvents(choiceSnapshot: ChatCompletionSnapshot.Choice) {\n    const state = this.#getChoiceEventState(choiceSnapshot);\n\n    if (choiceSnapshot.message.content && !state.content_done) {\n      state.content_done = true;\n\n      const responseFormat = this.#getAutoParseableResponseFormat();\n\n      this._emit('content.done', {\n        content: choiceSnapshot.message.content,\n        parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : (null as any),\n      });\n    }\n\n    if (choiceSnapshot.message.refusal && !state.refusal_done) {\n      state.refusal_done = true;\n\n      this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n    }\n\n    if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n      state.logprobs_content_done = true;\n\n      this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n    }\n\n    if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n      state.logprobs_refusal_done = true;\n\n      this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n    }\n  }\n\n  #endRequest(): ParsedChatCompletion<ParsedT> {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = this.#currentChatCompletionSnapshot;\n    if (!snapshot) {\n      throw new OpenAIError(`request ended without sending any chunks`);\n    }\n    this.#currentChatCompletionSnapshot = undefined;\n    this.#choiceEventStates = [];\n    return finalizeChatCompletion(snapshot, this.#params);\n  }\n\n  protected override async _createChatCompletion(\n    client: OpenAI,\n    params: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Promise<ParsedChatCompletion<ParsedT>> {\n    super._createChatCompletion;\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#beginRequest();\n\n    const stream = await client.chat.completions.create(\n      { ...params, stream: true },\n      { ...options, signal: this.controller.signal },\n    );\n    this._connected();\n    for await (const chunk of stream) {\n      this.#addChunk(chunk);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(this.#endRequest());\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: Core.RequestOptions,\n  ): Promise<ChatCompletion> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this.#beginRequest();\n    this._connected();\n    const stream = Stream.fromReadableStream<ChatCompletionChunk>(readableStream, this.controller);\n    let chatId;\n    for await (const chunk of stream) {\n      if (chatId && chatId !== chunk.id) {\n        // A new request has been made.\n        this._addChatCompletion(this.#endRequest());\n      }\n\n      this.#addChunk(chunk);\n      chatId = chunk.id;\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(this.#endRequest());\n  }\n\n  #getAutoParseableResponseFormat(): AutoParseableResponseFormat<ParsedT> | null {\n    const responseFormat = this.#params?.response_format;\n    if (isAutoParsableResponseFormat<ParsedT>(responseFormat)) {\n      return responseFormat;\n    }\n\n    return null;\n  }\n\n  #accumulateChatCompletion(chunk: ChatCompletionChunk): ChatCompletionSnapshot {\n    let snapshot = this.#currentChatCompletionSnapshot;\n    const { choices, ...rest } = chunk;\n    if (!snapshot) {\n      snapshot = this.#currentChatCompletionSnapshot = {\n        ...rest,\n        choices: [],\n      };\n    } else {\n      Object.assign(snapshot, rest);\n    }\n\n    for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n      let choice = snapshot.choices[index];\n      if (!choice) {\n        choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n      }\n\n      if (logprobs) {\n        if (!choice.logprobs) {\n          choice.logprobs = Object.assign({}, logprobs);\n        } else {\n          const { content, refusal, ...rest } = logprobs;\n          assertIsEmpty(rest);\n          Object.assign(choice.logprobs, rest);\n\n          if (content) {\n            choice.logprobs.content ??= [];\n            choice.logprobs.content.push(...content);\n          }\n\n          if (refusal) {\n            choice.logprobs.refusal ??= [];\n            choice.logprobs.refusal.push(...refusal);\n          }\n        }\n      }\n\n      if (finish_reason) {\n        choice.finish_reason = finish_reason;\n\n        if (this.#params && hasAutoParseableInput(this.#params)) {\n          if (finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n          }\n\n          if (finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n          }\n        }\n      }\n\n      Object.assign(choice, other);\n\n      if (!delta) continue; // Shouldn't happen; just in case.\n\n      const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n      assertIsEmpty(rest);\n      Object.assign(choice.message, rest);\n\n      if (refusal) {\n        choice.message.refusal = (choice.message.refusal || '') + refusal;\n      }\n\n      if (role) choice.message.role = role;\n      if (function_call) {\n        if (!choice.message.function_call) {\n          choice.message.function_call = function_call;\n        } else {\n          if (function_call.name) choice.message.function_call.name = function_call.name;\n          if (function_call.arguments) {\n            choice.message.function_call.arguments ??= '';\n            choice.message.function_call.arguments += function_call.arguments;\n          }\n        }\n      }\n      if (content) {\n        choice.message.content = (choice.message.content || '') + content;\n\n        if (!choice.message.refusal && this.#getAutoParseableResponseFormat()) {\n          choice.message.parsed = partialParse(choice.message.content);\n        }\n      }\n\n      if (tool_calls) {\n        if (!choice.message.tool_calls) choice.message.tool_calls = [];\n\n        for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n          const tool_call = (choice.message.tool_calls[index] ??=\n            {} as ChatCompletionSnapshot.Choice.Message.ToolCall);\n          Object.assign(tool_call, rest);\n          if (id) tool_call.id = id;\n          if (type) tool_call.type = type;\n          if (fn) tool_call.function ??= { name: fn.name ?? '', arguments: '' };\n          if (fn?.name) tool_call.function!.name = fn.name;\n          if (fn?.arguments) {\n            tool_call.function!.arguments += fn.arguments;\n\n            if (shouldParseToolCall(this.#params, tool_call)) {\n              tool_call.function!.parsed_arguments = partialParse(tool_call.function!.arguments);\n            }\n          }\n        }\n      }\n    }\n    return snapshot;\n  }\n\n  [Symbol.asyncIterator](this: ChatCompletionStream<ParsedT>): AsyncIterator<ChatCompletionChunk> {\n    const pushQueue: ChatCompletionChunk[] = [];\n    const readQueue: {\n      resolve: (chunk: ChatCompletionChunk | undefined) => void;\n      reject: (err: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    this.on('chunk', (chunk) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(chunk);\n      } else {\n        pushQueue.push(chunk);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<ChatCompletionChunk>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<ChatCompletionChunk | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\n\nfunction finalizeChatCompletion<ParsedT>(\n  snapshot: ChatCompletionSnapshot,\n  params: ChatCompletionCreateParams | null,\n): ParsedChatCompletion<ParsedT> {\n  const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n  const completion: ChatCompletion = {\n    ...rest,\n    id,\n    choices: choices.map(\n      ({ message, finish_reason, index, logprobs, ...choiceRest }): ChatCompletion.Choice => {\n        if (!finish_reason) {\n          throw new OpenAIError(`missing finish_reason for choice ${index}`);\n        }\n\n        const { content = null, function_call, tool_calls, ...messageRest } = message;\n        const role = message.role as 'assistant'; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n        if (!role) {\n          throw new OpenAIError(`missing role for choice ${index}`);\n        }\n\n        if (function_call) {\n          const { arguments: args, name } = function_call;\n          if (args == null) {\n            throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n          }\n\n          if (!name) {\n            throw new OpenAIError(`missing function_call.name for choice ${index}`);\n          }\n\n          return {\n            ...choiceRest,\n            message: {\n              content,\n              function_call: { arguments: args, name },\n              role,\n              refusal: message.refusal ?? null,\n            },\n            finish_reason,\n            index,\n            logprobs,\n          };\n        }\n\n        if (tool_calls) {\n          return {\n            ...choiceRest,\n            index,\n            finish_reason,\n            logprobs,\n            message: {\n              ...messageRest,\n              role,\n              content,\n              refusal: message.refusal ?? null,\n              tool_calls: tool_calls.map((tool_call, i) => {\n                const { function: fn, type, id, ...toolRest } = tool_call;\n                const { arguments: args, name, ...fnRest } = fn || {};\n                if (id == null) {\n                  throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                }\n                if (type == null) {\n                  throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                }\n                if (name == null) {\n                  throw new OpenAIError(\n                    `missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`,\n                  );\n                }\n                if (args == null) {\n                  throw new OpenAIError(\n                    `missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`,\n                  );\n                }\n\n                return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n              }),\n            },\n          };\n        }\n        return {\n          ...choiceRest,\n          message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n          finish_reason,\n          index,\n          logprobs,\n        };\n      },\n    ),\n    created,\n    model,\n    object: 'chat.completion',\n    ...(system_fingerprint ? { system_fingerprint } : {}),\n  };\n\n  return maybeParseChatCompletion(completion, params);\n}\n\nfunction str(x: unknown) {\n  return JSON.stringify(x);\n}\n\n/**\n * Represents a streamed chunk of a chat completion response returned by model,\n * based on the provided input.\n */\nexport interface ChatCompletionSnapshot {\n  /**\n   * A unique identifier for the chat completion.\n   */\n  id: string;\n\n  /**\n   * A list of chat completion choices. Can be more than one if `n` is greater\n   * than 1.\n   */\n  choices: Array<ChatCompletionSnapshot.Choice>;\n\n  /**\n   * The Unix timestamp (in seconds) of when the chat completion was created.\n   */\n  created: number;\n\n  /**\n   * The model to generate the completion.\n   */\n  model: string;\n\n  // Note we do not include an \"object\" type on the snapshot,\n  // because the object is not a valid \"chat.completion\" until finalized.\n  // object: 'chat.completion';\n\n  /**\n   * This fingerprint represents the backend configuration that the model runs with.\n   *\n   * Can be used in conjunction with the `seed` request parameter to understand when\n   * backend changes have been made that might impact determinism.\n   */\n  system_fingerprint?: string;\n}\n\nexport namespace ChatCompletionSnapshot {\n  export interface Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    message: Choice.Message;\n\n    /**\n     * The reason the model stopped generating tokens. This will be `stop` if the model\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\n     * number of tokens specified in the request was reached, `content_filter` if\n     * content was omitted due to a flag from our content filters, or `function_call`\n     * if the model called a function.\n     */\n    finish_reason: ChatCompletion.Choice['finish_reason'] | null;\n\n    /**\n     * Log probability information for the choice.\n     */\n    logprobs: ChatCompletion.Choice.Logprobs | null;\n\n    /**\n     * The index of the choice in the list of choices.\n     */\n    index: number;\n  }\n\n  export namespace Choice {\n    /**\n     * A chat completion delta generated by streamed model responses.\n     */\n    export interface Message {\n      /**\n       * The contents of the chunk message.\n       */\n      content?: string | null;\n\n      refusal?: string | null;\n\n      parsed?: unknown | null;\n\n      /**\n       * The name and arguments of a function that should be called, as generated by the\n       * model.\n       */\n      function_call?: Message.FunctionCall;\n\n      tool_calls?: Array<Message.ToolCall>;\n\n      /**\n       * The role of the author of this message.\n       */\n      role?: ChatCompletionRole;\n    }\n\n    export namespace Message {\n      export interface ToolCall {\n        /**\n         * The ID of the tool call.\n         */\n        id: string;\n\n        function: ToolCall.Function;\n\n        /**\n         * The type of the tool.\n         */\n        type: 'function';\n      }\n\n      export namespace ToolCall {\n        export interface Function {\n          /**\n           * The arguments to call the function with, as generated by the model in JSON\n           * format. Note that the model does not always generate valid JSON, and may\n           * hallucinate parameters not defined by your function schema. Validate the\n           * arguments in your code before calling your function.\n           */\n          arguments: string;\n\n          parsed_arguments?: unknown;\n\n          /**\n           * The name of the function to call.\n           */\n          name: string;\n        }\n      }\n\n      /**\n       * The name and arguments of a function that should be called, as generated by the\n       * model.\n       */\n      export interface FunctionCall {\n        /**\n         * The arguments to call the function with, as generated by the model in JSON\n         * format. Note that the model does not always generate valid JSON, and may\n         * hallucinate parameters not defined by your function schema. Validate the\n         * arguments in your code before calling your function.\n         */\n        arguments?: string;\n\n        /**\n         * The name of the function to call.\n         */\n        name?: string;\n      }\n    }\n  }\n}\n\ntype AssertIsEmpty<T extends {}> = keyof T extends never ? T : never;\n\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty<T extends {}>(obj: AssertIsEmpty<T>): asserts obj is AssertIsEmpty<T> {\n  return;\n}\n\nfunction assertNever(_x: never) {}\n","import {\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParamsStreaming,\n} from '../resources/chat/completions';\nimport { RunnerOptions, type AbstractChatCompletionRunnerEvents } from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from '../_shims/index';\nimport { RunnableTools, type BaseFunctionsArgs, type RunnableFunctions } from './RunnableFunction';\nimport { ChatCompletionSnapshot, ChatCompletionStream } from './ChatCompletionStream';\nimport OpenAI from '../index';\nimport { AutoParseableTool } from '../lib/parser';\n\nexport interface ChatCompletionStreamEvents extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n}\n\nexport type ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionStreamingToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs> | AutoParseableTool<any, true>[];\n};\n\nexport class ChatCompletionStreamingRunner<ParsedT = null>\n  extends ChatCompletionStream<ParsedT>\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  static override fromReadableStream(stream: ReadableStream): ChatCompletionStreamingRunner<null> {\n    const runner = new ChatCompletionStreamingRunner(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions<T extends (string | object)[]>(\n    client: OpenAI,\n    params: ChatCompletionStreamingFunctionRunnerParams<T>,\n    options?: RunnerOptions,\n  ): ChatCompletionStreamingRunner<null> {\n    const runner = new ChatCompletionStreamingRunner(null);\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n\n  static runTools<T extends (string | object)[], ParsedT = null>(\n    client: OpenAI,\n    params: ChatCompletionStreamingToolRunnerParams<T>,\n    options?: RunnerOptions,\n  ): ChatCompletionStreamingRunner<ParsedT> {\n    const runner = new ChatCompletionStreamingRunner<ParsedT>(\n      // @ts-expect-error TODO these types are incompatible\n      params,\n    );\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport * as Core from '../../../core';\nimport { APIResource } from '../../../resource';\nimport { ChatCompletionRunner, ChatCompletionFunctionRunnerParams } from '../../../lib/ChatCompletionRunner';\nimport {\n  ChatCompletionStreamingRunner,\n  ChatCompletionStreamingFunctionRunnerParams,\n} from '../../../lib/ChatCompletionStreamingRunner';\nimport { BaseFunctionsArgs } from '../../../lib/RunnableFunction';\nimport { RunnerOptions } from '../../../lib/AbstractChatCompletionRunner';\nimport { ChatCompletionToolRunnerParams } from '../../../lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingToolRunnerParams } from '../../../lib/ChatCompletionStreamingRunner';\nimport { ChatCompletionStream, type ChatCompletionStreamParams } from '../../../lib/ChatCompletionStream';\nimport {\n  ChatCompletion,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionMessage,\n  ChatCompletionMessageToolCall,\n} from '../../chat/completions';\nimport { ExtractParsedContentFromParams, parseChatCompletion, validateInputTools } from '../../../lib/parser';\n\nexport {\n  ChatCompletionStreamingRunner,\n  type ChatCompletionStreamingFunctionRunnerParams,\n} from '../../../lib/ChatCompletionStreamingRunner';\nexport {\n  type RunnableFunction,\n  type RunnableFunctions,\n  type RunnableFunctionWithParse,\n  type RunnableFunctionWithoutParse,\n  ParsingFunction,\n  ParsingToolFunction,\n} from '../../../lib/RunnableFunction';\nexport { type ChatCompletionToolRunnerParams } from '../../../lib/ChatCompletionRunner';\nexport { type ChatCompletionStreamingToolRunnerParams } from '../../../lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStream, type ChatCompletionStreamParams } from '../../../lib/ChatCompletionStream';\nexport {\n  ChatCompletionRunner,\n  type ChatCompletionFunctionRunnerParams,\n} from '../../../lib/ChatCompletionRunner';\n\nexport interface ParsedFunction extends ChatCompletionMessageToolCall.Function {\n  parsed_arguments?: unknown;\n}\n\nexport interface ParsedFunctionToolCall extends ChatCompletionMessageToolCall {\n  function: ParsedFunction;\n}\n\nexport interface ParsedChatCompletionMessage<ParsedT> extends ChatCompletionMessage {\n  parsed: ParsedT | null;\n  tool_calls?: Array<ParsedFunctionToolCall>;\n}\n\nexport interface ParsedChoice<ParsedT> extends ChatCompletion.Choice {\n  message: ParsedChatCompletionMessage<ParsedT>;\n}\n\nexport interface ParsedChatCompletion<ParsedT> extends ChatCompletion {\n  choices: Array<ParsedChoice<ParsedT>>;\n}\n\nexport type ChatCompletionParseParams = ChatCompletionCreateParamsNonStreaming;\n\nexport class Completions extends APIResource {\n  parse<Params extends ChatCompletionParseParams, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ParsedChatCompletion<ParsedT>> {\n    validateInputTools(body.tools);\n\n    return this._client.chat.completions\n      .create(body, {\n        ...options,\n        headers: {\n          ...options?.headers,\n          'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n        },\n      })\n      ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n  }\n\n  /**\n   * @deprecated - use `runTools` instead.\n   */\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner<null>;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body: ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStreamingRunner<null>;\n  runFunctions<FunctionsArgs extends BaseFunctionsArgs>(\n    body:\n      | ChatCompletionFunctionRunnerParams<FunctionsArgs>\n      | ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n    options?: Core.RequestOptions,\n  ): ChatCompletionRunner<null> | ChatCompletionStreamingRunner<null> {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(\n        this._client,\n        body as ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>,\n        options,\n      );\n    }\n    return ChatCompletionRunner.runFunctions(\n      this._client,\n      body as ChatCompletionFunctionRunnerParams<FunctionsArgs>,\n      options,\n    );\n  }\n\n  /**\n   * A convenience helper for using tool calls with the /chat/completions endpoint\n   * which automatically calls the JavaScript functions you provide and sends their\n   * results back to the /chat/completions endpoint, looping as long as the model\n   * requests function calls.\n   *\n   * For more details and examples, see\n   * [the docs](https://github.com/openai/openai-node#automated-function-calls)\n   */\n  runTools<\n    Params extends ChatCompletionToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(body: Params, options?: RunnerOptions): ChatCompletionRunner<ParsedT>;\n\n  runTools<\n    Params extends ChatCompletionStreamingToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(body: Params, options?: RunnerOptions): ChatCompletionStreamingRunner<ParsedT>;\n\n  runTools<\n    Params extends ChatCompletionToolRunnerParams<any> | ChatCompletionStreamingToolRunnerParams<any>,\n    ParsedT = ExtractParsedContentFromParams<Params>,\n  >(\n    body: Params,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<ParsedT> | ChatCompletionStreamingRunner<ParsedT> {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(\n        this._client,\n        body as ChatCompletionStreamingToolRunnerParams<any>,\n        options,\n      );\n    }\n\n    return ChatCompletionRunner.runTools(this._client, body as ChatCompletionToolRunnerParams<any>, options);\n  }\n\n  /**\n   * Creates a chat completion stream\n   */\n  stream<Params extends ChatCompletionStreamParams, ParsedT = ExtractParsedContentFromParams<Params>>(\n    body: Params,\n    options?: Core.RequestOptions,\n  ): ChatCompletionStream<ParsedT> {\n    return ChatCompletionStream.createChatCompletion(this._client, body, options);\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport * as CompletionsAPI from './completions';\n\nexport class Chat extends APIResource {\n  completions: CompletionsAPI.Completions = new CompletionsAPI.Completions(this._client);\n}\n\nexport namespace Chat {\n  export import Completions = CompletionsAPI.Completions;\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport * as Core from '../../../core';\n\nexport class Sessions extends APIResource {\n  /**\n   * Create an ephemeral API token for use in client-side applications with the\n   * Realtime API. Can be configured with the same session parameters as the\n   * `session.update` client event.\n   *\n   * It responds with a session object, plus a `client_secret` key which contains a\n   * usable ephemeral API token that can be used to authenticate browser clients for\n   * the Realtime API.\n   */\n  create(body: SessionCreateParams, options?: Core.RequestOptions): Core.APIPromise<SessionCreateResponse> {\n    return this._client.post('/realtime/sessions', {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n}\n\n/**\n * Realtime session object configuration.\n */\nexport interface Session {\n  /**\n   * Unique identifier for the session object.\n   */\n  id?: string;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n   * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n   * (mono), and little-endian byte order.\n   */\n  input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  input_audio_transcription?: Session.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The Realtime model used for this session.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o-realtime-preview'\n    | 'gpt-4o-realtime-preview-2024-10-01'\n    | 'gpt-4o-realtime-preview-2024-12-17'\n    | 'gpt-4o-mini-realtime-preview'\n    | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   * For `pcm16`, output audio is sampled at a rate of 24kHz.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<Session.Tool>;\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  turn_detection?: Session.TurnDetection | null;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n   */\n  voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n}\n\nexport namespace Session {\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The model to use for transcription, `whisper-1` is the only currently supported\n     * model.\n     */\n    model?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  export interface TurnDetection {\n    /**\n     * Whether or not to automatically generate a response when a VAD stop event\n     * occurs. `true` by default.\n     */\n    create_response?: boolean;\n\n    /**\n     * Whether or not to automatically interrupt any ongoing response with output to\n     * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n     * occurs. `true` by default.\n     */\n    interrupt_response?: boolean;\n\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     * Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n     * With shorter values the model will respond more quickly, but may jump in on\n     * short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection, only `server_vad` is currently supported.\n     */\n    type?: 'server_vad';\n  }\n}\n\n/**\n * A new Realtime session configuration, with an ephermeral key. Default TTL for\n * keys is one minute.\n */\nexport interface SessionCreateResponse {\n  /**\n   * Ephemeral key returned by the API.\n   */\n  client_secret: SessionCreateResponse.ClientSecret;\n\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  input_audio_format?: string;\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  input_audio_transcription?: SessionCreateResponse.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  output_audio_format?: string;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<SessionCreateResponse.Tool>;\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  turn_detection?: SessionCreateResponse.TurnDetection;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n   */\n  voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n}\n\nexport namespace SessionCreateResponse {\n  /**\n   * Ephemeral key returned by the API.\n   */\n  export interface ClientSecret {\n    /**\n     * Timestamp for when the token expires. Currently, all tokens expire after one\n     * minute.\n     */\n    expires_at: number;\n\n    /**\n     * Ephemeral key usable in client environments to authenticate connections to the\n     * Realtime API. Use this in client-side environments rather than a standard API\n     * token, which should only be used server-side.\n     */\n    value: string;\n  }\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through Whisper and should be treated as rough guidance rather\n   * than the representation understood by the model.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The model to use for transcription, `whisper-1` is the only currently supported\n     * model.\n     */\n    model?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  export interface TurnDetection {\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     * Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n     * With shorter values the model will respond more quickly, but may jump in on\n     * short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection, only `server_vad` is currently supported.\n     */\n    type?: string;\n  }\n}\n\nexport interface SessionCreateParams {\n  /**\n   * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n   * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n   * (mono), and little-endian byte order.\n   */\n  input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [OpenAI Whisper transcription](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as rough guidance rather than the representation\n   * understood by the model. The client can optionally set the language and prompt\n   * for transcription, these fields will be passed to the Whisper API.\n   */\n  input_audio_transcription?: SessionCreateParams.InputAudioTranscription;\n\n  /**\n   * The default system instructions (i.e. system message) prepended to model calls.\n   * This field allows the client to guide the model on desired responses. The model\n   * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n   * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n   * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n   * instructions are not guaranteed to be followed by the model, but they provide\n   * guidance to the model on the desired behavior.\n   *\n   * Note that the server sets default instructions which will be used if this field\n   * is not set and are visible in the `session.created` event at the start of the\n   * session.\n   */\n  instructions?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n   * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n   */\n  max_response_output_tokens?: number | 'inf';\n\n  /**\n   * The set of modalities the model can respond with. To disable audio, set this to\n   * [\"text\"].\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The Realtime model used for this session.\n   */\n  model?:\n    | 'gpt-4o-realtime-preview'\n    | 'gpt-4o-realtime-preview-2024-10-01'\n    | 'gpt-4o-realtime-preview-2024-12-17'\n    | 'gpt-4o-mini-realtime-preview'\n    | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   * For `pcm16`, output audio is sampled at a rate of 24kHz.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n   * a function.\n   */\n  tool_choice?: string;\n\n  /**\n   * Tools (functions) available to the model.\n   */\n  tools?: Array<SessionCreateParams.Tool>;\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  turn_detection?: SessionCreateParams.TurnDetection;\n\n  /**\n   * The voice the model uses to respond. Voice cannot be changed during the session\n   * once the model has responded with audio at least once. Current voice options are\n   * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n   */\n  voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n}\n\nexport namespace SessionCreateParams {\n  /**\n   * Configuration for input audio transcription, defaults to off and can be set to\n   * `null` to turn off once on. Input audio transcription is not native to the\n   * model, since the model consumes audio directly. Transcription runs\n   * asynchronously through\n   * [OpenAI Whisper transcription](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n   * and should be treated as rough guidance rather than the representation\n   * understood by the model. The client can optionally set the language and prompt\n   * for transcription, these fields will be passed to the Whisper API.\n   */\n  export interface InputAudioTranscription {\n    /**\n     * The language of the input audio. Supplying the input language in\n     * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n     * format will improve accuracy and latency.\n     */\n    language?: string;\n\n    /**\n     * The model to use for transcription, `whisper-1` is the only currently supported\n     * model.\n     */\n    model?: string;\n\n    /**\n     * An optional text to guide the model's style or continue a previous audio\n     * segment. The\n     * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n     * should match the audio language.\n     */\n    prompt?: string;\n  }\n\n  export interface Tool {\n    /**\n     * The description of the function, including guidance on when and how to call it,\n     * and guidance about what to tell the user when calling (if anything).\n     */\n    description?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * Parameters of the function in JSON Schema.\n     */\n    parameters?: unknown;\n\n    /**\n     * The type of the tool, i.e. `function`.\n     */\n    type?: 'function';\n  }\n\n  /**\n   * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n   * means that the model will detect the start and end of speech based on audio\n   * volume and respond at the end of user speech.\n   */\n  export interface TurnDetection {\n    /**\n     * Whether or not to automatically generate a response when a VAD stop event\n     * occurs. `true` by default.\n     */\n    create_response?: boolean;\n\n    /**\n     * Whether or not to automatically interrupt any ongoing response with output to\n     * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n     * occurs. `true` by default.\n     */\n    interrupt_response?: boolean;\n\n    /**\n     * Amount of audio to include before the VAD detected speech (in milliseconds).\n     * Defaults to 300ms.\n     */\n    prefix_padding_ms?: number;\n\n    /**\n     * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n     * With shorter values the model will respond more quickly, but may jump in on\n     * short pauses from the user.\n     */\n    silence_duration_ms?: number;\n\n    /**\n     * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n     * threshold will require louder audio to activate the model, and thus might\n     * perform better in noisy environments.\n     */\n    threshold?: number;\n\n    /**\n     * Type of turn detection, only `server_vad` is currently supported.\n     */\n    type?: string;\n  }\n}\n\nexport declare namespace Sessions {\n  export {\n    type Session as Session,\n    type SessionCreateResponse as SessionCreateResponse,\n    type SessionCreateParams as SessionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport * as RealtimeAPI from './realtime';\nimport * as Shared from '../../shared';\nimport * as SessionsAPI from './sessions';\nimport {\n  Session as SessionsAPISession,\n  SessionCreateParams,\n  SessionCreateResponse,\n  Sessions,\n} from './sessions';\n\nexport class Realtime extends APIResource {\n  sessions: SessionsAPI.Sessions = new SessionsAPI.Sessions(this._client);\n}\n\n/**\n * Returned when a conversation is created. Emitted right after session creation.\n */\nexport interface ConversationCreatedEvent {\n  /**\n   * The conversation resource.\n   */\n  conversation: ConversationCreatedEvent.Conversation;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `conversation.created`.\n   */\n  type: 'conversation.created';\n}\n\nexport namespace ConversationCreatedEvent {\n  /**\n   * The conversation resource.\n   */\n  export interface Conversation {\n    /**\n     * The unique ID of the conversation.\n     */\n    id?: string;\n\n    /**\n     * The object type, must be `realtime.conversation`.\n     */\n    object?: 'realtime.conversation';\n  }\n}\n\n/**\n * The item to add to the conversation.\n */\nexport interface ConversationItem {\n  /**\n   * The unique ID of the item, this can be generated by the client to help manage\n   * server-side context, but is not required because the server will generate one if\n   * not provided.\n   */\n  id?: string;\n\n  /**\n   * The arguments of the function call (for `function_call` items).\n   */\n  arguments?: string;\n\n  /**\n   * The ID of the function call (for `function_call` and `function_call_output`\n   * items). If passed on a `function_call_output` item, the server will check that a\n   * `function_call` item with the same ID exists in the conversation history.\n   */\n  call_id?: string;\n\n  /**\n   * The content of the message, applicable for `message` items.\n   *\n   * - Message items of role `system` support only `input_text` content\n   * - Message items of role `user` support `input_text` and `input_audio` content\n   * - Message items of role `assistant` support `text` content.\n   */\n  content?: Array<ConversationItemContent>;\n\n  /**\n   * The name of the function being called (for `function_call` items).\n   */\n  name?: string;\n\n  /**\n   * Identifier for the API object being returned - always `realtime.item`.\n   */\n  object?: 'realtime.item';\n\n  /**\n   * The output of the function call (for `function_call_output` items).\n   */\n  output?: string;\n\n  /**\n   * The role of the message sender (`user`, `assistant`, `system`), only applicable\n   * for `message` items.\n   */\n  role?: 'user' | 'assistant' | 'system';\n\n  /**\n   * The status of the item (`completed`, `incomplete`). These have no effect on the\n   * conversation, but are accepted for consistency with the\n   * `conversation.item.created` event.\n   */\n  status?: 'completed' | 'incomplete';\n\n  /**\n   * The type of the item (`message`, `function_call`, `function_call_output`).\n   */\n  type?: 'message' | 'function_call' | 'function_call_output';\n}\n\nexport interface ConversationItemContent {\n  /**\n   * ID of a previous conversation item to reference (for `item_reference` content\n   * types in `response.create` events). These can reference both client and server\n   * created items.\n   */\n  id?: string;\n\n  /**\n   * Base64-encoded audio bytes, used for `input_audio` content type.\n   */\n  audio?: string;\n\n  /**\n   * The text content, used for `input_text` and `text` content types.\n   */\n  text?: string;\n\n  /**\n   * The transcript of the audio, used for `input_audio` content type.\n   */\n  transcript?: string;\n\n  /**\n   * The content type (`input_text`, `input_audio`, `item_reference`, `text`).\n   */\n  type?: 'input_text' | 'input_audio' | 'item_reference' | 'text';\n}\n\n/**\n * Add a new Item to the Conversation's context, including messages, function\n * calls, and function call responses. This event can be used both to populate a\n * \"history\" of the conversation and to add new items mid-stream, but has the\n * current limitation that it cannot populate assistant audio messages.\n *\n * If successful, the server will respond with a `conversation.item.created` event,\n * otherwise an `error` event will be sent.\n */\nexport interface ConversationItemCreateEvent {\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The event type, must be `conversation.item.create`.\n   */\n  type: 'conversation.item.create';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * The ID of the preceding item after which the new item will be inserted. If not\n   * set, the new item will be appended to the end of the conversation. If set to\n   * `root`, the new item will be added to the beginning of the conversation. If set\n   * to an existing ID, it allows an item to be inserted mid-conversation. If the ID\n   * cannot be found, an error will be returned and the item will not be added.\n   */\n  previous_item_id?: string;\n}\n\n/**\n * Returned when a conversation item is created. There are several scenarios that\n * produce this event:\n *\n * - The server is generating a Response, which if successful will produce either\n *   one or two Items, which will be of type `message` (role `assistant`) or type\n *   `function_call`.\n * - The input audio buffer has been committed, either by the client or the server\n *   (in `server_vad` mode). The server will take the content of the input audio\n *   buffer and add it to a new user message Item.\n * - The client has sent a `conversation.item.create` event to add a new Item to\n *   the Conversation.\n */\nexport interface ConversationItemCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The ID of the preceding item in the Conversation context, allows the client to\n   * understand the order of the conversation.\n   */\n  previous_item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.created`.\n   */\n  type: 'conversation.item.created';\n}\n\n/**\n * Send this event when you want to remove any item from the conversation history.\n * The server will respond with a `conversation.item.deleted` event, unless the\n * item does not exist in the conversation history, in which case the server will\n * respond with an error.\n */\nexport interface ConversationItemDeleteEvent {\n  /**\n   * The ID of the item to delete.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.delete`.\n   */\n  type: 'conversation.item.delete';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an item in the conversation is deleted by the client with a\n * `conversation.item.delete` event. This event is used to synchronize the server's\n * understanding of the conversation history with the client's view.\n */\nexport interface ConversationItemDeletedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item that was deleted.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.deleted`.\n   */\n  type: 'conversation.item.deleted';\n}\n\n/**\n * This event is the output of audio transcription for user audio written to the\n * user audio buffer. Transcription begins when the input audio buffer is committed\n * by the client or server (in `server_vad` mode). Transcription runs\n * asynchronously with Response creation, so this event may come before or after\n * the Response events.\n *\n * Realtime API models accept audio natively, and thus input transcription is a\n * separate process run on a separate ASR (Automatic Speech Recognition) model,\n * currently always `whisper-1`. Thus the transcript may diverge somewhat from the\n * model's interpretation, and should be treated as a rough guide.\n */\nexport interface ConversationItemInputAudioTranscriptionCompletedEvent {\n  /**\n   * The index of the content part containing the audio.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item containing the audio.\n   */\n  item_id: string;\n\n  /**\n   * The transcribed text.\n   */\n  transcript: string;\n\n  /**\n   * The event type, must be `conversation.item.input_audio_transcription.completed`.\n   */\n  type: 'conversation.item.input_audio_transcription.completed';\n}\n\n/**\n * Returned when input audio transcription is configured, and a transcription\n * request for a user message failed. These events are separate from other `error`\n * events so that the client can identify the related Item.\n */\nexport interface ConversationItemInputAudioTranscriptionFailedEvent {\n  /**\n   * The index of the content part containing the audio.\n   */\n  content_index: number;\n\n  /**\n   * Details of the transcription error.\n   */\n  error: ConversationItemInputAudioTranscriptionFailedEvent.Error;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.input_audio_transcription.failed`.\n   */\n  type: 'conversation.item.input_audio_transcription.failed';\n}\n\nexport namespace ConversationItemInputAudioTranscriptionFailedEvent {\n  /**\n   * Details of the transcription error.\n   */\n  export interface Error {\n    /**\n     * Error code, if any.\n     */\n    code?: string;\n\n    /**\n     * A human-readable error message.\n     */\n    message?: string;\n\n    /**\n     * Parameter related to the error, if any.\n     */\n    param?: string;\n\n    /**\n     * The type of error.\n     */\n    type?: string;\n  }\n}\n\n/**\n * Send this event to truncate a previous assistant message’s audio. The server\n * will produce audio faster than realtime, so this event is useful when the user\n * interrupts to truncate audio that has already been sent to the client but not\n * yet played. This will synchronize the server's understanding of the audio with\n * the client's playback.\n *\n * Truncating audio will delete the server-side text transcript to ensure there is\n * not text in the context that hasn't been heard by the user.\n *\n * If successful, the server will respond with a `conversation.item.truncated`\n * event.\n */\nexport interface ConversationItemTruncateEvent {\n  /**\n   * Inclusive duration up to which audio is truncated, in milliseconds. If the\n   * audio_end_ms is greater than the actual audio duration, the server will respond\n   * with an error.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The index of the content part to truncate. Set this to 0.\n   */\n  content_index: number;\n\n  /**\n   * The ID of the assistant message item to truncate. Only assistant message items\n   * can be truncated.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.truncate`.\n   */\n  type: 'conversation.item.truncate';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an earlier assistant audio message item is truncated by the client\n * with a `conversation.item.truncate` event. This event is used to synchronize the\n * server's understanding of the audio with the client's playback.\n *\n * This action will truncate the audio and remove the server-side text transcript\n * to ensure there is no text in the context that hasn't been heard by the user.\n */\nexport interface ConversationItemTruncatedEvent {\n  /**\n   * The duration up to which the audio was truncated, in milliseconds.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The index of the content part that was truncated.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the assistant message item that was truncated.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `conversation.item.truncated`.\n   */\n  type: 'conversation.item.truncated';\n}\n\n/**\n * The item to add to the conversation.\n */\nexport interface ConversationItemWithReference {\n  /**\n   * For an item of type (`message` | `function_call` | `function_call_output`) this\n   * field allows the client to assign the unique ID of the item. It is not required\n   * because the server will generate one if not provided.\n   *\n   * For an item of type `item_reference`, this field is required and is a reference\n   * to any item that has previously existed in the conversation.\n   */\n  id?: string;\n\n  /**\n   * The arguments of the function call (for `function_call` items).\n   */\n  arguments?: string;\n\n  /**\n   * The ID of the function call (for `function_call` and `function_call_output`\n   * items). If passed on a `function_call_output` item, the server will check that a\n   * `function_call` item with the same ID exists in the conversation history.\n   */\n  call_id?: string;\n\n  /**\n   * The content of the message, applicable for `message` items.\n   *\n   * - Message items of role `system` support only `input_text` content\n   * - Message items of role `user` support `input_text` and `input_audio` content\n   * - Message items of role `assistant` support `text` content.\n   */\n  content?: Array<ConversationItemContent>;\n\n  /**\n   * The name of the function being called (for `function_call` items).\n   */\n  name?: string;\n\n  /**\n   * Identifier for the API object being returned - always `realtime.item`.\n   */\n  object?: 'realtime.item';\n\n  /**\n   * The output of the function call (for `function_call_output` items).\n   */\n  output?: string;\n\n  /**\n   * The role of the message sender (`user`, `assistant`, `system`), only applicable\n   * for `message` items.\n   */\n  role?: 'user' | 'assistant' | 'system';\n\n  /**\n   * The status of the item (`completed`, `incomplete`). These have no effect on the\n   * conversation, but are accepted for consistency with the\n   * `conversation.item.created` event.\n   */\n  status?: 'completed' | 'incomplete';\n\n  /**\n   * The type of the item (`message`, `function_call`, `function_call_output`,\n   * `item_reference`).\n   */\n  type?: 'message' | 'function_call' | 'function_call_output' | 'item_reference';\n}\n\n/**\n * Returned when an error occurs, which could be a client problem or a server\n * problem. Most errors are recoverable and the session will stay open, we\n * recommend to implementors to monitor and log error messages by default.\n */\nexport interface ErrorEvent {\n  /**\n   * Details of the error.\n   */\n  error: ErrorEvent.Error;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `error`.\n   */\n  type: 'error';\n}\n\nexport namespace ErrorEvent {\n  /**\n   * Details of the error.\n   */\n  export interface Error {\n    /**\n     * A human-readable error message.\n     */\n    message: string;\n\n    /**\n     * The type of error (e.g., \"invalid_request_error\", \"server_error\").\n     */\n    type: string;\n\n    /**\n     * Error code, if any.\n     */\n    code?: string | null;\n\n    /**\n     * The event_id of the client event that caused the error, if applicable.\n     */\n    event_id?: string | null;\n\n    /**\n     * Parameter related to the error, if any.\n     */\n    param?: string | null;\n  }\n}\n\n/**\n * Send this event to append audio bytes to the input audio buffer. The audio\n * buffer is temporary storage you can write to and later commit. In Server VAD\n * mode, the audio buffer is used to detect speech and the server will decide when\n * to commit. When Server VAD is disabled, you must commit the audio buffer\n * manually.\n *\n * The client may choose how much audio to place in each event up to a maximum of\n * 15 MiB, for example streaming smaller chunks from the client may allow the VAD\n * to be more responsive. Unlike made other client events, the server will not send\n * a confirmation response to this event.\n */\nexport interface InputAudioBufferAppendEvent {\n  /**\n   * Base64-encoded audio bytes. This must be in the format specified by the\n   * `input_audio_format` field in the session configuration.\n   */\n  audio: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.append`.\n   */\n  type: 'input_audio_buffer.append';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Send this event to clear the audio bytes in the buffer. The server will respond\n * with an `input_audio_buffer.cleared` event.\n */\nexport interface InputAudioBufferClearEvent {\n  /**\n   * The event type, must be `input_audio_buffer.clear`.\n   */\n  type: 'input_audio_buffer.clear';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when the input audio buffer is cleared by the client with a\n * `input_audio_buffer.clear` event.\n */\nexport interface InputAudioBufferClearedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.cleared`.\n   */\n  type: 'input_audio_buffer.cleared';\n}\n\n/**\n * Send this event to commit the user input audio buffer, which will create a new\n * user message item in the conversation. This event will produce an error if the\n * input audio buffer is empty. When in Server VAD mode, the client does not need\n * to send this event, the server will commit the audio buffer automatically.\n *\n * Committing the input audio buffer will trigger input audio transcription (if\n * enabled in session configuration), but it will not create a response from the\n * model. The server will respond with an `input_audio_buffer.committed` event.\n */\nexport interface InputAudioBufferCommitEvent {\n  /**\n   * The event type, must be `input_audio_buffer.commit`.\n   */\n  type: 'input_audio_buffer.commit';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\n/**\n * Returned when an input audio buffer is committed, either by the client or\n * automatically in server VAD mode. The `item_id` property is the ID of the user\n * message item that will be created, thus a `conversation.item.created` event will\n * also be sent to the client.\n */\nexport interface InputAudioBufferCommittedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created.\n   */\n  item_id: string;\n\n  /**\n   * The ID of the preceding item after which the new item will be inserted.\n   */\n  previous_item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.committed`.\n   */\n  type: 'input_audio_buffer.committed';\n}\n\n/**\n * Sent by the server when in `server_vad` mode to indicate that speech has been\n * detected in the audio buffer. This can happen any time audio is added to the\n * buffer (unless speech is already detected). The client may want to use this\n * event to interrupt audio playback or provide visual feedback to the user.\n *\n * The client should expect to receive a `input_audio_buffer.speech_stopped` event\n * when speech stops. The `item_id` property is the ID of the user message item\n * that will be created when speech stops and will also be included in the\n * `input_audio_buffer.speech_stopped` event (unless the client manually commits\n * the audio buffer during VAD activation).\n */\nexport interface InputAudioBufferSpeechStartedEvent {\n  /**\n   * Milliseconds from the start of all audio written to the buffer during the\n   * session when speech was first detected. This will correspond to the beginning of\n   * audio sent to the model, and thus includes the `prefix_padding_ms` configured in\n   * the Session.\n   */\n  audio_start_ms: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created when speech stops.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.speech_started`.\n   */\n  type: 'input_audio_buffer.speech_started';\n}\n\n/**\n * Returned in `server_vad` mode when the server detects the end of speech in the\n * audio buffer. The server will also send an `conversation.item.created` event\n * with the user message item that is created from the audio buffer.\n */\nexport interface InputAudioBufferSpeechStoppedEvent {\n  /**\n   * Milliseconds since the session started when speech stopped. This will correspond\n   * to the end of audio sent to the model, and thus includes the\n   * `min_silence_duration_ms` configured in the Session.\n   */\n  audio_end_ms: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the user message item that will be created.\n   */\n  item_id: string;\n\n  /**\n   * The event type, must be `input_audio_buffer.speech_stopped`.\n   */\n  type: 'input_audio_buffer.speech_stopped';\n}\n\n/**\n * Emitted at the beginning of a Response to indicate the updated rate limits. When\n * a Response is created some tokens will be \"reserved\" for the output tokens, the\n * rate limits shown here reflect that reservation, which is then adjusted\n * accordingly once the Response is completed.\n */\nexport interface RateLimitsUpdatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * List of rate limit information.\n   */\n  rate_limits: Array<RateLimitsUpdatedEvent.RateLimit>;\n\n  /**\n   * The event type, must be `rate_limits.updated`.\n   */\n  type: 'rate_limits.updated';\n}\n\nexport namespace RateLimitsUpdatedEvent {\n  export interface RateLimit {\n    /**\n     * The maximum allowed value for the rate limit.\n     */\n    limit?: number;\n\n    /**\n     * The name of the rate limit (`requests`, `tokens`).\n     */\n    name?: 'requests' | 'tokens';\n\n    /**\n     * The remaining value before the limit is reached.\n     */\n    remaining?: number;\n\n    /**\n     * Seconds until the rate limit resets.\n     */\n    reset_seconds?: number;\n  }\n}\n\n/**\n * All events that the client can send to the Realtime API\n */\nexport type RealtimeClientEvent =\n  | SessionUpdateEvent\n  | InputAudioBufferAppendEvent\n  | InputAudioBufferCommitEvent\n  | InputAudioBufferClearEvent\n  | ConversationItemCreateEvent\n  | ConversationItemTruncateEvent\n  | ConversationItemDeleteEvent\n  | ResponseCreateEvent\n  | ResponseCancelEvent;\n\n/**\n * The response resource.\n */\nexport interface RealtimeResponse {\n  /**\n   * The unique ID of the response.\n   */\n  id?: string;\n\n  /**\n   * Which conversation the response is added to, determined by the `conversation`\n   * field in the `response.create` event. If `auto`, the response will be added to\n   * the default conversation and the value of `conversation_id` will be an id like\n   * `conv_1234`. If `none`, the response will not be added to any conversation and\n   * the value of `conversation_id` will be `null`. If responses are being triggered\n   * by server VAD, the response will be added to the default conversation, thus the\n   * `conversation_id` will be an id like `conv_1234`.\n   */\n  conversation_id?: string;\n\n  /**\n   * Maximum number of output tokens for a single assistant response, inclusive of\n   * tool calls, that was used in this response.\n   */\n  max_output_tokens?: number | 'inf';\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The set of modalities the model used to respond. If there are multiple\n   * modalities, the model will pick one, for example if `modalities` is\n   * `[\"text\", \"audio\"]`, the model could be responding in either text or audio.\n   */\n  modalities?: Array<'text' | 'audio'>;\n\n  /**\n   * The object type, must be `realtime.response`.\n   */\n  object?: 'realtime.response';\n\n  /**\n   * The list of output items generated by the response.\n   */\n  output?: Array<ConversationItem>;\n\n  /**\n   * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n   */\n  output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n  /**\n   * The final status of the response (`completed`, `cancelled`, `failed`, or\n   * `incomplete`).\n   */\n  status?: 'completed' | 'cancelled' | 'failed' | 'incomplete';\n\n  /**\n   * Additional details about the status.\n   */\n  status_details?: RealtimeResponseStatus;\n\n  /**\n   * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n   */\n  temperature?: number;\n\n  /**\n   * Usage statistics for the Response, this will correspond to billing. A Realtime\n   * API session will maintain a conversation context and append new Items to the\n   * Conversation, thus output from previous turns (text and audio tokens) will\n   * become the input for later turns.\n   */\n  usage?: RealtimeResponseUsage;\n\n  /**\n   * The voice the model used to respond. Current voice options are `alloy`, `ash`,\n   * `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n   */\n  voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n}\n\n/**\n * Additional details about the status.\n */\nexport interface RealtimeResponseStatus {\n  /**\n   * A description of the error that caused the response to fail, populated when the\n   * `status` is `failed`.\n   */\n  error?: RealtimeResponseStatus.Error;\n\n  /**\n   * The reason the Response did not complete. For a `cancelled` Response, one of\n   * `turn_detected` (the server VAD detected a new start of speech) or\n   * `client_cancelled` (the client sent a cancel event). For an `incomplete`\n   * Response, one of `max_output_tokens` or `content_filter` (the server-side safety\n   * filter activated and cut off the response).\n   */\n  reason?: 'turn_detected' | 'client_cancelled' | 'max_output_tokens' | 'content_filter';\n\n  /**\n   * The type of error that caused the response to fail, corresponding with the\n   * `status` field (`completed`, `cancelled`, `incomplete`, `failed`).\n   */\n  type?: 'completed' | 'cancelled' | 'incomplete' | 'failed';\n}\n\nexport namespace RealtimeResponseStatus {\n  /**\n   * A description of the error that caused the response to fail, populated when the\n   * `status` is `failed`.\n   */\n  export interface Error {\n    /**\n     * Error code, if any.\n     */\n    code?: string;\n\n    /**\n     * The type of error.\n     */\n    type?: string;\n  }\n}\n\n/**\n * Usage statistics for the Response, this will correspond to billing. A Realtime\n * API session will maintain a conversation context and append new Items to the\n * Conversation, thus output from previous turns (text and audio tokens) will\n * become the input for later turns.\n */\nexport interface RealtimeResponseUsage {\n  /**\n   * Details about the input tokens used in the Response.\n   */\n  input_token_details?: RealtimeResponseUsage.InputTokenDetails;\n\n  /**\n   * The number of input tokens used in the Response, including text and audio\n   * tokens.\n   */\n  input_tokens?: number;\n\n  /**\n   * Details about the output tokens used in the Response.\n   */\n  output_token_details?: RealtimeResponseUsage.OutputTokenDetails;\n\n  /**\n   * The number of output tokens sent in the Response, including text and audio\n   * tokens.\n   */\n  output_tokens?: number;\n\n  /**\n   * The total number of tokens in the Response including input and output text and\n   * audio tokens.\n   */\n  total_tokens?: number;\n}\n\nexport namespace RealtimeResponseUsage {\n  /**\n   * Details about the input tokens used in the Response.\n   */\n  export interface InputTokenDetails {\n    /**\n     * The number of audio tokens used in the Response.\n     */\n    audio_tokens?: number;\n\n    /**\n     * The number of cached tokens used in the Response.\n     */\n    cached_tokens?: number;\n\n    /**\n     * The number of text tokens used in the Response.\n     */\n    text_tokens?: number;\n  }\n\n  /**\n   * Details about the output tokens used in the Response.\n   */\n  export interface OutputTokenDetails {\n    /**\n     * The number of audio tokens used in the Response.\n     */\n    audio_tokens?: number;\n\n    /**\n     * The number of text tokens used in the Response.\n     */\n    text_tokens?: number;\n  }\n}\n\n/**\n * All events that the Realtime API can send back\n */\nexport type RealtimeServerEvent =\n  | ErrorEvent\n  | SessionCreatedEvent\n  | SessionUpdatedEvent\n  | ConversationCreatedEvent\n  | InputAudioBufferCommittedEvent\n  | InputAudioBufferClearedEvent\n  | InputAudioBufferSpeechStartedEvent\n  | InputAudioBufferSpeechStoppedEvent\n  | ConversationItemCreatedEvent\n  | ConversationItemInputAudioTranscriptionCompletedEvent\n  | ConversationItemInputAudioTranscriptionFailedEvent\n  | ConversationItemTruncatedEvent\n  | ConversationItemDeletedEvent\n  | ResponseCreatedEvent\n  | ResponseDoneEvent\n  | ResponseOutputItemAddedEvent\n  | ResponseOutputItemDoneEvent\n  | ResponseContentPartAddedEvent\n  | ResponseContentPartDoneEvent\n  | ResponseTextDeltaEvent\n  | ResponseTextDoneEvent\n  | ResponseAudioTranscriptDeltaEvent\n  | ResponseAudioTranscriptDoneEvent\n  | ResponseAudioDeltaEvent\n  | ResponseAudioDoneEvent\n  | ResponseFunctionCallArgumentsDeltaEvent\n  | ResponseFunctionCallArgumentsDoneEvent\n  | RateLimitsUpdatedEvent;\n\n/**\n * Returned when the model-generated audio is updated.\n */\nexport interface ResponseAudioDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * Base64-encoded audio data delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio.delta`.\n   */\n  type: 'response.audio.delta';\n}\n\n/**\n * Returned when the model-generated audio is done. Also emitted when a Response is\n * interrupted, incomplete, or cancelled.\n */\nexport interface ResponseAudioDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio.done`.\n   */\n  type: 'response.audio.done';\n}\n\n/**\n * Returned when the model-generated transcription of audio output is updated.\n */\nexport interface ResponseAudioTranscriptDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The transcript delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.audio_transcript.delta`.\n   */\n  type: 'response.audio_transcript.delta';\n}\n\n/**\n * Returned when the model-generated transcription of audio output is done\n * streaming. Also emitted when a Response is interrupted, incomplete, or\n * cancelled.\n */\nexport interface ResponseAudioTranscriptDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The final transcript of the audio.\n   */\n  transcript: string;\n\n  /**\n   * The event type, must be `response.audio_transcript.done`.\n   */\n  type: 'response.audio_transcript.done';\n}\n\n/**\n * Send this event to cancel an in-progress response. The server will respond with\n * a `response.cancelled` event or an error if there is no response to cancel.\n */\nexport interface ResponseCancelEvent {\n  /**\n   * The event type, must be `response.cancel`.\n   */\n  type: 'response.cancel';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * A specific response ID to cancel - if not provided, will cancel an in-progress\n   * response in the default conversation.\n   */\n  response_id?: string;\n}\n\n/**\n * Returned when a new content part is added to an assistant message item during\n * response generation.\n */\nexport interface ResponseContentPartAddedEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item to which the content part was added.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The content part that was added.\n   */\n  part: ResponseContentPartAddedEvent.Part;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.content_part.added`.\n   */\n  type: 'response.content_part.added';\n}\n\nexport namespace ResponseContentPartAddedEvent {\n  /**\n   * The content part that was added.\n   */\n  export interface Part {\n    /**\n     * Base64-encoded audio data (if type is \"audio\").\n     */\n    audio?: string;\n\n    /**\n     * The text content (if type is \"text\").\n     */\n    text?: string;\n\n    /**\n     * The transcript of the audio (if type is \"audio\").\n     */\n    transcript?: string;\n\n    /**\n     * The content type (\"text\", \"audio\").\n     */\n    type?: 'text' | 'audio';\n  }\n}\n\n/**\n * Returned when a content part is done streaming in an assistant message item.\n * Also emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseContentPartDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The content part that is done.\n   */\n  part: ResponseContentPartDoneEvent.Part;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.content_part.done`.\n   */\n  type: 'response.content_part.done';\n}\n\nexport namespace ResponseContentPartDoneEvent {\n  /**\n   * The content part that is done.\n   */\n  export interface Part {\n    /**\n     * Base64-encoded audio data (if type is \"audio\").\n     */\n    audio?: string;\n\n    /**\n     * The text content (if type is \"text\").\n     */\n    text?: string;\n\n    /**\n     * The transcript of the audio (if type is \"audio\").\n     */\n    transcript?: string;\n\n    /**\n     * The content type (\"text\", \"audio\").\n     */\n    type?: 'text' | 'audio';\n  }\n}\n\n/**\n * This event instructs the server to create a Response, which means triggering\n * model inference. When in Server VAD mode, the server will create Responses\n * automatically.\n *\n * A Response will include at least one Item, and may have two, in which case the\n * second will be a function call. These Items will be appended to the conversation\n * history.\n *\n * The server will respond with a `response.created` event, events for Items and\n * content created, and finally a `response.done` event to indicate the Response is\n * complete.\n *\n * The `response.create` event includes inference configuration like\n * `instructions`, and `temperature`. These fields will override the Session's\n * configuration for this Response only.\n */\nexport interface ResponseCreateEvent {\n  /**\n   * The event type, must be `response.create`.\n   */\n  type: 'response.create';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n\n  /**\n   * Create a new Realtime response with these parameters\n   */\n  response?: ResponseCreateEvent.Response;\n}\n\nexport namespace ResponseCreateEvent {\n  /**\n   * Create a new Realtime response with these parameters\n   */\n  export interface Response {\n    /**\n     * Controls which conversation the response is added to. Currently supports `auto`\n     * and `none`, with `auto` as the default value. The `auto` value means that the\n     * contents of the response will be added to the default conversation. Set this to\n     * `none` to create an out-of-band response which will not add items to default\n     * conversation.\n     */\n    conversation?: (string & {}) | 'auto' | 'none';\n\n    /**\n     * Input items to include in the prompt for the model. Using this field creates a\n     * new context for this Response instead of using the default conversation. An\n     * empty array `[]` will clear the context for this Response. Note that this can\n     * include references to items from the default conversation.\n     */\n    input?: Array<RealtimeAPI.ConversationItemWithReference>;\n\n    /**\n     * The default system instructions (i.e. system message) prepended to model calls.\n     * This field allows the client to guide the model on desired responses. The model\n     * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n     * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n     * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n     * instructions are not guaranteed to be followed by the model, but they provide\n     * guidance to the model on the desired behavior.\n     *\n     * Note that the server sets default instructions which will be used if this field\n     * is not set and are visible in the `session.created` event at the start of the\n     * session.\n     */\n    instructions?: string;\n\n    /**\n     * Maximum number of output tokens for a single assistant response, inclusive of\n     * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n     * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n     */\n    max_response_output_tokens?: number | 'inf';\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n\n    /**\n     * The set of modalities the model can respond with. To disable audio, set this to\n     * [\"text\"].\n     */\n    modalities?: Array<'text' | 'audio'>;\n\n    /**\n     * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n     */\n    output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n     */\n    temperature?: number;\n\n    /**\n     * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n     * a function, like `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}`.\n     */\n    tool_choice?: string;\n\n    /**\n     * Tools (functions) available to the model.\n     */\n    tools?: Array<Response.Tool>;\n\n    /**\n     * The voice the model uses to respond. Voice cannot be changed during the session\n     * once the model has responded with audio at least once. Current voice options are\n     * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n     */\n    voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n  }\n\n  export namespace Response {\n    export interface Tool {\n      /**\n       * The description of the function, including guidance on when and how to call it,\n       * and guidance about what to tell the user when calling (if anything).\n       */\n      description?: string;\n\n      /**\n       * The name of the function.\n       */\n      name?: string;\n\n      /**\n       * Parameters of the function in JSON Schema.\n       */\n      parameters?: unknown;\n\n      /**\n       * The type of the tool, i.e. `function`.\n       */\n      type?: 'function';\n    }\n  }\n}\n\n/**\n * Returned when a new Response is created. The first event of response creation,\n * where the response is in an initial state of `in_progress`.\n */\nexport interface ResponseCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The response resource.\n   */\n  response: RealtimeResponse;\n\n  /**\n   * The event type, must be `response.created`.\n   */\n  type: 'response.created';\n}\n\n/**\n * Returned when a Response is done streaming. Always emitted, no matter the final\n * state. The Response object included in the `response.done` event will include\n * all output Items in the Response but will omit the raw audio data.\n */\nexport interface ResponseDoneEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The response resource.\n   */\n  response: RealtimeResponse;\n\n  /**\n   * The event type, must be `response.done`.\n   */\n  type: 'response.done';\n}\n\n/**\n * Returned when the model-generated function call arguments are updated.\n */\nexport interface ResponseFunctionCallArgumentsDeltaEvent {\n  /**\n   * The ID of the function call.\n   */\n  call_id: string;\n\n  /**\n   * The arguments delta as a JSON string.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the function call item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.function_call_arguments.delta`.\n   */\n  type: 'response.function_call_arguments.delta';\n}\n\n/**\n * Returned when the model-generated function call arguments are done streaming.\n * Also emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseFunctionCallArgumentsDoneEvent {\n  /**\n   * The final arguments as a JSON string.\n   */\n  arguments: string;\n\n  /**\n   * The ID of the function call.\n   */\n  call_id: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the function call item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.function_call_arguments.done`.\n   */\n  type: 'response.function_call_arguments.done';\n}\n\n/**\n * Returned when a new Item is created during Response generation.\n */\nexport interface ResponseOutputItemAddedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The index of the output item in the Response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the Response to which the item belongs.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.output_item.added`.\n   */\n  type: 'response.output_item.added';\n}\n\n/**\n * Returned when an Item is done streaming. Also emitted when a Response is\n * interrupted, incomplete, or cancelled.\n */\nexport interface ResponseOutputItemDoneEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The item to add to the conversation.\n   */\n  item: ConversationItem;\n\n  /**\n   * The index of the output item in the Response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the Response to which the item belongs.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.output_item.done`.\n   */\n  type: 'response.output_item.done';\n}\n\n/**\n * Returned when the text value of a \"text\" content part is updated.\n */\nexport interface ResponseTextDeltaEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The text delta.\n   */\n  delta: string;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The event type, must be `response.text.delta`.\n   */\n  type: 'response.text.delta';\n}\n\n/**\n * Returned when the text value of a \"text\" content part is done streaming. Also\n * emitted when a Response is interrupted, incomplete, or cancelled.\n */\nexport interface ResponseTextDoneEvent {\n  /**\n   * The index of the content part in the item's content array.\n   */\n  content_index: number;\n\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * The ID of the item.\n   */\n  item_id: string;\n\n  /**\n   * The index of the output item in the response.\n   */\n  output_index: number;\n\n  /**\n   * The ID of the response.\n   */\n  response_id: string;\n\n  /**\n   * The final text content.\n   */\n  text: string;\n\n  /**\n   * The event type, must be `response.text.done`.\n   */\n  type: 'response.text.done';\n}\n\n/**\n * Returned when a Session is created. Emitted automatically when a new connection\n * is established as the first server event. This event will contain the default\n * Session configuration.\n */\nexport interface SessionCreatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionsAPI.Session;\n\n  /**\n   * The event type, must be `session.created`.\n   */\n  type: 'session.created';\n}\n\n/**\n * Send this event to update the session’s default configuration. The client may\n * send this event at any time to update any field, except for `voice`. However,\n * note that once a session has been initialized with a particular `model`, it\n * can’t be changed to another model using `session.update`.\n *\n * When the server receives a `session.update`, it will respond with a\n * `session.updated` event showing the full, effective configuration. Only the\n * fields that are present are updated. To clear a field like `instructions`, pass\n * an empty string.\n */\nexport interface SessionUpdateEvent {\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionUpdateEvent.Session;\n\n  /**\n   * The event type, must be `session.update`.\n   */\n  type: 'session.update';\n\n  /**\n   * Optional client-generated ID used to identify this event.\n   */\n  event_id?: string;\n}\n\nexport namespace SessionUpdateEvent {\n  /**\n   * Realtime session object configuration.\n   */\n  export interface Session {\n    /**\n     * The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For\n     * `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel\n     * (mono), and little-endian byte order.\n     */\n    input_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Configuration for input audio transcription, defaults to off and can be set to\n     * `null` to turn off once on. Input audio transcription is not native to the\n     * model, since the model consumes audio directly. Transcription runs\n     * asynchronously through\n     * [OpenAI Whisper transcription](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n     * and should be treated as rough guidance rather than the representation\n     * understood by the model. The client can optionally set the language and prompt\n     * for transcription, these fields will be passed to the Whisper API.\n     */\n    input_audio_transcription?: Session.InputAudioTranscription;\n\n    /**\n     * The default system instructions (i.e. system message) prepended to model calls.\n     * This field allows the client to guide the model on desired responses. The model\n     * can be instructed on response content and format, (e.g. \"be extremely succinct\",\n     * \"act friendly\", \"here are examples of good responses\") and on audio behavior\n     * (e.g. \"talk quickly\", \"inject emotion into your voice\", \"laugh frequently\"). The\n     * instructions are not guaranteed to be followed by the model, but they provide\n     * guidance to the model on the desired behavior.\n     *\n     * Note that the server sets default instructions which will be used if this field\n     * is not set and are visible in the `session.created` event at the start of the\n     * session.\n     */\n    instructions?: string;\n\n    /**\n     * Maximum number of output tokens for a single assistant response, inclusive of\n     * tool calls. Provide an integer between 1 and 4096 to limit output tokens, or\n     * `inf` for the maximum available tokens for a given model. Defaults to `inf`.\n     */\n    max_response_output_tokens?: number | 'inf';\n\n    /**\n     * The set of modalities the model can respond with. To disable audio, set this to\n     * [\"text\"].\n     */\n    modalities?: Array<'text' | 'audio'>;\n\n    /**\n     * The Realtime model used for this session.\n     */\n    model?:\n      | 'gpt-4o-realtime-preview'\n      | 'gpt-4o-realtime-preview-2024-10-01'\n      | 'gpt-4o-realtime-preview-2024-12-17'\n      | 'gpt-4o-mini-realtime-preview'\n      | 'gpt-4o-mini-realtime-preview-2024-12-17';\n\n    /**\n     * The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.\n     * For `pcm16`, output audio is sampled at a rate of 24kHz.\n     */\n    output_audio_format?: 'pcm16' | 'g711_ulaw' | 'g711_alaw';\n\n    /**\n     * Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.\n     */\n    temperature?: number;\n\n    /**\n     * How the model chooses tools. Options are `auto`, `none`, `required`, or specify\n     * a function.\n     */\n    tool_choice?: string;\n\n    /**\n     * Tools (functions) available to the model.\n     */\n    tools?: Array<Session.Tool>;\n\n    /**\n     * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n     * means that the model will detect the start and end of speech based on audio\n     * volume and respond at the end of user speech.\n     */\n    turn_detection?: Session.TurnDetection;\n\n    /**\n     * The voice the model uses to respond. Voice cannot be changed during the session\n     * once the model has responded with audio at least once. Current voice options are\n     * `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`, `shimmer` and `verse`.\n     */\n    voice?: 'alloy' | 'ash' | 'ballad' | 'coral' | 'echo' | 'sage' | 'shimmer' | 'verse';\n  }\n\n  export namespace Session {\n    /**\n     * Configuration for input audio transcription, defaults to off and can be set to\n     * `null` to turn off once on. Input audio transcription is not native to the\n     * model, since the model consumes audio directly. Transcription runs\n     * asynchronously through\n     * [OpenAI Whisper transcription](https://platform.openai.com/docs/api-reference/audio/createTranscription)\n     * and should be treated as rough guidance rather than the representation\n     * understood by the model. The client can optionally set the language and prompt\n     * for transcription, these fields will be passed to the Whisper API.\n     */\n    export interface InputAudioTranscription {\n      /**\n       * The language of the input audio. Supplying the input language in\n       * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`)\n       * format will improve accuracy and latency.\n       */\n      language?: string;\n\n      /**\n       * The model to use for transcription, `whisper-1` is the only currently supported\n       * model.\n       */\n      model?: string;\n\n      /**\n       * An optional text to guide the model's style or continue a previous audio\n       * segment. The\n       * [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting)\n       * should match the audio language.\n       */\n      prompt?: string;\n    }\n\n    export interface Tool {\n      /**\n       * The description of the function, including guidance on when and how to call it,\n       * and guidance about what to tell the user when calling (if anything).\n       */\n      description?: string;\n\n      /**\n       * The name of the function.\n       */\n      name?: string;\n\n      /**\n       * Parameters of the function in JSON Schema.\n       */\n      parameters?: unknown;\n\n      /**\n       * The type of the tool, i.e. `function`.\n       */\n      type?: 'function';\n    }\n\n    /**\n     * Configuration for turn detection. Can be set to `null` to turn off. Server VAD\n     * means that the model will detect the start and end of speech based on audio\n     * volume and respond at the end of user speech.\n     */\n    export interface TurnDetection {\n      /**\n       * Whether or not to automatically generate a response when a VAD stop event\n       * occurs. `true` by default.\n       */\n      create_response?: boolean;\n\n      /**\n       * Whether or not to automatically interrupt any ongoing response with output to\n       * the default conversation (i.e. `conversation` of `auto`) when a VAD start event\n       * occurs. `true` by default.\n       */\n      interrupt_response?: boolean;\n\n      /**\n       * Amount of audio to include before the VAD detected speech (in milliseconds).\n       * Defaults to 300ms.\n       */\n      prefix_padding_ms?: number;\n\n      /**\n       * Duration of silence to detect speech stop (in milliseconds). Defaults to 500ms.\n       * With shorter values the model will respond more quickly, but may jump in on\n       * short pauses from the user.\n       */\n      silence_duration_ms?: number;\n\n      /**\n       * Activation threshold for VAD (0.0 to 1.0), this defaults to 0.5. A higher\n       * threshold will require louder audio to activate the model, and thus might\n       * perform better in noisy environments.\n       */\n      threshold?: number;\n\n      /**\n       * Type of turn detection, only `server_vad` is currently supported.\n       */\n      type?: string;\n    }\n  }\n}\n\n/**\n * Returned when a session is updated with a `session.update` event, unless there\n * is an error.\n */\nexport interface SessionUpdatedEvent {\n  /**\n   * The unique ID of the server event.\n   */\n  event_id: string;\n\n  /**\n   * Realtime session object configuration.\n   */\n  session: SessionsAPI.Session;\n\n  /**\n   * The event type, must be `session.updated`.\n   */\n  type: 'session.updated';\n}\n\nRealtime.Sessions = Sessions;\n\nexport declare namespace Realtime {\n  export {\n    Sessions as Sessions,\n    type SessionsAPISession as Session,\n    type SessionCreateResponse as SessionCreateResponse,\n    type SessionCreateParams as SessionCreateParams,\n  };\n}\n","import {\n  TextContentBlock,\n  ImageFileContentBlock,\n  Message,\n  MessageContentDelta,\n  Text,\n  ImageFile,\n  TextDelta,\n  MessageDelta,\n  MessageContent,\n} from '../resources/beta/threads/messages';\nimport * as Core from '../core';\nimport { RequestOptions } from '../core';\nimport {\n  Run,\n  RunCreateParamsBase,\n  RunCreateParamsStreaming,\n  Runs,\n  RunSubmitToolOutputsParamsBase,\n  RunSubmitToolOutputsParamsStreaming,\n} from '../resources/beta/threads/runs/runs';\nimport { type ReadableStream } from '../_shims/index';\nimport { Stream } from '../streaming';\nimport { APIUserAbortError, OpenAIError } from '../error';\nimport {\n  AssistantStreamEvent,\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n} from '../resources/beta/assistants';\nimport { RunStep, RunStepDelta, ToolCall, ToolCallDelta } from '../resources/beta/threads/runs/steps';\nimport { ThreadCreateAndRunParamsBase, Threads } from '../resources/beta/threads/threads';\nimport { BaseEvents, EventStream } from './EventStream';\n\nexport interface AssistantStreamEvents extends BaseEvents {\n  run: (run: Run) => void;\n\n  //New event structure\n  messageCreated: (message: Message) => void;\n  messageDelta: (message: MessageDelta, snapshot: Message) => void;\n  messageDone: (message: Message) => void;\n\n  runStepCreated: (runStep: RunStep) => void;\n  runStepDelta: (delta: RunStepDelta, snapshot: Runs.RunStep) => void;\n  runStepDone: (runStep: Runs.RunStep, snapshot: Runs.RunStep) => void;\n\n  toolCallCreated: (toolCall: ToolCall) => void;\n  toolCallDelta: (delta: ToolCallDelta, snapshot: ToolCall) => void;\n  toolCallDone: (toolCall: ToolCall) => void;\n\n  textCreated: (content: Text) => void;\n  textDelta: (delta: TextDelta, snapshot: Text) => void;\n  textDone: (content: Text, snapshot: Message) => void;\n\n  //No created or delta as this is not streamed\n  imageFileDone: (content: ImageFile, snapshot: Message) => void;\n\n  event: (event: AssistantStreamEvent) => void;\n}\n\nexport type ThreadCreateAndRunParamsBaseStream = Omit<ThreadCreateAndRunParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport type RunCreateParamsBaseStream = Omit<RunCreateParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport type RunSubmitToolOutputsParamsStream = Omit<RunSubmitToolOutputsParamsBase, 'stream'> & {\n  stream?: true;\n};\n\nexport class AssistantStream\n  extends EventStream<AssistantStreamEvents>\n  implements AsyncIterable<AssistantStreamEvent>\n{\n  //Track all events in a single list for reference\n  #events: AssistantStreamEvent[] = [];\n\n  //Used to accumulate deltas\n  //We are accumulating many types so the value here is not strict\n  #runStepSnapshots: { [id: string]: Runs.RunStep } = {};\n  #messageSnapshots: { [id: string]: Message } = {};\n  #messageSnapshot: Message | undefined;\n  #finalRun: Run | undefined;\n  #currentContentIndex: number | undefined;\n  #currentContent: MessageContent | undefined;\n  #currentToolCallIndex: number | undefined;\n  #currentToolCall: ToolCall | undefined;\n\n  //For current snapshot methods\n  #currentEvent: AssistantStreamEvent | undefined;\n  #currentRunSnapshot: Run | undefined;\n  #currentRunStepSnapshot: Runs.RunStep | undefined;\n\n  [Symbol.asyncIterator](): AsyncIterator<AssistantStreamEvent> {\n    const pushQueue: AssistantStreamEvent[] = [];\n    const readQueue: {\n      resolve: (chunk: AssistantStreamEvent | undefined) => void;\n      reject: (err: unknown) => void;\n    }[] = [];\n    let done = false;\n\n    //Catch all for passing along all events\n    this.on('event', (event) => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('abort', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    this.on('error', (err) => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n\n    return {\n      next: async (): Promise<IteratorResult<AssistantStreamEvent>> => {\n        if (!pushQueue.length) {\n          if (done) {\n            return { value: undefined, done: true };\n          }\n          return new Promise<AssistantStreamEvent | undefined>((resolve, reject) =>\n            readQueue.push({ resolve, reject }),\n          ).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n        }\n        const chunk = pushQueue.shift()!;\n        return { value: chunk, done: false };\n      },\n      return: async () => {\n        this.abort();\n        return { value: undefined, done: true };\n      },\n    };\n  }\n\n  static fromReadableStream(stream: ReadableStream): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  protected async _fromReadableStream(\n    readableStream: ReadableStream,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this._connected();\n    const stream = Stream.fromReadableStream<AssistantStreamEvent>(readableStream, this.controller);\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(this.#endRequest());\n  }\n\n  toReadableStream(): ReadableStream {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n\n  static createToolAssistantStream(\n    threadId: string,\n    runId: string,\n    runs: Runs,\n    params: RunSubmitToolOutputsParamsStream,\n    options: RequestOptions | undefined,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._runToolAssistantStream(threadId, runId, runs, params, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  protected async _createToolAssistantStream(\n    run: Runs,\n    threadId: string,\n    runId: string,\n    params: RunSubmitToolOutputsParamsStream,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunSubmitToolOutputsParamsStreaming = { ...params, stream: true };\n    const stream = await run.submitToolOutputs(threadId, runId, body, {\n      ...options,\n      signal: this.controller.signal,\n    });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  static createThreadAssistantStream(\n    params: ThreadCreateAndRunParamsBaseStream,\n    thread: Threads,\n    options?: RequestOptions,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._threadAssistantStream(params, thread, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  static createAssistantStream(\n    threadId: string,\n    runs: Runs,\n    params: RunCreateParamsBaseStream,\n    options?: RequestOptions,\n  ): AssistantStream {\n    const runner = new AssistantStream();\n    runner._run(() =>\n      runner._runAssistantStream(threadId, runs, params, {\n        ...options,\n        headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n      }),\n    );\n    return runner;\n  }\n\n  currentEvent(): AssistantStreamEvent | undefined {\n    return this.#currentEvent;\n  }\n\n  currentRun(): Run | undefined {\n    return this.#currentRunSnapshot;\n  }\n\n  currentMessageSnapshot(): Message | undefined {\n    return this.#messageSnapshot;\n  }\n\n  currentRunStepSnapshot(): Runs.RunStep | undefined {\n    return this.#currentRunStepSnapshot;\n  }\n\n  async finalRunSteps(): Promise<Runs.RunStep[]> {\n    await this.done();\n\n    return Object.values(this.#runStepSnapshots);\n  }\n\n  async finalMessages(): Promise<Message[]> {\n    await this.done();\n\n    return Object.values(this.#messageSnapshots);\n  }\n\n  async finalRun(): Promise<Run> {\n    await this.done();\n    if (!this.#finalRun) throw Error('Final run was not received.');\n\n    return this.#finalRun;\n  }\n\n  protected async _createThreadAssistantStream(\n    thread: Threads,\n    params: ThreadCreateAndRunParamsBase,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunCreateParamsStreaming = { ...params, stream: true };\n    const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  protected async _createAssistantStream(\n    run: Runs,\n    threadId: string,\n    params: RunCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n\n    const body: RunCreateParamsStreaming = { ...params, stream: true };\n    const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n\n    this._connected();\n\n    for await (const event of stream) {\n      this.#addEvent(event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    return this._addRun(this.#endRequest());\n  }\n\n  #addEvent(event: AssistantStreamEvent) {\n    if (this.ended) return;\n\n    this.#currentEvent = event;\n\n    this.#handleEvent(event);\n\n    switch (event.event) {\n      case 'thread.created':\n        //No action on this event.\n        break;\n\n      case 'thread.run.created':\n      case 'thread.run.queued':\n      case 'thread.run.in_progress':\n      case 'thread.run.requires_action':\n      case 'thread.run.completed':\n      case 'thread.run.incomplete':\n      case 'thread.run.failed':\n      case 'thread.run.cancelling':\n      case 'thread.run.cancelled':\n      case 'thread.run.expired':\n        this.#handleRun(event);\n        break;\n\n      case 'thread.run.step.created':\n      case 'thread.run.step.in_progress':\n      case 'thread.run.step.delta':\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n        this.#handleRunStep(event);\n        break;\n\n      case 'thread.message.created':\n      case 'thread.message.in_progress':\n      case 'thread.message.delta':\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        this.#handleMessage(event);\n        break;\n\n      case 'error':\n        //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n        throw new Error(\n          'Encountered an error event in event processing - errors should be processed earlier',\n        );\n      default:\n        assertNever(event);\n    }\n  }\n\n  #endRequest(): Run {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n\n    if (!this.#finalRun) throw Error('Final run has not been received');\n\n    return this.#finalRun;\n  }\n\n  #handleMessage(this: AssistantStream, event: MessageStreamEvent) {\n    const [accumulatedMessage, newContent] = this.#accumulateMessage(event, this.#messageSnapshot);\n    this.#messageSnapshot = accumulatedMessage;\n    this.#messageSnapshots[accumulatedMessage.id] = accumulatedMessage;\n\n    for (const content of newContent) {\n      const snapshotContent = accumulatedMessage.content[content.index];\n      if (snapshotContent?.type == 'text') {\n        this._emit('textCreated', snapshotContent.text);\n      }\n    }\n\n    switch (event.event) {\n      case 'thread.message.created':\n        this._emit('messageCreated', event.data);\n        break;\n\n      case 'thread.message.in_progress':\n        break;\n\n      case 'thread.message.delta':\n        this._emit('messageDelta', event.data.delta, accumulatedMessage);\n\n        if (event.data.delta.content) {\n          for (const content of event.data.delta.content) {\n            //If it is text delta, emit a text delta event\n            if (content.type == 'text' && content.text) {\n              let textDelta = content.text;\n              let snapshot = accumulatedMessage.content[content.index];\n              if (snapshot && snapshot.type == 'text') {\n                this._emit('textDelta', textDelta, snapshot.text);\n              } else {\n                throw Error('The snapshot associated with this text delta is not text or missing');\n              }\n            }\n\n            if (content.index != this.#currentContentIndex) {\n              //See if we have in progress content\n              if (this.#currentContent) {\n                switch (this.#currentContent.type) {\n                  case 'text':\n                    this._emit('textDone', this.#currentContent.text, this.#messageSnapshot);\n                    break;\n                  case 'image_file':\n                    this._emit('imageFileDone', this.#currentContent.image_file, this.#messageSnapshot);\n                    break;\n                }\n              }\n\n              this.#currentContentIndex = content.index;\n            }\n\n            this.#currentContent = accumulatedMessage.content[content.index];\n          }\n        }\n\n        break;\n\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        //We emit the latest content we were working on on completion (including incomplete)\n        if (this.#currentContentIndex !== undefined) {\n          const currentContent = event.data.content[this.#currentContentIndex];\n          if (currentContent) {\n            switch (currentContent.type) {\n              case 'image_file':\n                this._emit('imageFileDone', currentContent.image_file, this.#messageSnapshot);\n                break;\n              case 'text':\n                this._emit('textDone', currentContent.text, this.#messageSnapshot);\n                break;\n            }\n          }\n        }\n\n        if (this.#messageSnapshot) {\n          this._emit('messageDone', event.data);\n        }\n\n        this.#messageSnapshot = undefined;\n    }\n  }\n\n  #handleRunStep(this: AssistantStream, event: RunStepStreamEvent) {\n    const accumulatedRunStep = this.#accumulateRunStep(event);\n    this.#currentRunStepSnapshot = accumulatedRunStep;\n\n    switch (event.event) {\n      case 'thread.run.step.created':\n        this._emit('runStepCreated', event.data);\n        break;\n      case 'thread.run.step.delta':\n        const delta = event.data.delta;\n        if (\n          delta.step_details &&\n          delta.step_details.type == 'tool_calls' &&\n          delta.step_details.tool_calls &&\n          accumulatedRunStep.step_details.type == 'tool_calls'\n        ) {\n          for (const toolCall of delta.step_details.tool_calls) {\n            if (toolCall.index == this.#currentToolCallIndex) {\n              this._emit(\n                'toolCallDelta',\n                toolCall,\n                accumulatedRunStep.step_details.tool_calls[toolCall.index] as ToolCall,\n              );\n            } else {\n              if (this.#currentToolCall) {\n                this._emit('toolCallDone', this.#currentToolCall);\n              }\n\n              this.#currentToolCallIndex = toolCall.index;\n              this.#currentToolCall = accumulatedRunStep.step_details.tool_calls[toolCall.index];\n              if (this.#currentToolCall) this._emit('toolCallCreated', this.#currentToolCall);\n            }\n          }\n        }\n\n        this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n        break;\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n        this.#currentRunStepSnapshot = undefined;\n        const details = event.data.step_details;\n        if (details.type == 'tool_calls') {\n          if (this.#currentToolCall) {\n            this._emit('toolCallDone', this.#currentToolCall as ToolCall);\n            this.#currentToolCall = undefined;\n          }\n        }\n        this._emit('runStepDone', event.data, accumulatedRunStep);\n        break;\n      case 'thread.run.step.in_progress':\n        break;\n    }\n  }\n\n  #handleEvent(this: AssistantStream, event: AssistantStreamEvent) {\n    this.#events.push(event);\n    this._emit('event', event);\n  }\n\n  #accumulateRunStep(event: RunStepStreamEvent): Runs.RunStep {\n    switch (event.event) {\n      case 'thread.run.step.created':\n        this.#runStepSnapshots[event.data.id] = event.data;\n        return event.data;\n\n      case 'thread.run.step.delta':\n        let snapshot = this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n        if (!snapshot) {\n          throw Error('Received a RunStepDelta before creation of a snapshot');\n        }\n\n        let data = event.data;\n\n        if (data.delta) {\n          const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta) as Runs.RunStep;\n          this.#runStepSnapshots[event.data.id] = accumulated;\n        }\n\n        return this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n\n      case 'thread.run.step.completed':\n      case 'thread.run.step.failed':\n      case 'thread.run.step.cancelled':\n      case 'thread.run.step.expired':\n      case 'thread.run.step.in_progress':\n        this.#runStepSnapshots[event.data.id] = event.data;\n        break;\n    }\n\n    if (this.#runStepSnapshots[event.data.id]) return this.#runStepSnapshots[event.data.id] as Runs.RunStep;\n    throw new Error('No snapshot available');\n  }\n\n  #accumulateMessage(\n    event: AssistantStreamEvent,\n    snapshot: Message | undefined,\n  ): [Message, MessageContentDelta[]] {\n    let newContent: MessageContentDelta[] = [];\n\n    switch (event.event) {\n      case 'thread.message.created':\n        //On creation the snapshot is just the initial message\n        return [event.data, newContent];\n\n      case 'thread.message.delta':\n        if (!snapshot) {\n          throw Error(\n            'Received a delta with no existing snapshot (there should be one from message creation)',\n          );\n        }\n\n        let data = event.data;\n\n        //If this delta does not have content, nothing to process\n        if (data.delta.content) {\n          for (const contentElement of data.delta.content) {\n            if (contentElement.index in snapshot.content) {\n              let currentContent = snapshot.content[contentElement.index];\n              snapshot.content[contentElement.index] = this.#accumulateContent(\n                contentElement,\n                currentContent,\n              );\n            } else {\n              snapshot.content[contentElement.index] = contentElement as MessageContent;\n              // This is a new element\n              newContent.push(contentElement);\n            }\n          }\n        }\n\n        return [snapshot, newContent];\n\n      case 'thread.message.in_progress':\n      case 'thread.message.completed':\n      case 'thread.message.incomplete':\n        //No changes on other thread events\n        if (snapshot) {\n          return [snapshot, newContent];\n        } else {\n          throw Error('Received thread message event with no existing snapshot');\n        }\n    }\n    throw Error('Tried to accumulate a non-message event');\n  }\n\n  #accumulateContent(\n    contentElement: MessageContentDelta,\n    currentContent: MessageContent | undefined,\n  ): TextContentBlock | ImageFileContentBlock {\n    return AssistantStream.accumulateDelta(currentContent as unknown as Record<any, any>, contentElement) as\n      | TextContentBlock\n      | ImageFileContentBlock;\n  }\n\n  static accumulateDelta(acc: Record<string, any>, delta: Record<string, any>): Record<string, any> {\n    for (const [key, deltaValue] of Object.entries(delta)) {\n      if (!acc.hasOwnProperty(key)) {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      let accValue = acc[key];\n      if (accValue === null || accValue === undefined) {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      // We don't accumulate these special properties\n      if (key === 'index' || key === 'type') {\n        acc[key] = deltaValue;\n        continue;\n      }\n\n      // Type-specific accumulation logic\n      if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n        accValue += deltaValue;\n      } else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n        accValue += deltaValue;\n      } else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n        accValue = this.accumulateDelta(accValue as Record<string, any>, deltaValue as Record<string, any>);\n      } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n        if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n          accValue.push(...deltaValue); // Use spread syntax for efficient addition\n          continue;\n        }\n\n        for (const deltaEntry of deltaValue) {\n          if (!Core.isObj(deltaEntry)) {\n            throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n          }\n\n          const index = deltaEntry['index'];\n          if (index == null) {\n            console.error(deltaEntry);\n            throw new Error('Expected array delta entry to have an `index` property');\n          }\n\n          if (typeof index !== 'number') {\n            throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n          }\n\n          const accEntry = accValue[index];\n          if (accEntry == null) {\n            accValue.push(deltaEntry);\n          } else {\n            accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n          }\n        }\n        continue;\n      } else {\n        throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n      }\n      acc[key] = accValue;\n    }\n\n    return acc;\n  }\n\n  #handleRun(this: AssistantStream, event: RunStreamEvent) {\n    this.#currentRunSnapshot = event.data;\n    switch (event.event) {\n      case 'thread.run.created':\n        break;\n      case 'thread.run.queued':\n        break;\n      case 'thread.run.in_progress':\n        break;\n      case 'thread.run.requires_action':\n      case 'thread.run.cancelled':\n      case 'thread.run.failed':\n      case 'thread.run.completed':\n      case 'thread.run.expired':\n        this.#finalRun = event.data;\n        if (this.#currentToolCall) {\n          this._emit('toolCallDone', this.#currentToolCall);\n          this.#currentToolCall = undefined;\n        }\n        break;\n      case 'thread.run.cancelling':\n        break;\n    }\n  }\n\n  protected _addRun(run: Run): Run {\n    return run;\n  }\n\n  protected async _threadAssistantStream(\n    params: ThreadCreateAndRunParamsBase,\n    thread: Threads,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    return await this._createThreadAssistantStream(thread, params, options);\n  }\n\n  protected async _runAssistantStream(\n    threadId: string,\n    runs: Runs,\n    params: RunCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    return await this._createAssistantStream(runs, threadId, params, options);\n  }\n\n  protected async _runToolAssistantStream(\n    threadId: string,\n    runId: string,\n    runs: Runs,\n    params: RunSubmitToolOutputsParamsStream,\n    options?: Core.RequestOptions,\n  ): Promise<Run> {\n    return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n  }\n}\n\nfunction assertNever(_x: never) {}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as Shared from '../../shared';\nimport * as AssistantsAPI from '../assistants';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class Messages extends APIResource {\n  /**\n   * Create a message.\n   */\n  create(\n    threadId: string,\n    body: MessageCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Message> {\n    return this._client.post(`/threads/${threadId}/messages`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieve a message.\n   */\n  retrieve(threadId: string, messageId: string, options?: Core.RequestOptions): Core.APIPromise<Message> {\n    return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Modifies a message.\n   */\n  update(\n    threadId: string,\n    messageId: string,\n    body: MessageUpdateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Message> {\n    return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of messages for a given thread.\n   */\n  list(\n    threadId: string,\n    query?: MessageListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessagesPage, Message>;\n  list(threadId: string, options?: Core.RequestOptions): Core.PagePromise<MessagesPage, Message>;\n  list(\n    threadId: string,\n    query: MessageListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessagesPage, Message> {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Deletes a message.\n   */\n  del(threadId: string, messageId: string, options?: Core.RequestOptions): Core.APIPromise<MessageDeleted> {\n    return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n}\n\nexport class MessagesPage extends CursorPage<Message> {}\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport type Annotation = FileCitationAnnotation | FilePathAnnotation;\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport type AnnotationDelta = FileCitationDeltaAnnotation | FilePathDeltaAnnotation;\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport interface FileCitationAnnotation {\n  end_index: number;\n\n  file_citation: FileCitationAnnotation.FileCitation;\n\n  start_index: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text: string;\n\n  /**\n   * Always `file_citation`.\n   */\n  type: 'file_citation';\n}\n\nexport namespace FileCitationAnnotation {\n  export interface FileCitation {\n    /**\n     * The ID of the specific File the citation is from.\n     */\n    file_id: string;\n  }\n}\n\n/**\n * A citation within the message that points to a specific quote from a specific\n * File associated with the assistant or the message. Generated when the assistant\n * uses the \"file_search\" tool to search files.\n */\nexport interface FileCitationDeltaAnnotation {\n  /**\n   * The index of the annotation in the text content part.\n   */\n  index: number;\n\n  /**\n   * Always `file_citation`.\n   */\n  type: 'file_citation';\n\n  end_index?: number;\n\n  file_citation?: FileCitationDeltaAnnotation.FileCitation;\n\n  start_index?: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text?: string;\n}\n\nexport namespace FileCitationDeltaAnnotation {\n  export interface FileCitation {\n    /**\n     * The ID of the specific File the citation is from.\n     */\n    file_id?: string;\n\n    /**\n     * The specific quote in the file.\n     */\n    quote?: string;\n  }\n}\n\n/**\n * A URL for the file that's generated when the assistant used the\n * `code_interpreter` tool to generate a file.\n */\nexport interface FilePathAnnotation {\n  end_index: number;\n\n  file_path: FilePathAnnotation.FilePath;\n\n  start_index: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text: string;\n\n  /**\n   * Always `file_path`.\n   */\n  type: 'file_path';\n}\n\nexport namespace FilePathAnnotation {\n  export interface FilePath {\n    /**\n     * The ID of the file that was generated.\n     */\n    file_id: string;\n  }\n}\n\n/**\n * A URL for the file that's generated when the assistant used the\n * `code_interpreter` tool to generate a file.\n */\nexport interface FilePathDeltaAnnotation {\n  /**\n   * The index of the annotation in the text content part.\n   */\n  index: number;\n\n  /**\n   * Always `file_path`.\n   */\n  type: 'file_path';\n\n  end_index?: number;\n\n  file_path?: FilePathDeltaAnnotation.FilePath;\n\n  start_index?: number;\n\n  /**\n   * The text in the message content that needs to be replaced.\n   */\n  text?: string;\n}\n\nexport namespace FilePathDeltaAnnotation {\n  export interface FilePath {\n    /**\n     * The ID of the file that was generated.\n     */\n    file_id?: string;\n  }\n}\n\nexport interface ImageFile {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\n   * need to later display the file content.\n   */\n  file_id: string;\n\n  /**\n   * Specifies the detail level of the image if specified by the user. `low` uses\n   * fewer tokens, you can opt in to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport interface ImageFileContentBlock {\n  image_file: ImageFile;\n\n  /**\n   * Always `image_file`.\n   */\n  type: 'image_file';\n}\n\nexport interface ImageFileDelta {\n  /**\n   * Specifies the detail level of the image if specified by the user. `low` uses\n   * fewer tokens, you can opt in to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\n   * need to later display the file content.\n   */\n  file_id?: string;\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport interface ImageFileDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `image_file`.\n   */\n  type: 'image_file';\n\n  image_file?: ImageFileDelta;\n}\n\nexport interface ImageURL {\n  /**\n   * The external URL of the image, must be a supported image types: jpeg, jpg, png,\n   * gif, webp.\n   */\n  url: string;\n\n  /**\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\n   * to high resolution using `high`. Default value is `auto`\n   */\n  detail?: 'auto' | 'low' | 'high';\n}\n\n/**\n * References an image URL in the content of a message.\n */\nexport interface ImageURLContentBlock {\n  image_url: ImageURL;\n\n  /**\n   * The type of the content part.\n   */\n  type: 'image_url';\n}\n\nexport interface ImageURLDelta {\n  /**\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\n   * to high resolution using `high`.\n   */\n  detail?: 'auto' | 'low' | 'high';\n\n  /**\n   * The URL of the image, must be a supported image types: jpeg, jpg, png, gif,\n   * webp.\n   */\n  url?: string;\n}\n\n/**\n * References an image URL in the content of a message.\n */\nexport interface ImageURLDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `image_url`.\n   */\n  type: 'image_url';\n\n  image_url?: ImageURLDelta;\n}\n\n/**\n * Represents a message within a\n * [thread](https://platform.openai.com/docs/api-reference/threads).\n */\nexport interface Message {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * If applicable, the ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) that\n   * authored this message.\n   */\n  assistant_id: string | null;\n\n  /**\n   * A list of files attached to the message, and the tools they were added to.\n   */\n  attachments: Array<Message.Attachment> | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The content of the message in array of text and/or images.\n   */\n  content: Array<MessageContent>;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message was marked as incomplete.\n   */\n  incomplete_at: number | null;\n\n  /**\n   * On an incomplete message, details about why the message is incomplete.\n   */\n  incomplete_details: Message.IncompleteDetails | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread.message`.\n   */\n  object: 'thread.message';\n\n  /**\n   * The entity that produced the message. One of `user` or `assistant`.\n   */\n  role: 'user' | 'assistant';\n\n  /**\n   * The ID of the [run](https://platform.openai.com/docs/api-reference/runs)\n   * associated with the creation of this message. Value is `null` when messages are\n   * created manually using the create message or create thread endpoints.\n   */\n  run_id: string | null;\n\n  /**\n   * The status of the message, which can be either `in_progress`, `incomplete`, or\n   * `completed`.\n   */\n  status: 'in_progress' | 'incomplete' | 'completed';\n\n  /**\n   * The [thread](https://platform.openai.com/docs/api-reference/threads) ID that\n   * this message belongs to.\n   */\n  thread_id: string;\n}\n\nexport namespace Message {\n  export interface Attachment {\n    /**\n     * The ID of the file to attach to the message.\n     */\n    file_id?: string;\n\n    /**\n     * The tools to add this file to.\n     */\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.AssistantToolsFileSearchTypeOnly>;\n  }\n\n  export namespace Attachment {\n    export interface AssistantToolsFileSearchTypeOnly {\n      /**\n       * The type of tool being defined: `file_search`\n       */\n      type: 'file_search';\n    }\n  }\n\n  /**\n   * On an incomplete message, details about why the message is incomplete.\n   */\n  export interface IncompleteDetails {\n    /**\n     * The reason the message is incomplete.\n     */\n    reason: 'content_filter' | 'max_tokens' | 'run_cancelled' | 'run_expired' | 'run_failed';\n  }\n}\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContent =\n  | ImageFileContentBlock\n  | ImageURLContentBlock\n  | TextContentBlock\n  | RefusalContentBlock;\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContentDelta =\n  | ImageFileDeltaBlock\n  | TextDeltaBlock\n  | RefusalDeltaBlock\n  | ImageURLDeltaBlock;\n\n/**\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\n * in the content of a message.\n */\nexport type MessageContentPartParam = ImageFileContentBlock | ImageURLContentBlock | TextContentBlockParam;\n\nexport interface MessageDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'thread.message.deleted';\n}\n\n/**\n * The delta containing the fields that have changed on the Message.\n */\nexport interface MessageDelta {\n  /**\n   * The content of the message in array of text and/or images.\n   */\n  content?: Array<MessageContentDelta>;\n\n  /**\n   * The entity that produced the message. One of `user` or `assistant`.\n   */\n  role?: 'user' | 'assistant';\n}\n\n/**\n * Represents a message delta i.e. any changed fields on a message during\n * streaming.\n */\nexport interface MessageDeltaEvent {\n  /**\n   * The identifier of the message, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  delta: MessageDelta;\n\n  /**\n   * The object type, which is always `thread.message.delta`.\n   */\n  object: 'thread.message.delta';\n}\n\n/**\n * The refusal content generated by the assistant.\n */\nexport interface RefusalContentBlock {\n  refusal: string;\n\n  /**\n   * Always `refusal`.\n   */\n  type: 'refusal';\n}\n\n/**\n * The refusal content that is part of a message.\n */\nexport interface RefusalDeltaBlock {\n  /**\n   * The index of the refusal part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `refusal`.\n   */\n  type: 'refusal';\n\n  refusal?: string;\n}\n\nexport interface Text {\n  annotations: Array<Annotation>;\n\n  /**\n   * The data that makes up the text.\n   */\n  value: string;\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextContentBlock {\n  text: Text;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextContentBlockParam {\n  /**\n   * Text content to be sent to the model\n   */\n  text: string;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n}\n\nexport interface TextDelta {\n  annotations?: Array<AnnotationDelta>;\n\n  /**\n   * The data that makes up the text.\n   */\n  value?: string;\n}\n\n/**\n * The text content that is part of a message.\n */\nexport interface TextDeltaBlock {\n  /**\n   * The index of the content part in the message.\n   */\n  index: number;\n\n  /**\n   * Always `text`.\n   */\n  type: 'text';\n\n  text?: TextDelta;\n}\n\nexport interface MessageCreateParams {\n  /**\n   * The text contents of the message.\n   */\n  content: string | Array<MessageContentPartParam>;\n\n  /**\n   * The role of the entity that is creating the message. Allowed values include:\n   *\n   * - `user`: Indicates the message is sent by an actual user and should be used in\n   *   most cases to represent user-generated messages.\n   * - `assistant`: Indicates the message is generated by the assistant. Use this\n   *   value to insert messages from the assistant into the conversation.\n   */\n  role: 'user' | 'assistant';\n\n  /**\n   * A list of files attached to the message, and the tools they should be added to.\n   */\n  attachments?: Array<MessageCreateParams.Attachment> | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport namespace MessageCreateParams {\n  export interface Attachment {\n    /**\n     * The ID of the file to attach to the message.\n     */\n    file_id?: string;\n\n    /**\n     * The tools to add this file to.\n     */\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n  }\n\n  export namespace Attachment {\n    export interface FileSearch {\n      /**\n       * The type of tool being defined: `file_search`\n       */\n      type: 'file_search';\n    }\n  }\n}\n\nexport interface MessageUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Filter messages by the run ID that generated them.\n   */\n  run_id?: string;\n}\n\nMessages.MessagesPage = MessagesPage;\n\nexport declare namespace Messages {\n  export {\n    type Annotation as Annotation,\n    type AnnotationDelta as AnnotationDelta,\n    type FileCitationAnnotation as FileCitationAnnotation,\n    type FileCitationDeltaAnnotation as FileCitationDeltaAnnotation,\n    type FilePathAnnotation as FilePathAnnotation,\n    type FilePathDeltaAnnotation as FilePathDeltaAnnotation,\n    type ImageFile as ImageFile,\n    type ImageFileContentBlock as ImageFileContentBlock,\n    type ImageFileDelta as ImageFileDelta,\n    type ImageFileDeltaBlock as ImageFileDeltaBlock,\n    type ImageURL as ImageURL,\n    type ImageURLContentBlock as ImageURLContentBlock,\n    type ImageURLDelta as ImageURLDelta,\n    type ImageURLDeltaBlock as ImageURLDeltaBlock,\n    type Message as Message,\n    type MessageContent as MessageContent,\n    type MessageContentDelta as MessageContentDelta,\n    type MessageContentPartParam as MessageContentPartParam,\n    type MessageDeleted as MessageDeleted,\n    type MessageDelta as MessageDelta,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type RefusalContentBlock as RefusalContentBlock,\n    type RefusalDeltaBlock as RefusalDeltaBlock,\n    type Text as Text,\n    type TextContentBlock as TextContentBlock,\n    type TextContentBlockParam as TextContentBlockParam,\n    type TextDelta as TextDelta,\n    type TextDeltaBlock as TextDeltaBlock,\n    MessagesPage as MessagesPage,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageUpdateParams as MessageUpdateParams,\n    type MessageListParams as MessageListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../../resource';\nimport { isRequestOptions } from '../../../../core';\nimport * as Core from '../../../../core';\nimport * as StepsAPI from './steps';\nimport * as Shared from '../../../shared';\nimport { CursorPage, type CursorPageParams } from '../../../../pagination';\n\nexport class Steps extends APIResource {\n  /**\n   * Retrieves a run step.\n   */\n  retrieve(\n    threadId: string,\n    runId: string,\n    stepId: string,\n    query?: StepRetrieveParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<RunStep>;\n  retrieve(\n    threadId: string,\n    runId: string,\n    stepId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<RunStep>;\n  retrieve(\n    threadId: string,\n    runId: string,\n    stepId: string,\n    query: StepRetrieveParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<RunStep> {\n    if (isRequestOptions(query)) {\n      return this.retrieve(threadId, runId, stepId, {}, query);\n    }\n    return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of run steps belonging to a run.\n   */\n  list(\n    threadId: string,\n    runId: string,\n    query?: StepListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<RunStepsPage, RunStep>;\n  list(\n    threadId: string,\n    runId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<RunStepsPage, RunStep>;\n  list(\n    threadId: string,\n    runId: string,\n    query: StepListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<RunStepsPage, RunStep> {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, runId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n}\n\nexport class RunStepsPage extends CursorPage<RunStep> {}\n\n/**\n * Text output from the Code Interpreter tool call as part of a run step.\n */\nexport interface CodeInterpreterLogs {\n  /**\n   * The index of the output in the outputs array.\n   */\n  index: number;\n\n  /**\n   * Always `logs`.\n   */\n  type: 'logs';\n\n  /**\n   * The text output from the Code Interpreter tool call.\n   */\n  logs?: string;\n}\n\nexport interface CodeInterpreterOutputImage {\n  /**\n   * The index of the output in the outputs array.\n   */\n  index: number;\n\n  /**\n   * Always `image`.\n   */\n  type: 'image';\n\n  image?: CodeInterpreterOutputImage.Image;\n}\n\nexport namespace CodeInterpreterOutputImage {\n  export interface Image {\n    /**\n     * The [file](https://platform.openai.com/docs/api-reference/files) ID of the\n     * image.\n     */\n    file_id?: string;\n  }\n}\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport interface CodeInterpreterToolCall {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  code_interpreter: CodeInterpreterToolCall.CodeInterpreter;\n\n  /**\n   * The type of tool call. This is always going to be `code_interpreter` for this\n   * type of tool call.\n   */\n  type: 'code_interpreter';\n}\n\nexport namespace CodeInterpreterToolCall {\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  export interface CodeInterpreter {\n    /**\n     * The input to the Code Interpreter tool call.\n     */\n    input: string;\n\n    /**\n     * The outputs from the Code Interpreter tool call. Code Interpreter can output one\n     * or more items, including text (`logs`) or images (`image`). Each of these are\n     * represented by a different object type.\n     */\n    outputs: Array<CodeInterpreter.Logs | CodeInterpreter.Image>;\n  }\n\n  export namespace CodeInterpreter {\n    /**\n     * Text output from the Code Interpreter tool call as part of a run step.\n     */\n    export interface Logs {\n      /**\n       * The text output from the Code Interpreter tool call.\n       */\n      logs: string;\n\n      /**\n       * Always `logs`.\n       */\n      type: 'logs';\n    }\n\n    export interface Image {\n      image: Image.Image;\n\n      /**\n       * Always `image`.\n       */\n      type: 'image';\n    }\n\n    export namespace Image {\n      export interface Image {\n        /**\n         * The [file](https://platform.openai.com/docs/api-reference/files) ID of the\n         * image.\n         */\n        file_id: string;\n      }\n    }\n  }\n}\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport interface CodeInterpreterToolCallDelta {\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `code_interpreter` for this\n   * type of tool call.\n   */\n  type: 'code_interpreter';\n\n  /**\n   * The ID of the tool call.\n   */\n  id?: string;\n\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  code_interpreter?: CodeInterpreterToolCallDelta.CodeInterpreter;\n}\n\nexport namespace CodeInterpreterToolCallDelta {\n  /**\n   * The Code Interpreter tool call definition.\n   */\n  export interface CodeInterpreter {\n    /**\n     * The input to the Code Interpreter tool call.\n     */\n    input?: string;\n\n    /**\n     * The outputs from the Code Interpreter tool call. Code Interpreter can output one\n     * or more items, including text (`logs`) or images (`image`). Each of these are\n     * represented by a different object type.\n     */\n    outputs?: Array<StepsAPI.CodeInterpreterLogs | StepsAPI.CodeInterpreterOutputImage>;\n  }\n}\n\nexport interface FileSearchToolCall {\n  /**\n   * The ID of the tool call object.\n   */\n  id: string;\n\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  file_search: FileSearchToolCall.FileSearch;\n\n  /**\n   * The type of tool call. This is always going to be `file_search` for this type of\n   * tool call.\n   */\n  type: 'file_search';\n}\n\nexport namespace FileSearchToolCall {\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  export interface FileSearch {\n    /**\n     * The ranking options for the file search.\n     */\n    ranking_options?: FileSearch.RankingOptions;\n\n    /**\n     * The results of the file search.\n     */\n    results?: Array<FileSearch.Result>;\n  }\n\n  export namespace FileSearch {\n    /**\n     * The ranking options for the file search.\n     */\n    export interface RankingOptions {\n      /**\n       * The ranker used for the file search.\n       */\n      ranker: 'default_2024_08_21';\n\n      /**\n       * The score threshold for the file search. All values must be a floating point\n       * number between 0 and 1.\n       */\n      score_threshold: number;\n    }\n\n    /**\n     * A result instance of the file search.\n     */\n    export interface Result {\n      /**\n       * The ID of the file that result was found in.\n       */\n      file_id: string;\n\n      /**\n       * The name of the file that result was found in.\n       */\n      file_name: string;\n\n      /**\n       * The score of the result. All values must be a floating point number between 0\n       * and 1.\n       */\n      score: number;\n\n      /**\n       * The content of the result that was found. The content is only included if\n       * requested via the include query parameter.\n       */\n      content?: Array<Result.Content>;\n    }\n\n    export namespace Result {\n      export interface Content {\n        /**\n         * The text content of the file.\n         */\n        text?: string;\n\n        /**\n         * The type of the content.\n         */\n        type?: 'text';\n      }\n    }\n  }\n}\n\nexport interface FileSearchToolCallDelta {\n  /**\n   * For now, this is always going to be an empty object.\n   */\n  file_search: unknown;\n\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `file_search` for this type of\n   * tool call.\n   */\n  type: 'file_search';\n\n  /**\n   * The ID of the tool call object.\n   */\n  id?: string;\n}\n\nexport interface FunctionToolCall {\n  /**\n   * The ID of the tool call object.\n   */\n  id: string;\n\n  /**\n   * The definition of the function that was called.\n   */\n  function: FunctionToolCall.Function;\n\n  /**\n   * The type of tool call. This is always going to be `function` for this type of\n   * tool call.\n   */\n  type: 'function';\n}\n\nexport namespace FunctionToolCall {\n  /**\n   * The definition of the function that was called.\n   */\n  export interface Function {\n    /**\n     * The arguments passed to the function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function.\n     */\n    name: string;\n\n    /**\n     * The output of the function. This will be `null` if the outputs have not been\n     * [submitted](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n     * yet.\n     */\n    output: string | null;\n  }\n}\n\nexport interface FunctionToolCallDelta {\n  /**\n   * The index of the tool call in the tool calls array.\n   */\n  index: number;\n\n  /**\n   * The type of tool call. This is always going to be `function` for this type of\n   * tool call.\n   */\n  type: 'function';\n\n  /**\n   * The ID of the tool call object.\n   */\n  id?: string;\n\n  /**\n   * The definition of the function that was called.\n   */\n  function?: FunctionToolCallDelta.Function;\n}\n\nexport namespace FunctionToolCallDelta {\n  /**\n   * The definition of the function that was called.\n   */\n  export interface Function {\n    /**\n     * The arguments passed to the function.\n     */\n    arguments?: string;\n\n    /**\n     * The name of the function.\n     */\n    name?: string;\n\n    /**\n     * The output of the function. This will be `null` if the outputs have not been\n     * [submitted](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n     * yet.\n     */\n    output?: string | null;\n  }\n}\n\n/**\n * Details of the message creation by the run step.\n */\nexport interface MessageCreationStepDetails {\n  message_creation: MessageCreationStepDetails.MessageCreation;\n\n  /**\n   * Always `message_creation`.\n   */\n  type: 'message_creation';\n}\n\nexport namespace MessageCreationStepDetails {\n  export interface MessageCreation {\n    /**\n     * The ID of the message that was created by this run step.\n     */\n    message_id: string;\n  }\n}\n\n/**\n * Represents a step in execution of a run.\n */\nexport interface RunStep {\n  /**\n   * The identifier of the run step, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants)\n   * associated with the run step.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step was cancelled.\n   */\n  cancelled_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step expired. A step is\n   * considered expired if the parent run is expired.\n   */\n  expired_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run step failed.\n   */\n  failed_at: number | null;\n\n  /**\n   * The last error associated with this run step. Will be `null` if there are no\n   * errors.\n   */\n  last_error: RunStep.LastError | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread.run.step`.\n   */\n  object: 'thread.run.step';\n\n  /**\n   * The ID of the [run](https://platform.openai.com/docs/api-reference/runs) that\n   * this run step is a part of.\n   */\n  run_id: string;\n\n  /**\n   * The status of the run step, which can be either `in_progress`, `cancelled`,\n   * `failed`, `completed`, or `expired`.\n   */\n  status: 'in_progress' | 'cancelled' | 'failed' | 'completed' | 'expired';\n\n  /**\n   * The details of the run step.\n   */\n  step_details: MessageCreationStepDetails | ToolCallsStepDetails;\n\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * that was run.\n   */\n  thread_id: string;\n\n  /**\n   * The type of run step, which can be either `message_creation` or `tool_calls`.\n   */\n  type: 'message_creation' | 'tool_calls';\n\n  /**\n   * Usage statistics related to the run step. This value will be `null` while the\n   * run step's status is `in_progress`.\n   */\n  usage: RunStep.Usage | null;\n}\n\nexport namespace RunStep {\n  /**\n   * The last error associated with this run step. Will be `null` if there are no\n   * errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error` or `rate_limit_exceeded`.\n     */\n    code: 'server_error' | 'rate_limit_exceeded';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n\n  /**\n   * Usage statistics related to the run step. This value will be `null` while the\n   * run step's status is `in_progress`.\n   */\n  export interface Usage {\n    /**\n     * Number of completion tokens used over the course of the run step.\n     */\n    completion_tokens: number;\n\n    /**\n     * Number of prompt tokens used over the course of the run step.\n     */\n    prompt_tokens: number;\n\n    /**\n     * Total number of tokens used (prompt + completion).\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * The delta containing the fields that have changed on the run step.\n */\nexport interface RunStepDelta {\n  /**\n   * The details of the run step.\n   */\n  step_details?: RunStepDeltaMessageDelta | ToolCallDeltaObject;\n}\n\n/**\n * Represents a run step delta i.e. any changed fields on a run step during\n * streaming.\n */\nexport interface RunStepDeltaEvent {\n  /**\n   * The identifier of the run step, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The delta containing the fields that have changed on the run step.\n   */\n  delta: RunStepDelta;\n\n  /**\n   * The object type, which is always `thread.run.step.delta`.\n   */\n  object: 'thread.run.step.delta';\n}\n\n/**\n * Details of the message creation by the run step.\n */\nexport interface RunStepDeltaMessageDelta {\n  /**\n   * Always `message_creation`.\n   */\n  type: 'message_creation';\n\n  message_creation?: RunStepDeltaMessageDelta.MessageCreation;\n}\n\nexport namespace RunStepDeltaMessageDelta {\n  export interface MessageCreation {\n    /**\n     * The ID of the message that was created by this run step.\n     */\n    message_id?: string;\n  }\n}\n\nexport type RunStepInclude = 'step_details.tool_calls[*].file_search.results[*].content';\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport type ToolCall = CodeInterpreterToolCall | FileSearchToolCall | FunctionToolCall;\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n */\nexport type ToolCallDelta = CodeInterpreterToolCallDelta | FileSearchToolCallDelta | FunctionToolCallDelta;\n\n/**\n * Details of the tool call.\n */\nexport interface ToolCallDeltaObject {\n  /**\n   * Always `tool_calls`.\n   */\n  type: 'tool_calls';\n\n  /**\n   * An array of tool calls the run step was involved in. These can be associated\n   * with one of three types of tools: `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tool_calls?: Array<ToolCallDelta>;\n}\n\n/**\n * Details of the tool call.\n */\nexport interface ToolCallsStepDetails {\n  /**\n   * An array of tool calls the run step was involved in. These can be associated\n   * with one of three types of tools: `code_interpreter`, `file_search`, or\n   * `function`.\n   */\n  tool_calls: Array<ToolCall>;\n\n  /**\n   * Always `tool_calls`.\n   */\n  type: 'tool_calls';\n}\n\nexport interface StepRetrieveParams {\n  /**\n   * A list of additional fields to include in the response. Currently the only\n   * supported value is `step_details.tool_calls[*].file_search.results[*].content`\n   * to fetch the file search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<RunStepInclude>;\n}\n\nexport interface StepListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * A list of additional fields to include in the response. Currently the only\n   * supported value is `step_details.tool_calls[*].file_search.results[*].content`\n   * to fetch the file search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<RunStepInclude>;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nSteps.RunStepsPage = RunStepsPage;\n\nexport declare namespace Steps {\n  export {\n    type CodeInterpreterLogs as CodeInterpreterLogs,\n    type CodeInterpreterOutputImage as CodeInterpreterOutputImage,\n    type CodeInterpreterToolCall as CodeInterpreterToolCall,\n    type CodeInterpreterToolCallDelta as CodeInterpreterToolCallDelta,\n    type FileSearchToolCall as FileSearchToolCall,\n    type FileSearchToolCallDelta as FileSearchToolCallDelta,\n    type FunctionToolCall as FunctionToolCall,\n    type FunctionToolCallDelta as FunctionToolCallDelta,\n    type MessageCreationStepDetails as MessageCreationStepDetails,\n    type RunStep as RunStep,\n    type RunStepDelta as RunStepDelta,\n    type RunStepDeltaEvent as RunStepDeltaEvent,\n    type RunStepDeltaMessageDelta as RunStepDeltaMessageDelta,\n    type RunStepInclude as RunStepInclude,\n    type ToolCall as ToolCall,\n    type ToolCallDelta as ToolCallDelta,\n    type ToolCallDeltaObject as ToolCallDeltaObject,\n    type ToolCallsStepDetails as ToolCallsStepDetails,\n    RunStepsPage as RunStepsPage,\n    type StepRetrieveParams as StepRetrieveParams,\n    type StepListParams as StepListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../../resource';\nimport { isRequestOptions } from '../../../../core';\nimport { APIPromise } from '../../../../core';\nimport * as Core from '../../../../core';\nimport { AssistantStream, RunCreateParamsBaseStream } from '../../../../lib/AssistantStream';\nimport { sleep } from '../../../../core';\nimport { RunSubmitToolOutputsParamsStream } from '../../../../lib/AssistantStream';\nimport * as RunsAPI from './runs';\nimport * as Shared from '../../../shared';\nimport * as AssistantsAPI from '../../assistants';\nimport * as ChatAPI from '../../../chat/chat';\nimport * as MessagesAPI from '../messages';\nimport * as ThreadsAPI from '../threads';\nimport * as StepsAPI from './steps';\nimport {\n  CodeInterpreterLogs,\n  CodeInterpreterOutputImage,\n  CodeInterpreterToolCall,\n  CodeInterpreterToolCallDelta,\n  FileSearchToolCall,\n  FileSearchToolCallDelta,\n  FunctionToolCall,\n  FunctionToolCallDelta,\n  MessageCreationStepDetails,\n  RunStep,\n  RunStepDelta,\n  RunStepDeltaEvent,\n  RunStepDeltaMessageDelta,\n  RunStepInclude,\n  RunStepsPage,\n  StepListParams,\n  StepRetrieveParams,\n  Steps,\n  ToolCall,\n  ToolCallDelta,\n  ToolCallDeltaObject,\n  ToolCallsStepDetails,\n} from './steps';\nimport { CursorPage, type CursorPageParams } from '../../../../pagination';\nimport { Stream } from '../../../../streaming';\n\nexport class Runs extends APIResource {\n  steps: StepsAPI.Steps = new StepsAPI.Steps(this._client);\n\n  /**\n   * Create a run.\n   */\n  create(\n    threadId: string,\n    params: RunCreateParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Run>;\n  create(\n    threadId: string,\n    params: RunCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  create(\n    threadId: string,\n    params: RunCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | Run>;\n  create(\n    threadId: string,\n    params: RunCreateParams,\n    options?: Core.RequestOptions,\n  ): APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    const { include, ...body } = params;\n    return this._client.post(`/threads/${threadId}/runs`, {\n      query: { include },\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n      stream: params.stream ?? false,\n    }) as APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * Retrieves a run.\n   */\n  retrieve(threadId: string, runId: string, options?: Core.RequestOptions): Core.APIPromise<Run> {\n    return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Modifies a run.\n   */\n  update(\n    threadId: string,\n    runId: string,\n    body: RunUpdateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Run> {\n    return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of runs belonging to a thread.\n   */\n  list(\n    threadId: string,\n    query?: RunListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<RunsPage, Run>;\n  list(threadId: string, options?: Core.RequestOptions): Core.PagePromise<RunsPage, Run>;\n  list(\n    threadId: string,\n    query: RunListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<RunsPage, Run> {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Cancels a run that is `in_progress`.\n   */\n  cancel(threadId: string, runId: string, options?: Core.RequestOptions): Core.APIPromise<Run> {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * A helper to create a run an poll for a terminal state. More information on Run\n   * lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndPoll(\n    threadId: string,\n    body: RunCreateParamsNonStreaming,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const run = await this.create(threadId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n\n  /**\n   * Create a Run stream\n   *\n   * @deprecated use `stream` instead\n   */\n  createAndStream(\n    threadId: string,\n    body: RunCreateParamsBaseStream,\n    options?: Core.RequestOptions,\n  ): AssistantStream {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n\n  /**\n   * A helper to poll a run status until it reaches a terminal state. More\n   * information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async poll(\n    threadId: string,\n    runId: string,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const headers: { [key: string]: string } = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n\n    while (true) {\n      const { data: run, response } = await this.retrieve(threadId, runId, {\n        ...options,\n        headers: { ...options?.headers, ...headers },\n      }).withResponse();\n\n      switch (run.status) {\n        //If we are in any sort of intermediate state we poll\n        case 'queued':\n        case 'in_progress':\n        case 'cancelling':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        //We return the run in any terminal state.\n        case 'requires_action':\n        case 'incomplete':\n        case 'cancelled':\n        case 'completed':\n        case 'failed':\n        case 'expired':\n          return run;\n      }\n    }\n  }\n\n  /**\n   * Create a Run stream\n   */\n  stream(threadId: string, body: RunCreateParamsBaseStream, options?: Core.RequestOptions): AssistantStream {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n\n  /**\n   * When a run has the `status: \"requires_action\"` and `required_action.type` is\n   * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n   * tool calls once they're all completed. All outputs must be submitted in a single\n   * request.\n   */\n  submitToolOutputs(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Run>;\n  submitToolOutputs(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParamsStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  submitToolOutputs(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParamsBase,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | Run>;\n  submitToolOutputs(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParams,\n    options?: Core.RequestOptions,\n  ): APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n      stream: body.stream ?? false,\n    }) as APIPromise<Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * A helper to submit a tool output to a run and poll for a terminal run state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async submitToolOutputsAndPoll(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParamsNonStreaming,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Run> {\n    const run = await this.submitToolOutputs(threadId, runId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n\n  /**\n   * Submit the tool outputs from a previous run and stream the run to a terminal\n   * state. More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  submitToolOutputsStream(\n    threadId: string,\n    runId: string,\n    body: RunSubmitToolOutputsParamsStream,\n    options?: Core.RequestOptions,\n  ): AssistantStream {\n    return AssistantStream.createToolAssistantStream(\n      threadId,\n      runId,\n      this._client.beta.threads.runs,\n      body,\n      options,\n    );\n  }\n}\n\nexport class RunsPage extends CursorPage<Run> {}\n\n/**\n * Tool call objects\n */\nexport interface RequiredActionFunctionToolCall {\n  /**\n   * The ID of the tool call. This ID must be referenced when you submit the tool\n   * outputs in using the\n   * [Submit tool outputs to run](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n   * endpoint.\n   */\n  id: string;\n\n  /**\n   * The function definition.\n   */\n  function: RequiredActionFunctionToolCall.Function;\n\n  /**\n   * The type of tool call the output is required for. For now, this is always\n   * `function`.\n   */\n  type: 'function';\n}\n\nexport namespace RequiredActionFunctionToolCall {\n  /**\n   * The function definition.\n   */\n  export interface Function {\n    /**\n     * The arguments that the model expects you to pass to the function.\n     */\n    arguments: string;\n\n    /**\n     * The name of the function.\n     */\n    name: string;\n  }\n}\n\n/**\n * Represents an execution run on a\n * [thread](https://platform.openai.com/docs/api-reference/threads).\n */\nexport interface Run {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * execution of this run.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was cancelled.\n   */\n  cancelled_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was completed.\n   */\n  completed_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run will expire.\n   */\n  expires_at: number | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run failed.\n   */\n  failed_at: number | null;\n\n  /**\n   * Details on why the run is incomplete. Will be `null` if the run is not\n   * incomplete.\n   */\n  incomplete_details: Run.IncompleteDetails | null;\n\n  /**\n   * The instructions that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  instructions: string;\n\n  /**\n   * The last error associated with this run. Will be `null` if there are no errors.\n   */\n  last_error: Run.LastError | null;\n\n  /**\n   * The maximum number of completion tokens specified to have been used over the\n   * course of the run.\n   */\n  max_completion_tokens: number | null;\n\n  /**\n   * The maximum number of prompt tokens specified to have been used over the course\n   * of the run.\n   */\n  max_prompt_tokens: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The model that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  model: string;\n\n  /**\n   * The object type, which is always `thread.run`.\n   */\n  object: 'thread.run';\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls: boolean;\n\n  /**\n   * Details on the action required to continue the run. Will be `null` if no action\n   * is required.\n   */\n  required_action: Run.RequiredAction | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * The Unix timestamp (in seconds) for when the run was started.\n   */\n  started_at: number | null;\n\n  /**\n   * The status of the run, which can be either `queued`, `in_progress`,\n   * `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`,\n   * `incomplete`, or `expired`.\n   */\n  status: RunStatus;\n\n  /**\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\n   * that was executed on as a part of this run.\n   */\n  thread_id: string;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * The list of tools that the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) used for\n   * this run.\n   */\n  tools: Array<AssistantsAPI.AssistantTool>;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy: Run.TruncationStrategy | null;\n\n  /**\n   * Usage statistics related to the run. This value will be `null` if the run is not\n   * in a terminal state (i.e. `in_progress`, `queued`, etc.).\n   */\n  usage: Run.Usage | null;\n\n  /**\n   * The sampling temperature used for this run. If not set, defaults to 1.\n   */\n  temperature?: number | null;\n\n  /**\n   * The nucleus sampling value used for this run. If not set, defaults to 1.\n   */\n  top_p?: number | null;\n}\n\nexport namespace Run {\n  /**\n   * Details on why the run is incomplete. Will be `null` if the run is not\n   * incomplete.\n   */\n  export interface IncompleteDetails {\n    /**\n     * The reason why the run is incomplete. This will point to which specific token\n     * limit was reached over the course of the run.\n     */\n    reason?: 'max_completion_tokens' | 'max_prompt_tokens';\n  }\n\n  /**\n   * The last error associated with this run. Will be `null` if there are no errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.\n     */\n    code: 'server_error' | 'rate_limit_exceeded' | 'invalid_prompt';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n\n  /**\n   * Details on the action required to continue the run. Will be `null` if no action\n   * is required.\n   */\n  export interface RequiredAction {\n    /**\n     * Details on the tool outputs needed for this run to continue.\n     */\n    submit_tool_outputs: RequiredAction.SubmitToolOutputs;\n\n    /**\n     * For now, this is always `submit_tool_outputs`.\n     */\n    type: 'submit_tool_outputs';\n  }\n\n  export namespace RequiredAction {\n    /**\n     * Details on the tool outputs needed for this run to continue.\n     */\n    export interface SubmitToolOutputs {\n      /**\n       * A list of the relevant tool calls.\n       */\n      tool_calls: Array<RunsAPI.RequiredActionFunctionToolCall>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  /**\n   * Usage statistics related to the run. This value will be `null` if the run is not\n   * in a terminal state (i.e. `in_progress`, `queued`, etc.).\n   */\n  export interface Usage {\n    /**\n     * Number of completion tokens used over the course of the run.\n     */\n    completion_tokens: number;\n\n    /**\n     * Number of prompt tokens used over the course of the run.\n     */\n    prompt_tokens: number;\n\n    /**\n     * Total number of tokens used (prompt + completion).\n     */\n    total_tokens: number;\n  }\n}\n\n/**\n * The status of the run, which can be either `queued`, `in_progress`,\n * `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`,\n * `incomplete`, or `expired`.\n */\nexport type RunStatus =\n  | 'queued'\n  | 'in_progress'\n  | 'requires_action'\n  | 'cancelling'\n  | 'cancelled'\n  | 'failed'\n  | 'completed'\n  | 'incomplete'\n  | 'expired';\n\nexport type RunCreateParams = RunCreateParamsNonStreaming | RunCreateParamsStreaming;\n\nexport interface RunCreateParamsBase {\n  /**\n   * Body param: The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Query param: A list of additional fields to include in the response. Currently\n   * the only supported value is\n   * `step_details.tool_calls[*].file_search.results[*].content` to fetch the file\n   * search result content.\n   *\n   * See the\n   * [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings)\n   * for more information.\n   */\n  include?: Array<StepsAPI.RunStepInclude>;\n\n  /**\n   * Body param: Appends additional instructions at the end of the instructions for\n   * the run. This is useful for modifying the behavior on a per-run basis without\n   * overriding other instructions.\n   */\n  additional_instructions?: string | null;\n\n  /**\n   * Body param: Adds additional messages to the thread before creating the run.\n   */\n  additional_messages?: Array<RunCreateParams.AdditionalMessage> | null;\n\n  /**\n   * Body param: Overrides the\n   * [instructions](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n   * of the assistant. This is useful for modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * Body param: The maximum number of completion tokens that may be used over the\n   * course of the run. The run will make a best effort to use only the number of\n   * completion tokens specified, across multiple turns of the run. If the run\n   * exceeds the number of completion tokens specified, the run will end with status\n   * `incomplete`. See `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * Body param: The maximum number of prompt tokens that may be used over the course\n   * of the run. The run will make a best effort to use only the number of prompt\n   * tokens specified, across multiple turns of the run. If the run exceeds the\n   * number of prompt tokens specified, the run will end with status `incomplete`.\n   * See `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\n   * can be useful for storing additional information about the object in a\n   * structured format, and querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * Body param: The ID of the\n   * [Model](https://platform.openai.com/docs/api-reference/models) to be used to\n   * execute this run. If a value is provided here, it will override the model\n   * associated with the assistant. If not, the model associated with the assistant\n   * will be used.\n   */\n  model?: (string & {}) | ChatAPI.ChatModel | null;\n\n  /**\n   * Body param: Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Body param: **o1 and o3-mini models only**\n   *\n   * Constrains effort on reasoning for\n   * [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently\n   * supported values are `low`, `medium`, and `high`. Reducing reasoning effort can\n   * result in faster responses and fewer tokens used on reasoning in a response.\n   */\n  reasoning_effort?: 'low' | 'medium' | 'high' | null;\n\n  /**\n   * Body param: Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: boolean | null;\n\n  /**\n   * Body param: What sampling temperature to use, between 0 and 2. Higher values\n   * like 0.8 will make the output more random, while lower values like 0.2 will make\n   * it more focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Body param: Controls which (if any) tool is called by the model. `none` means\n   * the model will not call any tools and instead generates a message. `auto` is the\n   * default value and means the model can pick between generating a message or\n   * calling one or more tools. `required` means the model must call one or more\n   * tools before responding to the user. Specifying a particular tool like\n   * `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * Body param: Override the tools the assistant can use for this run. This is\n   * useful for modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * Body param: An alternative to sampling with temperature, called nucleus\n   * sampling, where the model considers the results of the tokens with top_p\n   * probability mass. So 0.1 means only the tokens comprising the top 10%\n   * probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Body param: Controls for how a thread will be truncated prior to the run. Use\n   * this to control the intial context window of the run.\n   */\n  truncation_strategy?: RunCreateParams.TruncationStrategy | null;\n}\n\nexport namespace RunCreateParams {\n  export interface AdditionalMessage {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<AdditionalMessage.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  export namespace AdditionalMessage {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n    }\n\n    export namespace Attachment {\n      export interface FileSearch {\n        /**\n         * The type of tool being defined: `file_search`\n         */\n        type: 'file_search';\n      }\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  export type RunCreateParamsNonStreaming = RunsAPI.RunCreateParamsNonStreaming;\n  export type RunCreateParamsStreaming = RunsAPI.RunCreateParamsStreaming;\n}\n\nexport interface RunCreateParamsNonStreaming extends RunCreateParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream?: false | null;\n}\n\nexport interface RunCreateParamsStreaming extends RunCreateParamsBase {\n  /**\n   * Body param: If `true`, returns a stream of events that happen during the Run as\n   * server-sent events, terminating when the Run enters a terminal state with a\n   * `data: [DONE]` message.\n   */\n  stream: true;\n}\n\nexport interface RunUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface RunListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport interface RunCreateAndPollParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Appends additional instructions at the end of the instructions for the run. This\n   * is useful for modifying the behavior on a per-run basis without overriding other\n   * instructions.\n   */\n  additional_instructions?: string | null;\n\n  /**\n   * Adds additional messages to the thread before creating the run.\n   */\n  additional_messages?: Array<RunCreateAndPollParams.AdditionalMessage> | null;\n\n  /**\n   * Overrides the\n   * [instructions](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n   * of the assistant. This is useful for modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: RunCreateAndPollParams.TruncationStrategy | null;\n}\n\nexport namespace RunCreateAndPollParams {\n  export interface AdditionalMessage {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<AdditionalMessage.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n  }\n\n  export namespace AdditionalMessage {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nexport interface RunCreateAndStreamParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Appends additional instructions at the end of the instructions for the run. This\n   * is useful for modifying the behavior on a per-run basis without overriding other\n   * instructions.\n   */\n  additional_instructions?: string | null;\n\n  /**\n   * Adds additional messages to the thread before creating the run.\n   */\n  additional_messages?: Array<RunCreateAndStreamParams.AdditionalMessage> | null;\n\n  /**\n   * Overrides the\n   * [instructions](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n   * of the assistant. This is useful for modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: RunCreateAndStreamParams.TruncationStrategy | null;\n}\n\nexport namespace RunCreateAndStreamParams {\n  export interface AdditionalMessage {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<AdditionalMessage.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n  }\n\n  export namespace AdditionalMessage {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nexport interface RunStreamParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Appends additional instructions at the end of the instructions for the run. This\n   * is useful for modifying the behavior on a per-run basis without overriding other\n   * instructions.\n   */\n  additional_instructions?: string | null;\n\n  /**\n   * Adds additional messages to the thread before creating the run.\n   */\n  additional_messages?: Array<RunStreamParams.AdditionalMessage> | null;\n\n  /**\n   * Overrides the\n   * [instructions](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n   * of the assistant. This is useful for modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: ThreadsAPI.AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: ThreadsAPI.AssistantToolChoiceOption | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<AssistantsAPI.AssistantTool> | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: RunStreamParams.TruncationStrategy | null;\n}\n\nexport namespace RunStreamParams {\n  export interface AdditionalMessage {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<AdditionalMessage.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n  }\n\n  export namespace AdditionalMessage {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nexport type RunSubmitToolOutputsParams =\n  | RunSubmitToolOutputsParamsNonStreaming\n  | RunSubmitToolOutputsParamsStreaming;\n\nexport interface RunSubmitToolOutputsParamsBase {\n  /**\n   * A list of tools for which the outputs are being submitted.\n   */\n  tool_outputs: Array<RunSubmitToolOutputsParams.ToolOutput>;\n\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: boolean | null;\n}\n\nexport namespace RunSubmitToolOutputsParams {\n  export interface ToolOutput {\n    /**\n     * The output of the tool call to be submitted to continue the run.\n     */\n    output?: string;\n\n    /**\n     * The ID of the tool call in the `required_action` object within the run object\n     * the output is being submitted for.\n     */\n    tool_call_id?: string;\n  }\n\n  export type RunSubmitToolOutputsParamsNonStreaming = RunsAPI.RunSubmitToolOutputsParamsNonStreaming;\n  export type RunSubmitToolOutputsParamsStreaming = RunsAPI.RunSubmitToolOutputsParamsStreaming;\n}\n\nexport interface RunSubmitToolOutputsParamsNonStreaming extends RunSubmitToolOutputsParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: false | null;\n}\n\nexport interface RunSubmitToolOutputsParamsStreaming extends RunSubmitToolOutputsParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream: true;\n}\n\nexport interface RunSubmitToolOutputsAndPollParams {\n  /**\n   * A list of tools for which the outputs are being submitted.\n   */\n  tool_outputs: Array<RunSubmitToolOutputsAndPollParams.ToolOutput>;\n}\n\nexport namespace RunSubmitToolOutputsAndPollParams {\n  export interface ToolOutput {\n    /**\n     * The output of the tool call to be submitted to continue the run.\n     */\n    output?: string;\n\n    /**\n     * The ID of the tool call in the `required_action` object within the run object\n     * the output is being submitted for.\n     */\n    tool_call_id?: string;\n  }\n}\n\nexport interface RunSubmitToolOutputsStreamParams {\n  /**\n   * A list of tools for which the outputs are being submitted.\n   */\n  tool_outputs: Array<RunSubmitToolOutputsStreamParams.ToolOutput>;\n}\n\nexport namespace RunSubmitToolOutputsStreamParams {\n  export interface ToolOutput {\n    /**\n     * The output of the tool call to be submitted to continue the run.\n     */\n    output?: string;\n\n    /**\n     * The ID of the tool call in the `required_action` object within the run object\n     * the output is being submitted for.\n     */\n    tool_call_id?: string;\n  }\n}\n\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n\nexport declare namespace Runs {\n  export {\n    type RequiredActionFunctionToolCall as RequiredActionFunctionToolCall,\n    type Run as Run,\n    type RunStatus as RunStatus,\n    RunsPage as RunsPage,\n    type RunCreateParams as RunCreateParams,\n    type RunCreateParamsNonStreaming as RunCreateParamsNonStreaming,\n    type RunCreateParamsStreaming as RunCreateParamsStreaming,\n    type RunUpdateParams as RunUpdateParams,\n    type RunListParams as RunListParams,\n    type RunCreateAndPollParams,\n    type RunCreateAndStreamParams,\n    type RunStreamParams,\n    type RunSubmitToolOutputsParams as RunSubmitToolOutputsParams,\n    type RunSubmitToolOutputsParamsNonStreaming as RunSubmitToolOutputsParamsNonStreaming,\n    type RunSubmitToolOutputsParamsStreaming as RunSubmitToolOutputsParamsStreaming,\n    type RunSubmitToolOutputsAndPollParams,\n    type RunSubmitToolOutputsStreamParams,\n  };\n\n  export {\n    Steps as Steps,\n    type CodeInterpreterLogs as CodeInterpreterLogs,\n    type CodeInterpreterOutputImage as CodeInterpreterOutputImage,\n    type CodeInterpreterToolCall as CodeInterpreterToolCall,\n    type CodeInterpreterToolCallDelta as CodeInterpreterToolCallDelta,\n    type FileSearchToolCall as FileSearchToolCall,\n    type FileSearchToolCallDelta as FileSearchToolCallDelta,\n    type FunctionToolCall as FunctionToolCall,\n    type FunctionToolCallDelta as FunctionToolCallDelta,\n    type MessageCreationStepDetails as MessageCreationStepDetails,\n    type RunStep as RunStep,\n    type RunStepDelta as RunStepDelta,\n    type RunStepDeltaEvent as RunStepDeltaEvent,\n    type RunStepDeltaMessageDelta as RunStepDeltaMessageDelta,\n    type RunStepInclude as RunStepInclude,\n    type ToolCall as ToolCall,\n    type ToolCallDelta as ToolCallDelta,\n    type ToolCallDeltaObject as ToolCallDeltaObject,\n    type ToolCallsStepDetails as ToolCallsStepDetails,\n    RunStepsPage as RunStepsPage,\n    type StepRetrieveParams as StepRetrieveParams,\n    type StepListParams as StepListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport { AssistantStream, ThreadCreateAndRunParamsBaseStream } from '../../../lib/AssistantStream';\nimport { APIPromise } from '../../../core';\nimport * as Core from '../../../core';\nimport * as ThreadsAPI from './threads';\nimport * as Shared from '../../shared';\nimport * as AssistantsAPI from '../assistants';\nimport * as ChatAPI from '../../chat/chat';\nimport * as MessagesAPI from './messages';\nimport {\n  Annotation,\n  AnnotationDelta,\n  FileCitationAnnotation,\n  FileCitationDeltaAnnotation,\n  FilePathAnnotation,\n  FilePathDeltaAnnotation,\n  ImageFile,\n  ImageFileContentBlock,\n  ImageFileDelta,\n  ImageFileDeltaBlock,\n  ImageURL,\n  ImageURLContentBlock,\n  ImageURLDelta,\n  ImageURLDeltaBlock,\n  Message as MessagesAPIMessage,\n  MessageContent,\n  MessageContentDelta,\n  MessageContentPartParam,\n  MessageCreateParams,\n  MessageDeleted,\n  MessageDelta,\n  MessageDeltaEvent,\n  MessageListParams,\n  MessageUpdateParams,\n  Messages,\n  MessagesPage,\n  RefusalContentBlock,\n  RefusalDeltaBlock,\n  Text,\n  TextContentBlock,\n  TextContentBlockParam,\n  TextDelta,\n  TextDeltaBlock,\n} from './messages';\nimport * as VectorStoresAPI from '../vector-stores/vector-stores';\nimport * as RunsAPI from './runs/runs';\nimport {\n  RequiredActionFunctionToolCall,\n  Run,\n  RunCreateAndPollParams,\n  RunCreateAndStreamParams,\n  RunCreateParams,\n  RunCreateParamsNonStreaming,\n  RunCreateParamsStreaming,\n  RunListParams,\n  RunStatus,\n  RunStreamParams,\n  RunSubmitToolOutputsAndPollParams,\n  RunSubmitToolOutputsParams,\n  RunSubmitToolOutputsParamsNonStreaming,\n  RunSubmitToolOutputsParamsStreaming,\n  RunSubmitToolOutputsStreamParams,\n  RunUpdateParams,\n  Runs,\n  RunsPage,\n} from './runs/runs';\nimport { Stream } from '../../../streaming';\n\nexport class Threads extends APIResource {\n  runs: RunsAPI.Runs = new RunsAPI.Runs(this._client);\n  messages: MessagesAPI.Messages = new MessagesAPI.Messages(this._client);\n\n  /**\n   * Create a thread.\n   */\n  create(body?: ThreadCreateParams, options?: Core.RequestOptions): Core.APIPromise<Thread>;\n  create(options?: Core.RequestOptions): Core.APIPromise<Thread>;\n  create(\n    body: ThreadCreateParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Thread> {\n    if (isRequestOptions(body)) {\n      return this.create({}, body);\n    }\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves a thread.\n   */\n  retrieve(threadId: string, options?: Core.RequestOptions): Core.APIPromise<Thread> {\n    return this._client.get(`/threads/${threadId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Modifies a thread.\n   */\n  update(threadId: string, body: ThreadUpdateParams, options?: Core.RequestOptions): Core.APIPromise<Thread> {\n    return this._client.post(`/threads/${threadId}`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete a thread.\n   */\n  del(threadId: string, options?: Core.RequestOptions): Core.APIPromise<ThreadDeleted> {\n    return this._client.delete(`/threads/${threadId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Create a thread and run it in one request.\n   */\n  createAndRun(\n    body: ThreadCreateAndRunParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<RunsAPI.Run>;\n  createAndRun(\n    body: ThreadCreateAndRunParamsStreaming,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  createAndRun(\n    body: ThreadCreateAndRunParamsBase,\n    options?: Core.RequestOptions,\n  ): APIPromise<Stream<AssistantsAPI.AssistantStreamEvent> | RunsAPI.Run>;\n  createAndRun(\n    body: ThreadCreateAndRunParams,\n    options?: Core.RequestOptions,\n  ): APIPromise<RunsAPI.Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>> {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n      stream: body.stream ?? false,\n    }) as APIPromise<RunsAPI.Run> | APIPromise<Stream<AssistantsAPI.AssistantStreamEvent>>;\n  }\n\n  /**\n   * A helper to create a thread, start a run and then poll for a terminal state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndRunPoll(\n    body: ThreadCreateAndRunParamsNonStreaming,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<Threads.Run> {\n    const run = await this.createAndRun(body, options);\n    return await this.runs.poll(run.thread_id, run.id, options);\n  }\n\n  /**\n   * Create a thread and stream the run back\n   */\n  createAndRunStream(\n    body: ThreadCreateAndRunParamsBaseStream,\n    options?: Core.RequestOptions,\n  ): AssistantStream {\n    return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n  }\n}\n\n/**\n * Specifies the format that the model must output. Compatible with\n * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n *\n * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n * Outputs which ensures the model will match your supplied JSON schema. Learn more\n * in the\n * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n *\n * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n * message the model generates is valid JSON.\n *\n * **Important:** when using JSON mode, you **must** also instruct the model to\n * produce JSON yourself via a system or user message. Without this, the model may\n * generate an unending stream of whitespace until the generation reaches the token\n * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n * the message content may be partially cut off if `finish_reason=\"length\"`, which\n * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n * max context length.\n */\nexport type AssistantResponseFormatOption =\n  | 'auto'\n  | Shared.ResponseFormatText\n  | Shared.ResponseFormatJSONObject\n  | Shared.ResponseFormatJSONSchema;\n\n/**\n * Specifies a tool the model should use. Use to force the model to call a specific\n * tool.\n */\nexport interface AssistantToolChoice {\n  /**\n   * The type of the tool. If type is `function`, the function name must be set\n   */\n  type: 'function' | 'code_interpreter' | 'file_search';\n\n  function?: AssistantToolChoiceFunction;\n}\n\nexport interface AssistantToolChoiceFunction {\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\n/**\n * Controls which (if any) tool is called by the model. `none` means the model will\n * not call any tools and instead generates a message. `auto` is the default value\n * and means the model can pick between generating a message or calling one or more\n * tools. `required` means the model must call one or more tools before responding\n * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n * call that tool.\n */\nexport type AssistantToolChoiceOption = 'none' | 'auto' | 'required' | AssistantToolChoice;\n\n/**\n * Represents a thread that contains\n * [messages](https://platform.openai.com/docs/api-reference/messages).\n */\nexport interface Thread {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the thread was created.\n   */\n  created_at: number;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The object type, which is always `thread`.\n   */\n  object: 'thread';\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources: Thread.ToolResources | null;\n}\n\nexport namespace Thread {\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport interface ThreadDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'thread.deleted';\n}\n\nexport interface ThreadCreateParams {\n  /**\n   * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n   * start the thread with.\n   */\n  messages?: Array<ThreadCreateParams.Message>;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources?: ThreadCreateParams.ToolResources | null;\n}\n\nexport namespace ThreadCreateParams {\n  export interface Message {\n    /**\n     * The text contents of the message.\n     */\n    content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n    /**\n     * The role of the entity that is creating the message. Allowed values include:\n     *\n     * - `user`: Indicates the message is sent by an actual user and should be used in\n     *   most cases to represent user-generated messages.\n     * - `assistant`: Indicates the message is generated by the assistant. Use this\n     *   value to insert messages from the assistant into the conversation.\n     */\n    role: 'user' | 'assistant';\n\n    /**\n     * A list of files attached to the message, and the tools they should be added to.\n     */\n    attachments?: Array<Message.Attachment> | null;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n  }\n\n  export namespace Message {\n    export interface Attachment {\n      /**\n       * The ID of the file to attach to the message.\n       */\n      file_id?: string;\n\n      /**\n       * The tools to add this file to.\n       */\n      tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n    }\n\n    export namespace Attachment {\n      export interface FileSearch {\n        /**\n         * The type of tool being defined: `file_search`\n         */\n        type: 'file_search';\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n\n      /**\n       * A helper to create a\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n       * store attached to the thread.\n       */\n      vector_stores?: Array<FileSearch.VectorStore>;\n    }\n\n    export namespace FileSearch {\n      export interface VectorStore {\n        /**\n         * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n         * strategy. Only applicable if `file_ids` is non-empty.\n         */\n        chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n         * add to the vector store. There can be a maximum of 10000 files in a vector\n         * store.\n         */\n        file_ids?: Array<string>;\n\n        /**\n         * Set of 16 key-value pairs that can be attached to an object. This can be useful\n         * for storing additional information about the object in a structured format, and\n         * querying for objects via API or the dashboard.\n         *\n         * Keys are strings with a maximum length of 64 characters. Values are strings with\n         * a maximum length of 512 characters.\n         */\n        metadata?: Shared.Metadata | null;\n      }\n    }\n  }\n}\n\nexport interface ThreadUpdateParams {\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  tool_resources?: ThreadUpdateParams.ToolResources | null;\n}\n\nexport namespace ThreadUpdateParams {\n  /**\n   * A set of resources that are made available to the assistant's tools in this\n   * thread. The resources are specific to the type of tool. For example, the\n   * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n   * tool requires a list of vector store IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this thread. There can be a maximum of 1 vector store attached to\n       * the thread.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n}\n\nexport type ThreadCreateAndRunParams =\n  | ThreadCreateAndRunParamsNonStreaming\n  | ThreadCreateAndRunParamsStreaming;\n\nexport interface ThreadCreateAndRunParamsBase {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Override the default system message of the assistant. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?: (string & {}) | ChatAPI.ChatModel | null;\n\n  /**\n   * Whether to enable\n   * [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling)\n   * during tool use.\n   */\n  parallel_tool_calls?: boolean;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models#gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured\n   * Outputs which ensures the model will match your supplied JSON schema. Learn more\n   * in the\n   * [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: AssistantResponseFormatOption | null;\n\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: boolean | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * Options to create a new thread. If no thread is provided when running a request,\n   * an empty thread will be created.\n   */\n  thread?: ThreadCreateAndRunParams.Thread;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: AssistantToolChoiceOption | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: ThreadCreateAndRunParams.ToolResources | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<\n    AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool | AssistantsAPI.FunctionTool\n  > | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: ThreadCreateAndRunParams.TruncationStrategy | null;\n}\n\nexport namespace ThreadCreateAndRunParams {\n  /**\n   * Options to create a new thread. If no thread is provided when running a request,\n   * an empty thread will be created.\n   */\n  export interface Thread {\n    /**\n     * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n     * start the thread with.\n     */\n    messages?: Array<Thread.Message>;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format, and\n     * querying for objects via API or the dashboard.\n     *\n     * Keys are strings with a maximum length of 64 characters. Values are strings with\n     * a maximum length of 512 characters.\n     */\n    metadata?: Shared.Metadata | null;\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    tool_resources?: Thread.ToolResources | null;\n  }\n\n  export namespace Thread {\n    export interface Message {\n      /**\n       * The text contents of the message.\n       */\n      content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n      /**\n       * The role of the entity that is creating the message. Allowed values include:\n       *\n       * - `user`: Indicates the message is sent by an actual user and should be used in\n       *   most cases to represent user-generated messages.\n       * - `assistant`: Indicates the message is generated by the assistant. Use this\n       *   value to insert messages from the assistant into the conversation.\n       */\n      role: 'user' | 'assistant';\n\n      /**\n       * A list of files attached to the message, and the tools they should be added to.\n       */\n      attachments?: Array<Message.Attachment> | null;\n\n      /**\n       * Set of 16 key-value pairs that can be attached to an object. This can be useful\n       * for storing additional information about the object in a structured format, and\n       * querying for objects via API or the dashboard.\n       *\n       * Keys are strings with a maximum length of 64 characters. Values are strings with\n       * a maximum length of 512 characters.\n       */\n      metadata?: Shared.Metadata | null;\n    }\n\n    export namespace Message {\n      export interface Attachment {\n        /**\n         * The ID of the file to attach to the message.\n         */\n        file_id?: string;\n\n        /**\n         * The tools to add this file to.\n         */\n        tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\n      }\n\n      export namespace Attachment {\n        export interface FileSearch {\n          /**\n           * The type of tool being defined: `file_search`\n           */\n          type: 'file_search';\n        }\n      }\n    }\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    export interface ToolResources {\n      code_interpreter?: ToolResources.CodeInterpreter;\n\n      file_search?: ToolResources.FileSearch;\n    }\n\n    export namespace ToolResources {\n      export interface CodeInterpreter {\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n         * available to the `code_interpreter` tool. There can be a maximum of 20 files\n         * associated with the tool.\n         */\n        file_ids?: Array<string>;\n      }\n\n      export interface FileSearch {\n        /**\n         * The\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * attached to this thread. There can be a maximum of 1 vector store attached to\n         * the thread.\n         */\n        vector_store_ids?: Array<string>;\n\n        /**\n         * A helper to create a\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n         * store attached to the thread.\n         */\n        vector_stores?: Array<FileSearch.VectorStore>;\n      }\n\n      export namespace FileSearch {\n        export interface VectorStore {\n          /**\n           * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n           * strategy. Only applicable if `file_ids` is non-empty.\n           */\n          chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n\n          /**\n           * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n           * add to the vector store. There can be a maximum of 10000 files in a vector\n           * store.\n           */\n          file_ids?: Array<string>;\n\n          /**\n           * Set of 16 key-value pairs that can be attached to an object. This can be useful\n           * for storing additional information about the object in a structured format, and\n           * querying for objects via API or the dashboard.\n           *\n           * Keys are strings with a maximum length of 64 characters. Values are strings with\n           * a maximum length of 512 characters.\n           */\n          metadata?: Shared.Metadata | null;\n        }\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n\n  export type ThreadCreateAndRunParamsNonStreaming = ThreadsAPI.ThreadCreateAndRunParamsNonStreaming;\n  export type ThreadCreateAndRunParamsStreaming = ThreadsAPI.ThreadCreateAndRunParamsStreaming;\n}\n\nexport interface ThreadCreateAndRunParamsNonStreaming extends ThreadCreateAndRunParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream?: false | null;\n}\n\nexport interface ThreadCreateAndRunParamsStreaming extends ThreadCreateAndRunParamsBase {\n  /**\n   * If `true`, returns a stream of events that happen during the Run as server-sent\n   * events, terminating when the Run enters a terminal state with a `data: [DONE]`\n   * message.\n   */\n  stream: true;\n}\n\nexport interface ThreadCreateAndRunPollParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Override the default system message of the assistant. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  thread?: ThreadCreateAndRunPollParams.Thread;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: AssistantToolChoiceOption | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: ThreadCreateAndRunPollParams.ToolResources | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<\n    AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool | AssistantsAPI.FunctionTool\n  > | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: ThreadCreateAndRunPollParams.TruncationStrategy | null;\n}\n\nexport namespace ThreadCreateAndRunPollParams {\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  export interface Thread {\n    /**\n     * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n     * start the thread with.\n     */\n    messages?: Array<Thread.Message>;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    tool_resources?: Thread.ToolResources | null;\n  }\n\n  export namespace Thread {\n    export interface Message {\n      /**\n       * The text contents of the message.\n       */\n      content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n      /**\n       * The role of the entity that is creating the message. Allowed values include:\n       *\n       * - `user`: Indicates the message is sent by an actual user and should be used in\n       *   most cases to represent user-generated messages.\n       * - `assistant`: Indicates the message is generated by the assistant. Use this\n       *   value to insert messages from the assistant into the conversation.\n       */\n      role: 'user' | 'assistant';\n\n      /**\n       * A list of files attached to the message, and the tools they should be added to.\n       */\n      attachments?: Array<Message.Attachment> | null;\n\n      /**\n       * Set of 16 key-value pairs that can be attached to an object. This can be useful\n       * for storing additional information about the object in a structured format. Keys\n       * can be a maximum of 64 characters long and values can be a maxium of 512\n       * characters long.\n       */\n      metadata?: unknown | null;\n    }\n\n    export namespace Message {\n      export interface Attachment {\n        /**\n         * The ID of the file to attach to the message.\n         */\n        file_id?: string;\n\n        /**\n         * The tools to add this file to.\n         */\n        tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n      }\n    }\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    export interface ToolResources {\n      code_interpreter?: ToolResources.CodeInterpreter;\n\n      file_search?: ToolResources.FileSearch;\n    }\n\n    export namespace ToolResources {\n      export interface CodeInterpreter {\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n         * available to the `code_interpreter` tool. There can be a maximum of 20 files\n         * associated with the tool.\n         */\n        file_ids?: Array<string>;\n      }\n\n      export interface FileSearch {\n        /**\n         * The\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * attached to this thread. There can be a maximum of 1 vector store attached to\n         * the thread.\n         */\n        vector_store_ids?: Array<string>;\n\n        /**\n         * A helper to create a\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n         * store attached to the thread.\n         */\n        vector_stores?: Array<FileSearch.VectorStore>;\n      }\n\n      export namespace FileSearch {\n        export interface VectorStore {\n          /**\n           * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n           * add to the vector store. There can be a maximum of 10000 files in a vector\n           * store.\n           */\n          file_ids?: Array<string>;\n\n          /**\n           * Set of 16 key-value pairs that can be attached to a vector store. This can be\n           * useful for storing additional information about the vector store in a structured\n           * format. Keys can be a maximum of 64 characters long and values can be a maxium\n           * of 512 characters long.\n           */\n          metadata?: unknown;\n        }\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nexport interface ThreadCreateAndRunStreamParams {\n  /**\n   * The ID of the\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to\n   * execute this run.\n   */\n  assistant_id: string;\n\n  /**\n   * Override the default system message of the assistant. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  instructions?: string | null;\n\n  /**\n   * The maximum number of completion tokens that may be used over the course of the\n   * run. The run will make a best effort to use only the number of completion tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * completion tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * The maximum number of prompt tokens that may be used over the course of the run.\n   * The run will make a best effort to use only the number of prompt tokens\n   * specified, across multiple turns of the run. If the run exceeds the number of\n   * prompt tokens specified, the run will end with status `incomplete`. See\n   * `incomplete_details` for more info.\n   */\n  max_prompt_tokens?: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format. Keys\n   * can be a maximum of 64 characters long and values can be a maxium of 512\n   * characters long.\n   */\n  metadata?: unknown | null;\n\n  /**\n   * The ID of the [Model](https://platform.openai.com/docs/api-reference/models) to\n   * be used to execute this run. If a value is provided here, it will override the\n   * model associated with the assistant. If not, the model associated with the\n   * assistant will be used.\n   */\n  model?:\n    | (string & {})\n    | 'gpt-4o'\n    | 'gpt-4o-2024-05-13'\n    | 'gpt-4-turbo'\n    | 'gpt-4-turbo-2024-04-09'\n    | 'gpt-4-0125-preview'\n    | 'gpt-4-turbo-preview'\n    | 'gpt-4-1106-preview'\n    | 'gpt-4-vision-preview'\n    | 'gpt-4'\n    | 'gpt-4-0314'\n    | 'gpt-4-0613'\n    | 'gpt-4-32k'\n    | 'gpt-4-32k-0314'\n    | 'gpt-4-32k-0613'\n    | 'gpt-3.5-turbo'\n    | 'gpt-3.5-turbo-16k'\n    | 'gpt-3.5-turbo-0613'\n    | 'gpt-3.5-turbo-1106'\n    | 'gpt-3.5-turbo-0125'\n    | 'gpt-3.5-turbo-16k-0613'\n    | null;\n\n  /**\n   * Specifies the format that the model must output. Compatible with\n   * [GPT-4o](https://platform.openai.com/docs/models/gpt-4o),\n   * [GPT-4 Turbo](https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4),\n   * and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n   *\n   * Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the\n   * message the model generates is valid JSON.\n   *\n   * **Important:** when using JSON mode, you **must** also instruct the model to\n   * produce JSON yourself via a system or user message. Without this, the model may\n   * generate an unending stream of whitespace until the generation reaches the token\n   * limit, resulting in a long-running and seemingly \"stuck\" request. Also note that\n   * the message content may be partially cut off if `finish_reason=\"length\"`, which\n   * indicates the generation exceeded `max_tokens` or the conversation exceeded the\n   * max context length.\n   */\n  response_format?: AssistantResponseFormatOption | null;\n\n  /**\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\n   * make the output more random, while lower values like 0.2 will make it more\n   * focused and deterministic.\n   */\n  temperature?: number | null;\n\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  thread?: ThreadCreateAndRunStreamParams.Thread;\n\n  /**\n   * Controls which (if any) tool is called by the model. `none` means the model will\n   * not call any tools and instead generates a message. `auto` is the default value\n   * and means the model can pick between generating a message or calling one or more\n   * tools. `required` means the model must call one or more tools before responding\n   * to the user. Specifying a particular tool like `{\"type\": \"file_search\"}` or\n   * `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to\n   * call that tool.\n   */\n  tool_choice?: AssistantToolChoiceOption | null;\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  tool_resources?: ThreadCreateAndRunStreamParams.ToolResources | null;\n\n  /**\n   * Override the tools the assistant can use for this run. This is useful for\n   * modifying the behavior on a per-run basis.\n   */\n  tools?: Array<\n    AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool | AssistantsAPI.FunctionTool\n  > | null;\n\n  /**\n   * An alternative to sampling with temperature, called nucleus sampling, where the\n   * model considers the results of the tokens with top_p probability mass. So 0.1\n   * means only the tokens comprising the top 10% probability mass are considered.\n   *\n   * We generally recommend altering this or temperature but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  truncation_strategy?: ThreadCreateAndRunStreamParams.TruncationStrategy | null;\n}\n\nexport namespace ThreadCreateAndRunStreamParams {\n  /**\n   * If no thread is provided, an empty thread will be created.\n   */\n  export interface Thread {\n    /**\n     * A list of [messages](https://platform.openai.com/docs/api-reference/messages) to\n     * start the thread with.\n     */\n    messages?: Array<Thread.Message>;\n\n    /**\n     * Set of 16 key-value pairs that can be attached to an object. This can be useful\n     * for storing additional information about the object in a structured format. Keys\n     * can be a maximum of 64 characters long and values can be a maxium of 512\n     * characters long.\n     */\n    metadata?: unknown | null;\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    tool_resources?: Thread.ToolResources | null;\n  }\n\n  export namespace Thread {\n    export interface Message {\n      /**\n       * The text contents of the message.\n       */\n      content: string | Array<MessagesAPI.MessageContentPartParam>;\n\n      /**\n       * The role of the entity that is creating the message. Allowed values include:\n       *\n       * - `user`: Indicates the message is sent by an actual user and should be used in\n       *   most cases to represent user-generated messages.\n       * - `assistant`: Indicates the message is generated by the assistant. Use this\n       *   value to insert messages from the assistant into the conversation.\n       */\n      role: 'user' | 'assistant';\n\n      /**\n       * A list of files attached to the message, and the tools they should be added to.\n       */\n      attachments?: Array<Message.Attachment> | null;\n\n      /**\n       * Set of 16 key-value pairs that can be attached to an object. This can be useful\n       * for storing additional information about the object in a structured format. Keys\n       * can be a maximum of 64 characters long and values can be a maxium of 512\n       * characters long.\n       */\n      metadata?: unknown | null;\n    }\n\n    export namespace Message {\n      export interface Attachment {\n        /**\n         * The ID of the file to attach to the message.\n         */\n        file_id?: string;\n\n        /**\n         * The tools to add this file to.\n         */\n        tools?: Array<AssistantsAPI.CodeInterpreterTool | AssistantsAPI.FileSearchTool>;\n      }\n    }\n\n    /**\n     * A set of resources that are made available to the assistant's tools in this\n     * thread. The resources are specific to the type of tool. For example, the\n     * `code_interpreter` tool requires a list of file IDs, while the `file_search`\n     * tool requires a list of vector store IDs.\n     */\n    export interface ToolResources {\n      code_interpreter?: ToolResources.CodeInterpreter;\n\n      file_search?: ToolResources.FileSearch;\n    }\n\n    export namespace ToolResources {\n      export interface CodeInterpreter {\n        /**\n         * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n         * available to the `code_interpreter` tool. There can be a maximum of 20 files\n         * associated with the tool.\n         */\n        file_ids?: Array<string>;\n      }\n\n      export interface FileSearch {\n        /**\n         * The\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * attached to this thread. There can be a maximum of 1 vector store attached to\n         * the thread.\n         */\n        vector_store_ids?: Array<string>;\n\n        /**\n         * A helper to create a\n         * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n         * with file_ids and attach it to this thread. There can be a maximum of 1 vector\n         * store attached to the thread.\n         */\n        vector_stores?: Array<FileSearch.VectorStore>;\n      }\n\n      export namespace FileSearch {\n        export interface VectorStore {\n          /**\n           * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs to\n           * add to the vector store. There can be a maximum of 10000 files in a vector\n           * store.\n           */\n          file_ids?: Array<string>;\n\n          /**\n           * Set of 16 key-value pairs that can be attached to a vector store. This can be\n           * useful for storing additional information about the vector store in a structured\n           * format. Keys can be a maximum of 64 characters long and values can be a maxium\n           * of 512 characters long.\n           */\n          metadata?: unknown;\n        }\n      }\n    }\n  }\n\n  /**\n   * A set of resources that are used by the assistant's tools. The resources are\n   * specific to the type of tool. For example, the `code_interpreter` tool requires\n   * a list of file IDs, while the `file_search` tool requires a list of vector store\n   * IDs.\n   */\n  export interface ToolResources {\n    code_interpreter?: ToolResources.CodeInterpreter;\n\n    file_search?: ToolResources.FileSearch;\n  }\n\n  export namespace ToolResources {\n    export interface CodeInterpreter {\n      /**\n       * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n       * available to the `code_interpreter` tool. There can be a maximum of 20 files\n       * associated with the tool.\n       */\n      file_ids?: Array<string>;\n    }\n\n    export interface FileSearch {\n      /**\n       * The ID of the\n       * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n       * attached to this assistant. There can be a maximum of 1 vector store attached to\n       * the assistant.\n       */\n      vector_store_ids?: Array<string>;\n    }\n  }\n\n  /**\n   * Controls for how a thread will be truncated prior to the run. Use this to\n   * control the intial context window of the run.\n   */\n  export interface TruncationStrategy {\n    /**\n     * The truncation strategy to use for the thread. The default is `auto`. If set to\n     * `last_messages`, the thread will be truncated to the n most recent messages in\n     * the thread. When set to `auto`, messages in the middle of the thread will be\n     * dropped to fit the context length of the model, `max_prompt_tokens`.\n     */\n    type: 'auto' | 'last_messages';\n\n    /**\n     * The number of most recent messages from the thread when constructing the context\n     * for the run.\n     */\n    last_messages?: number | null;\n  }\n}\n\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n\nexport declare namespace Threads {\n  export {\n    type AssistantResponseFormatOption as AssistantResponseFormatOption,\n    type AssistantToolChoice as AssistantToolChoice,\n    type AssistantToolChoiceFunction as AssistantToolChoiceFunction,\n    type AssistantToolChoiceOption as AssistantToolChoiceOption,\n    type Thread as Thread,\n    type ThreadDeleted as ThreadDeleted,\n    type ThreadCreateParams as ThreadCreateParams,\n    type ThreadUpdateParams as ThreadUpdateParams,\n    type ThreadCreateAndRunParams as ThreadCreateAndRunParams,\n    type ThreadCreateAndRunParamsNonStreaming as ThreadCreateAndRunParamsNonStreaming,\n    type ThreadCreateAndRunParamsStreaming as ThreadCreateAndRunParamsStreaming,\n    type ThreadCreateAndRunPollParams,\n    type ThreadCreateAndRunStreamParams,\n  };\n\n  export {\n    Runs as Runs,\n    type RequiredActionFunctionToolCall as RequiredActionFunctionToolCall,\n    type Run as Run,\n    type RunStatus as RunStatus,\n    RunsPage as RunsPage,\n    type RunCreateParams as RunCreateParams,\n    type RunCreateParamsNonStreaming as RunCreateParamsNonStreaming,\n    type RunCreateParamsStreaming as RunCreateParamsStreaming,\n    type RunUpdateParams as RunUpdateParams,\n    type RunListParams as RunListParams,\n    type RunCreateAndPollParams,\n    type RunCreateAndStreamParams,\n    type RunStreamParams,\n    type RunSubmitToolOutputsParams as RunSubmitToolOutputsParams,\n    type RunSubmitToolOutputsParamsNonStreaming as RunSubmitToolOutputsParamsNonStreaming,\n    type RunSubmitToolOutputsParamsStreaming as RunSubmitToolOutputsParamsStreaming,\n    type RunSubmitToolOutputsAndPollParams,\n    type RunSubmitToolOutputsStreamParams,\n  };\n\n  export {\n    Messages as Messages,\n    type Annotation as Annotation,\n    type AnnotationDelta as AnnotationDelta,\n    type FileCitationAnnotation as FileCitationAnnotation,\n    type FileCitationDeltaAnnotation as FileCitationDeltaAnnotation,\n    type FilePathAnnotation as FilePathAnnotation,\n    type FilePathDeltaAnnotation as FilePathDeltaAnnotation,\n    type ImageFile as ImageFile,\n    type ImageFileContentBlock as ImageFileContentBlock,\n    type ImageFileDelta as ImageFileDelta,\n    type ImageFileDeltaBlock as ImageFileDeltaBlock,\n    type ImageURL as ImageURL,\n    type ImageURLContentBlock as ImageURLContentBlock,\n    type ImageURLDelta as ImageURLDelta,\n    type ImageURLDeltaBlock as ImageURLDeltaBlock,\n    type MessagesAPIMessage as Message,\n    type MessageContent as MessageContent,\n    type MessageContentDelta as MessageContentDelta,\n    type MessageContentPartParam as MessageContentPartParam,\n    type MessageDeleted as MessageDeleted,\n    type MessageDelta as MessageDelta,\n    type MessageDeltaEvent as MessageDeltaEvent,\n    type RefusalContentBlock as RefusalContentBlock,\n    type RefusalDeltaBlock as RefusalDeltaBlock,\n    type Text as Text,\n    type TextContentBlock as TextContentBlock,\n    type TextContentBlockParam as TextContentBlockParam,\n    type TextDelta as TextDelta,\n    type TextDeltaBlock as TextDeltaBlock,\n    MessagesPage as MessagesPage,\n    type MessageCreateParams as MessageCreateParams,\n    type MessageUpdateParams as MessageUpdateParams,\n    type MessageListParams as MessageListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { sleep, Uploadable, isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as VectorStoresAPI from './vector-stores';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class Files extends APIResource {\n  /**\n   * Create a vector store file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to a\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n   */\n  create(\n    vectorStoreId: string,\n    body: FileCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFile> {\n    return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves a vector store file.\n   */\n  retrieve(\n    vectorStoreId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFile> {\n    return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of vector store files.\n   */\n  list(\n    vectorStoreId: string,\n    query?: FileListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, VectorStoreFile>;\n  list(\n    vectorStoreId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, VectorStoreFile>;\n  list(\n    vectorStoreId: string,\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, VectorStoreFile> {\n    if (isRequestOptions(query)) {\n      return this.list(vectorStoreId, {}, query);\n    }\n    return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete a vector store file. This will remove the file from the vector store but\n   * the file itself will not be deleted. To delete the file, use the\n   * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n   * endpoint.\n   */\n  del(\n    vectorStoreId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFileDeleted> {\n    return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Attach a file to the given vector store and wait for it to be processed.\n   */\n  async createAndPoll(\n    vectorStoreId: string,\n    body: FileCreateParams,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const file = await this.create(vectorStoreId, body, options);\n    return await this.poll(vectorStoreId, file.id, options);\n  }\n\n  /**\n   * Wait for the vector store file to finish processing.\n   *\n   * Note: this will return even if the file failed to process, you need to check\n   * file.last_error and file.status to handle these cases\n   */\n  async poll(\n    vectorStoreId: string,\n    fileId: string,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const headers: { [key: string]: string } = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n    while (true) {\n      const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n        ...options,\n        headers,\n      }).withResponse();\n\n      const file = fileResponse.data;\n\n      switch (file.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'completed':\n          return file;\n      }\n    }\n  }\n\n  /**\n   * Upload a file to the `files` API and then attach it to the given vector store.\n   *\n   * Note the file will be asynchronously processed (you can use the alternative\n   * polling helper method to wait for processing to complete).\n   */\n  async upload(\n    vectorStoreId: string,\n    file: Uploadable,\n    options?: Core.RequestOptions,\n  ): Promise<VectorStoreFile> {\n    const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n    return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n  }\n\n  /**\n   * Add a file to a vector store and poll until processing is complete.\n   */\n  async uploadAndPoll(\n    vectorStoreId: string,\n    file: Uploadable,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFile> {\n    const fileInfo = await this.upload(vectorStoreId, file, options);\n    return await this.poll(vectorStoreId, fileInfo.id, options);\n  }\n}\n\nexport class VectorStoreFilesPage extends CursorPage<VectorStoreFile> {}\n\n/**\n * A list of files attached to a vector store.\n */\nexport interface VectorStoreFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store file was created.\n   */\n  created_at: number;\n\n  /**\n   * The last error associated with this vector store file. Will be `null` if there\n   * are no errors.\n   */\n  last_error: VectorStoreFile.LastError | null;\n\n  /**\n   * The object type, which is always `vector_store.file`.\n   */\n  object: 'vector_store.file';\n\n  /**\n   * The status of the vector store file, which can be either `in_progress`,\n   * `completed`, `cancelled`, or `failed`. The status `completed` indicates that the\n   * vector store file is ready for use.\n   */\n  status: 'in_progress' | 'completed' | 'cancelled' | 'failed';\n\n  /**\n   * The total vector store usage in bytes. Note that this may be different from the\n   * original file size.\n   */\n  usage_bytes: number;\n\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  vector_store_id: string;\n\n  /**\n   * The strategy used to chunk the file.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategy;\n}\n\nexport namespace VectorStoreFile {\n  /**\n   * The last error associated with this vector store file. Will be `null` if there\n   * are no errors.\n   */\n  export interface LastError {\n    /**\n     * One of `server_error` or `rate_limit_exceeded`.\n     */\n    code: 'server_error' | 'unsupported_file' | 'invalid_file';\n\n    /**\n     * A human-readable description of the error.\n     */\n    message: string;\n  }\n}\n\nexport interface VectorStoreFileDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'vector_store.file.deleted';\n}\n\nexport interface FileCreateParams {\n  /**\n   * A [File](https://platform.openai.com/docs/api-reference/files) ID that the\n   * vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_id: string;\n\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`.\n   */\n  filter?: 'in_progress' | 'completed' | 'failed' | 'cancelled';\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\n\nexport declare namespace Files {\n  export {\n    type VectorStoreFile as VectorStoreFile,\n    type VectorStoreFileDeleted as VectorStoreFileDeleted,\n    VectorStoreFilesPage as VectorStoreFilesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport { sleep } from '../../../core';\nimport { Uploadable } from '../../../core';\nimport { allSettledWithThrow } from '../../../lib/Util';\nimport * as Core from '../../../core';\nimport * as FilesAPI from './files';\nimport { VectorStoreFilesPage } from './files';\nimport * as VectorStoresAPI from './vector-stores';\nimport { type CursorPageParams } from '../../../pagination';\n\nexport class FileBatches extends APIResource {\n  /**\n   * Create a vector store file batch.\n   */\n  create(\n    vectorStoreId: string,\n    body: FileBatchCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFileBatch> {\n    return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves a vector store file batch.\n   */\n  retrieve(\n    vectorStoreId: string,\n    batchId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFileBatch> {\n    return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Cancel a vector store file batch. This attempts to cancel the processing of\n   * files in this batch as soon as possible.\n   */\n  cancel(\n    vectorStoreId: string,\n    batchId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStoreFileBatch> {\n    return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Create a vector store batch and poll until all files have been processed.\n   */\n  async createAndPoll(\n    vectorStoreId: string,\n    body: FileBatchCreateParams,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFileBatch> {\n    const batch = await this.create(vectorStoreId, body);\n    return await this.poll(vectorStoreId, batch.id, options);\n  }\n\n  /**\n   * Returns a list of vector store files in a batch.\n   */\n  listFiles(\n    vectorStoreId: string,\n    batchId: string,\n    query?: FileBatchListFilesParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, FilesAPI.VectorStoreFile>;\n  listFiles(\n    vectorStoreId: string,\n    batchId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, FilesAPI.VectorStoreFile>;\n  listFiles(\n    vectorStoreId: string,\n    batchId: string,\n    query: FileBatchListFilesParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoreFilesPage, FilesAPI.VectorStoreFile> {\n    if (isRequestOptions(query)) {\n      return this.listFiles(vectorStoreId, batchId, {}, query);\n    }\n    return this._client.getAPIList(\n      `/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`,\n      VectorStoreFilesPage,\n      { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } },\n    );\n  }\n\n  /**\n   * Wait for the given file batch to be processed.\n   *\n   * Note: this will return even if one of the files failed to process, you need to\n   * check batch.file_counts.failed_count to handle this case.\n   */\n  async poll(\n    vectorStoreId: string,\n    batchId: string,\n    options?: Core.RequestOptions & { pollIntervalMs?: number },\n  ): Promise<VectorStoreFileBatch> {\n    const headers: { [key: string]: string } = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n\n    while (true) {\n      const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n        ...options,\n        headers,\n      }).withResponse();\n\n      switch (batch.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'cancelled':\n        case 'completed':\n          return batch;\n      }\n    }\n  }\n\n  /**\n   * Uploads the given files concurrently and then creates a vector store file batch.\n   *\n   * The concurrency limit is configurable using the `maxConcurrency` parameter.\n   */\n  async uploadAndPoll(\n    vectorStoreId: string,\n    { files, fileIds = [] }: { files: Uploadable[]; fileIds?: string[] },\n    options?: Core.RequestOptions & { pollIntervalMs?: number; maxConcurrency?: number },\n  ): Promise<VectorStoreFileBatch> {\n    if (files == null || files.length == 0) {\n      throw new Error(\n        `No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`,\n      );\n    }\n\n    const configuredConcurrency = options?.maxConcurrency ?? 5;\n\n    // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n    const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n\n    const client = this._client;\n    const fileIterator = files.values();\n    const allFileIds: string[] = [...fileIds];\n\n    // This code is based on this design. The libraries don't accommodate our environment limits.\n    // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n    async function processFiles(iterator: IterableIterator<Uploadable>) {\n      for (let item of iterator) {\n        const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n        allFileIds.push(fileObj.id);\n      }\n    }\n\n    // Start workers to process results\n    const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n\n    // Wait for all processing to complete.\n    await allSettledWithThrow(workers);\n\n    return await this.createAndPoll(vectorStoreId, {\n      file_ids: allFileIds,\n    });\n  }\n}\n\n/**\n * A batch of files attached to a vector store.\n */\nexport interface VectorStoreFileBatch {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store files batch was\n   * created.\n   */\n  created_at: number;\n\n  file_counts: VectorStoreFileBatch.FileCounts;\n\n  /**\n   * The object type, which is always `vector_store.file_batch`.\n   */\n  object: 'vector_store.files_batch';\n\n  /**\n   * The status of the vector store files batch, which can be either `in_progress`,\n   * `completed`, `cancelled` or `failed`.\n   */\n  status: 'in_progress' | 'completed' | 'cancelled' | 'failed';\n\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  vector_store_id: string;\n}\n\nexport namespace VectorStoreFileBatch {\n  export interface FileCounts {\n    /**\n     * The number of files that where cancelled.\n     */\n    cancelled: number;\n\n    /**\n     * The number of files that have been processed.\n     */\n    completed: number;\n\n    /**\n     * The number of files that have failed to process.\n     */\n    failed: number;\n\n    /**\n     * The number of files that are currently being processed.\n     */\n    in_progress: number;\n\n    /**\n     * The total number of files.\n     */\n    total: number;\n  }\n}\n\nexport interface FileBatchCreateParams {\n  /**\n   * A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that\n   * the vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_ids: Array<string>;\n\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: VectorStoresAPI.FileChunkingStrategyParam;\n}\n\nexport interface FileBatchListFilesParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`.\n   */\n  filter?: 'in_progress' | 'completed' | 'failed' | 'cancelled';\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace FileBatches {\n  export {\n    type VectorStoreFileBatch as VectorStoreFileBatch,\n    type FileBatchCreateParams as FileBatchCreateParams,\n    type FileBatchListFilesParams as FileBatchListFilesParams,\n  };\n}\n\nexport { VectorStoreFilesPage };\n","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async <R>(promises: Promise<R>[]): Promise<R[]> => {\n  const results = await Promise.allSettled(promises);\n  const rejected = results.filter((result): result is PromiseRejectedResult => result.status === 'rejected');\n  if (rejected.length) {\n    for (const result of rejected) {\n      console.error(result.reason);\n    }\n\n    throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n  }\n\n  // Note: TS was complaining about using `.filter().map()` here for some reason\n  const values: R[] = [];\n  for (const result of results) {\n    if (result.status === 'fulfilled') {\n      values.push(result.value);\n    }\n  }\n  return values;\n};\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as Shared from '../../shared';\nimport * as FileBatchesAPI from './file-batches';\nimport {\n  FileBatchCreateParams,\n  FileBatchListFilesParams,\n  FileBatches,\n  VectorStoreFileBatch,\n} from './file-batches';\nimport * as FilesAPI from './files';\nimport {\n  FileCreateParams,\n  FileListParams,\n  Files,\n  VectorStoreFile,\n  VectorStoreFileDeleted,\n  VectorStoreFilesPage,\n} from './files';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class VectorStores extends APIResource {\n  files: FilesAPI.Files = new FilesAPI.Files(this._client);\n  fileBatches: FileBatchesAPI.FileBatches = new FileBatchesAPI.FileBatches(this._client);\n\n  /**\n   * Create a vector store.\n   */\n  create(body: VectorStoreCreateParams, options?: Core.RequestOptions): Core.APIPromise<VectorStore> {\n    return this._client.post('/vector_stores', {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves a vector store.\n   */\n  retrieve(vectorStoreId: string, options?: Core.RequestOptions): Core.APIPromise<VectorStore> {\n    return this._client.get(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Modifies a vector store.\n   */\n  update(\n    vectorStoreId: string,\n    body: VectorStoreUpdateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<VectorStore> {\n    return this._client.post(`/vector_stores/${vectorStoreId}`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of vector stores.\n   */\n  list(\n    query?: VectorStoreListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoresPage, VectorStore>;\n  list(options?: Core.RequestOptions): Core.PagePromise<VectorStoresPage, VectorStore>;\n  list(\n    query: VectorStoreListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<VectorStoresPage, VectorStore> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete a vector store.\n   */\n  del(vectorStoreId: string, options?: Core.RequestOptions): Core.APIPromise<VectorStoreDeleted> {\n    return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n    });\n  }\n}\n\nexport class VectorStoresPage extends CursorPage<VectorStore> {}\n\n/**\n * The default strategy. This strategy currently uses a `max_chunk_size_tokens` of\n * `800` and `chunk_overlap_tokens` of `400`.\n */\nexport interface AutoFileChunkingStrategyParam {\n  /**\n   * Always `auto`.\n   */\n  type: 'auto';\n}\n\n/**\n * The strategy used to chunk the file.\n */\nexport type FileChunkingStrategy = StaticFileChunkingStrategyObject | OtherFileChunkingStrategyObject;\n\n/**\n * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n * strategy. Only applicable if `file_ids` is non-empty.\n */\nexport type FileChunkingStrategyParam = AutoFileChunkingStrategyParam | StaticFileChunkingStrategyObjectParam;\n\n/**\n * This is returned when the chunking strategy is unknown. Typically, this is\n * because the file was indexed before the `chunking_strategy` concept was\n * introduced in the API.\n */\nexport interface OtherFileChunkingStrategyObject {\n  /**\n   * Always `other`.\n   */\n  type: 'other';\n}\n\nexport interface StaticFileChunkingStrategy {\n  /**\n   * The number of tokens that overlap between chunks. The default value is `400`.\n   *\n   * Note that the overlap must not exceed half of `max_chunk_size_tokens`.\n   */\n  chunk_overlap_tokens: number;\n\n  /**\n   * The maximum number of tokens in each chunk. The default value is `800`. The\n   * minimum value is `100` and the maximum value is `4096`.\n   */\n  max_chunk_size_tokens: number;\n}\n\nexport interface StaticFileChunkingStrategyObject {\n  static: StaticFileChunkingStrategy;\n\n  /**\n   * Always `static`.\n   */\n  type: 'static';\n}\n\nexport interface StaticFileChunkingStrategyObjectParam {\n  static: StaticFileChunkingStrategy;\n\n  /**\n   * Always `static`.\n   */\n  type: 'static';\n}\n\n/**\n * A vector store is a collection of processed files can be used by the\n * `file_search` tool.\n */\nexport interface VectorStore {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store was created.\n   */\n  created_at: number;\n\n  file_counts: VectorStore.FileCounts;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store was last active.\n   */\n  last_active_at: number | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name: string;\n\n  /**\n   * The object type, which is always `vector_store`.\n   */\n  object: 'vector_store';\n\n  /**\n   * The status of the vector store, which can be either `expired`, `in_progress`, or\n   * `completed`. A status of `completed` indicates that the vector store is ready\n   * for use.\n   */\n  status: 'expired' | 'in_progress' | 'completed';\n\n  /**\n   * The total number of bytes used by the files in the vector store.\n   */\n  usage_bytes: number;\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStore.ExpiresAfter;\n\n  /**\n   * The Unix timestamp (in seconds) for when the vector store will expire.\n   */\n  expires_at?: number | null;\n}\n\nexport namespace VectorStore {\n  export interface FileCounts {\n    /**\n     * The number of files that were cancelled.\n     */\n    cancelled: number;\n\n    /**\n     * The number of files that have been successfully processed.\n     */\n    completed: number;\n\n    /**\n     * The number of files that have failed to process.\n     */\n    failed: number;\n\n    /**\n     * The number of files that are currently being processed.\n     */\n    in_progress: number;\n\n    /**\n     * The total number of files.\n     */\n    total: number;\n  }\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreDeleted {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'vector_store.deleted';\n}\n\nexport interface VectorStoreCreateParams {\n  /**\n   * The chunking strategy used to chunk the file(s). If not set, will use the `auto`\n   * strategy. Only applicable if `file_ids` is non-empty.\n   */\n  chunking_strategy?: FileChunkingStrategyParam;\n\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStoreCreateParams.ExpiresAfter;\n\n  /**\n   * A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that\n   * the vector store should use. Useful for tools like `file_search` that can access\n   * files.\n   */\n  file_ids?: Array<string>;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name?: string;\n}\n\nexport namespace VectorStoreCreateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreUpdateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  expires_after?: VectorStoreUpdateParams.ExpiresAfter | null;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The name of the vector store.\n   */\n  name?: string | null;\n}\n\nexport namespace VectorStoreUpdateParams {\n  /**\n   * The expiration policy for a vector store.\n   */\n  export interface ExpiresAfter {\n    /**\n     * Anchor timestamp after which the expiration policy applies. Supported anchors:\n     * `last_active_at`.\n     */\n    anchor: 'last_active_at';\n\n    /**\n     * The number of days after the anchor time that the vector store will expire.\n     */\n    days: number;\n  }\n}\n\nexport interface VectorStoreListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\n   * to fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileBatches = FileBatches;\n\nexport declare namespace VectorStores {\n  export {\n    type AutoFileChunkingStrategyParam as AutoFileChunkingStrategyParam,\n    type FileChunkingStrategy as FileChunkingStrategy,\n    type FileChunkingStrategyParam as FileChunkingStrategyParam,\n    type OtherFileChunkingStrategyObject as OtherFileChunkingStrategyObject,\n    type StaticFileChunkingStrategy as StaticFileChunkingStrategy,\n    type StaticFileChunkingStrategyObject as StaticFileChunkingStrategyObject,\n    type StaticFileChunkingStrategyObjectParam as StaticFileChunkingStrategyObjectParam,\n    type VectorStore as VectorStore,\n    type VectorStoreDeleted as VectorStoreDeleted,\n    VectorStoresPage as VectorStoresPage,\n    type VectorStoreCreateParams as VectorStoreCreateParams,\n    type VectorStoreUpdateParams as VectorStoreUpdateParams,\n    type VectorStoreListParams as VectorStoreListParams,\n  };\n\n  export {\n    Files as Files,\n    type VectorStoreFile as VectorStoreFile,\n    type VectorStoreFileDeleted as VectorStoreFileDeleted,\n    VectorStoreFilesPage as VectorStoreFilesPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n\n  export {\n    FileBatches as FileBatches,\n    type VectorStoreFileBatch as VectorStoreFileBatch,\n    type FileBatchCreateParams as FileBatchCreateParams,\n    type FileBatchListFilesParams as FileBatchListFilesParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as AssistantsAPI from './assistants';\nimport * as ChatAPI from './chat/chat';\nimport {\n  Assistant,\n  AssistantCreateParams,\n  AssistantDeleted,\n  AssistantListParams,\n  AssistantStreamEvent,\n  AssistantTool,\n  AssistantUpdateParams,\n  Assistants,\n  AssistantsPage,\n  CodeInterpreterTool,\n  FileSearchTool,\n  FunctionTool,\n  MessageStreamEvent,\n  RunStepStreamEvent,\n  RunStreamEvent,\n  ThreadStreamEvent,\n} from './assistants';\nimport * as RealtimeAPI from './realtime/realtime';\nimport { Realtime } from './realtime/realtime';\nimport * as ThreadsAPI from './threads/threads';\nimport {\n  AssistantResponseFormatOption,\n  AssistantToolChoice,\n  AssistantToolChoiceFunction,\n  AssistantToolChoiceOption,\n  Thread,\n  ThreadCreateAndRunParams,\n  ThreadCreateAndRunParamsNonStreaming,\n  ThreadCreateAndRunParamsStreaming,\n  ThreadCreateAndRunPollParams,\n  ThreadCreateAndRunStreamParams,\n  ThreadCreateParams,\n  ThreadDeleted,\n  ThreadUpdateParams,\n  Threads,\n} from './threads/threads';\nimport * as VectorStoresAPI from './vector-stores/vector-stores';\nimport {\n  AutoFileChunkingStrategyParam,\n  FileChunkingStrategy,\n  FileChunkingStrategyParam,\n  OtherFileChunkingStrategyObject,\n  StaticFileChunkingStrategy,\n  StaticFileChunkingStrategyObject,\n  StaticFileChunkingStrategyObjectParam,\n  VectorStore,\n  VectorStoreCreateParams,\n  VectorStoreDeleted,\n  VectorStoreListParams,\n  VectorStoreUpdateParams,\n  VectorStores,\n  VectorStoresPage,\n} from './vector-stores/vector-stores';\nimport { Chat } from './chat/chat';\n\nexport class Beta extends APIResource {\n  realtime: RealtimeAPI.Realtime = new RealtimeAPI.Realtime(this._client);\n  vectorStores: VectorStoresAPI.VectorStores = new VectorStoresAPI.VectorStores(this._client);\n  chat: ChatAPI.Chat = new ChatAPI.Chat(this._client);\n  assistants: AssistantsAPI.Assistants = new AssistantsAPI.Assistants(this._client);\n  threads: ThreadsAPI.Threads = new ThreadsAPI.Threads(this._client);\n}\n\nBeta.Realtime = Realtime;\nBeta.VectorStores = VectorStores;\nBeta.VectorStoresPage = VectorStoresPage;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n\nexport declare namespace Beta {\n  export { Realtime as Realtime };\n\n  export {\n    VectorStores as VectorStores,\n    type AutoFileChunkingStrategyParam as AutoFileChunkingStrategyParam,\n    type FileChunkingStrategy as FileChunkingStrategy,\n    type FileChunkingStrategyParam as FileChunkingStrategyParam,\n    type OtherFileChunkingStrategyObject as OtherFileChunkingStrategyObject,\n    type StaticFileChunkingStrategy as StaticFileChunkingStrategy,\n    type StaticFileChunkingStrategyObject as StaticFileChunkingStrategyObject,\n    type StaticFileChunkingStrategyObjectParam as StaticFileChunkingStrategyObjectParam,\n    type VectorStore as VectorStore,\n    type VectorStoreDeleted as VectorStoreDeleted,\n    VectorStoresPage as VectorStoresPage,\n    type VectorStoreCreateParams as VectorStoreCreateParams,\n    type VectorStoreUpdateParams as VectorStoreUpdateParams,\n    type VectorStoreListParams as VectorStoreListParams,\n  };\n\n  export { Chat };\n\n  export {\n    Assistants as Assistants,\n    type Assistant as Assistant,\n    type AssistantDeleted as AssistantDeleted,\n    type AssistantStreamEvent as AssistantStreamEvent,\n    type AssistantTool as AssistantTool,\n    type CodeInterpreterTool as CodeInterpreterTool,\n    type FileSearchTool as FileSearchTool,\n    type FunctionTool as FunctionTool,\n    type MessageStreamEvent as MessageStreamEvent,\n    type RunStepStreamEvent as RunStepStreamEvent,\n    type RunStreamEvent as RunStreamEvent,\n    type ThreadStreamEvent as ThreadStreamEvent,\n    AssistantsPage as AssistantsPage,\n    type AssistantCreateParams as AssistantCreateParams,\n    type AssistantUpdateParams as AssistantUpdateParams,\n    type AssistantListParams as AssistantListParams,\n  };\n\n  export {\n    Threads as Threads,\n    type AssistantResponseFormatOption as AssistantResponseFormatOption,\n    type AssistantToolChoice as AssistantToolChoice,\n    type AssistantToolChoiceFunction as AssistantToolChoiceFunction,\n    type AssistantToolChoiceOption as AssistantToolChoiceOption,\n    type Thread as Thread,\n    type ThreadDeleted as ThreadDeleted,\n    type ThreadCreateParams as ThreadCreateParams,\n    type ThreadUpdateParams as ThreadUpdateParams,\n    type ThreadCreateAndRunParams as ThreadCreateAndRunParams,\n    type ThreadCreateAndRunParamsNonStreaming as ThreadCreateAndRunParamsNonStreaming,\n    type ThreadCreateAndRunParamsStreaming as ThreadCreateAndRunParamsStreaming,\n    type ThreadCreateAndRunPollParams,\n    type ThreadCreateAndRunStreamParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { isRequestOptions } from '../core';\nimport * as Core from '../core';\nimport * as BatchesAPI from './batches';\nimport * as Shared from './shared';\nimport { CursorPage, type CursorPageParams } from '../pagination';\n\nexport class Batches extends APIResource {\n  /**\n   * Creates and executes a batch from an uploaded file of requests\n   */\n  create(body: BatchCreateParams, options?: Core.RequestOptions): Core.APIPromise<Batch> {\n    return this._client.post('/batches', { body, ...options });\n  }\n\n  /**\n   * Retrieves a batch.\n   */\n  retrieve(batchId: string, options?: Core.RequestOptions): Core.APIPromise<Batch> {\n    return this._client.get(`/batches/${batchId}`, options);\n  }\n\n  /**\n   * List your organization's batches.\n   */\n  list(query?: BatchListParams, options?: Core.RequestOptions): Core.PagePromise<BatchesPage, Batch>;\n  list(options?: Core.RequestOptions): Core.PagePromise<BatchesPage, Batch>;\n  list(\n    query: BatchListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<BatchesPage, Batch> {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n  }\n\n  /**\n   * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n   * 10 minutes, before changing to `cancelled`, where it will have partial results\n   * (if any) available in the output file.\n   */\n  cancel(batchId: string, options?: Core.RequestOptions): Core.APIPromise<Batch> {\n    return this._client.post(`/batches/${batchId}/cancel`, options);\n  }\n}\n\nexport class BatchesPage extends CursorPage<Batch> {}\n\nexport interface Batch {\n  id: string;\n\n  /**\n   * The time frame within which the batch should be processed.\n   */\n  completion_window: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was created.\n   */\n  created_at: number;\n\n  /**\n   * The OpenAI API endpoint used by the batch.\n   */\n  endpoint: string;\n\n  /**\n   * The ID of the input file for the batch.\n   */\n  input_file_id: string;\n\n  /**\n   * The object type, which is always `batch`.\n   */\n  object: 'batch';\n\n  /**\n   * The current status of the batch.\n   */\n  status:\n    | 'validating'\n    | 'failed'\n    | 'in_progress'\n    | 'finalizing'\n    | 'completed'\n    | 'expired'\n    | 'cancelling'\n    | 'cancelled';\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was cancelled.\n   */\n  cancelled_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started cancelling.\n   */\n  cancelling_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch was completed.\n   */\n  completed_at?: number;\n\n  /**\n   * The ID of the file containing the outputs of requests with errors.\n   */\n  error_file_id?: string;\n\n  errors?: Batch.Errors;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch expired.\n   */\n  expired_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch will expire.\n   */\n  expires_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch failed.\n   */\n  failed_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started finalizing.\n   */\n  finalizing_at?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the batch started processing.\n   */\n  in_progress_at?: number;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n\n  /**\n   * The ID of the file containing the outputs of successfully executed requests.\n   */\n  output_file_id?: string;\n\n  /**\n   * The request counts for different statuses within the batch.\n   */\n  request_counts?: BatchRequestCounts;\n}\n\nexport namespace Batch {\n  export interface Errors {\n    data?: Array<BatchesAPI.BatchError>;\n\n    /**\n     * The object type, which is always `list`.\n     */\n    object?: string;\n  }\n}\n\nexport interface BatchError {\n  /**\n   * An error code identifying the error type.\n   */\n  code?: string;\n\n  /**\n   * The line number of the input file where the error occurred, if applicable.\n   */\n  line?: number | null;\n\n  /**\n   * A human-readable message providing more details about the error.\n   */\n  message?: string;\n\n  /**\n   * The name of the parameter that caused the error, if applicable.\n   */\n  param?: string | null;\n}\n\n/**\n * The request counts for different statuses within the batch.\n */\nexport interface BatchRequestCounts {\n  /**\n   * Number of requests that have been completed successfully.\n   */\n  completed: number;\n\n  /**\n   * Number of requests that have failed.\n   */\n  failed: number;\n\n  /**\n   * Total number of requests in the batch.\n   */\n  total: number;\n}\n\nexport interface BatchCreateParams {\n  /**\n   * The time frame within which the batch should be processed. Currently only `24h`\n   * is supported.\n   */\n  completion_window: '24h';\n\n  /**\n   * The endpoint to be used for all requests in the batch. Currently\n   * `/v1/chat/completions`, `/v1/embeddings`, and `/v1/completions` are supported.\n   * Note that `/v1/embeddings` batches are also restricted to a maximum of 50,000\n   * embedding inputs across all requests in the batch.\n   */\n  endpoint: '/v1/chat/completions' | '/v1/embeddings' | '/v1/completions';\n\n  /**\n   * The ID of an uploaded file that contains requests for the new batch.\n   *\n   * See [upload file](https://platform.openai.com/docs/api-reference/files/create)\n   * for how to upload a file.\n   *\n   * Your input file must be formatted as a\n   * [JSONL file](https://platform.openai.com/docs/api-reference/batch/request-input),\n   * and must be uploaded with the purpose `batch`. The file can contain up to 50,000\n   * requests, and can be up to 200 MB in size.\n   */\n  input_file_id: string;\n\n  /**\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\n   * for storing additional information about the object in a structured format, and\n   * querying for objects via API or the dashboard.\n   *\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\n   * a maximum length of 512 characters.\n   */\n  metadata?: Shared.Metadata | null;\n}\n\nexport interface BatchListParams extends CursorPageParams {}\n\nBatches.BatchesPage = BatchesPage;\n\nexport declare namespace Batches {\n  export {\n    type Batch as Batch,\n    type BatchError as BatchError,\n    type BatchRequestCounts as BatchRequestCounts,\n    BatchesPage as BatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\n\nexport class Parts extends APIResource {\n  /**\n   * Adds a\n   * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n   * A Part represents a chunk of bytes from the file you are trying to upload.\n   *\n   * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n   * maximum of 8 GB.\n   *\n   * It is possible to add multiple Parts in parallel. You can decide the intended\n   * order of the Parts when you\n   * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n   */\n  create(\n    uploadId: string,\n    body: PartCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<UploadPart> {\n    return this._client.post(\n      `/uploads/${uploadId}/parts`,\n      Core.multipartFormRequestOptions({ body, ...options }),\n    );\n  }\n}\n\n/**\n * The upload Part represents a chunk of bytes we can add to an Upload object.\n */\nexport interface UploadPart {\n  /**\n   * The upload Part unique identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Part was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always `upload.part`.\n   */\n  object: 'upload.part';\n\n  /**\n   * The ID of the Upload object that this Part was added to.\n   */\n  upload_id: string;\n}\n\nexport interface PartCreateParams {\n  /**\n   * The chunk of bytes for this Part.\n   */\n  data: Core.Uploadable;\n}\n\nexport declare namespace Parts {\n  export { type UploadPart as UploadPart, type PartCreateParams as PartCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport * as FilesAPI from '../files';\nimport * as PartsAPI from './parts';\nimport { PartCreateParams, Parts, UploadPart } from './parts';\n\nexport class Uploads extends APIResource {\n  parts: PartsAPI.Parts = new PartsAPI.Parts(this._client);\n\n  /**\n   * Creates an intermediate\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n   * that you can add\n   * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n   * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n   * after you create it.\n   *\n   * Once you complete the Upload, we will create a\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * contains all the parts you uploaded. This File is usable in the rest of our\n   * platform as a regular File object.\n   *\n   * For certain `purpose`s, the correct `mime_type` must be specified. Please refer\n   * to documentation for the supported MIME types for your use case:\n   *\n   * - [Assistants](https://platform.openai.com/docs/assistants/tools/file-search#supported-files)\n   *\n   * For guidance on the proper filename extensions for each purpose, please follow\n   * the documentation on\n   * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n   */\n  create(body: UploadCreateParams, options?: Core.RequestOptions): Core.APIPromise<Upload> {\n    return this._client.post('/uploads', { body, ...options });\n  }\n\n  /**\n   * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n   */\n  cancel(uploadId: string, options?: Core.RequestOptions): Core.APIPromise<Upload> {\n    return this._client.post(`/uploads/${uploadId}/cancel`, options);\n  }\n\n  /**\n   * Completes the\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n   *\n   * Within the returned Upload object, there is a nested\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * is ready to use in the rest of the platform.\n   *\n   * You can specify the order of the Parts by passing in an ordered list of the Part\n   * IDs.\n   *\n   * The number of bytes uploaded upon completion must match the number of bytes\n   * initially specified when creating the Upload object. No Parts may be added after\n   * an Upload is completed.\n   */\n  complete(\n    uploadId: string,\n    body: UploadCompleteParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Upload> {\n    return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n  }\n}\n\n/**\n * The Upload object can accept byte chunks in the form of Parts.\n */\nexport interface Upload {\n  /**\n   * The Upload unique identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The intended number of bytes to be uploaded.\n   */\n  bytes: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Upload was created.\n   */\n  created_at: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the Upload will expire.\n   */\n  expires_at: number;\n\n  /**\n   * The name of the file to be uploaded.\n   */\n  filename: string;\n\n  /**\n   * The object type, which is always \"upload\".\n   */\n  object: 'upload';\n\n  /**\n   * The intended purpose of the file.\n   * [Please refer here](https://platform.openai.com/docs/api-reference/files/object#files/object-purpose)\n   * for acceptable values.\n   */\n  purpose: string;\n\n  /**\n   * The status of the Upload.\n   */\n  status: 'pending' | 'completed' | 'cancelled' | 'expired';\n\n  /**\n   * The `File` object represents a document that has been uploaded to OpenAI.\n   */\n  file?: FilesAPI.FileObject | null;\n}\n\nexport interface UploadCreateParams {\n  /**\n   * The number of bytes in the file you are uploading.\n   */\n  bytes: number;\n\n  /**\n   * The name of the file to upload.\n   */\n  filename: string;\n\n  /**\n   * The MIME type of the file.\n   *\n   * This must fall within the supported MIME types for your file purpose. See the\n   * supported MIME types for assistants and vision.\n   */\n  mime_type: string;\n\n  /**\n   * The intended purpose of the uploaded file.\n   *\n   * See the\n   * [documentation on File purposes](https://platform.openai.com/docs/api-reference/files/create#files-create-purpose).\n   */\n  purpose: FilesAPI.FilePurpose;\n}\n\nexport interface UploadCompleteParams {\n  /**\n   * The ordered list of Part IDs.\n   */\n  part_ids: Array<string>;\n\n  /**\n   * The optional md5 checksum for the file contents to verify if the bytes uploaded\n   * matches what you expect.\n   */\n  md5?: string;\n}\n\nUploads.Parts = Parts;\n\nexport declare namespace Uploads {\n  export {\n    type Upload as Upload,\n    type UploadCreateParams as UploadCreateParams,\n    type UploadCompleteParams as UploadCompleteParams,\n  };\n\n  export { Parts as Parts, type UploadPart as UploadPart, type PartCreateParams as PartCreateParams };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type Agent, type RequestInit } from './_shims/index';\nimport * as qs from './internal/qs';\nimport * as Core from './core';\nimport * as Errors from './error';\nimport * as Pagination from './pagination';\nimport { type CursorPageParams, CursorPageResponse, PageResponse } from './pagination';\nimport * as Uploads from './uploads';\nimport * as API from './resources/index';\nimport {\n  Batch,\n  BatchCreateParams,\n  BatchError,\n  BatchListParams,\n  BatchRequestCounts,\n  Batches,\n  BatchesPage,\n} from './resources/batches';\nimport {\n  Completion,\n  CompletionChoice,\n  CompletionCreateParams,\n  CompletionCreateParamsNonStreaming,\n  CompletionCreateParamsStreaming,\n  CompletionUsage,\n  Completions,\n} from './resources/completions';\nimport {\n  CreateEmbeddingResponse,\n  Embedding,\n  EmbeddingCreateParams,\n  EmbeddingModel,\n  Embeddings,\n} from './resources/embeddings';\nimport {\n  FileContent,\n  FileCreateParams,\n  FileDeleted,\n  FileListParams,\n  FileObject,\n  FileObjectsPage,\n  FilePurpose,\n  Files,\n} from './resources/files';\nimport {\n  Image,\n  ImageCreateVariationParams,\n  ImageEditParams,\n  ImageGenerateParams,\n  ImageModel,\n  Images,\n  ImagesResponse,\n} from './resources/images';\nimport { Model, ModelDeleted, Models, ModelsPage } from './resources/models';\nimport {\n  Moderation,\n  ModerationCreateParams,\n  ModerationCreateResponse,\n  ModerationImageURLInput,\n  ModerationModel,\n  ModerationMultiModalInput,\n  ModerationTextInput,\n  Moderations,\n} from './resources/moderations';\nimport { Audio, AudioModel, AudioResponseFormat } from './resources/audio/audio';\nimport { Beta } from './resources/beta/beta';\nimport { Chat, ChatModel } from './resources/chat/chat';\nimport { FineTuning } from './resources/fine-tuning/fine-tuning';\nimport {\n  Upload,\n  UploadCompleteParams,\n  UploadCreateParams,\n  Uploads as UploadsAPIUploads,\n} from './resources/uploads/uploads';\nimport {\n  ChatCompletion,\n  ChatCompletionAssistantMessageParam,\n  ChatCompletionAudio,\n  ChatCompletionAudioParam,\n  ChatCompletionChunk,\n  ChatCompletionContentPart,\n  ChatCompletionContentPartImage,\n  ChatCompletionContentPartInputAudio,\n  ChatCompletionContentPartRefusal,\n  ChatCompletionContentPartText,\n  ChatCompletionCreateParams,\n  ChatCompletionCreateParamsNonStreaming,\n  ChatCompletionCreateParamsStreaming,\n  ChatCompletionDeleted,\n  ChatCompletionDeveloperMessageParam,\n  ChatCompletionFunctionCallOption,\n  ChatCompletionFunctionMessageParam,\n  ChatCompletionListParams,\n  ChatCompletionMessage,\n  ChatCompletionMessageParam,\n  ChatCompletionMessageToolCall,\n  ChatCompletionModality,\n  ChatCompletionNamedToolChoice,\n  ChatCompletionPredictionContent,\n  ChatCompletionReasoningEffort,\n  ChatCompletionRole,\n  ChatCompletionStoreMessage,\n  ChatCompletionStreamOptions,\n  ChatCompletionSystemMessageParam,\n  ChatCompletionTokenLogprob,\n  ChatCompletionTool,\n  ChatCompletionToolChoiceOption,\n  ChatCompletionToolMessageParam,\n  ChatCompletionUpdateParams,\n  ChatCompletionUserMessageParam,\n  ChatCompletionsPage,\n} from './resources/chat/completions/completions';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['OPENAI_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_ORG_ID'].\n   */\n  organization?: string | null | undefined;\n\n  /**\n   * Defaults to process.env['OPENAI_PROJECT_ID'].\n   */\n  project?: string | null | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['OPENAI_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number | undefined;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent | undefined;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number | undefined;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers | undefined;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery | undefined;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean | undefined;\n}\n\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n  apiKey: string;\n  organization: string | null;\n  project: string | null;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('OPENAI_BASE_URL'),\n    apiKey = Core.readEnv('OPENAI_API_KEY'),\n    organization = Core.readEnv('OPENAI_ORG_ID') ?? null,\n    project = Core.readEnv('OPENAI_PROJECT_ID') ?? null,\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\n        \"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      organization,\n      project,\n      ...opts,\n      baseURL: baseURL || `https://api.openai.com/v1`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.OpenAIError(\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\",\n      );\n    }\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n\n    this._options = options;\n\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n  chat: API.Chat = new API.Chat(this);\n  embeddings: API.Embeddings = new API.Embeddings(this);\n  files: API.Files = new API.Files(this);\n  images: API.Images = new API.Images(this);\n  audio: API.Audio = new API.Audio(this);\n  moderations: API.Moderations = new API.Moderations(this);\n  models: API.Models = new API.Models(this);\n  fineTuning: API.FineTuning = new API.FineTuning(this);\n  beta: API.Beta = new API.Beta(this);\n  batches: API.Batches = new API.Batches(this);\n  uploads: API.Uploads = new API.Uploads(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      'OpenAI-Project': this.project,\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  protected override stringifyQuery(query: Record<string, unknown>): string {\n    return qs.stringify(query, { arrayFormat: 'brackets' });\n  }\n\n  static OpenAI = this;\n  static DEFAULT_TIMEOUT = 600000; // 10 minutes\n\n  static OpenAIError = Errors.OpenAIError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n  static fileFromPath = Uploads.fileFromPath;\n}\n\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.ChatCompletionsPage = ChatCompletionsPage;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\nexport declare namespace OpenAI {\n  export type RequestOptions = Core.RequestOptions;\n\n  export import Page = Pagination.Page;\n  export { type PageResponse as PageResponse };\n\n  export import CursorPage = Pagination.CursorPage;\n  export { type CursorPageParams as CursorPageParams, type CursorPageResponse as CursorPageResponse };\n\n  export {\n    Completions as Completions,\n    type Completion as Completion,\n    type CompletionChoice as CompletionChoice,\n    type CompletionUsage as CompletionUsage,\n    type CompletionCreateParams as CompletionCreateParams,\n    type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming,\n    type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming,\n  };\n\n  export {\n    Chat as Chat,\n    type ChatModel as ChatModel,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionAssistantMessageParam as ChatCompletionAssistantMessageParam,\n    type ChatCompletionAudio as ChatCompletionAudio,\n    type ChatCompletionAudioParam as ChatCompletionAudioParam,\n    type ChatCompletionChunk as ChatCompletionChunk,\n    type ChatCompletionContentPart as ChatCompletionContentPart,\n    type ChatCompletionContentPartImage as ChatCompletionContentPartImage,\n    type ChatCompletionContentPartInputAudio as ChatCompletionContentPartInputAudio,\n    type ChatCompletionContentPartRefusal as ChatCompletionContentPartRefusal,\n    type ChatCompletionContentPartText as ChatCompletionContentPartText,\n    type ChatCompletionDeleted as ChatCompletionDeleted,\n    type ChatCompletionDeveloperMessageParam as ChatCompletionDeveloperMessageParam,\n    type ChatCompletionFunctionCallOption as ChatCompletionFunctionCallOption,\n    type ChatCompletionFunctionMessageParam as ChatCompletionFunctionMessageParam,\n    type ChatCompletionMessage as ChatCompletionMessage,\n    type ChatCompletionMessageParam as ChatCompletionMessageParam,\n    type ChatCompletionMessageToolCall as ChatCompletionMessageToolCall,\n    type ChatCompletionModality as ChatCompletionModality,\n    type ChatCompletionNamedToolChoice as ChatCompletionNamedToolChoice,\n    type ChatCompletionPredictionContent as ChatCompletionPredictionContent,\n    type ChatCompletionReasoningEffort as ChatCompletionReasoningEffort,\n    type ChatCompletionRole as ChatCompletionRole,\n    type ChatCompletionStoreMessage as ChatCompletionStoreMessage,\n    type ChatCompletionStreamOptions as ChatCompletionStreamOptions,\n    type ChatCompletionSystemMessageParam as ChatCompletionSystemMessageParam,\n    type ChatCompletionTokenLogprob as ChatCompletionTokenLogprob,\n    type ChatCompletionTool as ChatCompletionTool,\n    type ChatCompletionToolChoiceOption as ChatCompletionToolChoiceOption,\n    type ChatCompletionToolMessageParam as ChatCompletionToolMessageParam,\n    type ChatCompletionUserMessageParam as ChatCompletionUserMessageParam,\n    ChatCompletionsPage as ChatCompletionsPage,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n    type ChatCompletionUpdateParams as ChatCompletionUpdateParams,\n    type ChatCompletionListParams as ChatCompletionListParams,\n  };\n\n  export {\n    Embeddings as Embeddings,\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\n    type Embedding as Embedding,\n    type EmbeddingModel as EmbeddingModel,\n    type EmbeddingCreateParams as EmbeddingCreateParams,\n  };\n\n  export {\n    Files as Files,\n    type FileContent as FileContent,\n    type FileDeleted as FileDeleted,\n    type FileObject as FileObject,\n    type FilePurpose as FilePurpose,\n    FileObjectsPage as FileObjectsPage,\n    type FileCreateParams as FileCreateParams,\n    type FileListParams as FileListParams,\n  };\n\n  export {\n    Images as Images,\n    type Image as Image,\n    type ImageModel as ImageModel,\n    type ImagesResponse as ImagesResponse,\n    type ImageCreateVariationParams as ImageCreateVariationParams,\n    type ImageEditParams as ImageEditParams,\n    type ImageGenerateParams as ImageGenerateParams,\n  };\n\n  export { Audio as Audio, type AudioModel as AudioModel, type AudioResponseFormat as AudioResponseFormat };\n\n  export {\n    Moderations as Moderations,\n    type Moderation as Moderation,\n    type ModerationImageURLInput as ModerationImageURLInput,\n    type ModerationModel as ModerationModel,\n    type ModerationMultiModalInput as ModerationMultiModalInput,\n    type ModerationTextInput as ModerationTextInput,\n    type ModerationCreateResponse as ModerationCreateResponse,\n    type ModerationCreateParams as ModerationCreateParams,\n  };\n\n  export {\n    Models as Models,\n    type Model as Model,\n    type ModelDeleted as ModelDeleted,\n    ModelsPage as ModelsPage,\n  };\n\n  export { FineTuning as FineTuning };\n\n  export { Beta as Beta };\n\n  export {\n    Batches as Batches,\n    type Batch as Batch,\n    type BatchError as BatchError,\n    type BatchRequestCounts as BatchRequestCounts,\n    BatchesPage as BatchesPage,\n    type BatchCreateParams as BatchCreateParams,\n    type BatchListParams as BatchListParams,\n  };\n\n  export {\n    UploadsAPIUploads as Uploads,\n    type Upload as Upload,\n    type UploadCreateParams as UploadCreateParams,\n    type UploadCompleteParams as UploadCompleteParams,\n  };\n\n  export type ErrorObject = API.ErrorObject;\n  export type FunctionDefinition = API.FunctionDefinition;\n  export type FunctionParameters = API.FunctionParameters;\n  export type Metadata = API.Metadata;\n  export type ResponseFormatJSONObject = API.ResponseFormatJSONObject;\n  export type ResponseFormatJSONSchema = API.ResponseFormatJSONSchema;\n  export type ResponseFormatText = API.ResponseFormatText;\n}\n\n// ---------------------- Azure ----------------------\n\n/** API Client for interfacing with the Azure OpenAI API. */\nexport interface AzureClientOptions extends ClientOptions {\n  /**\n   * Defaults to process.env['OPENAI_API_VERSION'].\n   */\n  apiVersion?: string | undefined;\n\n  /**\n   * Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   */\n  endpoint?: string | undefined;\n\n  /**\n   * A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * Note: this means you won't be able to use non-deployment endpoints. Not supported with Assistants APIs.\n   */\n  deployment?: string | undefined;\n\n  /**\n   * Defaults to process.env['AZURE_OPENAI_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * A function that returns an access token for Microsoft Entra (formerly known as Azure Active Directory),\n   * which will be invoked on every request.\n   */\n  azureADTokenProvider?: (() => Promise<string>) | undefined;\n}\n\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n  private _azureADTokenProvider: (() => Promise<string>) | undefined;\n  deploymentName: string | undefined;\n  apiVersion: string = '';\n  /**\n   * API Client for interfacing with the Azure OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n   * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n   * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('OPENAI_BASE_URL'),\n    apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'),\n    apiVersion = Core.readEnv('OPENAI_API_VERSION'),\n    endpoint,\n    deployment,\n    azureADTokenProvider,\n    dangerouslyAllowBrowser,\n    ...opts\n  }: AzureClientOptions = {}) {\n    if (!apiVersion) {\n      throw new Errors.OpenAIError(\n        \"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\",\n      );\n    }\n\n    if (typeof azureADTokenProvider === 'function') {\n      dangerouslyAllowBrowser = true;\n    }\n\n    if (!azureADTokenProvider && !apiKey) {\n      throw new Errors.OpenAIError(\n        'Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.',\n      );\n    }\n\n    if (azureADTokenProvider && apiKey) {\n      throw new Errors.OpenAIError(\n        'The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.',\n      );\n    }\n\n    // define a sentinel value to avoid any typing issues\n    apiKey ??= API_KEY_SENTINEL;\n\n    opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n\n    if (!baseURL) {\n      if (!endpoint) {\n        endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n      }\n\n      if (!endpoint) {\n        throw new Errors.OpenAIError(\n          'Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable',\n        );\n      }\n\n      baseURL = `${endpoint}/openai`;\n    } else {\n      if (endpoint) {\n        throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n      }\n    }\n\n    super({\n      apiKey,\n      baseURL,\n      ...opts,\n      ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n    });\n\n    this._azureADTokenProvider = azureADTokenProvider;\n    this.apiVersion = apiVersion;\n    this.deploymentName = deployment;\n  }\n\n  override buildRequest(\n    options: Core.FinalRequestOptions<unknown>,\n    props: { retryCount?: number } = {},\n  ): {\n    req: RequestInit;\n    url: string;\n    timeout: number;\n  } {\n    if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n      if (!Core.isObj(options.body)) {\n        throw new Error('Expected request body to be an object');\n      }\n      const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n      if (model !== undefined && !this.baseURL.includes('/deployments')) {\n        options.path = `/deployments/${model}${options.path}`;\n      }\n    }\n    return super.buildRequest(options, props);\n  }\n\n  async _getAzureADToken(): Promise<string | undefined> {\n    if (typeof this._azureADTokenProvider === 'function') {\n      const token = await this._azureADTokenProvider();\n      if (!token || typeof token !== 'string') {\n        throw new Errors.OpenAIError(\n          `Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`,\n        );\n      }\n      return token;\n    }\n    return undefined;\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {};\n  }\n\n  protected override async prepareOptions(opts: Core.FinalRequestOptions<unknown>): Promise<void> {\n    /**\n     * The user should provide a bearer token provider if they want\n     * to use Azure AD authentication. The user shouldn't set the\n     * Authorization header manually because the header is overwritten\n     * with the Azure AD token if a bearer token provider is provided.\n     */\n    if (opts.headers?.['api-key']) {\n      return super.prepareOptions(opts);\n    }\n    const token = await this._getAzureADToken();\n    opts.headers ??= {};\n    if (token) {\n      opts.headers['Authorization'] = `Bearer ${token}`;\n    } else if (this.apiKey !== API_KEY_SENTINEL) {\n      opts.headers['api-key'] = this.apiKey;\n    } else {\n      throw new Errors.OpenAIError('Unable to handle auth');\n    }\n    return super.prepareOptions(opts);\n  }\n}\n\nconst _deployments_endpoints = new Set([\n  '/completions',\n  '/chat/completions',\n  '/embeddings',\n  '/audio/transcriptions',\n  '/audio/translations',\n  '/audio/speech',\n  '/images/generations',\n]);\n\nconst API_KEY_SENTINEL = '<Missing Key>';\n\n// ---------------------- End Azure ----------------------\n\nexport { toFile, fileFromPath } from './uploads';\nexport {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} from './error';\n\nexport default OpenAI;\n","import { OpenAI } from 'openai';\r\n\r\nconst openai = new OpenAI({\r\n    apiKey: '864HXGx892NdVu196eSHZTDNAfDLYogNaJQfdZWSpPBvGyOhQnOlJQQJ99BCACHYHv6XJ3w3AAAAACOGRuAM',  // Use environment variable\r\n    baseURL: \"https://vitas-m7viocp8-eastus2.cognitiveservices.azure.com/openai/deployments/gpt-4o/chat/completions?api-version=2025-01-01-preview\",\r\n    defaultHeaders: {\r\n      \"api-key\": '864HXGx892NdVu196eSHZTDNAfDLYogNaJQfdZWSpPBvGyOhQnOlJQQJ99BCACHYHv6XJ3w3AAAAACOGRuAM',\r\n    }\r\n});\r\n\r\nexport const chatWithGPT = async (message: string) => {\r\n  try {\r\n    const response = await openai.chat.completions.create({\r\n      model: \"gpt-4o\",\r\n      messages: [{ role: \"user\", content: message }],\r\n      temperature: 0.7,\r\n    });\r\n    return response.choices[0].message.content;\r\n  } catch (error) {\r\n    console.error(\"Error calling GPT:\", error);\r\n    return \"Error fetching response.\";\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { chatWithGPT } from '../chatGPT.ts'; \r\n\r\nconst ChatComponent = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    const reply: any = await chatWithGPT(input);\r\n    setResponse(reply);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat with GPT-4o</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Ask me anything...\"\r\n      />\r\n      <button onClick={handleSubmit}>Send</button>\r\n      <p>Response: {response}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;","import { Table } from 'react-bootstrap';\r\nimport { createClaimsTable } from '../utils/claimUtils.ts';\r\nimport '../styles/App.css';\r\nimport React from 'react';\r\nimport ChatComponent from '../modules/chatGPTComponents.tsx'\r\n\r\nexport const IdTokenData = (props) => {\r\n    const tokenClaims = createClaimsTable(props.idTokenClaims);\r\n\r\n    const tableRow = Object.keys(tokenClaims).map((key, index) => {\r\n        return (\r\n            <tr key={key}>\r\n                {tokenClaims[key].map((claimItem) => (\r\n                    <td key={claimItem}>{claimItem}</td>\r\n                ))}\r\n            </tr>\r\n        );\r\n    });\r\n    return (\r\n        <>\r\n            <div className=\"data-area-div\">\r\n                <p>\r\n                    <strong> You are logged in </strong>. Talk with chatGPT here: {' '}\r\n                    <ChatComponent/>\r\n                </p>\r\n                <div className=\"data-area-div\">\r\n                    <Table responsive striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Claim</th>\r\n                                <th>Value</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{tableRow}</tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null || onToggle();\n    onHide == null || onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\r\nimport { Navbar, Button } from 'react-bootstrap';\r\nimport { loginRequest } from '../authConfig.ts';\r\nimport React from 'react';\r\n\r\nexport const NavigationBar = () => {\r\n    const { instance } = useMsal();\r\n    \r\n    const handleLoginRedirect = () => {\r\n        instance.loginRedirect(loginRequest).catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleLogoutRedirect = () => {\r\n        instance.logoutRedirect().catch((error) => console.log(error));\r\n    };\r\n\r\n    /**\r\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not.\r\n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will\r\n     * only render their children if a user is authenticated or unauthenticated, respectively.\r\n     */\r\n    return (\r\n        <>\r\n            <Navbar bg=\"primary\" variant=\"dark\" className=\"navbarStyle\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    Microsoft identity platform\r\n                </a>\r\n                <AuthenticatedTemplate>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\">\r\n                        <Button variant=\"warning\" onClick={handleLogoutRedirect}>\r\n                            Sign out\r\n                        </Button>\r\n                    </div>\r\n                </AuthenticatedTemplate>\r\n                <UnauthenticatedTemplate>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\">\r\n                        <Button onClick={handleLoginRedirect}>Sign in</Button>\r\n                    </div>\r\n                </UnauthenticatedTemplate>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n","import { AuthenticatedTemplate } from '@azure/msal-react';\r\nimport Chatbox from '../apis/chatbox.tsx';\r\nimport { NavigationBar } from './NavigationBar.tsx';\r\nimport React, { useState, useEffect } from \"react\"; \r\nimport HeroWithImage from '../modules/heroModule.tsx';\r\n\r\nexport const PageLayout = (props) => {\r\n   \r\n   return (\r\n      <>\r\n         <NavigationBar />\r\n         <br />\r\n         <h5>\r\n               <center>Welcome to the Microsoft Authentication Library For React Tutorial</center>\r\n         </h5>\r\n         <HeroWithImage/>\r\n         <br/>\r\n         {props.children}\r\n         <br />\r\n         <AuthenticatedTemplate>\r\n               <footer>\r\n                  <Chatbox />\r\n               </footer>\r\n         </AuthenticatedTemplate>\r\n      </>\r\n   );\r\n}\r\n\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App.tsx';\r\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\r\nimport { msalConfig } from './authConfig.ts';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\n/**\r\n * MSAL should be instantiated outside of the component tree to prevent it from being re-instantiated on re-renders.\r\n * For more, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\nconst accounts = msalInstance.getAllAccounts();\r\nconst activeAccount = msalInstance.getActiveAccount();\r\n\r\nif (!activeAccount && accounts.length > 0) {\r\n    msalInstance.setActiveAccount(accounts[0]); // Ensure proper account selection\r\n}\r\n\r\n// Listen for sign-in event and set active account\r\nmsalInstance.addEventCallback((event: any) => {\r\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload?.account) {\r\n        const account = event.payload.account;\r\n        msalInstance.setActiveAccount(account);\r\n    }\r\n});\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App instance={msalInstance}/>\r\n);","import React, { useEffect, useState } from \"react\";\r\nimport { ContentClient } from \"dc-delivery-sdk-js\";\r\nimport Banner from \"../components/Banner/index.tsx\";\r\nimport { fetchAmplienceContent } from \"../utils/fetchContent.ts\";\r\n\r\ntype ContentType = {\r\n    body: any;\r\n};\r\n\r\nconst responseData = await fetchAmplienceContent('1e473c1d-bd68-402f-bdaa-46296bff95e0');\r\nconst deliveryKey: string = responseData.content._meta.deliveryKey;\r\n\r\nconst client = new ContentClient({\r\n    hubName: 'giantuat',\r\n});\r\n\r\n// Hero Component that applies all visualization settings\r\nconst HeroWithImage: React.FC = () => {\r\n    const [content, setContent] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchBanner() {\r\n            const banner: ContentType = await client.getContentItemByKey(deliveryKey);\r\n            setContent(banner.body);\r\n        }\r\n        fetchBanner();\r\n    }, []);\r\n    \r\n    return content ? <Banner content={content} /> : <div>Loading...</div>;\r\n};\r\n\r\nexport default HeroWithImage;","export function isGetByIdRequest(request: any): request is { id: string } {\r\n    return typeof request === 'object' && request !== null && 'id' in request;\r\n}\r\n\r\nexport function isGetByFilterRequest(request: any): request is { filterBy: any[] } {\r\n    return typeof request === 'object' && request !== null && Array.isArray((request as { filterBy?: any[] }).filterBy);\r\n}\r\n\r\nexport async function fetchAmplienceContent(id: string): Promise<any | null> {\r\n    const url = `https://giantuat.cdn.content.amplience.net/content/id/${id}?depth=all&format=inlined`;\r\n    try {\r\n        const response = await fetch(url);\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"Error fetching Amplience content:\", error);\r\n        return null;\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ampDynamicContent\"] = factory();\n\telse\n\t\troot[\"ampDynamicContent\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\nconst denyList = new Set([\n\t'ENOTFOUND',\n\t'ENETUNREACH',\n\n\t// SSL errors from https://github.com/nodejs/node/blob/fc8e3e2cdc521978351de257030db0076d79e0ab/src/crypto/crypto_common.cc#L301-L328\n\t'UNABLE_TO_GET_ISSUER_CERT',\n\t'UNABLE_TO_GET_CRL',\n\t'UNABLE_TO_DECRYPT_CERT_SIGNATURE',\n\t'UNABLE_TO_DECRYPT_CRL_SIGNATURE',\n\t'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY',\n\t'CERT_SIGNATURE_FAILURE',\n\t'CRL_SIGNATURE_FAILURE',\n\t'CERT_NOT_YET_VALID',\n\t'CERT_HAS_EXPIRED',\n\t'CRL_NOT_YET_VALID',\n\t'CRL_HAS_EXPIRED',\n\t'ERROR_IN_CERT_NOT_BEFORE_FIELD',\n\t'ERROR_IN_CERT_NOT_AFTER_FIELD',\n\t'ERROR_IN_CRL_LAST_UPDATE_FIELD',\n\t'ERROR_IN_CRL_NEXT_UPDATE_FIELD',\n\t'OUT_OF_MEM',\n\t'DEPTH_ZERO_SELF_SIGNED_CERT',\n\t'SELF_SIGNED_CERT_IN_CHAIN',\n\t'UNABLE_TO_GET_ISSUER_CERT_LOCALLY',\n\t'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n\t'CERT_CHAIN_TOO_LONG',\n\t'CERT_REVOKED',\n\t'INVALID_CA',\n\t'PATH_LENGTH_EXCEEDED',\n\t'INVALID_PURPOSE',\n\t'CERT_UNTRUSTED',\n\t'CERT_REJECTED',\n\t'HOSTNAME_MISMATCH'\n]);\n\n// TODO: Use `error?.code` when targeting Node.js 14\nmodule.exports = error => !denyList.has(error && error.code);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Whether content client config is for Content Delivery v1\n * @param config\n * @hidden\n */\nexport function isContentClientConfigV1(config) {\n    return config.account !== undefined;\n}\n/**\n * Whether content client config is for Content Delivery v2\n * @param config\n * @hidden\n */\nexport function isContentClientConfigV2(config) {\n    return config.hubName !== undefined;\n}\n/**\n * Whether content client config is for Content Delivery v2 Fresh\n * @param config\n * @hidden\n */\nexport function isContentClientConfigV2Fresh(config) {\n    return (isContentClientConfigV2(config) &&\n        config.apiKey !== undefined);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NvbmZpZy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQkE7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsTUFBa0M7SUFFbEMsT0FBUSxNQUFnQyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUM7QUFDakUsQ0FBQztBQUVEOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQWtDO0lBRWxDLE9BQVEsTUFBZ0MsQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDO0FBQ2pFLENBQUM7QUFFRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLDRCQUE0QixDQUMxQyxNQUFrQztJQUVsQyxPQUFPLENBQ0wsdUJBQXVCLENBQUMsTUFBTSxDQUFDO1FBQzlCLE1BQXFDLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FDNUQsQ0FBQztBQUNKLENBQUMifQ==","/**\n * @hidden\n */\nexport function encodeQueryString(queryParameters) {\n    const components = [];\n    for (const keyValuePair of queryParameters) {\n        const key = keyValuePair[0];\n        const value = keyValuePair[1];\n        components.push(`${key}=${encodeURIComponent(value)}`);\n    }\n    return components.join('&');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXJsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi91dGlscy9VcmwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsZUFBMkI7SUFDM0QsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLEtBQUssTUFBTSxZQUFZLElBQUksZUFBZSxFQUFFO1FBQzFDLE1BQU0sR0FBRyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixNQUFNLEtBQUssR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDeEQ7SUFDRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUIsQ0FBQyJ9","/**\n * Class representing the response from the [Content Rendering Service](https://docs.amplience.net/integration/contentrenderingservice.html?h=rendering%20service).\n * Rendered content is the output of converting the JSON body of a content item using a template.\n */\nexport class RenderedContentItem {\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVuZGVyZWRDb250ZW50SXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvcmVuZGVyaW5nL21vZGVsL1JlbmRlcmVkQ29udGVudEl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLG1CQUFtQjtDQWtCL0IifQ==","/**\n * Class representing the Edition resource with helper functions.\n * An Edition is the main way of scheduling content to be published on a specific date.\n */\nexport class Edition {\n    /**\n     * Creates a new Edition instance.\n     * @param data JSON representation of the Edition model\n     */\n    constructor(data) {\n        if (data) {\n            Object.assign(this, data);\n        }\n    }\n    /**\n     * Date when the edition should begin\n     */\n    getStartDate() {\n        return new Date(this.start);\n    }\n    /**\n     * Date when the edition should end\n     */\n    getEndDate() {\n        return new Date(this.end);\n    }\n    /**\n     * Export to JSON\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            start: this.start,\n            end: this.end,\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWRpdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9tb2RlbC9FZGl0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sT0FBTyxPQUFPO0lBZ0JsQjs7O09BR0c7SUFDSCxZQUFZLElBQVU7UUFDcEIsSUFBSSxJQUFJLEVBQUU7WUFDUixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUMzQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILFlBQVk7UUFDVixPQUFPLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQ7O09BRUc7SUFDSCxVQUFVO1FBQ1IsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTTtRQUNKLE9BQU87WUFDTCxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDWCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHO1NBQ2QsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","/**\n * Class representing the lifecycle status of a Content Item with helper functions.\n */\nexport class ContentLifecycle {\n    /**\n     * Creates a new ContentLifecycle instance.\n     * @param data JSON representation of the ContentLifecycle model\n     */\n    constructor(data) {\n        if (data) {\n            Object.assign(this, data);\n        }\n    }\n    /**\n     * Returns a boolean to indicate if the content should no longer be displayed by your application.\n     * @param currentTime Optional date to override the current time.\n     */\n    isExpired(currentTime) {\n        currentTime = currentTime || new Date();\n        return (this.expiryTime !== undefined &&\n            new Date(this.expiryTime).getTime() < currentTime.getTime());\n    }\n    /**\n     * Export to JSON\n     */\n    toJSON() {\n        return {\n            expiryTime: this.expiryTime,\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudExpZmVjeWNsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9tb2RlbC9Db250ZW50TGlmZWN5Y2xlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQVEzQjs7O09BR0c7SUFDSCxZQUFZLElBQVU7UUFDcEIsSUFBSSxJQUFJLEVBQUU7WUFDUixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUMzQjtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSCxTQUFTLENBQUMsV0FBa0I7UUFDMUIsV0FBVyxHQUFHLFdBQVcsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3hDLE9BQU8sQ0FDTCxJQUFJLENBQUMsVUFBVSxLQUFLLFNBQVM7WUFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FDNUQsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU07UUFDSixPQUFPO1lBQ0wsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzVCLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==","import { encodeQueryString } from '../../utils/Url';\nimport { RenderedContentItem } from '../model/RenderedContentItem';\nimport { Edition } from '../../content/model/Edition';\nimport { ContentLifecycle } from '../../content/model/ContentLifecycle';\n/**\n * @hidden\n */\nexport class RenderContentItem {\n    constructor(config, contentClient) {\n        this.config = config;\n        this.contentClient = contentClient;\n    }\n    renderContentItem(contentItemId, templateName, customParameters) {\n        const queryParameters = this.getQueryParams(templateName, customParameters);\n        const queryString = encodeQueryString(queryParameters);\n        const path = `/v1/content/${encodeURIComponent(this.config.account)}/content-item/${encodeURIComponent(contentItemId)}`;\n        return this.contentClient.get(`${path}?${queryString}`).then((response) => {\n            return this.parseResponse(response);\n        });\n    }\n    getQueryParams(templateName, customParameters) {\n        const queryParameters = [['template', templateName]];\n        if (customParameters) {\n            for (const key of Object.keys(customParameters)) {\n                const value = customParameters[key];\n                queryParameters.push([`crparam.${key}`, value]);\n            }\n        }\n        if (this.config.locale) {\n            queryParameters.push(['locale', this.config.locale]);\n        }\n        return queryParameters;\n    }\n    parseResponse(response) {\n        const headers = response.headers;\n        const result = new RenderedContentItem();\n        result.body = response.data;\n        if (headers) {\n            const editionId = headers['X-Amp-Edition-ID'];\n            const editionStart = headers['X-Amp-Edition-Start-Time'];\n            const editionEnd = headers['X-Amp-Edition-End-Time'];\n            const lifecycleExpiryTime = headers['X-Amp-Lifecycle-Expiry-Time'];\n            if (editionId) {\n                result.edition = new Edition({\n                    id: editionId,\n                    start: editionStart,\n                    end: editionEnd,\n                });\n            }\n            if (lifecycleExpiryTime) {\n                result.lifecycle = new ContentLifecycle({\n                    expiryTime: lifecycleExpiryTime,\n                });\n            }\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVuZGVyQ29udGVudEl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3JlbmRlcmluZy9jb29yZGluYXRvcnMvUmVuZGVyQ29udGVudEl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbkUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBSXhFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGlCQUFpQjtJQUM1QixZQUNtQixNQUE2QixFQUM3QixhQUE0QjtRQUQ1QixXQUFNLEdBQU4sTUFBTSxDQUF1QjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUM1QyxDQUFDO0lBRUosaUJBQWlCLENBQ2YsYUFBcUIsRUFDckIsWUFBb0IsRUFDcEIsZ0JBQTJDO1FBRTNDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDNUUsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDdkQsTUFBTSxJQUFJLEdBQUcsZUFBZSxrQkFBa0IsQ0FDNUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQ3BCLGlCQUFpQixrQkFBa0IsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ3RELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLElBQUksV0FBVyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUN4RSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsY0FBYyxDQUNaLFlBQW9CLEVBQ3BCLGdCQUEyQztRQUUzQyxNQUFNLGVBQWUsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFFckQsSUFBSSxnQkFBZ0IsRUFBRTtZQUNwQixLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtnQkFDL0MsTUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3BDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7YUFDakQ7U0FDRjtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDdEIsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDdEQ7UUFFRCxPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRUQsYUFBYSxDQUFDLFFBQXVCO1FBQ25DLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFFakMsTUFBTSxNQUFNLEdBQUcsSUFBSSxtQkFBbUIsRUFBRSxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQztRQUU1QixJQUFJLE9BQU8sRUFBRTtZQUNYLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQzlDLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQ3JELE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7WUFFbkUsSUFBSSxTQUFTLEVBQUU7Z0JBQ2IsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQztvQkFDM0IsRUFBRSxFQUFFLFNBQVM7b0JBQ2IsS0FBSyxFQUFFLFlBQVk7b0JBQ25CLEdBQUcsRUFBRSxVQUFVO2lCQUNoQixDQUFDLENBQUM7YUFDSjtZQUVELElBQUksbUJBQW1CLEVBQUU7Z0JBQ3ZCLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQztvQkFDdEMsVUFBVSxFQUFFLG1CQUFtQjtpQkFDaEMsQ0FBQyxDQUFDO2FBQ0o7U0FDRjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRiJ9","function dataToMessage(data) {\n    if (typeof data === 'string') {\n        return data;\n    }\n    else if (data.error && data.error.message) {\n        return data.error.message;\n    }\n    else {\n        return JSON.stringify(data);\n    }\n}\nexport class HttpError extends Error {\n    constructor(status, data, message) {\n        super(message || dataToMessage(data));\n        this.status = status;\n        this.data = data;\n        this.name = 'HTTP_ERROR';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHR0cEVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L21vZGVsL0h0dHBFcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGFBQWEsQ0FBQyxJQUFTO0lBQzlCLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUU7UUFDM0MsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztLQUMzQjtTQUFNO1FBQ0wsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzdCO0FBQ0gsQ0FBQztBQUVELE1BQU0sT0FBTyxTQUFVLFNBQVEsS0FBSztJQUdsQyxZQUFtQixNQUFjLEVBQVMsSUFBUyxFQUFFLE9BQWdCO1FBQ25FLEtBQUssQ0FBQyxPQUFPLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFEckIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFTLFNBQUksR0FBSixJQUFJLENBQUs7UUFGbkMsU0FBSSxHQUFHLFlBQVksQ0FBQztRQUlsQyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3BELENBQUM7Q0FDRiJ9","import { HttpError } from '../model/HttpError';\nexport class FilterByImpl {\n    constructor(config, contentClient) {\n        this.config = config;\n        this.contentClient = contentClient;\n    }\n    async fetch(requestConfig) {\n        try {\n            if (!requestConfig.parameters?.locale && this.config?.locale) {\n                requestConfig.parameters = Object.assign({}, {\n                    ...(requestConfig.parameters || {}),\n                    locale: this.config.locale,\n                });\n            }\n            const { data } = await this.contentClient.post('content/filter', requestConfig);\n            if (data.page.nextCursor) {\n                const request = Object.assign({}, {\n                    ...requestConfig,\n                    page: {\n                        ...(requestConfig.page || {}),\n                        cursor: data.page.nextCursor,\n                    },\n                });\n                data.page.next = () => this.fetch(request);\n            }\n            return data;\n        }\n        catch (err) {\n            if (err.response) {\n                throw new HttpError(err.response.status, err.response.data);\n            }\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyQnlJbXBsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L2Nvb3JkaW5hdG9ycy9GaWx0ZXJCeUltcGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DLE1BQU0sT0FBTyxZQUFZO0lBQ3ZCLFlBQ21CLE1BQTZCLEVBQzdCLGFBQTRCO1FBRDVCLFdBQU0sR0FBTixNQUFNLENBQXVCO1FBQzdCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0lBQzVDLENBQUM7SUFFSixLQUFLLENBQUMsS0FBSyxDQUFDLGFBQThCO1FBQ3hDLElBQUk7WUFDRixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUU7Z0JBQzVELGFBQWEsQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FDdEMsRUFBRSxFQUNGO29CQUNFLEdBQUcsQ0FBQyxhQUFhLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQztvQkFDbkMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTTtpQkFDM0IsQ0FDRixDQUFDO2FBQ0g7WUFFRCxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDNUMsZ0JBQWdCLEVBQ2hCLGFBQWEsQ0FDZCxDQUFDO1lBRUYsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDeEIsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FDM0IsRUFBRSxFQUNGO29CQUNFLEdBQUcsYUFBYTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNKLEdBQUcsQ0FBQyxhQUFhLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQzt3QkFDN0IsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtxQkFDN0I7aUJBQ0YsQ0FDRixDQUFDO2dCQUVGLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDNUM7WUFFRCxPQUFPLElBQUksQ0FBQztTQUNiO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSSxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM3RDtZQUVELE1BQU0sR0FBRyxDQUFDO1NBQ1g7SUFDSCxDQUFDO0NBQ0YifQ==","import { FilterByImpl } from './FilterByImpl';\nexport class FilterBy {\n    static { this.SCHEMA_PATH = '/_meta/schema'; }\n    static { this.PARENT_PATH = '/_meta/hierarchy/parentId'; }\n    constructor(config, contentClient) {\n        this.config = config;\n        this.contentClient = contentClient;\n        this.requestConfig = {\n            filterBy: [],\n        };\n        this.filterByService = new FilterByImpl(this.config, this.contentClient);\n    }\n    /**\n     *  This function will help construct requests for filtering Content Items or Slots\n     *\n     * @param path - json path to the property you wish to filter by e.g `/_meta/schema`\n     * @param value - value you want to return matches for\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterBy(path, value) {\n        this.requestConfig.filterBy.push({\n            path,\n            value,\n        });\n        return this;\n    }\n    /**\n     *\n     *  equivalent to:\n     *\n     * ```ts\n     *  client.filterBy('/_meta/schema', contentTypeUri)\n     * ```\n     *\n     * @param contentTypeUri - Content Type Uri you want to filter\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterByContentType(value) {\n        return this.filterBy(FilterBy.SCHEMA_PATH, value);\n    }\n    /**\n     * Fetch content by parent id\n     *\n     * equivalent to:\n     *\n     * ```ts\n     *  client.filterBy('/_meta/hierarchy/parentId', id)\n     * ```\n     *\n     * @param id - ID of a Hierarchy Content Item\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterByParentId(value) {\n        return this.filterBy(FilterBy.PARENT_PATH, value);\n    }\n    /**\n     * Set sortable key based on schema [`trait:sortable`](https://amplience.com/docs/development/contentdelivery/filterandsort.html#sorttrait)\n     *\n     *\n     * @param key - key you wish to sort by\n     * @param order - order enum ASC, DESC\n     *\n     * @returns `FilterBy<Body>`\n     */\n    sortBy(key, order) {\n        this.requestConfig.sortBy = {\n            key,\n            order,\n        };\n        return this;\n    }\n    page(size, cursor) {\n        if (!this.requestConfig.page) {\n            this.requestConfig.page = {};\n        }\n        if (arguments.length === 1 && typeof size === 'string') {\n            this.requestConfig.page.cursor = size;\n            return this;\n        }\n        if (typeof size === 'number') {\n            this.requestConfig.page.size = size;\n        }\n        if (cursor) {\n            this.requestConfig.page.cursor = cursor;\n        }\n        return this;\n    }\n    /**\n     *\n     * @param parameters - api options for response format\n     *\n     * @returns `FilterBy<Body>`\n     */\n    async request(parameters) {\n        if (parameters) {\n            this.requestConfig.parameters = parameters;\n        }\n        return this.filterByService.fetch(this.requestConfig);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyQnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0ZpbHRlckJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU5QyxNQUFNLE9BQU8sUUFBUTthQUNaLGdCQUFXLEdBQUcsZUFBZSxDQUFDO2FBQzlCLGdCQUFXLEdBQUcsMkJBQTJCLENBQUM7SUFRakQsWUFDbUIsTUFBNkIsRUFDN0IsYUFBNEI7UUFENUIsV0FBTSxHQUFOLE1BQU0sQ0FBdUI7UUFDN0Isa0JBQWEsR0FBYixhQUFhLENBQWU7UUFOdkMsa0JBQWEsR0FBb0I7WUFDdkMsUUFBUSxFQUFFLEVBQUU7U0FDYixDQUFDO1FBTUEsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNILFFBQVEsQ0FBVSxJQUFZLEVBQUUsS0FBUTtRQUN0QyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7WUFDL0IsSUFBSTtZQUNKLEtBQUs7U0FDTixDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7T0FXRztJQUNILG1CQUFtQixDQUFDLEtBQWE7UUFDL0IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFTLFFBQVEsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7T0FZRztJQUNILGdCQUFnQixDQUFDLEtBQWE7UUFDNUIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFTLFFBQVEsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ0gsTUFBTSxDQUFDLEdBQVcsRUFBRSxLQUFhO1FBQy9CLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHO1lBQzFCLEdBQUc7WUFDSCxLQUFLO1NBQ04sQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQWdCRCxJQUFJLENBQUMsSUFBcUIsRUFBRSxNQUFlO1FBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRTtZQUM1QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7U0FDOUI7UUFFRCxJQUFJLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUN0RCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBRXRDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUM1QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ3JDO1FBRUQsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQ3pDO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQTJCO1FBQ3ZDLElBQUksVUFBVSxFQUFFO1lBQ2QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1NBQzVDO1FBRUQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEQsQ0FBQyJ9","/**\n * @hidden\n */\nexport function walkAndReplace(value, options, pointer = []) {\n    if (options.beforeWalk) {\n        value = options.beforeWalk(value, pointer);\n    }\n    if (Array.isArray(value)) {\n        const newValue = [];\n        for (let i = 0; i < value.length; i++) {\n            let entryValue = value[i];\n            entryValue = walkAndReplace(entryValue, options, pointer.concat(`${i}`));\n            newValue.push(entryValue);\n        }\n        value = newValue;\n    }\n    else if (typeof value === 'object' && value !== null) {\n        const newValue = {};\n        const keys = Object.keys(value);\n        for (const entryKey of keys) {\n            let entryValue = value[entryKey];\n            entryValue = walkAndReplace(entryValue, options, pointer.concat(entryKey));\n            newValue[entryKey] = entryValue;\n        }\n        value = newValue;\n    }\n    if (options.afterWalk) {\n        value = options.afterWalk(value, pointer);\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSnNvbldhbGtlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvdXRpbHMvSnNvbldhbGtlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTs7R0FFRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQzVCLEtBQVUsRUFDVixPQUE4QixFQUM5QixVQUFvQixFQUFFO0lBRXRCLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtRQUN0QixLQUFLLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDNUM7SUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDeEIsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxQixVQUFVLEdBQUcsY0FBYyxDQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN6RSxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzNCO1FBQ0QsS0FBSyxHQUFHLFFBQVEsQ0FBQztLQUNsQjtTQUFNLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7UUFDdEQsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEMsS0FBSyxNQUFNLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDM0IsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2pDLFVBQVUsR0FBRyxjQUFjLENBQ3pCLFVBQVUsRUFDVixPQUFPLEVBQ1AsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDekIsQ0FBQztZQUNGLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUM7U0FDakM7UUFDRCxLQUFLLEdBQUcsUUFBUSxDQUFDO0tBQ2xCO0lBRUQsSUFBSSxPQUFPLENBQUMsU0FBUyxFQUFFO1FBQ3JCLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztLQUMzQztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQyJ9","/**\n * Class representing Content returned from the Content Delivery Service.\n * The body property will contain the properties specified by the JSON schema content type.\n * Any linked content items will be included inline in the body.\n */\nexport class ContentItem {\n    /**\n     * Returns a plain JSON version of the content body, removing helper properties and functions.\n     * This should be used if your application needs to serialize the content body, e.g. in an API response.\n     */\n    toJSON() {\n        return JSON.parse(JSON.stringify(this.body));\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudEl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvbW9kZWwvQ29udGVudEl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBT3RCOzs7T0FHRztJQUNILE1BQU07UUFDSixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBQ0YifQ==","export class ContentNotFoundError extends Error {\n    constructor(contentItem) {\n        super(`Content item \"${contentItem}\" was not found`);\n        this.contentItem = contentItem;\n        this.name = 'CONTENT_NOT_FOUND';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudE5vdEZvdW5kRXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvbW9kZWwvQ29udGVudE5vdEZvdW5kRXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLG9CQUFxQixTQUFRLEtBQUs7SUFHN0MsWUFBbUIsV0FBbUI7UUFDcEMsS0FBSyxDQUFDLGlCQUFpQixXQUFXLGlCQUFpQixDQUFDLENBQUM7UUFEcEMsZ0JBQVcsR0FBWCxXQUFXLENBQVE7UUFGdEIsU0FBSSxHQUFHLG1CQUFtQixDQUFDO1FBSXpDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUNGIn0=","import { encodeQueryString } from '../../utils/Url';\nimport { walkAndReplace } from '../../utils/JsonWalker';\nimport { ContentItem } from '../model/ContentItem';\nimport { ContentNotFoundError } from '../model/ContentNotFoundError';\nimport { HttpError } from '../model/HttpError';\n/**\n * @hidden\n */\nconst LD_ID = '@id';\n/**\n * @hidden\n */\nconst LD_TYPE = '@type';\n/**\n * @hidden\n */\nconst LD_GRAPH = '@graph';\n/**\n * @hidden\n */\nexport class GetContentItemV1Impl {\n    constructor(config, contentClient, mapper) {\n        this.config = config;\n        this.contentClient = contentClient;\n        this.mapper = mapper;\n    }\n    /**\n     * @deprecated use getContentItemById\n     */\n    getContentItem(id) {\n        return this.getContentItemById(id);\n    }\n    async getContentItemById(id) {\n        const url = this.getUrl({\n            'sys.iri': `http://content.cms.amplience.com/${id}`,\n        });\n        try {\n            const response = await this.contentClient.get(url);\n            const contentItems = this.processResponse(response.data);\n            if (contentItems.length === 0) {\n                throw new ContentNotFoundError(id);\n            }\n            const item = contentItems.find((x) => x._meta.deliveryId === id);\n            if (!item) {\n                throw new ContentNotFoundError(id);\n            }\n            return this.hydrateContentItem(item);\n        }\n        catch (err) {\n            if (err.response) {\n                throw new HttpError(err.response.status, err.response.data);\n            }\n            throw err;\n        }\n    }\n    getUrl(query) {\n        const args = [\n            ['query', JSON.stringify(query)],\n            ['fullBodyObject', 'true'],\n            ['scope', 'tree'],\n            ['store', this.config.account],\n        ];\n        if (this.config.locale) {\n            args.push(['locale', this.config.locale]);\n        }\n        const queryString = encodeQueryString(args);\n        return `/cms/content/query?${queryString}`;\n    }\n    /**\n     * Convert plain content JSON into ContentItem instamce\n     * @param content\n     */\n    hydrateContentItem(content) {\n        const contentItem = new ContentItem();\n        contentItem.body = this.mapper.toMappedContent(content);\n        return contentItem;\n    }\n    /**\n     * Pre-processes the response to create a single content item object\n     * with all linked content items inlined.\n     * @param data Response from content query API\n     */\n    processResponse(data) {\n        if (!data.result || !data[LD_GRAPH] || !Array.isArray(data.result)) {\n            return [];\n        }\n        else {\n            const graph = data[LD_GRAPH];\n            const graphChildrenById = {};\n            graph.forEach((child) => (graphChildrenById[child[LD_ID]] = child));\n            return data.result.map((result) => {\n                result = graphChildrenById[result[LD_ID]];\n                // inline linked items\n                result = walkAndReplace(result, {\n                    beforeWalk: (node) => {\n                        if (typeof node === 'object' && node !== null) {\n                            if (node[LD_ID]) {\n                                node = graphChildrenById[node[LD_ID]];\n                            }\n                        }\n                        return node;\n                    },\n                });\n                // upgrade legacy content & remove json-ld\n                result = walkAndReplace(result, {\n                    beforeWalk: (node) => {\n                        node = this.upgradeLegacyContent(node);\n                        node = this.injectMetaData(node);\n                        node = this.removeJsonLD(node);\n                        return node;\n                    },\n                });\n                return result;\n            });\n        }\n    }\n    /**\n     * Content produced by older versions do not include _meta.schema.\n     * This function inserts those values to normalize the output\n     */\n    upgradeLegacyContent(node) {\n        if (!node) {\n            return node;\n        }\n        const type = node[LD_TYPE];\n        const id = node[LD_ID];\n        const isImage = id && id.indexOf('http://image.cms.amplience.com/') === 0;\n        const isVideo = id && id.indexOf('http://video.cms.amplience.com/') === 0;\n        if (type || isImage || isVideo) {\n            if (!node._meta) {\n                node._meta = {};\n            }\n            if (type) {\n                if (!node._meta.schema) {\n                    node._meta.schema = type;\n                }\n                if (!node._meta.name && node._title) {\n                    node._meta.name = node._title;\n                }\n            }\n            else if (isImage) {\n                node._meta.schema =\n                    'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link';\n            }\n            else if (isVideo) {\n                node._meta.schema =\n                    'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';\n            }\n        }\n        return node;\n    }\n    /**\n     * Injects additional meta data which is lost by removing\n     * the JSON-LD properties\n     */\n    injectMetaData(node) {\n        if (node) {\n            const id = node[LD_ID];\n            if (id) {\n                if (id.indexOf('http://content.cms.amplience.com/') === 0) {\n                    node._meta = node._meta || {};\n                    node._meta.deliveryId = id.slice(33);\n                }\n                else if (id.indexOf('http://image.cms.amplience.com/') === 0 ||\n                    id.indexOf('http://video.cms.amplience.com/') === 0) {\n                    node.id = id.slice(31);\n                }\n            }\n        }\n        return node;\n    }\n    /**\n     * JSON-LD keywords are just for delivery payload\n     */\n    removeJsonLD(node) {\n        if (node) {\n            delete node[LD_TYPE];\n            delete node[LD_ID];\n        }\n        return node;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q29udGVudEl0ZW1WMUltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldENvbnRlbnRJdGVtVjFJbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFNbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDckUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DOztHQUVHO0FBQ0gsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBRXBCOztHQUVHO0FBQ0gsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBRXhCOztHQUVHO0FBQ0gsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBRTFCOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG9CQUFvQjtJQUMvQixZQUNtQixNQUE2QixFQUM3QixhQUE0QixFQUM1QixNQUFxQjtRQUZyQixXQUFNLEdBQU4sTUFBTSxDQUF1QjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQ3JDLENBQUM7SUFFSjs7T0FFRztJQUNILGNBQWMsQ0FBd0IsRUFBVTtRQUM5QyxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsS0FBSyxDQUFDLGtCQUFrQixDQUN0QixFQUFVO1FBRVYsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUN0QixTQUFTLEVBQUUsb0NBQW9DLEVBQUUsRUFBRTtTQUNwRCxDQUFDLENBQUM7UUFFSCxJQUFJ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","/**\n * @hidden\n * Class providing meta data about a fragment of content with helper functions.\n */\nexport class FragmentMeta {\n    /**\n     * Creates a new FragmentMeta instance.\n     * @param data JSON representation of the FragmentMeta model\n     */\n    constructor(data) {\n        if (data) {\n            Object.assign(this, data);\n        }\n    }\n    /**\n     * Export to JSON\n     */\n    toJSON() {\n        const result = {\n            schema: this.schema,\n        };\n        if (this.name) {\n            result.name = this.name;\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Returns true if the provided node contains meta data to self-describe the JSON schema it was created against.\n     * @param node JSON node to test\n     */\n    static isFragment(node) {\n        return node != null && node._meta != null && node._meta.schema != null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRnJhZ21lbnRNZXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L21vZGVsL0ZyYWdtZW50TWV0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVd2Qjs7O09BR0c7SUFDSCxZQUFZLElBQVU7UUFDcEIsSUFBSSxJQUFJLEVBQUU7WUFDUixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUMzQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU07UUFDSixNQUFNLE1BQU0sR0FBa0I7WUFDNUIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3BCLENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7U0FDekI7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBUztRQUNoQyxPQUFPLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO0lBQ3pFLENBQUM7Q0FDRiJ9","import { Edition } from './Edition';\nimport { ContentLifecycle } from './ContentLifecycle';\nimport { FragmentMeta } from './FragmentMeta';\n/**\n * Class providing meta data about a content item with helper functions.\n */\nexport class ContentMeta extends FragmentMeta {\n    /**\n     * Creates a new ContentMeta instance.\n     * @param data JSON representation of the ContentMeta model\n     */\n    constructor(data) {\n        super(data);\n        if (data) {\n            if (data.edition) {\n                this.edition = new Edition(data.edition);\n            }\n            if (data.lifecycle) {\n                this.lifecycle = new ContentLifecycle(data.lifecycle);\n            }\n        }\n    }\n    /**\n     * Export to JSON\n     */\n    toJSON() {\n        const result = super.toJSON();\n        if (this.deliveryId) {\n            result.deliveryId = this.deliveryId;\n        }\n        if (this.deliveryKey) {\n            result.deliveryKey = this.deliveryKey;\n        }\n        if (this.name) {\n            result.name = this.name;\n        }\n        if (this.edition) {\n            result.edition = this.edition.toJSON();\n        }\n        if (this.lifecycle) {\n            result.lifecycle = this.lifecycle.toJSON();\n        }\n        if (this.hierarchy) {\n            result.hierarchy = this.hierarchy;\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Returns true if the provided node is a content item meta data object\n     * @param node JSON node to test\n     */\n    static isContentMeta(node) {\n        return (node != null &&\n            node.schema != null &&\n            (node.name != null || node.deliveryId != null));\n    }\n    /**\n     * @hidden\n     * Returns true if the provided node is a content body object\n     * @param node JSON node to test\n     */\n    static isContentBody(node) {\n        return node != null && this.isContentMeta(node._meta);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudE1ldGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvbW9kZWwvQ29udGVudE1ldGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFzQzlDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFdBQVksU0FBUSxZQUFZO0lBa0MzQzs7O09BR0c7SUFDSCxZQUFZLElBQVU7UUFDcEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRVosSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2hCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQzFDO1lBRUQsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNsQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3ZEO1NBQ0Y7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNO1FBQ0osTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTlCLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDckM7UUFFRCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ3ZDO1FBRUQsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsTUFBTSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1NBQ3pCO1FBRUQsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUN4QztRQUVELElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDNUM7UUFFRCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQ25DO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsYUFBYSxDQUFDLElBQVM7UUFDbkMsT0FBTyxDQUNMLElBQUksSUFBSSxJQUFJO1lBQ1osSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJO1lBQ25CLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsQ0FDL0MsQ0FBQztJQUNKLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFTO1FBQ25DLE9BQU8sSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RCxDQUFDO0NBQ0YifQ==","/**\n * @hidden\n * Base class for image or video resources.\n */\nexport class Media {\n    constructor(data, config) {\n        this.config = config;\n        Object.assign(this, data);\n    }\n    /**\n     * Returns the hostname that should be used to load this media resource.\n     * The hostname will use the staging and media host overrides if specified\n     * otherwise it will use the defaultHost provided by the delivery API.\n     * @param secure\n     */\n    getHost(secure) {\n        if (this.config.stagingEnvironment) {\n            return this.config.stagingEnvironment;\n        }\n        if (secure) {\n            return this.config.secureMediaHost || this.defaultHost;\n        }\n        else {\n            return (this.config.mediaHost || this.config.secureMediaHost || this.defaultHost);\n        }\n    }\n    /**\n     * Export media object to JSON\n     */\n    toJSON() {\n        return {\n            defaultHost: this.defaultHost,\n            endpoint: this.endpoint,\n            name: this.name,\n            id: this.id,\n            mimeType: this.mimeType,\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL01lZGlhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IsS0FBSztJQWdDekIsWUFBWSxJQUFTLEVBQVksTUFBaUM7UUFBakMsV0FBTSxHQUFOLE1BQU0sQ0FBMkI7UUFDaEUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksT0FBTyxDQUFDLE1BQWU7UUFDNUIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQztTQUN2QztRQUVELElBQUksTUFBTSxFQUFFO1lBQ1YsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ3hEO2FBQU07WUFDTCxPQUFPLENBQ0wsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FDekUsQ0FBQztTQUNIO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTTtRQUNKLE9BQU87WUFDTCxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtZQUNYLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtTQUN4QixDQUFDO0lBQ0osQ0FBQztDQUNGIn0=","import { FragmentMeta } from '../content/model/FragmentMeta';\n/**\n * Class providing meta data about a Media resource.\n */\nexport class MediaMeta extends FragmentMeta {\n    constructor(data) {\n        super(data);\n    }\n}\n/**\n * Class providing meta data about an Image resource.\n */\nexport class ImageMeta extends MediaMeta {\n    constructor(data) {\n        super(data);\n    }\n}\n/**\n * Class providing meta data about a Video resource.\n */\nexport class VideoMeta extends MediaMeta {\n    constructor(data) {\n        super(data);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWFNZXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9tZWRpYS9NZWRpYU1ldGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRTdEOztHQUVHO0FBQ0gsTUFBTSxPQUFnQixTQUFVLFNBQVEsWUFBWTtJQUNsRCxZQUFZLElBQVU7UUFDcEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sU0FBVSxTQUFRLFNBQVM7SUFDdEMsWUFBWSxJQUFVO1FBQ3BCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFNBQVUsU0FBUSxTQUFTO0lBQ3RDLFlBQVksSUFBVTtRQUNwQixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDZCxDQUFDO0NBQ0YifQ==","/**\n * Utility which helps construct URLs to image resources hosted using the Amplience Dynamic Media platform.\n *\n * Commonly used transformations can chained together by calling the appropriate function on the builder.\n * Advanced transformations can be used by configuring a transformation template within the Amplience\n * back-office and applying the template to the builder.\n */\nexport class ImageUrlBuilder {\n    constructor(media) {\n        this.media = media;\n        this._protocol = 'https';\n        this._query = [];\n    }\n    /**\n     * Protocol configures what protocol style to use when building the image URL.\n     *\n     * ```{{protocol}}[:]//images.site.com/i/account/image```\n     * @param value URL protocol, valid values are: http, https and // for protocol relative URLs\n     */\n    protocol(value) {\n        this._protocol = value;\n        return this;\n    }\n    /**\n     * Host configures the hostname to use when building the image URL.\n     * By default, the SDK will use the most appropriate hostname based on\n     * the SDK configuration.\n     *\n     * ```https://{{host}}/i/account/image```\n     * @param value Hostname to use instead of the default value.\n     */\n    host(value) {\n        this._host = value;\n        return this;\n    }\n    /**\n     * Format converts the image to the file format specified.\n     * The format will be appended to the URL as a file extension.\n     *\n     * ```https://images.site.com/i/account/image.webp```\n     * @param value  Images format to use when encoding the output.\n     */\n    format(value) {\n        this._format = value;\n        return this;\n    }\n    /**\n     * SEO filename allows a custom filename to be used to improve SEO.\n     *\n     * ```https://images.site.com/i/account/image/{{seoFileName}}```\n     * @param value\n     */\n    seoFileName(value) {\n        this._seoFileName = value;\n        return this;\n    }\n    /**\n     * Template applies a transformation template to the image, which will\n     * apply all of the transformation parameters contained in the template to the image.\n     *\n     * ```https://images.site.com/i/account/image?${{name}}$```\n     * @param name The name of the transformation template previously configured in the Amplience back-office.\n     */\n    template(name) {\n        this._query.push(`$${encodeURIComponent(name)}$`);\n        return this;\n    }\n    /**\n     * Parameter appends the specified parameter to the query string. This can be used to\n     * pass variables into templates.\n     *\n     * ```https://images.site.com/i/account/image?{{name}}={{value}}```\n     * @param name\n     * @param value\n     */\n    parameter(name, value) {\n        this._query.push(`${encodeURIComponent(name)}=${encodeURIComponent(value)}`);\n        return this;\n    }\n    /**\n     * Quality sets the compression level for the image output\n     *\n     * ```https://images.site.com/i/account/image?qlt={{value}}```\n     * @param value The quality percentage (0-100)\n     */\n    quality(value) {\n        this._query.push(`qlt=${value}`);\n        return this;\n    }\n    /**\n     * Sharpen applies an unsharp mask to the image to refine edges or make an image look more crisp.\n     *\n     * ```https://images.site.com/i/account/image?unsharp={{radius}},{{sigma}},{{amount}},{{threshold}}```\n     *\n     * @param radius The radius of the Gaussian, in pixels, not counting the center pixel.\n     * @param sigma The standard deviation of the Gaussian, in pixels.\n     * @param amount The percentage of the difference between the original and the blur image that is added back into the original.\n     * @param threshold The threshold, as a fraction of MaxRGB, needed to apply the difference amount.\n     */\n    sharpen(radius = 0, sigma = 1, amount = 1, threshold = 0.05) {\n        this._query.push(`unsharp=${radius},${sigma},${amount},${threshold}`);\n        return this;\n    }\n    /**\n     * Width resizes an image to the pixel size provided. If you only provide one axis,\n     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter\n     * to apply different resize effects like stretch or crop.\n     *\n     * ```https://images.site.com/i/account/image?w={{value}}```\n     * @param value The new width in pixels.\n     */\n    width(value) {\n        this._query.push(`w=${value}`);\n        return this;\n    }\n    /**\n     * Height resizes an image to the pixel size provided. If you only provide one axis,\n     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter\n     * to apply different resize effects like stretch or crop.\n     *\n     * ```https://images.site.com/i/account/image?h={{value}}```\n     * @param value The new height in pixels.\n     */\n    height(value) {\n        this._query.push(`h=${value}`);\n        return this;\n    }\n    /**\n     * Returns the fully constructed URL for this image with any transformations.\n     */\n    build() {\n        const isSecure = this._protocol === '//' || this._protocol === 'https';\n        const isVideo = this.media._meta &&\n            this.media._meta.schema ===\n                'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';\n        let url = this._protocol === '//' ? '//' : `${this._protocol}://`;\n        const host = this._host ? this._host : this.media.getHost(isSecure);\n        url += host;\n        url += `/${isVideo ? 'v' : 'i'}/`;\n        url += encodeURIComponent(this.media.endpoint);\n        url += '/';\n        url += encodeURIComponent(this.media.name);\n        if (this._seoFileName) {\n            url += '/';\n            url += encodeURIComponent(this._seoFileName);\n        }\n        if (this._format) {\n            url += `.${this._format}`;\n        }\n        if (this._query.length > 0) {\n            url += '?';\n            url += this._query.join('&');\n        }\n        return url;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2VVcmxCdWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9tZWRpYS9JbWFnZVVybEJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7Ozs7OztHQU1HO0FBQ0gsTUFBTSxPQUFPLGVBQWU7SUFPMUIsWUFBNkIsS0FBWTtRQUFaLFVBQUssR0FBTCxLQUFLLENBQU87UUFOakMsY0FBUyxHQUFHLE9BQU8sQ0FBQztRQUlYLFdBQU0sR0FBYSxFQUFFLENBQUM7SUFFSyxDQUFDO0lBRTdDOzs7OztPQUtHO0lBQ0gsUUFBUSxDQUFDLEtBQWE7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUNILElBQUksQ0FBQyxLQUFhO1FBQ2hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNILE1BQU0sQ0FBQyxLQUFrQjtRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFdBQVcsQ0FBQyxLQUFhO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzFCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNILFFBQVEsQ0FBQyxJQUFZO1FBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxTQUFTLENBQUMsSUFBWSxFQUFFLEtBQWE7UUFDbkMsSUFBSSxDQUFDLE1BQU0sQ0FB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","import { Media } from './Media';\nimport { ImageMeta } from './MediaMeta';\nimport { FragmentMeta } from '../content/model/FragmentMeta';\nimport { ImageUrlBuilder } from './ImageUrlBuilder';\n/**\n * Class representing an Image resource with helper functions.\n * Image URL helper functions will take into consideration staging and custom hostname overrides.\n */\nexport class Image extends Media {\n    /**\n     * Creates a new Image instance.\n     * @param data JSON data from delivery API\n     * @param config Client configuration\n     */\n    constructor(data, config) {\n        super(data, config);\n        if (data && data._meta) {\n            this._meta = new ImageMeta(data._meta);\n        }\n    }\n    /**\n     * Returns a builder which can be used to construct a URL to this image resource.\n     * You can apply transformations such as resize and image format using the returned builder.\n     *\n     * ```typescript\n     * image.thumbnail().width(500).build();\n     * ```\n     */\n    url() {\n        return new ImageUrlBuilder(this);\n    }\n    /**\n     * Export Image to JSON\n     */\n    toJSON() {\n        const result = super.toJSON();\n        if (this._meta) {\n            result._meta = this._meta.toJSON();\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Returns true if the provided fragment is an image\n     * @param fragment\n     */\n    static isImage(fragment) {\n        return (FragmentMeta.isFragment(fragment) &&\n            fragment._meta.schema ===\n                'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL0ltYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDaEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBR3BEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxLQUFNLFNBQVEsS0FBSztJQUM5Qjs7OztPQUlHO0lBQ0gsWUFBWSxJQUFTLEVBQUUsTUFBaUM7UUFDdEQsS0FBSyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwQixJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hDO0lBQ0gsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxHQUFHO1FBQ0QsT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNO1FBQ0osTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzlCLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNwQztRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFhO1FBQ2pDLE9BQU8sQ0FDTCxZQUFZLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUNqQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU07Z0JBQ25CLGlFQUFpRSxDQUNwRSxDQUFDO0lBQ0osQ0FBQztDQUNGIn0=","import { Media } from './Media';\nimport { FragmentMeta } from '../content/model/FragmentMeta';\nimport { ImageUrlBuilder } from './ImageUrlBuilder';\nimport { VideoMeta } from './MediaMeta';\n/**\n * Class representing a Video resource with helper functions.s\n */\nexport class Video extends Media {\n    /**\n     * Creates a new Video instance.\n     * @param data JSON data from delivery API\n     */\n    constructor(data, config) {\n        super(data, config);\n        if (data && data._meta) {\n            this._meta = new VideoMeta(data._meta);\n        }\n    }\n    /**\n     * Returns a builder which can be used to construct a video thumbnail URL.\n     * You can apply transformations such as resize and image format using the returned builder.\n     *\n     * ```typescript\n     * video.thumbnail().width(500).build();\n     * ```\n     */\n    thumbnail() {\n        return new ImageUrlBuilder(this);\n    }\n    /**\n     * Export Video to JSON\n     */\n    toJSON() {\n        const result = super.toJSON();\n        if (this._meta) {\n            result._meta = this._meta.toJSON();\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Returns true if the provided fragment is a video\n     * @param fragment\n     */\n    static isVideo(fragment) {\n        return (FragmentMeta.isFragment(fragment) &&\n            fragment._meta.schema ===\n                'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlkZW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL1ZpZGVvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDaEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVwRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLEtBQU0sU0FBUSxLQUFLO0lBTTlCOzs7T0FHRztJQUNILFlBQVksSUFBUyxFQUFFLE1BQWlDO1FBQ3RELEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDcEIsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN4QztJQUNILENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsU0FBUztRQUNQLE9BQU8sSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTTtRQUNKLE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDcEM7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBYTtRQUNqQyxPQUFPLENBQ0wsWUFBWSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7WUFDakMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNO2dCQUNuQixpRUFBaUUsQ0FDcEUsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9","import { FragmentMeta } from './FragmentMeta';\n/**\n * Class providing meta data about an Content Reference resource.\n * @deprecated use FragmentMeta\n */\nexport class ContentReferenceMeta extends FragmentMeta {\n    constructor(data) {\n        super(data);\n    }\n}\n/**\n * Class representing an Content Reference.\n */\nexport class ContentReference {\n    constructor(data) {\n        Object.assign(this, data);\n        if (data && data._meta) {\n            this._meta = new ContentReferenceMeta(data._meta);\n        }\n        if (data && data.contentType) {\n            this.contentType = data.contentType;\n        }\n    }\n    /**\n     * Export ContentReference to JSON\n     */\n    toJSON() {\n        const { id } = this;\n        const result = {\n            id,\n        };\n        if (this._meta) {\n            result._meta = this._meta.toJSON();\n        }\n        if (this.contentType) {\n            result.contentType = this.contentType;\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Returns true if the provided fragment is an content reference\n     * @param fragment\n     */\n    static isContentReference(fragment) {\n        return (FragmentMeta.isFragment(fragment) &&\n            fragment._meta.schema ===\n                'http://bigcontent.io/cms/schema/v1/core#/definitions/content-reference');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlZmVyZW5jZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9tb2RlbC9Db250ZW50UmVmZXJlbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQWM5Qzs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsWUFBWTtJQUNwRCxZQUFZLElBQVU7UUFDcEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sZ0JBQWdCO0lBSzNCLFlBQVksSUFBOEI7UUFDeEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFMUIsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ25EO1FBRUQsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUM1QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDckM7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNO1FBQ0osTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQztRQUNwQixNQUFNLE1BQU0sR0FBNkI7WUFDdkMsRUFBRTtTQUNILENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDcEM7UUFFRCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ3ZDO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsa0JBQWtCLENBQzlCLFFBQTJEO1FBRTNELE9BQU8sQ0FDTCxZQUFZLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUNqQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU07Z0JBQ25CLHdFQUF3RSxDQUMzRSxDQUFDO0lBQ0osQ0FBQztDQUNGIn0=","import { walkAndReplace } from '../../utils/JsonWalker';\nimport { FragmentMeta } from '../model/FragmentMeta';\nimport { ContentMeta } from '../model/ContentMeta';\nimport { Image } from '../../media/Image';\nimport { Video } from '../../media/Video';\nimport { ContentReference } from '../model/ContentReference';\n/**\n * @hidden\n * ContentMapper provides functionality to convert simple JSON content into hydrated model classes\n * with helper functions. If a mapper is not defined for a schema it will remain as plain JSON.\n */\nexport class ContentMapper {\n    constructor(config) {\n        this.config = config;\n        this.mappers = [];\n        this.registerBuiltInMappers();\n    }\n    /**\n     * Registers a custom model / fn to hydrate a specific schema\n     * @param schema JSON schema ID or Regex that matches against the JSON schema ID\n     * @param fn Model Class or Function that can convert the schema\n     */\n    addSchema(schema, fn) {\n        if (typeof schema === 'string') {\n            this.addCustomMapper((fragment) => {\n                if (fragment._meta.schema === schema) {\n                    return fn(fragment);\n                }\n            });\n        }\n        else {\n            this.addCustomMapper((fragment) => {\n                if (schema.test(fragment._meta.schema)) {\n                    return fn(fragment);\n                }\n            });\n        }\n    }\n    /**\n     * Registers a custom function to hydrate content fragments\n     * @param fn Mapper function\n     */\n    addCustomMapper(fn) {\n        this.mappers.push(fn);\n    }\n    /**\n     * Converts the provided content into hydrated model classes\n     * @param content Content to convert\n     */\n    toMappedContent(content) {\n        return walkAndReplace(content, {\n            afterWalk: (node) => {\n                if (FragmentMeta.isFragment(node)) {\n                    return this.mapFragment(node);\n                }\n                return node;\n            },\n        });\n    }\n    /**\n     * Converts a single fragment using the registered mappers\n     * @param fragment Fragment to convert\n     */\n    mapFragment(fragment) {\n        for (const mapper of this.mappers) {\n            const result = mapper(fragment);\n            if (result) {\n                return result;\n            }\n        }\n        return fragment;\n    }\n    /**\n     * Registers built in mappers\n     */\n    registerBuiltInMappers() {\n        this.addCustomMapper(this.convertContentReference.bind(this));\n        this.addCustomMapper(this.convertContentMeta.bind(this));\n        this.addCustomMapper(this.convertImage.bind(this));\n        this.addCustomMapper(this.convertVideo.bind(this));\n    }\n    /**\n     * Converts _meta inside Content Items into a ContentMeta instance\n     * @param fragment\n     */\n    convertContentMeta(fragment) {\n        if (ContentMeta.isContentBody(fragment)) {\n            return {\n                ...fragment,\n                _meta: new ContentMeta(fragment._meta),\n            };\n        }\n    }\n    /**\n     * Converts content-link into an Content reference class instance\n     * @param fragment\n     */\n    convertContentReference(fragment) {\n        if (ContentReference.isContentReference(fragment)) {\n            const result = new ContentReference(fragment);\n            return result;\n        }\n    }\n    /**\n     * Converts image-link into an Image class instance\n     * @param fragment\n     */\n    convertImage(fragment) {\n        if (Image.isImage(fragment)) {\n            const result = new Image(fragment, this.config);\n            return result;\n        }\n    }\n    /**\n     * Converts image-link into an Image class instance\n     * @param fragment\n     */\n    convertVideo(fragment) {\n        if (Video.isVideo(fragment)) {\n            const result = new Video(fragment, this.config);\n            return result;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudE1hcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9tYXBwZXIvQ29udGVudE1hcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDMUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBVTdEOzs7O0dBSUc7QUFDSCxNQUFNLE9BQU8sYUFBYTtJQUd4QixZQUE2QixNQUFpQztRQUFqQyxXQUFNLEdBQU4sTUFBTSxDQUEyQjtRQUZwRCxZQUFPLEdBQXNCLEVBQUUsQ0FBQztRQUd4QyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFNBQVMsQ0FBQyxNQUF1QixFQUFFLEVBQW1CO1FBQ3BELElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQzlCLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtnQkFDaEMsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUU7b0JBQ3BDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUNyQjtZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7YUFBTTtZQUNMLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtnQkFDaEMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFL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","import { ContentItem } from '../model/ContentItem';\nimport { encodeQueryString } from '../../utils/Url';\nimport { HttpError } from '../model/HttpError';\nimport { ContentNotFoundError } from '../model/ContentNotFoundError';\n/**\n * @hidden\n */\nexport class GetContentItemV2Impl {\n    constructor(config, contentClient, mapper) {\n        this.config = config;\n        this.contentClient = contentClient;\n        this.mapper = mapper;\n    }\n    getContentItemByKey(key) {\n        return this.getContentItem('key', key);\n    }\n    async getContentItemById(id) {\n        return this.getContentItem('id', id);\n    }\n    async getContentItem(requestType, value) {\n        const args = [\n            ['depth', 'all'],\n            ['format', 'inlined'],\n        ];\n        if (this.config.locale) {\n            args.push(['locale', this.config.locale]);\n        }\n        const url = `content/${requestType}/${value}?${encodeQueryString(args)}`;\n        let response;\n        try {\n            response = await this.contentClient.get(url);\n        }\n        catch (err) {\n            if (err.response) {\n                if (err.response.status === 404) {\n                    throw new ContentNotFoundError(value);\n                }\n                else {\n                    throw new HttpError(err.response.status, err.response.data);\n                }\n            }\n            throw err;\n        }\n        const contentItem = new ContentItem();\n        contentItem.body = this.mapper.toMappedContent(response.data.content);\n        return contentItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q29udGVudEl0ZW1WMkltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldENvbnRlbnRJdGVtVjJJbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUluRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDL0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFHckU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sb0JBQW9CO0lBRS9CLFlBQ21CLE1BQTZCLEVBQzdCLGFBQTRCLEVBQzVCLE1BQXFCO1FBRnJCLFdBQU0sR0FBTixNQUFNLENBQXVCO1FBQzdCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLFdBQU0sR0FBTixNQUFNLENBQWU7SUFDckMsQ0FBQztJQUVKLG1CQUFtQixDQUNqQixHQUFXO1FBRVgsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBQ0QsS0FBSyxDQUFDLGtCQUFrQixDQUN0QixFQUFVO1FBRVYsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsS0FBSyxDQUFDLGNBQWMsQ0FDbEIsV0FBeUIsRUFDekIsS0FBYTtRQUViLE1BQU0sSUFBSSxHQUFHO1lBQ1gsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO1lBQ2hCLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQztTQUN0QixDQUFDO1FBQ0YsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUMzQztRQUNELE1BQU0sR0FBRyxHQUFHLFdBQVcsV0FBVyxJQUFJLEtBQUssSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBRXpFLElBQUksUUFBdUIsQ0FBQztRQUM1QixJQUFJO1lBQ0YsUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDOUM7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNaLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRTtnQkFDaEIsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBQy9CLE1BQU0sSUFBSSxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDdkM7cUJBQU07b0JBQ0wsTUFBTSxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUM3RDthQUNGO1lBRUQsTUFBTSxHQUFHLENBQUM7U0FDWDtRQUVELE1BQU0sV0FBVyxHQUFHLElBQUksV0FBVyxFQUFLLENBQUM7UUFDekMsV0FBVyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3RFLE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7Q0FDRiJ9","import { HttpError } from '../model/HttpError';\n/**\n * Utility that maps an array of ids or keys into the expected format of a `content/fetch` request body\n * @param property id or key\n * @param values array of ids or keys\n * @hidden\n */\nfunction mapToRequests(property, values) {\n    if (!Array.isArray(values)) {\n        throw new TypeError('Expecting an array');\n    }\n    return values.map((value) => ({ [property]: String(value) }));\n}\n/**\n * Wraps `content/fetch`\n * @hidden\n */\nexport class GetContentItemsV2Impl {\n    constructor(config, contentClient) {\n        this.config = config;\n        this.contentClient = contentClient;\n    }\n    async getContentItemsByKey(keys) {\n        return this.getContentItems(mapToRequests('key', keys));\n    }\n    async getContentItemsById(ids) {\n        return this.getContentItems(mapToRequests('id', ids));\n    }\n    async getContentItems(requests, parameters) {\n        return this.fetchContentItems({\n            parameters,\n            requests,\n        });\n    }\n    async fetchContentItems({ requests, parameters, }) {\n        const defaultParameters = {\n            depth: 'all',\n            format: 'inlined',\n        };\n        if (this.config.locale) {\n            defaultParameters.locale = this.config.locale;\n        }\n        const mergedParameters = {\n            ...defaultParameters,\n            ...(parameters || {}),\n        };\n        try {\n            const { data } = await this.contentClient.post('content/fetch', {\n                parameters: mergedParameters,\n                requests,\n            });\n            return data;\n        }\n        catch (err) {\n            if (err.response) {\n                throw new HttpError(err.response.status, err.response.data);\n            }\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q29udGVudEl0ZW1zVjJJbXBsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L2Nvb3JkaW5hdG9ycy9HZXRDb250ZW50SXRlbXNWMkltcGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBTS9DOzs7OztHQUtHO0FBQ0gsU0FBUyxhQUFhLENBQ3BCLFFBQTBCLEVBQzFCLE1BQWtCO0lBRWxCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzFCLE1BQU0sSUFBSSxTQUFTLENBQUMsb0JBQW9CLENBQUMsQ0FBQztLQUMzQztJQUNELE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FDZixDQUFDLEtBQVUsRUFBRSxFQUFFLENBQ2IsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUF1QyxDQUFBLENBQ3RFLENBQUM7QUFDSixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxZQUNtQixNQUE2QixFQUM3QixhQUE0QjtRQUQ1QixXQUFNLEdBQU4sTUFBTSxDQUF1QjtRQUM3QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUM1QyxDQUFDO0lBRUosS0FBSyxDQUFDLG9CQUFvQixDQUN4QixJQUFtQjtRQUVuQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFRCxLQUFLLENBQUMsbUJBQW1CLENBQ3ZCLEdBQWtCO1FBRWxCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELEtBQUssQ0FBQyxlQUFlLENBQ25CLFFBQWtDLEVBQ2xDLFVBQXVDO1FBRXZDLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQzVCLFVBQVU7WUFDVixRQUFRO1NBQ1QsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELEtBQUssQ0FBQyxpQkFBaUIsQ0FBTyxFQUM1QixRQUFRLEVBQ1IsVUFBVSxHQUNHO1FBQ2IsTUFBTSxpQkFBaUIsR0FBK0I7WUFDcEQsS0FBSyxFQUFFLEtBQUs7WUFDWixNQUFNLEVBQUUsU0FBUztTQUNsQixDQUFDO1FBRUYsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixpQkFBaUIsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7U0FDL0M7UUFFRCxNQUFNLGdCQUFnQixHQUFHO1lBQ3ZCLEdBQUcsaUJBQWlCO1lBQ3BCLEdBQUcsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDO1NBQ3RCLENBQUM7UUFFRixJQUFJO1lBQ0YsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO2dCQUM5RCxVQUFVLEVBQUUsZ0JBQWdCO2dCQUM1QixRQUFRO2FBQ1QsQ0FBQyxDQUFDO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFO2dCQUNoQixNQUFNLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDN0Q7WUFDRCxNQUFNLEdBQUcsQ0FBQztTQUNYO0lBQ0gsQ0FBQztDQUNGIn0=","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport isRetryAllowed from 'is-retry-allowed';\nvar namespace = 'axios-retry';\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\n\nexport function isNetworkError(error) {\n  return !error.response && Boolean(error.code) && // Prevents retrying cancelled requests\n  error.code !== 'ECONNABORTED' && // Prevents retrying timed out requests\n  isRetryAllowed(error); // Prevents retrying unsafe errors\n}\nvar SAFE_HTTP_METHODS = ['get', 'head', 'options'];\nvar IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(['put', 'delete']);\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\n\nexport function isRetryableError(error) {\n  return error.code !== 'ECONNABORTED' && (!error.response || error.response.status >= 500 && error.response.status <= 599);\n}\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\n\nexport function isSafeRequestError(error) {\n  if (!error.config) {\n    // Cannot determine if the request can be retried\n    return false;\n  }\n\n  return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;\n}\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\n\nexport function isIdempotentRequestError(error) {\n  if (!error.config) {\n    // Cannot determine if the request can be retried\n    return false;\n  }\n\n  return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;\n}\n/**\n * @param  {Error}  error\n * @return {boolean | Promise}\n */\n\nexport function isNetworkOrIdempotentRequestError(error) {\n  return isNetworkError(error) || isIdempotentRequestError(error);\n}\n/**\n * @return {number} - delay in milliseconds, always 0\n */\n\nfunction noDelay() {\n  return 0;\n}\n/**\n * @param  {number} [retryNumber=0]\n * @return {number} - delay in milliseconds\n */\n\n\nexport function exponentialDelay() {\n  var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var delay = Math.pow(2, retryNumber) * 100;\n  var randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay\n\n  return delay + randomSum;\n}\n/**\n * Initializes and returns the retry state for the given request/config\n * @param  {AxiosRequestConfig} config\n * @return {Object}\n */\n\nfunction getCurrentState(config) {\n  var currentState = config[namespace] || {};\n  currentState.retryCount = currentState.retryCount || 0;\n  config[namespace] = currentState;\n  return currentState;\n}\n/**\n * Returns the axios-retry options for the current request\n * @param  {AxiosRequestConfig} config\n * @param  {AxiosRetryConfig} defaultOptions\n * @return {AxiosRetryConfig}\n */\n\n\nfunction getRequestOptions(config, defaultOptions) {\n  return _objectSpread(_objectSpread({}, defaultOptions), config[namespace]);\n}\n/**\n * @param  {Axios} axios\n * @param  {AxiosRequestConfig} config\n */\n\n\nfunction fixConfig(axios, config) {\n  if (axios.defaults.agent === config.agent) {\n    delete config.agent;\n  }\n\n  if (axios.defaults.httpAgent === config.httpAgent) {\n    delete config.httpAgent;\n  }\n\n  if (axios.defaults.httpsAgent === config.httpsAgent) {\n    delete config.httpsAgent;\n  }\n}\n/**\n * Checks retryCondition if request can be retried. Handles it's retruning value or Promise.\n * @param  {number} retries\n * @param  {Function} retryCondition\n * @param  {Object} currentState\n * @param  {Error} error\n * @return {boolean}\n */\n\n\nfunction shouldRetry(_x, _x2, _x3, _x4) {\n  return _shouldRetry.apply(this, arguments);\n}\n/**\n * Adds response interceptors to an axios instance to retry requests failed due to network issues\n *\n * @example\n *\n * import axios from 'axios';\n *\n * axiosRetry(axios, { retries: 3 });\n *\n * axios.get('http://example.com/test') // The first request fails and the second returns 'ok'\n *   .then(result => {\n *     result.data; // 'ok'\n *   });\n *\n * // Exponential back-off retry delay between requests\n * axiosRetry(axios, { retryDelay : axiosRetry.exponentialDelay});\n *\n * // Custom retry delay\n * axiosRetry(axios, { retryDelay : (retryCount) => {\n *   return retryCount * 1000;\n * }});\n *\n * // Also works with custom axios instances\n * const client = axios.create({ baseURL: 'http://example.com' });\n * axiosRetry(client, { retries: 3 });\n *\n * client.get('/test') // The first request fails and the second returns 'ok'\n *   .then(result => {\n *     result.data; // 'ok'\n *   });\n *\n * // Allows request-specific configuration\n * client\n *   .get('/test', {\n *     'axios-retry': {\n *       retries: 0\n *     }\n *   })\n *   .catch(error => { // The first request fails\n *     error !== undefined\n *   });\n *\n * @param {Axios} axios An axios instance (the axios object or one created from axios.create)\n * @param {Object} [defaultOptions]\n * @param {number} [defaultOptions.retries=3] Number of retries\n * @param {boolean} [defaultOptions.shouldResetTimeout=false]\n *        Defines if the timeout should be reset between retries\n * @param {Function} [defaultOptions.retryCondition=isNetworkOrIdempotentRequestError]\n *        A function to determine if the error can be retried\n * @param {Function} [defaultOptions.retryDelay=noDelay]\n *        A function to determine the delay between retry requests\n */\n\n\nfunction _shouldRetry() {\n  _shouldRetry = _asyncToGenerator(function* (retries, retryCondition, currentState, error) {\n    var shouldRetryOrPromise = currentState.retryCount < retries && retryCondition(error); // This could be a promise\n\n    if (typeof shouldRetryOrPromise === 'object') {\n      try {\n        yield shouldRetryOrPromise;\n        return true;\n      } catch (_err) {\n        return false;\n      }\n    }\n\n    return shouldRetryOrPromise;\n  });\n  return _shouldRetry.apply(this, arguments);\n}\n\nexport default function axiosRetry(axios, defaultOptions) {\n  axios.interceptors.request.use(config => {\n    var currentState = getCurrentState(config);\n    currentState.lastRequestTime = Date.now();\n    return config;\n  });\n  axios.interceptors.response.use(null, /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (error) {\n      var {\n        config\n      } = error; // If we have no information to retry the request\n\n      if (!config) {\n        return Promise.reject(error);\n      }\n\n      var {\n        retries = 3,\n        retryCondition = isNetworkOrIdempotentRequestError,\n        retryDelay = noDelay,\n        shouldResetTimeout = false\n      } = getRequestOptions(config, defaultOptions);\n      var currentState = getCurrentState(config);\n\n      if (yield shouldRetry(retries, retryCondition, currentState, error)) {\n        currentState.retryCount += 1;\n        var delay = retryDelay(currentState.retryCount, error); // Axios fails merging this configuration to the default configuration because it has an issue\n        // with circular structures: https://github.com/mzabriskie/axios/issues/370\n\n        fixConfig(axios, config);\n\n        if (!shouldResetTimeout && config.timeout && currentState.lastRequestTime) {\n          var lastRequestDuration = Date.now() - currentState.lastRequestTime; // Minimum 1ms timeout (passing 0 or less to XHR means no timeout)\n\n          config.timeout = Math.max(config.timeout - lastRequestDuration - delay, 1);\n        }\n\n        config.transformRequest = [data => data];\n        return new Promise(resolve => setTimeout(() => resolve(axios(config)), delay));\n      }\n\n      return Promise.reject(error);\n    });\n\n    return function (_x5) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n} // Compatibility with CommonJS\n\naxiosRetry.isNetworkError = isNetworkError;\naxiosRetry.isSafeRequestError = isSafeRequestError;\naxiosRetry.isIdempotentRequestError = isIdempotentRequestError;\naxiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;\naxiosRetry.exponentialDelay = exponentialDelay;\naxiosRetry.isRetryableError = isRetryableError;\n//# sourceMappingURL=index.js.map","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import Axios from 'axios';\n/**\n * Create base network client to make requests to the content delivery service\n * @param config\n * @hidden\n */\nexport function createBaseContentClient(config, defaultHost) {\n    const client = Axios.create({\n        adapter: config.adaptor,\n        timeout: config.timeout || 0,\n    });\n    if (config.stagingEnvironment) {\n        client.defaults.baseURL = `https://${config.stagingEnvironment}`;\n    }\n    else {\n        client.defaults.baseURL = config.baseUrl || defaultHost;\n    }\n    return client;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlQmFzZUNvbnRlbnRDbGllbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NsaWVudC9jcmVhdGVCYXNlQ29udGVudENsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEtBQXdCLE1BQU0sT0FBTyxDQUFDO0FBRTdDOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQWlDLEVBQ2pDLFdBQW1CO0lBRW5CLE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDMUIsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPO1FBQ3ZCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxJQUFJLENBQUM7S0FDN0IsQ0FBQyxDQUFDO0lBRUgsSUFBSSxNQUFNLENBQUMsa0JBQWtCLEVBQUU7UUFDN0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsV0FBVyxNQUFNLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztLQUNsRTtTQUFNO1FBQ0wsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sSUFBSSxXQUFXLENBQUM7S0FDekQ7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIn0=","import axiosRetry from 'axios-retry';\nimport { createBaseContentClient } from './createBaseContentClient';\nconst isThrottled = (error) => error?.response?.status === 429;\nconst DEFAULT_RETRY_CONFIG = {\n    retries: 3,\n    retryDelay: axiosRetry.exponentialDelay,\n    retryCondition: isThrottled,\n};\n/**\n * Get retry config to be passed to axios-retry\n * @param retryConfig\n * @hidden\n */\nexport function getRetryConfig(retryConfig) {\n    return {\n        retries: retryConfig?.retries ?? DEFAULT_RETRY_CONFIG.retries,\n        retryDelay: retryConfig?.retryDelay ?? DEFAULT_RETRY_CONFIG.retryDelay,\n        retryCondition: retryConfig?.retryCondition ?? DEFAULT_RETRY_CONFIG.retryCondition,\n    };\n}\n/**\n * Create network client to make requests to the Fresh API service\n * @param config\n * @hidden\n */\nexport function createContentClientV2Fresh(config, defaultHost) {\n    const client = createBaseContentClient(config, defaultHost);\n    client.defaults.headers.common['X-API-Key'] = config.apiKey;\n    axiosRetry(client, getRetryConfig(config.retryConfig));\n    return client;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlQ29udGVudENsaWVudFYyRnJlc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NsaWVudC9jcmVhdGVDb250ZW50Q2xpZW50VjJGcmVzaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFVBQVUsTUFBTSxhQUFhLENBQUM7QUFNckMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFcEUsTUFBTSxXQUFXLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxLQUFLLEdBQUcsQ0FBQztBQUMvRCxNQUFNLG9CQUFvQixHQUE2QjtJQUNyRCxPQUFPLEVBQUUsQ0FBQztJQUNWLFVBQVUsRUFBRSxVQUFVLENBQUMsZ0JBQWdCO0lBQ3ZDLGNBQWMsRUFBRSxXQUFXO0NBQzVCLENBQUM7QUFFRjs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FDNUIsV0FBc0M7SUFFdEMsT0FBTztRQUNMLE9BQU8sRUFBRSxXQUFXLEVBQUUsT0FBTyxJQUFJLG9CQUFvQixDQUFDLE9BQU87UUFDN0QsVUFBVSxFQUFFLFdBQVcsRUFBRSxVQUFVLElBQUksb0JBQW9CLENBQUMsVUFBVTtRQUN0RSxjQUFjLEVBQ1osV0FBVyxFQUFFLGNBQWMsSUFBSSxvQkFBb0IsQ0FBQyxjQUFjO0tBQ3JFLENBQUM7QUFDSixDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSwwQkFBMEIsQ0FDeEMsTUFBa0MsRUFDbEMsV0FBbUI7SUFFbkIsTUFBTSxNQUFNLEdBQUcsdUJBQXVCLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQzVELFVBQVUsQ0FBQyxNQUFNLEVBQUUsY0FBYyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMifQ==","/**\n * @hidden\n */\nexport class NotSupportedError extends Error {\n    constructor(property, method) {\n        super(`Not supported. You need to define \"${property}\" configuration property to use ${method}()`);\n        this.property = property;\n        this.method = method;\n        this.name = 'NOT_SUPPORTED';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class NotSupportedV1Error extends NotSupportedError {\n    constructor(method) {\n        super('account', method);\n        this.method = method;\n        this.name = 'NOT_SUPPORTED_V1';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class NotSupportedV2Error extends NotSupportedError {\n    constructor(method) {\n        super('hubName', method);\n        this.method = method;\n        this.name = 'NOT_SUPPORTED_V2';\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm90U3VwcG9ydGVkRXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvbW9kZWwvTm90U3VwcG9ydGVkRXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFDSCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsS0FBSztJQU0xQyxZQUFtQixRQUFnQixFQUFTLE1BQWM7UUFDeEQsS0FBSyxDQUNILHNDQUFzQyxRQUFRLG1DQUFtQyxNQUFNLElBQUksQ0FDNUYsQ0FBQztRQUhlLGFBQVEsR0FBUixRQUFRLENBQVE7UUFBUyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBTDFDLFNBQUksR0FHRSxlQUFlLENBQUM7UUFNcEMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsaUJBQWlCO0lBR3hELFlBQW1CLE1BQWM7UUFDL0IsS0FBSyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQURSLFdBQU0sR0FBTixNQUFNLENBQVE7UUFGakIsU0FBSSxHQUFHLGtCQUFrQixDQUFDO1FBSXhDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUNGO0FBQ0QsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGlCQUFpQjtJQUd4RCxZQUFtQixNQUFjO1FBQy9CLEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFEUixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBRmpCLFNBQUksR0FBRyxrQkFBa0IsQ0FBQztRQUl4QyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3BELENBQUM7Q0FDRiJ9","import { encodeQueryString } from '../../../utils/Url';\nexport class HierarchyURLBuilder {\n    static { this.HIERARCHY_URL = '/content/hierarchies/descendants/id/'; }\n    static { this.MAXIMUM_DEPTH_PARAM = 'hierarchyDepth'; }\n    static { this.MAXIMUM_PAGE_SIZE_PARAM = 'maxPageSize'; }\n    static { this.LAST_EVALUATED_PARAM = 'pageCursor'; }\n    static { this.SORT_KEY_PARAM = 'sortByKey'; }\n    static { this.SORT_ORDER_PARAM = 'sortByOrder'; }\n    buildUrl(request) {\n        const params = [];\n        if (request.maximumDepth !== undefined) {\n            params.push([\n                HierarchyURLBuilder.MAXIMUM_DEPTH_PARAM,\n                request.maximumDepth.toString(),\n            ]);\n        }\n        if (request.maximumPageSize !== undefined) {\n            params.push([\n                HierarchyURLBuilder.MAXIMUM_PAGE_SIZE_PARAM,\n                request.maximumPageSize.toString(),\n            ]);\n        }\n        if (request.pageCursor !== undefined) {\n            params.push([\n                HierarchyURLBuilder.LAST_EVALUATED_PARAM,\n                request.pageCursor.toString(),\n            ]);\n        }\n        if (request.sortKey !== undefined) {\n            params.push([HierarchyURLBuilder.SORT_KEY_PARAM, request.sortKey]);\n        }\n        if (request.sortOrder !== undefined) {\n            params.push([HierarchyURLBuilder.SORT_ORDER_PARAM, request.sortOrder]);\n        }\n        if (params.length > 0) {\n            return `${HierarchyURLBuilder.HIERARCHY_URL}${request.rootId}?${encodeQueryString(params)}`;\n        }\n        else {\n            return HierarchyURLBuilder.HIERARCHY_URL + request.rootId;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXJsQnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9jb29yZGluYXRvcnMvR2V0QnlIaWVyYXJjaHkvVXJsQnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV2RCxNQUFNLE9BQU8sbUJBQW1CO2FBQ3ZCLGtCQUFhLEdBQUcsc0NBQXNDLENBQUM7YUFDdkQsd0JBQW1CLEdBQUcsZ0JBQWdCLENBQUM7YUFDdkMsNEJBQXVCLEdBQUcsYUFBYSxDQUFDO2FBQ3hDLHlCQUFvQixHQUFHLFlBQVksQ0FBQzthQUNwQyxtQkFBYyxHQUFHLFdBQVcsQ0FBQzthQUM3QixxQkFBZ0IsR0FBRyxhQUFhLENBQUM7SUFDeEMsUUFBUSxDQUFDLE9BQXlCO1FBQ2hDLE1BQU0sTUFBTSxHQUFlLEVBQUUsQ0FBQztRQUU5QixJQUFJLE9BQU8sQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO1lBQ3RDLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ1YsbUJBQW1CLENBQUMsbUJBQW1CO2dCQUN2QyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRTthQUNoQyxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksT0FBTyxDQUFDLGVBQWUsS0FBSyxTQUFTLEVBQUU7WUFDekMsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDVixtQkFBbUIsQ0FBQyx1QkFBdUI7Z0JBQzNDLE9BQU8sQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFO2FBQ25DLENBQUMsQ0FBQztTQUNKO1FBQ0QsSUFBSSxPQUFPLENBQUMsVUFBVSxLQUFLLFNBQVMsRUFBRTtZQUNwQyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUNWLG1CQUFtQixDQUFDLG9CQUFvQjtnQkFDeEMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUU7YUFDOUIsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEtBQUssU0FBUyxFQUFFO1lBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDcEU7UUFDRCxJQUFJLE9BQU8sQ0FBQyxTQUFTLEtBQUssU0FBUyxFQUFFO1lBQ25DLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUN4RTtRQUNELElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDckIsT0FBTyxHQUFHLG1CQUFtQixDQUFDLGFBQWEsR0FDekMsT0FBTyxDQUFDLE1BQ1YsSUFBSSxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO1NBQ2pDO2FBQU07WUFDTCxPQUFPLG1CQUFtQixDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO1NBQzNEO0lBQ0gsQ0FBQyJ9","import { HttpError } from '../../model/HttpError';\nimport { HierarchyURLBuilder } from './UrlBuilder';\nexport class GetHierarchyImpl {\n    constructor(contentClient, assembler) {\n        this.contentClient = contentClient;\n        this.assembler = assembler;\n        this.hierarchyUrlBuilder = new HierarchyURLBuilder();\n    }\n    async getByHierarchy(request) {\n        const content = [];\n        try {\n            const { data } = await this.contentClient.get(this.hierarchyUrlBuilder.buildUrl(request));\n            content.push(...data.responses);\n            if (data.page.cursor != undefined) {\n                request.pageCursor = data.page.cursor;\n                content.push(...(await this.getByHierarchy(request)));\n            }\n            return content;\n        }\n        catch (err) {\n            if (err.response) {\n                throw new HttpError(err.response.status, err.response.data);\n            }\n            throw err;\n        }\n    }\n    async getHierarchyByRoot(request, rootItem) {\n        const hierarchyData = await this.getByHierarchy(request);\n        const rootHierarchyItem = this.assembler.assembleRoot(rootItem, hierarchyData);\n        return rootHierarchyItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0SGllcmFyY2h5SW1wbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9jb29yZGluYXRvcnMvR2V0QnlIaWVyYXJjaHkvR2V0SGllcmFyY2h5SW1wbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFJbEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRW5ELE1BQU0sT0FBTyxnQkFBZ0I7SUFJM0IsWUFDbUIsYUFBNEIsRUFDNUIsU0FBbUM7UUFEbkMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDNUIsY0FBUyxHQUFULFNBQVMsQ0FBMEI7UUFFcEQsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksbUJBQW1CLEVBQUUsQ0FBQztJQUN2RCxDQUFDO0lBRU8sS0FBSyxDQUFDLGNBQWMsQ0FDMUIsT0FBeUI7UUFFekIsTUFBTSxPQUFPLEdBQXFDLEVBQUUsQ0FBQztRQUNyRCxJQUFJO1lBQ0YsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQzNDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQzNDLENBQUM7WUFFRixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2hDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksU0FBUyxFQUFFO2dCQUNqQyxPQUFPLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO2dCQUN0QyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZEO1lBQ0QsT0FBTyxPQUFPLENBQUM7U0FDaEI7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNaLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRTtnQkFDaEIsTUFBTSxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzdEO1lBRUQsTUFBTSxHQUFHLENBQUM7U0FDWDtJQUNILENBQUM7SUFDRCxLQUFLLENBQUMsa0JBQWtCLENBQ3RCLE9BQXlCLEVBQ3pCLFFBQXFCO1FBRXJCLE1BQU0sYUFBYSxHQUFHLE1BQU0sSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN6RCxNQUFNLGlCQUFpQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUNuRCxRQUFRLEVBQ1IsYUFBYSxDQUNkLENBQUM7UUFDRixPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUM7Q0FDRiJ9","export function isParent(rootHierarchyItem, contentItem) {\n    return (contentItem?._meta?.hierarchy?.parentId ==\n        rootHierarchyItem._meta.deliveryId);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGllcmFyY2h5QXNzZW1ibGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L2Nvb3JkaW5hdG9ycy9HZXRCeUhpZXJhcmNoeS9hc3NlbWJsZXJzL0hpZXJhcmNoeUFzc2VtYmxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFVBQVUsUUFBUSxDQUN0QixpQkFBOEIsRUFDOUIsV0FBd0I7SUFFeEIsT0FBTyxDQUNMLFdBQVcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVE7UUFDdkMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FDbkMsQ0FBQztBQUNKLENBQUMifQ==","import { isParent } from './HierarchyAssembler';\nexport class FilteringHierachyAssemblerImpl {\n    constructor(filterFunction) {\n        this.filterFunction = filterFunction;\n    }\n    assembleChildren(rootItem, content) {\n        rootItem.children.push(...content\n            .filter((contentItem) => {\n            return (isParent(rootItem.content, contentItem.content) &&\n                this.filterFunction(contentItem.content));\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: item.content,\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        }));\n    }\n    assembleRoot(rootItem, content) {\n        const rootHierarchyItem = {\n            content: rootItem.toJSON(),\n            children: [],\n        };\n        rootHierarchyItem.children = content\n            .filter((contentItem) => {\n            return (isParent(rootItem.body, contentItem.content) &&\n                !this.filterFunction(contentItem.content));\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: item.content,\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        });\n        return rootHierarchyItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyaW5nSGllcmFjaHlBc3NlbWJsZXJJbXBsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb250ZW50L2Nvb3JkaW5hdG9ycy9HZXRCeUhpZXJhcmNoeS9hc3NlbWJsZXJzL0ZpbHRlcmluZ0hpZXJhY2h5QXNzZW1ibGVySW1wbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXNCLFFBQVEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBUXBFLE1BQU0sT0FBTyw4QkFBOEI7SUFFekMsWUFBNkIsY0FBMEM7UUFBMUMsbUJBQWMsR0FBZCxjQUFjLENBQTRCO0lBQUcsQ0FBQztJQUMzRSxnQkFBZ0IsQ0FDZCxRQUFvQyxFQUNwQyxPQUF5QztRQUV6QyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDcEIsR0FBRyxPQUFPO2FBQ1AsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdEIsT0FBTyxDQUNMLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUM7Z0JBQy9DLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUN6QyxDQUFDO1FBQ0osQ0FBQyxDQUFDO2FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDWixNQUFNLGFBQWEsR0FBOEI7Z0JBQy9DLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztnQkFDckIsUUFBUSxFQUFFLEVBQUU7YUFDYixDQUFDO1lBQ0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUM5QyxPQUFPLGFBQWEsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ0osQ0FBQztJQUVELFlBQVksQ0FDVixRQUEyQixFQUMzQixPQUF5QztRQUV6QyxNQUFNLGlCQUFpQixHQUErQjtZQUNwRCxPQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRTtZQUMxQixRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUM7UUFDRixpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsT0FBTzthQUNqQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUN0QixPQUFPLENBQ0wsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQztnQkFDNUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FDMUMsQ0FBQztRQUNKLENBQUMsQ0FBQzthQUNELEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ1osTUFBTSxhQUFhLEdBQStCO2dCQUNoRCxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87Z0JBQ3JCLFFBQVEsRUFBRSxFQUFFO2FBQ2IsQ0FBQztZQUNGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDOUMsT0FBTyxhQUFhLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7UUFFTCxPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUM7Q0FDRiJ9","import { isParent } from './HierarchyAssembler';\nexport class HierarchyAssemblerImpl {\n    assembleChildren(rootItem, content) {\n        rootItem.children.push(...content\n            .filter((contentItem) => {\n            return isParent(rootItem.content, contentItem.content);\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: item.content,\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        }));\n    }\n    assembleRoot(rootItem, content) {\n        const rootHierarchyItem = {\n            content: rootItem.toJSON(),\n            children: [],\n        };\n        rootHierarchyItem.children = content\n            .filter((contentItem) => {\n            return isParent(rootItem.body, contentItem.content);\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: item.content,\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        });\n        return rootHierarchyItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGllcmFyY2h5QXNzZW1ibGVySW1wbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9jb29yZGluYXRvcnMvR2V0QnlIaWVyYXJjaHkvYXNzZW1ibGVycy9IaWVyYXJjaHlBc3NlbWJsZXJJbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBc0IsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFPcEUsTUFBTSxPQUFPLHNCQUFzQjtJQUVqQyxnQkFBZ0IsQ0FDZCxRQUFvQyxFQUNwQyxPQUF5QztRQUV6QyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDcEIsR0FBRyxPQUFPO2FBQ1AsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdEIsT0FBTyxRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDekQsQ0FBQyxDQUFDO2FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDWixNQUFNLGFBQWEsR0FBOEI7Z0JBQy9DLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztnQkFDckIsUUFBUSxFQUFFLEVBQUU7YUFDYixDQUFDO1lBQ0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUM5QyxPQUFPLGFBQWEsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ0osQ0FBQztJQUVELFlBQVksQ0FDVixRQUEyQixFQUMzQixPQUF5QztRQUV6QyxNQUFNLGlCQUFpQixHQUErQjtZQUNwRCxPQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRTtZQUMxQixRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUM7UUFDRixpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsT0FBTzthQUNqQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUN0QixPQUFPLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUM7YUFDRCxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNaLE1BQU0sYUFBYSxHQUErQjtnQkFDaEQsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO2dCQUNyQixRQUFRLEVBQUUsRUFBRTthQUNiLENBQUM7WUFDRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzlDLE9BQU8sYUFBYSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO1FBRUwsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0NBQ0YifQ==","import { isParent } from './HierarchyAssembler';\nexport class MutatingHierachyAssemblerImpl {\n    constructor(mutationFunction) {\n        this.mutationFunction = mutationFunction;\n    }\n    assembleChildren(rootItem, content) {\n        rootItem.children.push(...content\n            .filter((contentItem) => {\n            return isParent(rootItem.content, contentItem.content);\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: this.mutationFunction(item.content),\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        }));\n    }\n    assembleRoot(rootItem, content) {\n        const rootHierarchyItem = {\n            content: this.mutationFunction(rootItem.toJSON()),\n            children: [],\n        };\n        rootHierarchyItem.children = content\n            .filter((contentItem) => {\n            return isParent(rootItem.body, contentItem.content);\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: this.mutationFunction(item.content),\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        });\n        return rootHierarchyItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXV0YXRpbmdIaWVyYXJjaHlBc3NlbWJsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldEJ5SGllcmFyY2h5L2Fzc2VtYmxlcnMvTXV0YXRpbmdIaWVyYXJjaHlBc3NlbWJsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQixRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQVFwRSxNQUFNLE9BQU8sNkJBQTZCO0lBRXhDLFlBQ21CLGdCQUFnRDtRQUFoRCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWdDO0lBQ2hFLENBQUM7SUFDSixnQkFBZ0IsQ0FDZCxRQUFvQyxFQUNwQyxPQUF5QztRQUV6QyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDcEIsR0FBRyxPQUFPO2FBQ1AsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdEIsT0FBTyxRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDekQsQ0FBQyxDQUFDO2FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDWixNQUFNLGFBQWEsR0FBOEI7Z0JBQy9DLE9BQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDNUMsUUFBUSxFQUFFLEVBQUU7YUFDYixDQUFDO1lBQ0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUM5QyxPQUFPLGFBQWEsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FDTCxDQUFDO0lBQ0osQ0FBQztJQUVELFlBQVksQ0FDVixRQUEyQixFQUMzQixPQUF5QztRQUV6QyxNQUFNLGlCQUFpQixHQUErQjtZQUNwRCxPQUFPLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNqRCxRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUM7UUFDRixpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsT0FBTzthQUNqQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUN0QixPQUFPLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUM7YUFDRCxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNaLE1BQU0sYUFBYSxHQUErQjtnQkFDaEQsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUM1QyxRQUFRLEVBQUUsRUFBRTthQUNiLENBQUM7WUFDRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzlDLE9BQU8sYUFBYSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO1FBRUwsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0NBQ0YifQ==","import { isParent } from './HierarchyAssembler';\nexport class FilteringAndMutatingHierarchyAssembler {\n    constructor(filterFunction, mutationFunction) {\n        this.filterFunction = filterFunction;\n        this.mutationFunction = mutationFunction;\n    }\n    assembleChildren(rootItem, content) {\n        rootItem.children.push(...content\n            .filter((contentItem) => {\n            return (isParent(rootItem.content, contentItem.content) &&\n                this.filterFunction(contentItem.content));\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: this.mutationFunction(item.content),\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        }));\n    }\n    assembleRoot(rootItem, content) {\n        const rootHierarchyItem = {\n            content: this.mutationFunction(rootItem.toJSON()),\n            children: [],\n        };\n        rootHierarchyItem.children = content\n            .filter((contentItem) => {\n            return (isParent(rootItem.body, contentItem.content) &&\n                !this.filterFunction(contentItem.content));\n        })\n            .map((item) => {\n            const hierarchyItem = {\n                content: this.mutationFunction(item.content),\n                children: [],\n            };\n            this.assembleChildren(hierarchyItem, content);\n            return hierarchyItem;\n        });\n        return rootHierarchyItem;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyaW5nQW5kTXV0YXRpbmdIaWVyYXJjaHlBc3NlbWJsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldEJ5SGllcmFyY2h5L2Fzc2VtYmxlcnMvRmlsdGVyaW5nQW5kTXV0YXRpbmdIaWVyYXJjaHlBc3NlbWJsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQixRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQVFwRSxNQUFNLE9BQU8sc0NBQXNDO0lBRWpELFlBQ21CLGNBQTBDLEVBQzFDLGdCQUF5QztRQUR6QyxtQkFBYyxHQUFkLGNBQWMsQ0FBNEI7UUFDMUMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUF5QjtJQUN6RCxDQUFDO0lBQ0osZ0JBQWdCLENBQ2QsUUFBb0MsRUFDcEMsT0FBeUM7UUFFekMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQ3BCLEdBQUcsT0FBTzthQUNQLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQ3RCLE9BQU8sQ0FDTCxRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDO2dCQUMvQyxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FDekMsQ0FBQztRQUNKLENBQUMsQ0FBQzthQUNELEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ1osTUFBTSxhQUFhLEdBQThCO2dCQUMvQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQzVDLFFBQVEsRUFBRSxFQUFFO2FBQ2IsQ0FBQztZQUNGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDOUMsT0FBTyxhQUFhLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNKLENBQUM7SUFFRCxZQUFZLENBQ1YsUUFBMkIsRUFDM0IsT0FBeUM7UUFFekMsTUFBTSxpQkFBaUIsR0FBK0I7WUFDcEQsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDakQsUUFBUSxFQUFFLEVBQUU7U0FDYixDQUFDO1FBQ0YsaUJBQWlCLENBQUMsUUFBUSxHQUFHLE9BQU87YUFDakMsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdEIsT0FBTyxDQUNMLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUM7Z0JBQzVDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQzFDLENBQUM7UUFDSixDQUFDLENBQUM7YUFDRCxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNaLE1BQU0sYUFBYSxHQUErQjtnQkFDaEQsT0FBTyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUM1QyxRQUFRLEVBQUUsRUFBRTthQUNiLENBQUM7WUFDRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzlDLE9BQU8sYUFBYSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO1FBRUwsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0NBQ0YifQ==","import { isContentClientConfigV1, isContentClientConfigV2, } from './config';\nimport { RenderContentItem } from './rendering/coordinators/RenderContentItem';\nimport { FilterBy } from './content/coordinators/FilterBy';\nimport { GetContentItemV1Impl } from './content/coordinators/GetContentItemV1Impl';\nimport { ContentMapper } from './content/mapper/ContentMapper';\nimport { GetContentItemV2Impl } from './content/coordinators/GetContentItemV2Impl';\nimport { GetContentItemsV2Impl } from './content/coordinators/GetContentItemsV2Impl';\nimport { FilterByImpl } from './content/coordinators/FilterByImpl';\nimport { createContentClient } from './client/createContentClient';\nimport { NotSupportedV2Error, NotSupportedV1Error, } from './content/model/NotSupportedError';\nimport { GetHierarchyImpl } from './content/coordinators/GetByHierarchy/GetHierarchyImpl';\nimport { FilteringHierachyAssemblerImpl } from './content/coordinators/GetByHierarchy/assemblers/FilteringHierachyAssemblerImpl';\nimport { HierarchyAssemblerImpl } from './content/coordinators/GetByHierarchy/assemblers/HierarchyAssemblerImpl';\nimport { MutatingHierachyAssemblerImpl } from './content/coordinators/GetByHierarchy/assemblers/MutatingHierarchyAssembler';\nimport { FilteringAndMutatingHierarchyAssembler } from './content/coordinators/GetByHierarchy/assemblers/FilteringAndMutatingHierarchyAssembler';\n/**\n * Amplience [Content Delivery API](https://docs.amplience.net/integration/deliveryapi.html?h=delivery) client.\n *\n * This client is intended to be used by end user applications to fetch content so that it can be displayed to users.\n *\n * You must provide some configuration options in order to create an instance of ContentClient.\n * Example:\n *\n * ```typescript\n * const client = new ContentClient({\n *    account: 'test'\n * });\n * ```\n *\n * You may override other settings when constructing the client but if no additional configuration is provided sensible defaults will be used.\n */\nexport class ContentClient {\n    /**\n     * Creates a Delivery API Client instance. You must provide a configuration object with the required details for the particular service you wish to fetch content from.\n     * @param config Client configuration options\n     */\n    constructor(config) {\n        this.config = config;\n        if (!config) {\n            throw new TypeError('Parameter \"config\" is required');\n        }\n        if (!config.account &&\n            !config.hubName) {\n            throw new TypeError('Parameter \"config\" must contain a valid \"account\" name or \"hubName\" property');\n        }\n        if (config.stagingEnvironment &&\n            config.stagingEnvironment.indexOf('://') !== -1) {\n            throw new TypeError('Parameter \"stagingEnvironment\" should be a hostname not a URL');\n        }\n        this.contentMapper = this.createContentMapper(config);\n        this.contentClient = createContentClient(config);\n    }\n    /**\n     * @deprecated use getContentItemById\n     */\n    getContentItem(contentItemId) {\n        return this.getContentItemById(contentItemId);\n    }\n    /**\n     * This function will load a Content Item or Slot by id and return a Promise of the result.\n     * If the content is not found the promise will reject with an error.\n     * If the content is found the promise will resolve with a parsed version of the content with all dependencies.\n     *\n     * The content body will match the format defined by your content type, however keep in mind that if you have evolved your content type some published content may still be in the older format.\n     *\n     * Some pre-processing is applied to the content body to make it easier to work with:\n     *\n     * * Linked content items are joined together into the root content item to create a single JSON document.\n     * * Media references (images and videos) are replaced with wrapper objects [[Image]] and [[Video]] which provide helper functions.\n     * * Content created using V1 of the CMS will be upgraded to the V2 format.\n     *\n     * You can convert the content back to plain JSON by calling the toJSON() function on the returned ContentItem.\n     * @typeparam T The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @param id Unique id of the Content Item or Slot to load\n     */\n    getContentItemById(id) {\n        if (isContentClientConfigV2(this.config)) {\n            return new GetContentItemV2Impl(this.config, this.contentClient, this.contentMapper).getContentItemById(id);\n        }\n        return new GetContentItemV1Impl(this.config, this.contentClient, this.contentMapper).getContentItemById(id);\n    }\n    /**\n     * This function will load a Content Item or Slot by key and return a Promise of the result.\n     * If the content is not found the promise will reject with an error.\n     * If the content is found the promise will resolve with a parsed version of the content with all dependencies.\n     *\n     * A delivery key can be a simple string or a path such as \"home-page/feature-banner\". This makes it simpler to write your integration code and allows users more control over where items of content are delivered. You can add a delivery key to a slot in the Dynamic Content app or to a content item or slot using the Dynamic Content Management API.\n     * Note that a delivery key may not start or end with \"/\" and must be between 1 and 150 characters. Delivery keys can contain the following alphanumeric characters: a to z, A to Z and 0 to 9. You can also include \"-\" and \"_\" and \"/\" as long as it is not included at the start or end of the key.\n     *\n     * The content body will match the format defined by your content type.\n     *\n     * Some pre-processing is applied to the content body to make it easier to work with:\n     *\n     * * Linked content items are joined together into the root content item to create a single JSON document.\n     * * Media references (images and videos) are replaced with wrapper objects [[Image]] and [[Video]] which provide helper functions.\n     * * Content created using V1 of the CMS will be upgraded to the V2 format.\n     *\n     * You can convert the content back to plain JSON by calling the toJSON() function on the returned ContentItem.\n     * @typeparam T The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @param id Unique id of the Content Item or Slot to load\n     */\n    getContentItemByKey(key) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('getContentItemByKey');\n        }\n        return new GetContentItemV2Impl(this.config, this.contentClient, this.contentMapper).getContentItemByKey(key);\n    }\n    /**\n     * This function will help construct requests for filtering Content Items or Slots\n     *\n     * @param filterBy - API options for `/content/filter` endpoint [docs](https://amplience.com/docs/development/contentdelivery/filterandsort.html)\n     * @returns\n     */\n    filterContentItems(filterBy) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('filterContentItems');\n        }\n        return new FilterByImpl(this.config, this.contentClient).fetch(filterBy);\n    }\n    /**\n     *  This function will help construct requests for filtering Content Items or Slots\n     *\n     * @param path - json path to property you wish to filter by e.g `/_meta/schema`\n     * @param value - value you want to return matches for\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterBy(path, value) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('filterBy');\n        }\n        return new FilterBy(this.config, this.contentClient).filterBy(path, value);\n    }\n    /**\n     *\n     *  This function will help construct requests for filtering Content Items or Slots\n     *\n     *  equivalent to:\n     *\n     * ```ts\n     *  client.filterBy('/_meta/schema', contentTypeUri)\n     * ```\n     *\n     * @param contentTypeUri - Content Type Uri you want to filter\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterByContentType(contentTypeUri) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('filterByContentType');\n        }\n        return new FilterBy(this.config, this.contentClient).filterByContentType(contentTypeUri);\n    }\n    /**\n     *  This function will help construct requests for filtering Content Items or Slots\n     *\n     * equivalent to:\n     *\n     * ```ts\n     *  client.filterBy('/_meta/hierarchy/parentId', id)\n     * ```\n     *\n     * @param id - ID of a Hierarchy Content Item\n     *\n     * @returns `FilterBy<Body>`\n     */\n    filterByParentId(id) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('filterByParentId');\n        }\n        return new FilterBy(this.config, this.contentClient).filterByParentId(id);\n    }\n    async getHierarchyRootItem(requestParameters) {\n        let rootItem;\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('getByHierarchy');\n        }\n        if (requestParameters.rootItem === undefined) {\n            try {\n                rootItem = await this.getContentItemById(requestParameters.rootId);\n            }\n            catch (err) {\n                throw new Error(`Error while retrieving hierarchy root item: ${err.message}`);\n            }\n        }\n        else {\n            rootItem = requestParameters.rootItem;\n        }\n        if (rootItem.body._meta.deliveryId !== requestParameters.rootId) {\n            throw new Error(`The root item id(${requestParameters.rootItem.body._meta.deliveryId}) ` +\n                `does not match the request rootId(${requestParameters.rootId})`);\n        }\n        return rootItem;\n    }\n    /** This function will load a hierarchy and return the root item with any children attached,\n     * it will also fetch the root item if needed.\n     * @param requestParameters parameters for the hierarchies request see {@link ContentClientHierarchyRequest}\n     * */\n    async getByHierarchy(requestParameters) {\n        const rootItem = await this.getHierarchyRootItem(requestParameters);\n        return new GetHierarchyImpl(this.contentClient, new HierarchyAssemblerImpl()).getHierarchyByRoot({\n            rootId: rootItem.body._meta.deliveryId,\n            maximumDepth: requestParameters.maximumDepth,\n            maximumPageSize: requestParameters.maximumPageSize,\n            sortOrder: requestParameters.sortOrder,\n            sortKey: requestParameters.sortKey,\n        }, rootItem);\n    }\n    /** This function will load a hierarchy and return the root item with any children attached,\n     * it will also fetch the root item if needed.\n     * @param requestParameters parameters for the hierarchies request see {@link ContentClientHierarchyRequest}\n     * @param filterFunction the function that is applied to filter the tree, elements are removed on a truthy result\n     * */\n    async getByHierarchyAndFilter(requestParameters, filterFunction) {\n        const rootItem = await this.getHierarchyRootItem(requestParameters);\n        return new GetHierarchyImpl(this.contentClient, new FilteringHierachyAssemblerImpl(filterFunction)).getHierarchyByRoot({\n            rootId: rootItem.body._meta.deliveryId,\n            maximumDepth: requestParameters.maximumDepth,\n            maximumPageSize: requestParameters.maximumPageSize,\n            sortOrder: requestParameters.sortOrder,\n            sortKey: requestParameters.sortKey,\n        }, rootItem);\n    }\n    /** This function will load a hierarchy and return the root item with any children attached,\n     * it will also fetch the root item if needed.\n     * @param requestParameters parameters for the hierarchies request see {@link ContentClientHierarchyRequest}\n     * @param mutationFunction the function that is applied to the content body while building the hierarchy\n     * */\n    async getByHierarchyAndMutate(requestParameters, mutationFunction) {\n        const rootItem = await this.getHierarchyRootItem(requestParameters);\n        return new GetHierarchyImpl(this.contentClient, new MutatingHierachyAssemblerImpl(mutationFunction)).getHierarchyByRoot({\n            rootId: rootItem.body._meta.deliveryId,\n            maximumDepth: requestParameters.maximumDepth,\n            maximumPageSize: requestParameters.maximumPageSize,\n            sortOrder: requestParameters.sortOrder,\n            sortKey: requestParameters.sortKey,\n        }, rootItem);\n    }\n    async getByHierarchyFilterAndMutate(requestParameters, filterFunction, mutationFunction) {\n        const rootItem = await this.getHierarchyRootItem(requestParameters);\n        return new GetHierarchyImpl(this.contentClient, new FilteringAndMutatingHierarchyAssembler(filterFunction, mutationFunction)).getHierarchyByRoot({\n            rootId: rootItem.body._meta.deliveryId,\n            maximumDepth: requestParameters.maximumDepth,\n            maximumPageSize: requestParameters.maximumPageSize,\n            sortOrder: requestParameters.sortOrder,\n            sortKey: requestParameters.sortKey,\n        }, rootItem);\n    }\n    /**\n     * These functions will help construct requests for fetching multiple Content Items or Slots by delivery ID\n     * and is equivalent to:\n     *\n     * ```ts\n     *  client.fetchContentItems({\n     *    parameters: {\n     *      depth: 'all',\n     *      format: 'inlined'\n     *    },\n     *    requests: [\n     *      { id: '6cd4de36-591b-4ca2-874b-1dec7b681d7e' },\n     *      { id: 'c6d9e038-591b-4ca2-874b-da354f5d6e61' },\n     *    ],\n     *  });\n     * ```\n     *\n     * @param keys An array of Delivery keys of the content you wish to fetch\n     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @returns `Promise<FetchResponse<Body>>`\n     */\n    getContentItemsById(ids) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('getContentItemsById');\n        }\n        return new GetContentItemsV2Impl(this.config, this.contentClient).getContentItemsById(ids);\n    }\n    /**\n     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key\n     * and is equivalent to:\n     *\n     * ```ts\n     *  client.fetchContentItems({\n     *    parameters: {\n     *      depth: 'all',\n     *      format: 'inlined'\n     *    },\n     *    requests: [\n     *      { key: 'blog/article-1' },\n     *      { key: 'blog/article-2' },\n     *    ],\n     *  });\n     * ```\n     *\n     * @param keys An array of delivery IDs of the content you wish to fetch\n     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @returns `Promise<FetchResponse<Body>>`\n     */\n    getContentItemsByKey(keys) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('getContentItemsByKey');\n        }\n        return new GetContentItemsV2Impl(this.config, this.contentClient).getContentItemsByKey(keys);\n    }\n    /**\n     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key and/or id\n     * and is equivalent to:\n     *\n     * ```ts\n     *  client.fetchContentItems({\n     *    parameters: {\n     *      depth: 'all',\n     *      format: 'inlined'\n     *    },\n     *    requests: [\n     *      { id: '6cd4de36-591b-4ca2-874b-1dec7b681d7e' },\n     *      { key: 'blog/article-1' },\n     *    ],\n     *  });\n     * ```\n     *\n     * @param requests An array of delivery IDs of the content you wish to fetch\n     * @param parameters Optional override of default parameters\n     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @returns `Promise<FetchResponse<Body>>`\n     */\n    getContentItems(requests, parameters) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('getContentItems');\n        }\n        return new GetContentItemsV2Impl(this.config, this.contentClient).getContentItems(requests, parameters);\n    }\n    /**\n     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key or ID. Wraps [`/content/fetch`](https://amplience.com/docs/api/dynamic-content/delivery/content-delivery-2/index.html#operation/multiGetContent) endpoint.\n     * [Additional documentation](https://amplience.com/docs/development/contentdelivery/readme.html#multipleitems)\n     *\n     * @param body The request body. Can include per item parameters as well as global parameters\n     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.\n     * @returns `Promise<FetchResponse<Body>>`\n     */\n    fetchContentItems(body) {\n        if (!isContentClientConfigV2(this.config)) {\n            throw new NotSupportedV2Error('fetchContentItems');\n        }\n        return new GetContentItemsV2Impl(this.config, this.contentClient).fetchContentItems(body);\n    }\n    /**\n     * Converts a Content Item or Slot into a custom format (e.g. HTML / XML) by applying a template server side.\n     * @param contentItemId Unique id of the Content Item or Slot to convert using the rendering service\n     * @param templateName Name of the template to render the content item or slot with. The template must be setup in your account\n     * @param customParameters Custom parameters which will be sent to the rendering API and made avaliable to your template\n     */\n    renderContentItem(contentItemId, templateName, customParameters) {\n        if (!isContentClientConfigV1(this.config)) {\n            throw new NotSupportedV1Error('renderContentItem');\n        }\n        return new RenderContentItem(this.config, this.contentClient).renderContentItem(contentItemId, templateName, customParameters);\n    }\n    /**\n     * Creates a parser which converts content JSON into classes and objects used by the SDK\n     * @param config\n     * @hidden\n     */\n    createContentMapper(config) {\n        return new ContentMapper(config);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { isContentClientConfigV2, isContentClientConfigV2Fresh, } from '../config';\nimport { createContentClientV2Fresh } from './createContentClientV2Fresh';\nimport { createBaseContentClient } from './createBaseContentClient';\n/**\n * Create network client to make requests to the content delivery service\n * @param config\n * @hidden\n */\nexport function createContentClient(config) {\n    if (isContentClientConfigV2Fresh(config)) {\n        return createContentClientV2Fresh(config, `https://${config.hubName}.fresh.content.amplience.net`);\n    }\n    if (isContentClientConfigV2(config)) {\n        return createBaseContentClient(config, `https://${config.hubName}.cdn.content.amplience.net`);\n    }\n    return createBaseContentClient(config, 'https://cdn.c1.amplience.net');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlQ29udGVudENsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY2xpZW50L2NyZWF0ZUNvbnRlbnRDbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUVMLHVCQUF1QixFQUN2Qiw0QkFBNEIsR0FDN0IsTUFBTSxXQUFXLENBQUM7QUFDbkIsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFcEU7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxtQkFBbUIsQ0FDakMsTUFBa0M7SUFFbEMsSUFBSSw0QkFBNEIsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN4QyxPQUFPLDBCQUEwQixDQUMvQixNQUFNLEVBQ04sV0FBVyxNQUFNLENBQUMsT0FBTyw4QkFBOEIsQ0FDeEQsQ0FBQztLQUNIO0lBRUQsSUFBSSx1QkFBdUIsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNuQyxPQUFPLHVCQUF1QixDQUM1QixNQUFNLEVBQ04sV0FBVyxNQUFNLENBQUMsT0FBTyw0QkFBNEIsQ0FDdEQsQ0FBQztLQUNIO0lBRUQsT0FBTyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsOEJBQThCLENBQUMsQ0FBQztBQUN6RSxDQUFDIn0=","import Axios from 'axios';\nimport { encodeQueryString } from '../utils/Url';\n/**\n * Default StagingEnvironmentFactoryConfig values\n */\nconst DefaultStagingEnvironmentFactoryConfig = {\n    baseUrl: 'https://virtual-staging.amplience.net',\n};\n/**\n * Amplience [Virtual Staging Environment](https://docs.amplience.net/virtualstaging/virtualstagingintro.html?h=vse) factory.\n *\n * This factory is intended to be used by end user applications to preview content for a given snapshotID or at a given timestamp.\n *\n * It works by passing the virtual staging environment domain and the snapshotID or timestamp to the virtual-staging API,\n * which will return a new domain that can be used in the ContentClient.\n *\n * Example:\n *\n * ```typescript\n * const factory = new StagingEnvironmentFactory('11122222gggg232gg32g32g.staging.bigcontent.io');\n * const stagingEnvironmentWithSnapshot = await factory.generateDomain({snapshotId: 'abcdef123456'});\n *\n * const client = new ContentClient({\n *   account: 'test',\n *   stagingEnvironment: stagingEnvironmentWithSnapshot\n * });\n *\n * ```\n *\n * You may override other settings when constructing the client but if no additional configuration is provided sensible defaults will be used.\n */\nexport class StagingEnvironmentFactory {\n    /**\n     * Creates a StagingEnvironmentFactory instance.\n     * @param string stagingEnvironment\n     * @param config Client configuration options\n     */\n    constructor(stagingEnvironment, config = {}) {\n        this.stagingEnvironment = stagingEnvironment;\n        this.client = this.createClient({\n            ...DefaultStagingEnvironmentFactoryConfig,\n            ...config,\n        });\n    }\n    /**\n     * Generates a new staging environment domain name using the snapshotId and/or timestamp thats supplied in the options argument\n     * @param options\n     */\n    async generateDomain(options) {\n        try {\n            const url = this.buildUrl(options);\n            const response = await this.client.get(url);\n            return response.data;\n        }\n        catch (err) {\n            throw new Error(`An error occurred whilst attempting to generate a staging environment domain using options '${JSON.stringify(options)}': ${err.message}`);\n        }\n    }\n    /**\n     * Build the URL to invoke using the supplied GenerateDomainOptions\n     * @param options GenerateDomainOptions\n     */\n    buildUrl(options) {\n        const queryParameters = Object.entries(options).map(([key, value]) => [\n            key,\n            value.toString(),\n        ]);\n        const queryString = encodeQueryString(queryParameters);\n        return `/domain/${this.stagingEnvironment}?${queryString}`;\n    }\n    /**\n     * Create network client to make requests to the vse service\n     * @param config\n     */\n    createClient(config) {\n        const client = Axios.create({\n            adapter: config.adaptor,\n        });\n        client.defaults.baseURL = config.baseUrl;\n        return client;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhZ2luZ0Vudmlyb25tZW50RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvc3RhZ2luZy1lbnZpcm9ubWVudC9TdGFnaW5nRW52aXJvbm1lbnRGYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBd0IsTUFBTSxPQUFPLENBQUM7QUFDN0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBSWpEOztHQUVHO0FBQ0gsTUFBTSxzQ0FBc0MsR0FBb0M7SUFDOUUsT0FBTyxFQUFFLHVDQUF1QztDQUNqRCxDQUFDO0FBRUY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFDSCxNQUFNLE9BQU8seUJBQXlCO0lBR3BDOzs7O09BSUc7SUFDSCxZQUNtQixrQkFBMEIsRUFDM0MsU0FBMEMsRUFBRTtRQUQzQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQVE7UUFHM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQzlCLEdBQUcsc0NBQXNDO1lBQ3pDLEdBQUcsTUFBTTtTQUNWLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLLENBQUMsY0FBYyxDQUFDLE9BQThCO1FBQ2pELElBQUk7WUFDRixNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ25DLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQVMsR0FBRyxDQUFDLENBQUM7WUFDcEQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDO1NBQ3RCO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixNQUFNLElBQUksS0FBSyxDQUNiLCtGQUErRixJQUFJLENBQUMsU0FBUyxDQUMzRyxPQUFPLENBQ1IsTUFBTSxHQUFHLENBQUMsT0FBTyxFQUFFLENBQ3JCLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDTyxRQUFRLENBQUMsT0FBOEI7UUFDL0MsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDcEUsR0FBRztZQUNILEtBQUssQ0FBQyxRQUFRLEVBQUU7U0FDakIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDdkQsT0FBTyxXQUFXLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxXQUFXLEVBQUUsQ0FBQztJQUM3RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ08sWUFBWSxDQUNwQixNQUF1QztRQUV2QyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQzFCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTztTQUN4QixDQUFDLENBQUM7UUFDSCxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQ3pDLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRiJ9","/**\n * ImageFormat represents the set of image formats that media\n * can be converted into using Dynamic Imaging.\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * JPEG (jpg) image format.\n     */\n    ImageFormat[\"JPEG\"] = \"jpg\";\n    /**\n     * Portable Network Graphics (png) image format.\n     */\n    ImageFormat[\"PNG\"] = \"png\";\n    /**\n     * Graphics Interchange Format (gif) image format.\n     */\n    ImageFormat[\"GIF\"] = \"gif\";\n    /**\n     * WebP (webp) image format.\n     */\n    ImageFormat[\"WEBP\"] = \"webp\";\n    /**\n     * Bitmap (bmp) image format.\n     */\n    ImageFormat[\"BITMAP\"] = \"bmp\";\n})(ImageFormat || (ImageFormat = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2VGb3JtYXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL21lZGlhL21vZGVsL0ltYWdlRm9ybWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sQ0FBTixJQUFZLFdBeUJYO0FBekJELFdBQVksV0FBVztJQUNyQjs7T0FFRztJQUNILDJCQUFZLENBQUE7SUFFWjs7T0FFRztJQUNILDBCQUFXLENBQUE7SUFFWDs7T0FFRztJQUNILDBCQUFXLENBQUE7SUFFWDs7T0FFRztJQUNILDRCQUFhLENBQUE7SUFFYjs7T0FFRztJQUNILDZCQUFjLENBQUE7QUFDaEIsQ0FBQyxFQXpCVyxXQUFXLEtBQVgsV0FBVyxRQXlCdEIifQ==","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\nvar encoding = require(\"./lib/encoding.js\");\n\nmodule.exports = {\n  TextEncoder: encoding.TextEncoder,\n  TextDecoder: encoding.TextDecoder,\n};\n","(function(global) {\n  'use strict';\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = global;\n  }\n\n  global[\"encoding-indexes\"] =\n{\n  \"big5\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,170000,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14000,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132000,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22000,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21000,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,30000,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23000,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32000,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36000,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26000,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37000,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39000,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38000,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28000,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35000,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27000,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34000,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25000,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24000,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,40000,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],\n  \"euc-kr\":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46000,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48000,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49000,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,50000,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51000,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45000,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47000,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52000,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55000,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53000,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54000,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32000,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37000,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36000,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26000,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21000,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39000,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,30000,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64000,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27000,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"gb18030\":[19970,19972,19973,19974,19983,19986,19991,19999,20000,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22000,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24000,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29000,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59000,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31000,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25000,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32000,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,30000,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35000,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36000,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21000,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34000,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28000,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37000,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23000,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38000,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27000,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33000,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26000,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39000,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,40000,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58000,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],\n  \"gb18030-ranges\":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189000,65536]],\n  \"jis0208\":[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21000,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39000,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32000,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,30000,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26000,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36000,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27000,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34000,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38000,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"jis0212\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25000,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37000,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"ibm866\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],\n  \"iso-8859-2\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\n  \"iso-8859-3\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],\n  \"iso-8859-4\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],\n  \"iso-8859-5\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],\n  \"iso-8859-6\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"iso-8859-7\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\n  \"iso-8859-8\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\n  \"iso-8859-10\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],\n  \"iso-8859-13\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],\n  \"iso-8859-14\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],\n  \"iso-8859-15\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\n  \"iso-8859-16\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],\n  \"koi8-r\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\n  \"koi8-u\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\n  \"macintosh\":[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],\n  \"windows-874\":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],\n  \"windows-1250\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\n  \"windows-1251\":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],\n  \"windows-1252\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\n  \"windows-1253\":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\n  \"windows-1254\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],\n  \"windows-1255\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\n  \"windows-1256\":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],\n  \"windows-1257\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],\n  \"windows-1258\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],\n  \"x-mac-cyrillic\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]\n};\n\n// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n}(this || {}));","// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n/**\n * @fileoverview Global |this| required for resolving indexes in node.\n * @suppress {globalThis}\n */\n(function(global) {\n  'use strict';\n\n  // If we're in node require encoding-indexes and attach it to the global.\n  if (typeof module !== \"undefined\" && module.exports &&\n    !global[\"encoding-indexes\"]) {\n    global[\"encoding-indexes\"] =\n      require(\"./encoding-indexes.js\")[\"encoding-indexes\"];\n  }\n\n  //\n  // Utilities\n  //\n\n  /**\n   * @param {number} a The number to test.\n   * @param {number} min The minimum value in the range, inclusive.\n   * @param {number} max The maximum value in the range, inclusive.\n   * @return {boolean} True if a >= min and a <= max.\n   */\n  function inRange(a, min, max) {\n    return min <= a && a <= max;\n  }\n\n  /**\n   * @param {!Array.<*>} array The array to check.\n   * @param {*} item The item to look for in the array.\n   * @return {boolean} True if the item appears in the array.\n   */\n  function includes(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n\n  var floor = Math.floor;\n\n  /**\n   * @param {*} o\n   * @return {Object}\n   */\n  function ToDictionary(o) {\n    if (o === undefined) return {};\n    if (o === Object(o)) return o;\n    throw TypeError('Could not convert argument to dictionary');\n  }\n\n  /**\n   * @param {string} string Input string of UTF-16 code units.\n   * @return {!Array.<number>} Code points.\n   */\n  function stringToCodePoints(string) {\n    // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n    // 1. Let S be the DOMString value.\n    var s = String(string);\n\n    // 2. Let n be the length of S.\n    var n = s.length;\n\n    // 3. Initialize i to 0.\n    var i = 0;\n\n    // 4. Initialize U to be an empty sequence of Unicode characters.\n    var u = [];\n\n    // 5. While i < n:\n    while (i < n) {\n\n      // 1. Let c be the code unit in S at index i.\n      var c = s.charCodeAt(i);\n\n      // 2. Depending on the value of c:\n\n      // c < 0xD800 or c > 0xDFFF\n      if (c < 0xD800 || c > 0xDFFF) {\n        // Append to U the Unicode character with code point c.\n        u.push(c);\n      }\n\n      // 0xDC00 ≤ c ≤ 0xDFFF\n      else if (0xDC00 <= c && c <= 0xDFFF) {\n        // Append to U a U+FFFD REPLACEMENT CHARACTER.\n        u.push(0xFFFD);\n      }\n\n      // 0xD800 ≤ c ≤ 0xDBFF\n      else if (0xD800 <= c && c <= 0xDBFF) {\n        // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n        // CHARACTER.\n        if (i === n - 1) {\n          u.push(0xFFFD);\n        }\n        // 2. Otherwise, i < n−1:\n        else {\n          // 1. Let d be the code unit in S at index i+1.\n          var d = s.charCodeAt(i + 1);\n\n          // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n          if (0xDC00 <= d && d <= 0xDFFF) {\n            // 1. Let a be c & 0x3FF.\n            var a = c & 0x3FF;\n\n            // 2. Let b be d & 0x3FF.\n            var b = d & 0x3FF;\n\n            // 3. Append to U the Unicode character with code point\n            // 2^16+2^10*a+b.\n            u.push(0x10000 + (a << 10) + b);\n\n            // 4. Set i to i+1.\n            i += 1;\n          }\n\n          // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n          // U+FFFD REPLACEMENT CHARACTER.\n          else  {\n            u.push(0xFFFD);\n          }\n        }\n      }\n\n      // 3. Set i to i+1.\n      i += 1;\n    }\n\n    // 6. Return U.\n    return u;\n  }\n\n  /**\n   * @param {!Array.<number>} code_points Array of code points.\n   * @return {string} string String of UTF-16 code units.\n   */\n  function codePointsToString(code_points) {\n    var s = '';\n    for (var i = 0; i < code_points.length; ++i) {\n      var cp = code_points[i];\n      if (cp <= 0xFFFF) {\n        s += String.fromCharCode(cp);\n      } else {\n        cp -= 0x10000;\n        s += String.fromCharCode((cp >> 10) + 0xD800,\n                                 (cp & 0x3FF) + 0xDC00);\n      }\n    }\n    return s;\n  }\n\n\n  //\n  // Implementation of Encoding specification\n  // https://encoding.spec.whatwg.org/\n  //\n\n  //\n  // 4. Terminology\n  //\n\n  /**\n   * An ASCII byte is a byte in the range 0x00 to 0x7F, inclusive.\n   * @param {number} a The number to test.\n   * @return {boolean} True if a is in the range 0x00 to 0x7F, inclusive.\n   */\n  function isASCIIByte(a) {\n    return 0x00 <= a && a <= 0x7F;\n  }\n\n  /**\n   * An ASCII code point is a code point in the range U+0000 to\n   * U+007F, inclusive.\n   */\n  var isASCIICodePoint = isASCIIByte;\n\n\n  /**\n   * End-of-stream is a special token that signifies no more tokens\n   * are in the stream.\n   * @const\n   */ var end_of_stream = -1;\n\n  /**\n   * A stream represents an ordered sequence of tokens.\n   *\n   * @constructor\n   * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide\n   * the stream.\n   */\n  function Stream(tokens) {\n    /** @type {!Array.<number>} */\n    this.tokens = [].slice.call(tokens);\n    // Reversed as push/pop is more efficient than shift/unshift.\n    this.tokens.reverse();\n  }\n\n  Stream.prototype = {\n    /**\n     * @return {boolean} True if end-of-stream has been hit.\n     */\n    endOfStream: function() {\n      return !this.tokens.length;\n    },\n\n    /**\n     * When a token is read from a stream, the first token in the\n     * stream must be returned and subsequently removed, and\n     * end-of-stream must be returned otherwise.\n     *\n     * @return {number} Get the next token from the stream, or\n     * end_of_stream.\n     */\n     read: function() {\n      if (!this.tokens.length)\n        return end_of_stream;\n       return this.tokens.pop();\n     },\n\n    /**\n     * When one or more tokens are prepended to a stream, those tokens\n     * must be inserted, in given order, before the first token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The token(s) to prepend to the\n     * stream.\n     */\n    prepend: function(token) {\n      if (Array.isArray(token)) {\n        var tokens = /**@type {!Array.<number>}*/(token);\n        while (tokens.length)\n          this.tokens.push(tokens.pop());\n      } else {\n        this.tokens.push(token);\n      }\n    },\n\n    /**\n     * When one or more tokens are pushed to a stream, those tokens\n     * must be inserted, in given order, after the last token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The tokens(s) to push to the\n     * stream.\n     */\n    push: function(token) {\n      if (Array.isArray(token)) {\n        var tokens = /**@type {!Array.<number>}*/(token);\n        while (tokens.length)\n          this.tokens.unshift(tokens.shift());\n      } else {\n        this.tokens.unshift(token);\n      }\n    }\n  };\n\n  //\n  // 5. Encodings\n  //\n\n  // 5.1 Encoders and decoders\n\n  /** @const */\n  var finished = -1;\n\n  /**\n   * @param {boolean} fatal If true, decoding errors raise an exception.\n   * @param {number=} opt_code_point Override the standard fallback code point.\n   * @return {number} The code point to insert on a decoding error.\n   */\n  function decoderError(fatal, opt_code_point) {\n    if (fatal)\n      throw TypeError('Decoder error');\n    return opt_code_point || 0xFFFD;\n  }\n\n  /**\n   * @param {number} code_point The code point that could not be encoded.\n   * @return {number} Always throws, no value is actually returned.\n   */\n  function encoderError(code_point) {\n    throw TypeError('The code point ' + code_point + ' could not be encoded.');\n  }\n\n  /** @interface */\n  function Decoder() {}\n  Decoder.prototype = {\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point, or |finished|.\n     */\n    handler: function(stream, bite) {}\n  };\n\n  /** @interface */\n  function Encoder() {}\n  Encoder.prototype = {\n    /**\n     * @param {Stream} stream The stream of code points being encoded.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n     */\n    handler: function(stream, code_point) {}\n  };\n\n  // 5.2 Names and labels\n\n  // TODO: Define @typedef for Encoding: {name:string,labels:Array.<string>}\n  // https://github.com/google/closure-compiler/issues/247\n\n  /**\n   * @param {string} label The encoding label.\n   * @return {?{name:string,labels:Array.<string>}}\n   */\n  function getEncoding(label) {\n    // 1. Remove any leading and trailing ASCII whitespace from label.\n    label = String(label).trim().toLowerCase();\n\n    // 2. If label is an ASCII case-insensitive match for any of the\n    // labels listed in the table below, return the corresponding\n    // encoding, and failure otherwise.\n    if (Object.prototype.hasOwnProperty.call(label_to_encoding, label)) {\n      return label_to_encoding[label];\n    }\n    return null;\n  }\n\n  /**\n   * Encodings table: https://encoding.spec.whatwg.org/encodings.json\n   * @const\n   * @type {!Array.<{\n   *          heading: string,\n   *          encodings: Array.<{name:string,labels:Array.<string>}>\n   *        }>}\n   */\n  var encodings = [\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"unicode-1-1-utf-8\",\n            \"utf-8\",\n            \"utf8\"\n          ],\n          \"name\": \"UTF-8\"\n        }\n      ],\n      \"heading\": \"The Encoding\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"866\",\n            \"cp866\",\n            \"csibm866\",\n            \"ibm866\"\n          ],\n          \"name\": \"IBM866\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin2\",\n            \"iso-8859-2\",\n            \"iso-ir-101\",\n            \"iso8859-2\",\n            \"iso88592\",\n            \"iso_8859-2\",\n            \"iso_8859-2:1987\",\n            \"l2\",\n            \"latin2\"\n          ],\n          \"name\": \"ISO-8859-2\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin3\",\n            \"iso-8859-3\",\n            \"iso-ir-109\",\n            \"iso8859-3\",\n            \"iso88593\",\n            \"iso_8859-3\",\n            \"iso_8859-3:1988\",\n            \"l3\",\n            \"latin3\"\n          ],\n          \"name\": \"ISO-8859-3\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin4\",\n            \"iso-8859-4\",\n            \"iso-ir-110\",\n            \"iso8859-4\",\n            \"iso88594\",\n            \"iso_8859-4\",\n            \"iso_8859-4:1988\",\n            \"l4\",\n            \"latin4\"\n          ],\n          \"name\": \"ISO-8859-4\"\n        },\n        {\n          \"labels\": [\n            \"csisolatincyrillic\",\n            \"cyrillic\",\n            \"iso-8859-5\",\n            \"iso-ir-144\",\n            \"iso8859-5\",\n            \"iso88595\",\n            \"iso_8859-5\",\n            \"iso_8859-5:1988\"\n          ],\n          \"name\": \"ISO-8859-5\"\n        },\n        {\n          \"labels\": [\n            \"arabic\",\n            \"asmo-708\",\n            \"csiso88596e\",\n            \"csiso88596i\",\n            \"csisolatinarabic\",\n            \"ecma-114\",\n            \"iso-8859-6\",\n            \"iso-8859-6-e\",\n            \"iso-8859-6-i\",\n            \"iso-ir-127\",\n            \"iso8859-6\",\n            \"iso88596\",\n            \"iso_8859-6\",\n            \"iso_8859-6:1987\"\n          ],\n          \"name\": \"ISO-8859-6\"\n        },\n        {\n          \"labels\": [\n            \"csisolatingreek\",\n            \"ecma-118\",\n            \"elot_928\",\n            \"greek\",\n            \"greek8\",\n            \"iso-8859-7\",\n            \"iso-ir-126\",\n            \"iso8859-7\",\n            \"iso88597\",\n            \"iso_8859-7\",\n            \"iso_8859-7:1987\",\n            \"sun_eu_greek\"\n          ],\n          \"name\": \"ISO-8859-7\"\n        },\n        {\n          \"labels\": [\n            \"csiso88598e\",\n            \"csisolatinhebrew\",\n            \"hebrew\",\n            \"iso-8859-8\",\n            \"iso-8859-8-e\",\n            \"iso-ir-138\",\n            \"iso8859-8\",\n            \"iso88598\",\n            \"iso_8859-8\",\n            \"iso_8859-8:1988\",\n            \"visual\"\n          ],\n          \"name\": \"ISO-8859-8\"\n        },\n        {\n          \"labels\": [\n            \"csiso88598i\",\n            \"iso-8859-8-i\",\n            \"logical\"\n          ],\n          \"name\": \"ISO-8859-8-I\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin6\",\n            \"iso-8859-10\",\n            \"iso-ir-157\",\n            \"iso8859-10\",\n            \"iso885910\",\n            \"l6\",\n            \"latin6\"\n          ],\n          \"name\": \"ISO-8859-10\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-13\",\n            \"iso8859-13\",\n            \"iso885913\"\n          ],\n          \"name\": \"ISO-8859-13\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-14\",\n            \"iso8859-14\",\n            \"iso885914\"\n          ],\n          \"name\": \"ISO-8859-14\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin9\",\n            \"iso-8859-15\",\n            \"iso8859-15\",\n            \"iso885915\",\n            \"iso_8859-15\",\n            \"l9\"\n          ],\n          \"name\": \"ISO-8859-15\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-16\"\n          ],\n          \"name\": \"ISO-8859-16\"\n        },\n        {\n          \"labels\": [\n            \"cskoi8r\",\n            \"koi\",\n            \"koi8\",\n            \"koi8-r\",\n            \"koi8_r\"\n          ],\n          \"name\": \"KOI8-R\"\n        },\n        {\n          \"labels\": [\n            \"koi8-ru\",\n            \"koi8-u\"\n          ],\n          \"name\": \"KOI8-U\"\n        },\n        {\n          \"labels\": [\n            \"csmacintosh\",\n            \"mac\",\n            \"macintosh\",\n            \"x-mac-roman\"\n          ],\n          \"name\": \"macintosh\"\n        },\n        {\n          \"labels\": [\n            \"dos-874\",\n            \"iso-8859-11\",\n            \"iso8859-11\",\n            \"iso885911\",\n            \"tis-620\",\n            \"windows-874\"\n          ],\n          \"name\": \"windows-874\"\n        },\n        {\n          \"labels\": [\n            \"cp1250\",\n            \"windows-1250\",\n            \"x-cp1250\"\n          ],\n          \"name\": \"windows-1250\"\n        },\n        {\n          \"labels\": [\n            \"cp1251\",\n            \"windows-1251\",\n            \"x-cp1251\"\n          ],\n          \"name\": \"windows-1251\"\n        },\n        {\n          \"labels\": [\n            \"ansi_x3.4-1968\",\n            \"ascii\",\n            \"cp1252\",\n            \"cp819\",\n            \"csisolatin1\",\n            \"ibm819\",\n            \"iso-8859-1\",\n            \"iso-ir-100\",\n            \"iso8859-1\",\n            \"iso88591\",\n            \"iso_8859-1\",\n            \"iso_8859-1:1987\",\n            \"l1\",\n            \"latin1\",\n            \"us-ascii\",\n            \"windows-1252\",\n            \"x-cp1252\"\n          ],\n          \"name\": \"windows-1252\"\n        },\n        {\n          \"labels\": [\n            \"cp1253\",\n            \"windows-1253\",\n            \"x-cp1253\"\n          ],\n          \"name\": \"windows-1253\"\n        },\n        {\n          \"labels\": [\n            \"cp1254\",\n            \"csisolatin5\",\n            \"iso-8859-9\",\n            \"iso-ir-148\",\n            \"iso8859-9\",\n            \"iso88599\",\n            \"iso_8859-9\",\n            \"iso_8859-9:1989\",\n            \"l5\",\n            \"latin5\",\n            \"windows-1254\",\n            \"x-cp1254\"\n          ],\n          \"name\": \"windows-1254\"\n        },\n        {\n          \"labels\": [\n            \"cp1255\",\n            \"windows-1255\",\n            \"x-cp1255\"\n          ],\n          \"name\": \"windows-1255\"\n        },\n        {\n          \"labels\": [\n            \"cp1256\",\n            \"windows-1256\",\n            \"x-cp1256\"\n          ],\n          \"name\": \"windows-1256\"\n        },\n        {\n          \"labels\": [\n            \"cp1257\",\n            \"windows-1257\",\n            \"x-cp1257\"\n          ],\n          \"name\": \"windows-1257\"\n        },\n        {\n          \"labels\": [\n            \"cp1258\",\n            \"windows-1258\",\n            \"x-cp1258\"\n          ],\n          \"name\": \"windows-1258\"\n        },\n        {\n          \"labels\": [\n            \"x-mac-cyrillic\",\n            \"x-mac-ukrainian\"\n          ],\n          \"name\": \"x-mac-cyrillic\"\n        }\n      ],\n      \"heading\": \"Legacy single-byte encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"chinese\",\n            \"csgb2312\",\n            \"csiso58gb231280\",\n            \"gb2312\",\n            \"gb_2312\",\n            \"gb_2312-80\",\n            \"gbk\",\n            \"iso-ir-58\",\n            \"x-gbk\"\n          ],\n          \"name\": \"GBK\"\n        },\n        {\n          \"labels\": [\n            \"gb18030\"\n          ],\n          \"name\": \"gb18030\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Chinese (simplified) encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"big5\",\n            \"big5-hkscs\",\n            \"cn-big5\",\n            \"csbig5\",\n            \"x-x-big5\"\n          ],\n          \"name\": \"Big5\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Chinese (traditional) encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"cseucpkdfmtjapanese\",\n            \"euc-jp\",\n            \"x-euc-jp\"\n          ],\n          \"name\": \"EUC-JP\"\n        },\n        {\n          \"labels\": [\n            \"csiso2022jp\",\n            \"iso-2022-jp\"\n          ],\n          \"name\": \"ISO-2022-JP\"\n        },\n        {\n          \"labels\": [\n            \"csshiftjis\",\n            \"ms932\",\n            \"ms_kanji\",\n            \"shift-jis\",\n            \"shift_jis\",\n            \"sjis\",\n            \"windows-31j\",\n            \"x-sjis\"\n          ],\n          \"name\": \"Shift_JIS\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Japanese encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"cseuckr\",\n            \"csksc56011987\",\n            \"euc-kr\",\n            \"iso-ir-149\",\n            \"korean\",\n            \"ks_c_5601-1987\",\n            \"ks_c_5601-1989\",\n            \"ksc5601\",\n            \"ksc_5601\",\n            \"windows-949\"\n          ],\n          \"name\": \"EUC-KR\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Korean encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"csiso2022kr\",\n            \"hz-gb-2312\",\n            \"iso-2022-cn\",\n            \"iso-2022-cn-ext\",\n            \"iso-2022-kr\"\n          ],\n          \"name\": \"replacement\"\n        },\n        {\n          \"labels\": [\n            \"utf-16be\"\n          ],\n          \"name\": \"UTF-16BE\"\n        },\n        {\n          \"labels\": [\n            \"utf-16\",\n            \"utf-16le\"\n          ],\n          \"name\": \"UTF-16LE\"\n        },\n        {\n          \"labels\": [\n            \"x-user-defined\"\n          ],\n          \"name\": \"x-user-defined\"\n        }\n      ],\n      \"heading\": \"Legacy miscellaneous encodings\"\n    }\n  ];\n\n  // Label to encoding registry.\n  /** @type {Object.<string,{name:string,labels:Array.<string>}>} */\n  var label_to_encoding = {};\n  encodings.forEach(function(category) {\n    category.encodings.forEach(function(encoding) {\n      encoding.labels.forEach(function(label) {\n        label_to_encoding[label] = encoding;\n      });\n    });\n  });\n\n  // Registry of of encoder/decoder factories, by encoding name.\n  /** @type {Object.<string, function({fatal:boolean}): Encoder>} */\n  var encoders = {};\n  /** @type {Object.<string, function({fatal:boolean}): Decoder>} */\n  var decoders = {};\n\n  //\n  // 6. Indexes\n  //\n\n  /**\n   * @param {number} pointer The |pointer| to search for.\n   * @param {(!Array.<?number>|undefined)} index The |index| to search within.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in |index|.\n   */\n  function indexCodePointFor(pointer, index) {\n    if (!index) return null;\n    return index[pointer] || null;\n  }\n\n  /**\n   * @param {number} code_point The |code point| to search for.\n   * @param {!Array.<?number>} index The |index| to search within.\n   * @return {?number} The first pointer corresponding to |code point| in\n   *     |index|, or null if |code point| is not in |index|.\n   */\n  function indexPointerFor(code_point, index) {\n    var pointer = index.indexOf(code_point);\n    return pointer === -1 ? null : pointer;\n  }\n\n  /**\n   * @param {string} name Name of the index.\n   * @return {(!Array.<number>|!Array.<Array.<number>>)}\n   *  */\n  function index(name) {\n    if (!('encoding-indexes' in global)) {\n      throw Error(\"Indexes missing.\" +\n                  \" Did you forget to include encoding-indexes.js first?\");\n    }\n    return global['encoding-indexes'][name];\n  }\n\n  /**\n   * @param {number} pointer The |pointer| to search for in the gb18030 index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the gb18030 index.\n   */\n  function indexGB18030RangesCodePointFor(pointer) {\n    // 1. If pointer is greater than 39419 and less than 189000, or\n    // pointer is greater than 1237575, return null.\n    if ((pointer > 39419 && pointer < 189000) || (pointer > 1237575))\n      return null;\n\n    // 2. If pointer is 7457, return code point U+E7C7.\n    if (pointer === 7457) return 0xE7C7;\n\n    // 3. Let offset be the last pointer in index gb18030 ranges that\n    // is equal to or less than pointer and let code point offset be\n    // its corresponding code point.\n    var offset = 0;\n    var code_point_offset = 0;\n    var idx = index('gb18030-ranges');\n    var i;\n    for (i = 0; i < idx.length; ++i) {\n      /** @type {!Array.<number>} */\n      var entry = idx[i];\n      if (entry[0] <= pointer) {\n        offset = entry[0];\n        code_point_offset = entry[1];\n      } else {\n        break;\n      }\n    }\n\n    // 4. Return a code point whose value is code point offset +\n    // pointer − offset.\n    return code_point_offset + pointer - offset;\n  }\n\n  /**\n   * @param {number} code_point The |code point| to locate in the gb18030 index.\n   * @return {number} The first pointer corresponding to |code point| in the\n   *     gb18030 index.\n   */\n  function indexGB18030RangesPointerFor(code_point) {\n    // 1. If code point is U+E7C7, return pointer 7457.\n    if (code_point === 0xE7C7) return 7457;\n\n    // 2. Let offset be the last code point in index gb18030 ranges\n    // that is equal to or less than code point and let pointer offset\n    // be its corresponding pointer.\n    var offset = 0;\n    var pointer_offset = 0;\n    var idx = index('gb18030-ranges');\n    var i;\n    for (i = 0; i < idx.length; ++i) {\n      /** @type {!Array.<number>} */\n      var entry = idx[i];\n      if (entry[1] <= code_point) {\n        offset = entry[1];\n        pointer_offset = entry[0];\n      } else {\n        break;\n      }\n    }\n\n    // 3. Return a pointer whose value is pointer offset + code point\n    // − offset.\n    return pointer_offset + code_point - offset;\n  }\n\n  /**\n   * @param {number} code_point The |code_point| to search for in the Shift_JIS\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the Shift_JIS index.\n   */\n  function indexShiftJISPointerFor(code_point) {\n    // 1. Let index be index jis0208 excluding all entries whose\n    // pointer is in the range 8272 to 8835, inclusive.\n    shift_jis_index = shift_jis_index ||\n      index('jis0208').map(function(code_point, pointer) {\n        return inRange(pointer, 8272, 8835) ? null : code_point;\n      });\n    var index_ = shift_jis_index;\n\n    // 2. Return the index pointer for code point in index.\n    return index_.indexOf(code_point);\n  }\n  var shift_jis_index;\n\n  /**\n   * @param {number} code_point The |code_point| to search for in the big5\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the big5 index.\n   */\n  function indexBig5PointerFor(code_point) {\n    // 1. Let index be index Big5 excluding all entries whose pointer\n    big5_index_no_hkscs = big5_index_no_hkscs ||\n      index('big5').map(function(code_point, pointer) {\n        return (pointer < (0xA1 - 0x81) * 157) ? null : code_point;\n      });\n    var index_ = big5_index_no_hkscs;\n\n    // 2. If code point is U+2550, U+255E, U+2561, U+256A, U+5341, or\n    // U+5345, return the last pointer corresponding to code point in\n    // index.\n    if (code_point === 0x2550 || code_point === 0x255E ||\n        code_point === 0x2561 || code_point === 0x256A ||\n        code_point === 0x5341 || code_point === 0x5345) {\n      return index_.lastIndexOf(code_point);\n    }\n\n    // 3. Return the index pointer for code point in index.\n    return indexPointerFor(code_point, index_);\n  }\n  var big5_index_no_hkscs;\n\n  //\n  // 8. API\n  //\n\n  /** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n  // 8.1 Interface TextDecoder\n\n  /**\n   * @constructor\n   * @param {string=} label The label of the encoding;\n   *     defaults to 'utf-8'.\n   * @param {Object=} options\n   */\n  function TextDecoder(label, options) {\n    // Web IDL conventions\n    if (!(this instanceof TextDecoder))\n      throw TypeError('Called as a function. Did you forget \\'new\\'?');\n    label = label !== undefined ? String(label) : DEFAULT_ENCODING;\n    options = ToDictionary(options);\n\n    // A TextDecoder object has an associated encoding, decoder,\n    // stream, ignore BOM flag (initially unset), BOM seen flag\n    // (initially unset), error mode (initially replacement), and do\n    // not flush flag (initially unset).\n\n    /** @private */\n    this._encoding = null;\n    /** @private @type {?Decoder} */\n    this._decoder = null;\n    /** @private @type {boolean} */\n    this._ignoreBOM = false;\n    /** @private @type {boolean} */\n    this._BOMseen = false;\n    /** @private @type {string} */\n    this._error_mode = 'replacement';\n    /** @private @type {boolean} */\n    this._do_not_flush = false;\n\n\n    // 1. Let encoding be the result of getting an encoding from\n    // label.\n    var encoding = getEncoding(label);\n\n    // 2. If encoding is failure or replacement, throw a RangeError.\n    if (encoding === null || encoding.name === 'replacement')\n      throw RangeError('Unknown encoding: ' + label);\n    if (!decoders[encoding.name]) {\n      throw Error('Decoder not present.' +\n                  ' Did you forget to include encoding-indexes.js first?');\n    }\n\n    // 3. Let dec be a new TextDecoder object.\n    var dec = this;\n\n    // 4. Set dec's encoding to encoding.\n    dec._encoding = encoding;\n\n    // 5. If options's fatal member is true, set dec's error mode to\n    // fatal.\n    if (Boolean(options['fatal']))\n      dec._error_mode = 'fatal';\n\n    // 6. If options's ignoreBOM member is true, set dec's ignore BOM\n    // flag.\n    if (Boolean(options['ignoreBOM']))\n      dec._ignoreBOM = true;\n\n    // For pre-ES5 runtimes:\n    if (!Object.defineProperty) {\n      this.encoding = dec._encoding.name.toLowerCase();\n      this.fatal = dec._error_mode === 'fatal';\n      this.ignoreBOM = dec._ignoreBOM;\n    }\n\n    // 7. Return dec.\n    return dec;\n  }\n\n  if (Object.defineProperty) {\n    // The encoding attribute's getter must return encoding's name.\n    Object.defineProperty(TextDecoder.prototype, 'encoding', {\n      /** @this {TextDecoder} */\n      get: function() { return this._encoding.name.toLowerCase(); }\n    });\n\n    // The fatal attribute's getter must return true if error mode\n    // is fatal, and false otherwise.\n    Object.defineProperty(TextDecoder.prototype, 'fatal', {\n      /** @this {TextDecoder} */\n      get: function() { return this._error_mode === 'fatal'; }\n    });\n\n    // The ignoreBOM attribute's getter must return true if ignore\n    // BOM flag is set, and false otherwise.\n    Object.defineProperty(TextDecoder.prototype, 'ignoreBOM', {\n      /** @this {TextDecoder} */\n      get: function() { return this._ignoreBOM; }\n    });\n  }\n\n  /**\n   * @param {BufferSource=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  TextDecoder.prototype.decode = function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    // 1. If the do not flush flag is unset, set decoder to a new\n    // encoding's decoder, set stream to a new stream, and unset the\n    // BOM seen flag.\n    if (!this._do_not_flush) {\n      this._decoder = decoders[this._encoding.name]({\n        fatal: this._error_mode === 'fatal'});\n      this._BOMseen = false;\n    }\n\n    // 2. If options's stream is true, set the do not flush flag, and\n    // unset the do not flush flag otherwise.\n    this._do_not_flush = Boolean(options['stream']);\n\n    // 3. If input is given, push a copy of input to stream.\n    // TODO: Align with spec algorithm - maintain stream on instance.\n    var input_stream = new Stream(bytes);\n\n    // 4. Let output be a new stream.\n    var output = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    // 5. While true:\n    while (true) {\n      // 1. Let token be the result of reading from stream.\n      var token = input_stream.read();\n\n      // 2. If token is end-of-stream and the do not flush flag is\n      // set, return output, serialized.\n      // TODO: Align with spec algorithm.\n      if (token === end_of_stream)\n        break;\n\n      // 3. Otherwise, run these subsubsteps:\n\n      // 1. Let result be the result of processing token for decoder,\n      // stream, output, and error mode.\n      result = this._decoder.handler(input_stream, token);\n\n      // 2. If result is finished, return output, serialized.\n      if (result === finished)\n        break;\n\n      if (result !== null) {\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      }\n\n      // 3. Otherwise, if result is error, throw a TypeError.\n      // (Thrown in handler)\n\n      // 4. Otherwise, do nothing.\n    }\n    // TODO: Align with spec algorithm.\n    if (!this._do_not_flush) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    // A TextDecoder object also has an associated serialize stream\n    // algorithm...\n    /**\n     * @param {!Array.<number>} stream\n     * @return {string}\n     * @this {TextDecoder}\n     */\n    function serializeStream(stream) {\n      // 1. Let token be the result of reading from stream.\n      // (Done in-place on array, rather than as a stream)\n\n      // 2. If encoding is UTF-8, UTF-16BE, or UTF-16LE, and ignore\n      // BOM flag and BOM seen flag are unset, run these subsubsteps:\n      if (includes(['UTF-8', 'UTF-16LE', 'UTF-16BE'], this._encoding.name) &&\n          !this._ignoreBOM && !this._BOMseen) {\n        if (stream.length > 0 && stream[0] === 0xFEFF) {\n          // 1. If token is U+FEFF, set BOM seen flag.\n          this._BOMseen = true;\n          stream.shift();\n        } else if (stream.length > 0) {\n          // 2. Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to stream.\n          this._BOMseen = true;\n        } else {\n          // 3. Otherwise, if token is not end-of-stream, append token\n          // to output.\n          // (no-op)\n        }\n      }\n      // 4. Otherwise, return output.\n      return codePointsToString(stream);\n    }\n\n    return serializeStream.call(this, output);\n  };\n\n  // 8.2 Interface TextEncoder\n\n  /**\n   * @constructor\n   * @param {string=} label The label of the encoding. NONSTANDARD.\n   * @param {Object=} options NONSTANDARD.\n   */\n  function TextEncoder(label, options) {\n    // Web IDL conventions\n    if (!(this instanceof TextEncoder))\n      throw TypeError('Called as a function. Did you forget \\'new\\'?');\n    options = ToDictionary(options);\n\n    // A TextEncoder object has an associated encoding and encoder.\n\n    /** @private */\n    this._encoding = null;\n    /** @private @type {?Encoder} */\n    this._encoder = null;\n\n    // Non-standard\n    /** @private @type {boolean} */\n    this._do_not_flush = false;\n    /** @private @type {string} */\n    this._fatal = Boolean(options['fatal']) ? 'fatal' : 'replacement';\n\n    // 1. Let enc be a new TextEncoder object.\n    var enc = this;\n\n    // 2. Set enc's encoding to UTF-8's encoder.\n    if (Boolean(options['NONSTANDARD_allowLegacyEncoding'])) {\n      // NONSTANDARD behavior.\n      label = label !== undefined ? String(label) : DEFAULT_ENCODING;\n      var encoding = getEncoding(label);\n      if (encoding === null || encoding.name === 'replacement')\n        throw RangeError('Unknown encoding: ' + label);\n      if (!encoders[encoding.name]) {\n        throw Error('Encoder not present.' +\n                    ' Did you forget to include encoding-indexes.js first?');\n      }\n      enc._encoding = encoding;\n    } else {\n      // Standard behavior.\n      enc._encoding = getEncoding('utf-8');\n\n      if (label !== undefined && 'console' in global) {\n        console.warn('TextEncoder constructor called with encoding label, '\n                     + 'which is ignored.');\n      }\n    }\n\n    // For pre-ES5 runtimes:\n    if (!Object.defineProperty)\n      this.encoding = enc._encoding.name.toLowerCase();\n\n    // 3. Return enc.\n    return enc;\n  }\n\n  if (Object.defineProperty) {\n    // The encoding attribute's getter must return encoding's name.\n    Object.defineProperty(TextEncoder.prototype, 'encoding', {\n      /** @this {TextEncoder} */\n      get: function() { return this._encoding.name.toLowerCase(); }\n    });\n  }\n\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {!Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  TextEncoder.prototype.encode = function encode(opt_string, options) {\n    opt_string = opt_string === undefined ? '' : String(opt_string);\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful when\n    // the input is a USVString so streaming is not necessary.\n    if (!this._do_not_flush)\n      this._encoder = encoders[this._encoding.name]({\n        fatal: this._fatal === 'fatal'});\n    this._do_not_flush = Boolean(options['stream']);\n\n    // 1. Convert input to a stream.\n    var input = new Stream(stringToCodePoints(opt_string));\n\n    // 2. Let output be a new stream\n    var output = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    // 3. While true, run these substeps:\n    while (true) {\n      // 1. Let token be the result of reading from input.\n      var token = input.read();\n      if (token === end_of_stream)\n        break;\n      // 2. Let result be the result of processing token for encoder,\n      // input, output.\n      result = this._encoder.handler(input, token);\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        output.push.apply(output, /**@type {!Array.<number>}*/(result));\n      else\n        output.push(result);\n    }\n    // TODO: Align with spec algorithm.\n    if (!this._do_not_flush) {\n      while (true) {\n        result = this._encoder.handler(input, input.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      }\n      this._encoder = null;\n    }\n    // 3. If result is finished, convert output into a byte sequence,\n    // and then return a Uint8Array object wrapping an ArrayBuffer\n    // containing output.\n    return new Uint8Array(output);\n  };\n\n\n  //\n  // 9. The encoding\n  //\n\n  // 9.1 utf-8\n\n  // 9.1.1 utf-8 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function UTF8Decoder(options) {\n    var fatal = options.fatal;\n\n    // utf-8's decoder's has an associated utf-8 code point, utf-8\n    // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n    // lower boundary (initially 0x80), and a utf-8 upper boundary\n    // (initially 0xBF).\n    var /** @type {number} */ utf8_code_point = 0,\n        /** @type {number} */ utf8_bytes_seen = 0,\n        /** @type {number} */ utf8_bytes_needed = 0,\n        /** @type {number} */ utf8_lower_boundary = 0x80,\n        /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n      // set utf-8 bytes needed to 0 and return error.\n      if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n        utf8_bytes_needed = 0;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 3. If utf-8 bytes needed is 0, based on byte:\n      if (utf8_bytes_needed === 0) {\n\n        // 0x00 to 0x7F\n        if (inRange(bite, 0x00, 0x7F)) {\n          // Return a code point whose value is byte.\n          return bite;\n        }\n\n        // 0xC2 to 0xDF\n        else if (inRange(bite, 0xC2, 0xDF)) {\n          // 1. Set utf-8 bytes needed to 1.\n          utf8_bytes_needed = 1;\n\n          // 2. Set UTF-8 code point to byte & 0x1F.\n          utf8_code_point = bite & 0x1F;\n        }\n\n        // 0xE0 to 0xEF\n        else if (inRange(bite, 0xE0, 0xEF)) {\n          // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n          if (bite === 0xE0)\n            utf8_lower_boundary = 0xA0;\n          // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n          if (bite === 0xED)\n            utf8_upper_boundary = 0x9F;\n          // 3. Set utf-8 bytes needed to 2.\n          utf8_bytes_needed = 2;\n          // 4. Set UTF-8 code point to byte & 0xF.\n          utf8_code_point = bite & 0xF;\n        }\n\n        // 0xF0 to 0xF4\n        else if (inRange(bite, 0xF0, 0xF4)) {\n          // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n          if (bite === 0xF0)\n            utf8_lower_boundary = 0x90;\n          // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n          if (bite === 0xF4)\n            utf8_upper_boundary = 0x8F;\n          // 3. Set utf-8 bytes needed to 3.\n          utf8_bytes_needed = 3;\n          // 4. Set UTF-8 code point to byte & 0x7.\n          utf8_code_point = bite & 0x7;\n        }\n\n        // Otherwise\n        else {\n          // Return error.\n          return decoderError(fatal);\n        }\n\n        // Return continue.\n        return null;\n      }\n\n      // 4. If byte is not in the range utf-8 lower boundary to utf-8\n      // upper boundary, inclusive, run these substeps:\n      if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n        // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n        // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n        // utf-8 upper boundary to 0xBF.\n        utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n        utf8_lower_boundary = 0x80;\n        utf8_upper_boundary = 0xBF;\n\n        // 2. Prepend byte to stream.\n        stream.prepend(bite);\n\n        // 3. Return error.\n        return decoderError(fatal);\n      }\n\n      // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n      // to 0xBF.\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 6. Set UTF-8 code point to (UTF-8 code point << 6) | (byte &\n      // 0x3F)\n      utf8_code_point = (utf8_code_point << 6) | (bite & 0x3F);\n\n      // 7. Increase utf-8 bytes seen by one.\n      utf8_bytes_seen += 1;\n\n      // 8. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n      // continue.\n      if (utf8_bytes_seen !== utf8_bytes_needed)\n        return null;\n\n      // 9. Let code point be utf-8 code point.\n      var code_point = utf8_code_point;\n\n      // 10. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n      // seen to 0.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n      // 11. Return a code point whose value is code point.\n      return code_point;\n    };\n  }\n\n  // 9.1.2 utf-8 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function UTF8Encoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Set count and offset based on the range code point is in:\n      var count, offset;\n      // U+0080 to U+07FF, inclusive:\n      if (inRange(code_point, 0x0080, 0x07FF)) {\n        // 1 and 0xC0\n        count = 1;\n        offset = 0xC0;\n      }\n      // U+0800 to U+FFFF, inclusive:\n      else if (inRange(code_point, 0x0800, 0xFFFF)) {\n        // 2 and 0xE0\n        count = 2;\n        offset = 0xE0;\n      }\n      // U+10000 to U+10FFFF, inclusive:\n      else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n        // 3 and 0xF0\n        count = 3;\n        offset = 0xF0;\n      }\n\n      // 4. Let bytes be a byte sequence whose first byte is (code\n      // point >> (6 × count)) + offset.\n      var bytes = [(code_point >> (6 * count)) + offset];\n\n      // 5. Run these substeps while count is greater than 0:\n      while (count > 0) {\n\n        // 1. Set temp to code point >> (6 × (count − 1)).\n        var temp = code_point >> (6 * (count - 1));\n\n        // 2. Append to bytes 0x80 | (temp & 0x3F).\n        bytes.push(0x80 | (temp & 0x3F));\n\n        // 3. Decrease count by one.\n        count -= 1;\n      }\n\n      // 6. Return bytes bytes, in order.\n      return bytes;\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-8'] = function(options) {\n    return new UTF8Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-8'] = function(options) {\n    return new UTF8Decoder(options);\n  };\n\n  //\n  // 10. Legacy single-byte encodings\n  //\n\n  // 10.1 single-byte decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {!Array.<number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */\n  function SingleByteDecoder(index, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 2. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 3. Let code point be the index code point for byte − 0x80 in\n      // index single-byte.\n      var code_point = index[bite - 0x80];\n\n      // 4. If code point is null, return error.\n      if (code_point === null)\n        return decoderError(fatal);\n\n      // 5. Return a code point whose value is code point.\n      return code_point;\n    };\n  }\n\n  // 10.2 single-byte encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {!Array.<?number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */\n  function SingleByteEncoder(index, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index pointer for code point in index\n      // single-byte.\n      var pointer = indexPointerFor(code_point, index);\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        encoderError(code_point);\n\n      // 5. Return a byte whose value is pointer + 0x80.\n      return pointer + 0x80;\n    };\n  }\n\n  (function() {\n    if (!('encoding-indexes' in global))\n      return;\n    encodings.forEach(function(category) {\n      if (category.heading !== 'Legacy single-byte encodings')\n        return;\n      category.encodings.forEach(function(encoding) {\n        var name = encoding.name;\n        var idx = index(name.toLowerCase());\n        /** @param {{fatal: boolean}} options */\n        decoders[name] = function(options) {\n          return new SingleByteDecoder(idx, options);\n        };\n        /** @param {{fatal: boolean}} options */\n        encoders[name] = function(options) {\n          return new SingleByteEncoder(idx, options);\n        };\n      });\n    });\n  }());\n\n  //\n  // 11. Legacy multi-byte Chinese (simplified) encodings\n  //\n\n  // 11.1 gbk\n\n  // 11.1.1 gbk decoder\n  // gbk's decoder is gb18030's decoder.\n  /** @param {{fatal: boolean}} options */\n  decoders['GBK'] = function(options) {\n    return new GB18030Decoder(options);\n  };\n\n  // 11.1.2 gbk encoder\n  // gbk's encoder is gb18030's encoder with its gbk flag set.\n  /** @param {{fatal: boolean}} options */\n  encoders['GBK'] = function(options) {\n    return new GB18030Encoder(options, true);\n  };\n\n  // 11.2 gb18030\n\n  // 11.2.1 gb18030 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function GB18030Decoder(options) {\n    var fatal = options.fatal;\n    // gb18030's decoder has an associated gb18030 first, gb18030\n    // second, and gb18030 third (all initially 0x00).\n    var /** @type {number} */ gb18030_first = 0x00,\n        /** @type {number} */ gb18030_second = 0x00,\n        /** @type {number} */ gb18030_third = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and gb18030 first, gb18030\n      // second, and gb18030 third are 0x00, return finished.\n      if (bite === end_of_stream && gb18030_first === 0x00 &&\n          gb18030_second === 0x00 && gb18030_third === 0x00) {\n        return finished;\n      }\n      // 2. If byte is end-of-stream, and gb18030 first, gb18030\n      // second, or gb18030 third is not 0x00, set gb18030 first,\n      // gb18030 second, and gb18030 third to 0x00, and return error.\n      if (bite === end_of_stream &&\n          (gb18030_first !== 0x00 || gb18030_second !== 0x00 ||\n           gb18030_third !== 0x00)) {\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        gb18030_third = 0x00;\n        decoderError(fatal);\n      }\n      var code_point;\n      // 3. If gb18030 third is not 0x00, run these substeps:\n      if (gb18030_third !== 0x00) {\n        // 1. Let code point be null.\n        code_point = null;\n        // 2. If byte is in the range 0x30 to 0x39, inclusive, set\n        // code point to the index gb18030 ranges code point for\n        // (((gb18030 first − 0x81) × 10 + gb18030 second − 0x30) ×\n        // 126 + gb18030 third − 0x81) × 10 + byte − 0x30.\n        if (inRange(bite, 0x30, 0x39)) {\n          code_point = indexGB18030RangesCodePointFor(\n              (((gb18030_first - 0x81) * 10 + gb18030_second - 0x30) * 126 +\n               gb18030_third - 0x81) * 10 + bite - 0x30);\n        }\n\n        // 3. Let buffer be a byte sequence consisting of gb18030\n        // second, gb18030 third, and byte, in order.\n        var buffer = [gb18030_second, gb18030_third, bite];\n\n        // 4. Set gb18030 first, gb18030 second, and gb18030 third to\n        // 0x00.\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        gb18030_third = 0x00;\n\n        // 5. If code point is null, prepend buffer to stream and\n        // return error.\n        if (code_point === null) {\n          stream.prepend(buffer);\n          return decoderError(fatal);\n        }\n\n        // 6. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If gb18030 second is not 0x00, run these substeps:\n      if (gb18030_second !== 0x00) {\n\n        // 1. If byte is in the range 0x81 to 0xFE, inclusive, set\n        // gb18030 third to byte and return continue.\n        if (inRange(bite, 0x81, 0xFE)) {\n          gb18030_third = bite;\n          return null;\n        }\n\n        // 2. Prepend gb18030 second followed by byte to stream, set\n        // gb18030 first and gb18030 second to 0x00, and return error.\n        stream.prepend([gb18030_second, bite]);\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 5. If gb18030 first is not 0x00, run these substeps:\n      if (gb18030_first !== 0x00) {\n\n        // 1. If byte is in the range 0x30 to 0x39, inclusive, set\n        // gb18030 second to byte and return continue.\n        if (inRange(bite, 0x30, 0x39)) {\n          gb18030_second = bite;\n          return null;\n        }\n\n        // 2. Let lead be gb18030 first, let pointer be null, and set\n        // gb18030 first to 0x00.\n        var lead = gb18030_first;\n        var pointer = null;\n        gb18030_first = 0x00;\n\n        // 3. Let offset be 0x40 if byte is less than 0x7F and 0x41\n        // otherwise.\n        var offset = bite < 0x7F ? 0x40 : 0x41;\n\n        // 4. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n        // to 0xFE, inclusive, set pointer to (lead − 0x81) × 190 +\n        // (byte − offset).\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0x80, 0xFE))\n          pointer = (lead - 0x81) * 190 + (bite - offset);\n\n        // 5. Let code point be null if pointer is null and the index\n        // code point for pointer in index gb18030 otherwise.\n        code_point = pointer === null ? null :\n            indexCodePointFor(pointer, index('gb18030'));\n\n        // 6. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 7. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 8. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 6. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 7. If byte is 0x80, return code point U+20AC.\n      if (bite === 0x80)\n        return 0x20AC;\n\n      // 8. If byte is in the range 0x81 to 0xFE, inclusive, set\n      // gb18030 first to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        gb18030_first = bite;\n        return null;\n      }\n\n      // 9. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 11.2.2 gb18030 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   * @param {boolean=} gbk_flag\n   */\n  function GB18030Encoder(options, gbk_flag) {\n    var fatal = options.fatal;\n    // gb18030's decoder has an associated gbk flag (initially unset).\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is U+E5E5, return error with code point.\n      if (code_point === 0xE5E5)\n        return encoderError(code_point);\n\n      // 4. If the gbk flag is set and code point is U+20AC, return\n      // byte 0x80.\n      if (gbk_flag && code_point === 0x20AC)\n        return 0x80;\n\n      // 5. Let pointer be the index pointer for code point in index\n      // gb18030.\n      var pointer = indexPointerFor(code_point, index('gb18030'));\n\n      // 6. If pointer is not null, run these substeps:\n      if (pointer !== null) {\n\n        // 1. Let lead be floor(pointer / 190) + 0x81.\n        var lead = floor(pointer / 190) + 0x81;\n\n        // 2. Let trail be pointer % 190.\n        var trail = pointer % 190;\n\n        // 3. Let offset be 0x40 if trail is less than 0x3F and 0x41 otherwise.\n        var offset = trail < 0x3F ? 0x40 : 0x41;\n\n        // 4. Return two bytes whose values are lead and trail + offset.\n        return [lead, trail + offset];\n      }\n\n      // 7. If gbk flag is set, return error with code point.\n      if (gbk_flag)\n        return encoderError(code_point);\n\n      // 8. Set pointer to the index gb18030 ranges pointer for code\n      // point.\n      pointer = indexGB18030RangesPointerFor(code_point);\n\n      // 9. Let byte1 be floor(pointer / 10 / 126 / 10).\n      var byte1 = floor(pointer / 10 / 126 / 10);\n\n      // 10. Set pointer to pointer − byte1 × 10 × 126 × 10.\n      pointer = pointer - byte1 * 10 * 126 * 10;\n\n      // 11. Let byte2 be floor(pointer / 10 / 126).\n      var byte2 = floor(pointer / 10 / 126);\n\n      // 12. Set pointer to pointer − byte2 × 10 × 126.\n      pointer = pointer - byte2 * 10 * 126;\n\n      // 13. Let byte3 be floor(pointer / 10).\n      var byte3 = floor(pointer / 10);\n\n      // 14. Let byte4 be pointer − byte3 × 10.\n      var byte4 = pointer - byte3 * 10;\n\n      // 15. Return four bytes whose values are byte1 + 0x81, byte2 +\n      // 0x30, byte3 + 0x81, byte4 + 0x30.\n      return [byte1 + 0x81,\n              byte2 + 0x30,\n              byte3 + 0x81,\n              byte4 + 0x30];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['gb18030'] = function(options) {\n    return new GB18030Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['gb18030'] = function(options) {\n    return new GB18030Decoder(options);\n  };\n\n\n  //\n  // 12. Legacy multi-byte Chinese (traditional) encodings\n  //\n\n  // 12.1 Big5\n\n  // 12.1.1 Big5 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function Big5Decoder(options) {\n    var fatal = options.fatal;\n    // Big5's decoder has an associated Big5 lead (initially 0x00).\n    var /** @type {number} */ Big5_lead = 0x00;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and Big5 lead is not 0x00, set\n      // Big5 lead to 0x00 and return error.\n      if (bite === end_of_stream && Big5_lead !== 0x00) {\n        Big5_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and Big5 lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && Big5_lead === 0x00)\n        return finished;\n\n      // 3. If Big5 lead is not 0x00, let lead be Big5 lead, let\n      // pointer be null, set Big5 lead to 0x00, and then run these\n      // substeps:\n      if (Big5_lead !== 0x00) {\n        var lead = Big5_lead;\n        var pointer = null;\n        Big5_lead = 0x00;\n\n        // 1. Let offset be 0x40 if byte is less than 0x7F and 0x62\n        // otherwise.\n        var offset = bite < 0x7F ? 0x40 : 0x62;\n\n        // 2. If byte is in the range 0x40 to 0x7E, inclusive, or 0xA1\n        // to 0xFE, inclusive, set pointer to (lead − 0x81) × 157 +\n        // (byte − offset).\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0xA1, 0xFE))\n          pointer = (lead - 0x81) * 157 + (bite - offset);\n\n        // 3. If there is a row in the table below whose first column\n        // is pointer, return the two code points listed in its second\n        // column\n        // Pointer | Code points\n        // --------+--------------\n        // 1133    | U+00CA U+0304\n        // 1135    | U+00CA U+030C\n        // 1164    | U+00EA U+0304\n        // 1166    | U+00EA U+030C\n        switch (pointer) {\n          case 1133: return [0x00CA, 0x0304];\n          case 1135: return [0x00CA, 0x030C];\n          case 1164: return [0x00EA, 0x0304];\n          case 1166: return [0x00EA, 0x030C];\n        }\n\n        // 4. Let code point be null if pointer is null and the index\n        // code point for pointer in index Big5 otherwise.\n        var code_point = (pointer === null) ? null :\n            indexCodePointFor(pointer, index('big5'));\n\n        // 5. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 6. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 7. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 5. If byte is in the range 0x81 to 0xFE, inclusive, set Big5\n      // lead to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        Big5_lead = bite;\n        return null;\n      }\n\n      // 6. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 12.1.2 Big5 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function Big5Encoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index Big5 pointer for code point.\n      var pointer = indexBig5PointerFor(code_point);\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 5. Let lead be floor(pointer / 157) + 0x81.\n      var lead = floor(pointer / 157) + 0x81;\n\n      // 6. If lead is less than 0xA1, return error with code point.\n      if (lead < 0xA1)\n        return encoderError(code_point);\n\n      // 7. Let trail be pointer % 157.\n      var trail = pointer % 157;\n\n      // 8. Let offset be 0x40 if trail is less than 0x3F and 0x62\n      // otherwise.\n      var offset = trail < 0x3F ? 0x40 : 0x62;\n\n      // Return two bytes whose values are lead and trail + offset.\n      return [lead, trail + offset];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['Big5'] = function(options) {\n    return new Big5Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['Big5'] = function(options) {\n    return new Big5Decoder(options);\n  };\n\n\n  //\n  // 13. Legacy multi-byte Japanese encodings\n  //\n\n  // 13.1 euc-jp\n\n  // 13.1.1 euc-jp decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCJPDecoder(options) {\n    var fatal = options.fatal;\n\n    // euc-jp's decoder has an associated euc-jp jis0212 flag\n    // (initially unset) and euc-jp lead (initially 0x00).\n    var /** @type {boolean} */ eucjp_jis0212_flag = false,\n        /** @type {number} */ eucjp_lead = 0x00;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and euc-jp lead is not 0x00, set\n      // euc-jp lead to 0x00, and return error.\n      if (bite === end_of_stream && eucjp_lead !== 0x00) {\n        eucjp_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and euc-jp lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && eucjp_lead === 0x00)\n        return finished;\n\n      // 3. If euc-jp lead is 0x8E and byte is in the range 0xA1 to\n      // 0xDF, inclusive, set euc-jp lead to 0x00 and return a code\n      // point whose value is 0xFF61 − 0xA1 + byte.\n      if (eucjp_lead === 0x8E && inRange(bite, 0xA1, 0xDF)) {\n        eucjp_lead = 0x00;\n        return 0xFF61 - 0xA1 + bite;\n      }\n\n      // 4. If euc-jp lead is 0x8F and byte is in the range 0xA1 to\n      // 0xFE, inclusive, set the euc-jp jis0212 flag, set euc-jp lead\n      // to byte, and return continue.\n      if (eucjp_lead === 0x8F && inRange(bite, 0xA1, 0xFE)) {\n        eucjp_jis0212_flag = true;\n        eucjp_lead = bite;\n        return null;\n      }\n\n      // 5. If euc-jp lead is not 0x00, let lead be euc-jp lead, set\n      // euc-jp lead to 0x00, and run these substeps:\n      if (eucjp_lead !== 0x00) {\n        var lead = eucjp_lead;\n        eucjp_lead = 0x00;\n\n        // 1. Let code point be null.\n        var code_point = null;\n\n        // 2. If lead and byte are both in the range 0xA1 to 0xFE,\n        // inclusive, set code point to the index code point for (lead\n        // − 0xA1) × 94 + byte − 0xA1 in index jis0208 if the euc-jp\n        // jis0212 flag is unset and in index jis0212 otherwise.\n        if (inRange(lead, 0xA1, 0xFE) && inRange(bite, 0xA1, 0xFE)) {\n          code_point = indexCodePointFor(\n            (lead - 0xA1) * 94 + (bite - 0xA1),\n            index(!eucjp_jis0212_flag ? 'jis0208' : 'jis0212'));\n        }\n\n        // 3. Unset the euc-jp jis0212 flag.\n        eucjp_jis0212_flag = false;\n\n        // 4. If byte is not in the range 0xA1 to 0xFE, inclusive,\n        // prepend byte to stream.\n        if (!inRange(bite, 0xA1, 0xFE))\n          stream.prepend(bite);\n\n        // 5. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 6. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 6. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 7. If byte is 0x8E, 0x8F, or in the range 0xA1 to 0xFE,\n      // inclusive, set euc-jp lead to byte and return continue.\n      if (bite === 0x8E || bite === 0x8F || inRange(bite, 0xA1, 0xFE)) {\n        eucjp_lead = bite;\n        return null;\n      }\n\n      // 8. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 13.1.2 euc-jp encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCJPEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is U+00A5, return byte 0x5C.\n      if (code_point === 0x00A5)\n        return 0x5C;\n\n      // 4. If code point is U+203E, return byte 0x7E.\n      if (code_point === 0x203E)\n        return 0x7E;\n\n      // 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n      // return two bytes whose values are 0x8E and code point −\n      // 0xFF61 + 0xA1.\n      if (inRange(code_point, 0xFF61, 0xFF9F))\n        return [0x8E, code_point - 0xFF61 + 0xA1];\n\n      // 6. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 7. Let pointer be the index pointer for code point in index\n      // jis0208.\n      var pointer = indexPointerFor(code_point, index('jis0208'));\n\n      // 8. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 9. Let lead be floor(pointer / 94) + 0xA1.\n      var lead = floor(pointer / 94) + 0xA1;\n\n      // 10. Let trail be pointer % 94 + 0xA1.\n      var trail = pointer % 94 + 0xA1;\n\n      // 11. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['EUC-JP'] = function(options) {\n    return new EUCJPEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['EUC-JP'] = function(options) {\n    return new EUCJPDecoder(options);\n  };\n\n  // 13.2 iso-2022-jp\n\n  // 13.2.1 iso-2022-jp decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ISO2022JPDecoder(options) {\n    var fatal = options.fatal;\n    /** @enum */\n    var states = {\n      ASCII: 0,\n      Roman: 1,\n      Katakana: 2,\n      LeadByte: 3,\n      TrailByte: 4,\n      EscapeStart: 5,\n      Escape: 6\n    };\n    // iso-2022-jp's decoder has an associated iso-2022-jp decoder\n    // state (initially ASCII), iso-2022-jp decoder output state\n    // (initially ASCII), iso-2022-jp lead (initially 0x00), and\n    // iso-2022-jp output flag (initially unset).\n    var /** @type {number} */ iso2022jp_decoder_state = states.ASCII,\n        /** @type {number} */ iso2022jp_decoder_output_state = states.ASCII,\n        /** @type {number} */ iso2022jp_lead = 0x00,\n        /** @type {boolean} */ iso2022jp_output_flag = false;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // switching on iso-2022-jp decoder state:\n      switch (iso2022jp_decoder_state) {\n      default:\n      case states.ASCII:\n        // ASCII\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x00 to 0x7F, excluding 0x0E, 0x0F, and 0x1B\n        if (inRange(bite, 0x00, 0x7F) && bite !== 0x0E\n            && bite !== 0x0F && bite !== 0x1B) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is byte.\n          iso2022jp_output_flag = false;\n          return bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.Roman:\n        // Roman\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x5C\n        if (bite === 0x5C) {\n          // Unset the iso-2022-jp output flag and return code point\n          // U+00A5.\n          iso2022jp_output_flag = false;\n          return 0x00A5;\n        }\n\n        // 0x7E\n        if (bite === 0x7E) {\n          // Unset the iso-2022-jp output flag and return code point\n          // U+203E.\n          iso2022jp_output_flag = false;\n          return 0x203E;\n        }\n\n        // 0x00 to 0x7F, excluding 0x0E, 0x0F, 0x1B, 0x5C, and 0x7E\n        if (inRange(bite, 0x00, 0x7F) && bite !== 0x0E && bite !== 0x0F\n            && bite !== 0x1B && bite !== 0x5C && bite !== 0x7E) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is byte.\n          iso2022jp_output_flag = false;\n          return bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.Katakana:\n        // Katakana\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x21 to 0x5F\n        if (inRange(bite, 0x21, 0x5F)) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is 0xFF61 − 0x21 + byte.\n          iso2022jp_output_flag = false;\n          return 0xFF61 - 0x21 + bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.LeadByte:\n        // Lead byte\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x21 to 0x7E\n        if (inRange(bite, 0x21, 0x7E)) {\n          // Unset the iso-2022-jp output flag, set iso-2022-jp lead\n          // to byte, iso-2022-jp decoder state to trail byte, and\n          // return continue.\n          iso2022jp_output_flag = false;\n          iso2022jp_lead = bite;\n          iso2022jp_decoder_state = states.TrailByte;\n          return null;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.TrailByte:\n        // Trail byte\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return decoderError(fatal);\n        }\n\n        // 0x21 to 0x7E\n        if (inRange(bite, 0x21, 0x7E)) {\n          // 1. Set the iso-2022-jp decoder state to lead byte.\n          iso2022jp_decoder_state = states.LeadByte;\n\n          // 2. Let pointer be (iso-2022-jp lead − 0x21) × 94 + byte − 0x21.\n          var pointer = (iso2022jp_lead - 0x21) * 94 + bite - 0x21;\n\n          // 3. Let code point be the index code point for pointer in\n          // index jis0208.\n          var code_point = indexCodePointFor(pointer, index('jis0208'));\n\n          // 4. If code point is null, return error.\n          if (code_point === null)\n            return decoderError(fatal);\n\n          // 5. Return a code point whose value is code point.\n          return code_point;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Set the iso-2022-jp decoder state to lead byte, prepend\n          // byte to stream, and return error.\n          iso2022jp_decoder_state = states.LeadByte;\n          stream.prepend(bite);\n          return decoderError(fatal);\n        }\n\n        // Otherwise\n        // Set iso-2022-jp decoder state to lead byte and return\n        // error.\n        iso2022jp_decoder_state = states.LeadByte;\n        return decoderError(fatal);\n\n      case states.EscapeStart:\n        // Escape start\n\n        // 1. If byte is either 0x24 or 0x28, set iso-2022-jp lead to\n        // byte, iso-2022-jp decoder state to escape, and return\n        // continue.\n        if (bite === 0x24 || bite === 0x28) {\n          iso2022jp_lead = bite;\n          iso2022jp_decoder_state = states.Escape;\n          return null;\n        }\n\n        // 2. Prepend byte to stream.\n        stream.prepend(bite);\n\n        // 3. Unset the iso-2022-jp output flag, set iso-2022-jp\n        // decoder state to iso-2022-jp decoder output state, and\n        // return error.\n        iso2022jp_output_flag = false;\n        iso2022jp_decoder_state = iso2022jp_decoder_output_state;\n        return decoderError(fatal);\n\n      case states.Escape:\n        // Escape\n\n        // 1. Let lead be iso-2022-jp lead and set iso-2022-jp lead to\n        // 0x00.\n        var lead = iso2022jp_lead;\n        iso2022jp_lead = 0x00;\n\n        // 2. Let state be null.\n        var state = null;\n\n        // 3. If lead is 0x28 and byte is 0x42, set state to ASCII.\n        if (lead === 0x28 && bite === 0x42)\n          state = states.ASCII;\n\n        // 4. If lead is 0x28 and byte is 0x4A, set state to Roman.\n        if (lead === 0x28 && bite === 0x4A)\n          state = states.Roman;\n\n        // 5. If lead is 0x28 and byte is 0x49, set state to Katakana.\n        if (lead === 0x28 && bite === 0x49)\n          state = states.Katakana;\n\n        // 6. If lead is 0x24 and byte is either 0x40 or 0x42, set\n        // state to lead byte.\n        if (lead === 0x24 && (bite === 0x40 || bite === 0x42))\n          state = states.LeadByte;\n\n        // 7. If state is non-null, run these substeps:\n        if (state !== null) {\n          // 1. Set iso-2022-jp decoder state and iso-2022-jp decoder\n          // output state to states.\n          iso2022jp_decoder_state = iso2022jp_decoder_state = state;\n\n          // 2. Let output flag be the iso-2022-jp output flag.\n          var output_flag = iso2022jp_output_flag;\n\n          // 3. Set the iso-2022-jp output flag.\n          iso2022jp_output_flag = true;\n\n          // 4. Return continue, if output flag is unset, and error\n          // otherwise.\n          return !output_flag ? null : decoderError(fatal);\n        }\n\n        // 8. Prepend lead and byte to stream.\n        stream.prepend([lead, bite]);\n\n        // 9. Unset the iso-2022-jp output flag, set iso-2022-jp\n        // decoder state to iso-2022-jp decoder output state and\n        // return error.\n        iso2022jp_output_flag = false;\n        iso2022jp_decoder_state = iso2022jp_decoder_output_state;\n        return decoderError(fatal);\n      }\n    };\n  }\n\n  // 13.2.2 iso-2022-jp encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ISO2022JPEncoder(options) {\n    var fatal = options.fatal;\n    // iso-2022-jp's encoder has an associated iso-2022-jp encoder\n    // state which is one of ASCII, Roman, and jis0208 (initially\n    // ASCII).\n    /** @enum */\n    var states = {\n      ASCII: 0,\n      Roman: 1,\n      jis0208: 2\n    };\n    var /** @type {number} */ iso2022jp_state = states.ASCII;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream and iso-2022-jp encoder\n      // state is not ASCII, prepend code point to stream, set\n      // iso-2022-jp encoder state to ASCII, and return three bytes\n      // 0x1B 0x28 0x42.\n      if (code_point === end_of_stream &&\n          iso2022jp_state !== states.ASCII) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.ASCII;\n        return [0x1B, 0x28, 0x42];\n      }\n\n      // 2. If code point is end-of-stream and iso-2022-jp encoder\n      // state is ASCII, return finished.\n      if (code_point === end_of_stream && iso2022jp_state === states.ASCII)\n        return finished;\n\n      // 3. If ISO-2022-JP encoder state is ASCII or Roman, and code\n      // point is U+000E, U+000F, or U+001B, return error with U+FFFD.\n      if ((iso2022jp_state === states.ASCII ||\n           iso2022jp_state === states.Roman) &&\n          (code_point === 0x000E || code_point === 0x000F ||\n           code_point === 0x001B)) {\n        return encoderError(0xFFFD);\n      }\n\n      // 4. If iso-2022-jp encoder state is ASCII and code point is an\n      // ASCII code point, return a byte whose value is code point.\n      if (iso2022jp_state === states.ASCII &&\n          isASCIICodePoint(code_point))\n        return code_point;\n\n      // 5. If iso-2022-jp encoder state is Roman and code point is an\n      // ASCII code point, excluding U+005C and U+007E, or is U+00A5\n      // or U+203E, run these substeps:\n      if (iso2022jp_state === states.Roman &&\n          ((isASCIICodePoint(code_point) &&\n           code_point !== 0x005C && code_point !== 0x007E) ||\n          (code_point == 0x00A5 || code_point == 0x203E))) {\n\n        // 1. If code point is an ASCII code point, return a byte\n        // whose value is code point.\n        if (isASCIICodePoint(code_point))\n          return code_point;\n\n        // 2. If code point is U+00A5, return byte 0x5C.\n        if (code_point === 0x00A5)\n          return 0x5C;\n\n        // 3. If code point is U+203E, return byte 0x7E.\n        if (code_point === 0x203E)\n          return 0x7E;\n      }\n\n      // 6. If code point is an ASCII code point, and iso-2022-jp\n      // encoder state is not ASCII, prepend code point to stream, set\n      // iso-2022-jp encoder state to ASCII, and return three bytes\n      // 0x1B 0x28 0x42.\n      if (isASCIICodePoint(code_point) &&\n          iso2022jp_state !== states.ASCII) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.ASCII;\n        return [0x1B, 0x28, 0x42];\n      }\n\n      // 7. If code point is either U+00A5 or U+203E, and iso-2022-jp\n      // encoder state is not Roman, prepend code point to stream, set\n      // iso-2022-jp encoder state to Roman, and return three bytes\n      // 0x1B 0x28 0x4A.\n      if ((code_point === 0x00A5 || code_point === 0x203E) &&\n          iso2022jp_state !== states.Roman) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.Roman;\n        return [0x1B, 0x28, 0x4A];\n      }\n\n      // 8. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 9. Let pointer be the index pointer for code point in index\n      // jis0208.\n      var pointer = indexPointerFor(code_point, index('jis0208'));\n\n      // 10. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 11. If iso-2022-jp encoder state is not jis0208, prepend code\n      // point to stream, set iso-2022-jp encoder state to jis0208,\n      // and return three bytes 0x1B 0x24 0x42.\n      if (iso2022jp_state !== states.jis0208) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.jis0208;\n        return [0x1B, 0x24, 0x42];\n      }\n\n      // 12. Let lead be floor(pointer / 94) + 0x21.\n      var lead = floor(pointer / 94) + 0x21;\n\n      // 13. Let trail be pointer % 94 + 0x21.\n      var trail = pointer % 94 + 0x21;\n\n      // 14. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['ISO-2022-JP'] = function(options) {\n    return new ISO2022JPEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['ISO-2022-JP'] = function(options) {\n    return new ISO2022JPDecoder(options);\n  };\n\n  // 13.3 Shift_JIS\n\n  // 13.3.1 Shift_JIS decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ShiftJISDecoder(options) {\n    var fatal = options.fatal;\n    // Shift_JIS's decoder has an associated Shift_JIS lead (initially\n    // 0x00).\n    var /** @type {number} */ Shift_JIS_lead = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and Shift_JIS lead is not 0x00,\n      // set Shift_JIS lead to 0x00 and return error.\n      if (bite === end_of_stream && Shift_JIS_lead !== 0x00) {\n        Shift_JIS_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and Shift_JIS lead is 0x00,\n      // return finished.\n      if (bite === end_of_stream && Shift_JIS_lead === 0x00)\n        return finished;\n\n      // 3. If Shift_JIS lead is not 0x00, let lead be Shift_JIS lead,\n      // let pointer be null, set Shift_JIS lead to 0x00, and then run\n      // these substeps:\n      if (Shift_JIS_lead !== 0x00) {\n        var lead = Shift_JIS_lead;\n        var pointer = null;\n        Shift_JIS_lead = 0x00;\n\n        // 1. Let offset be 0x40, if byte is less than 0x7F, and 0x41\n        // otherwise.\n        var offset = (bite < 0x7F) ? 0x40 : 0x41;\n\n        // 2. Let lead offset be 0x81, if lead is less than 0xA0, and\n        // 0xC1 otherwise.\n        var lead_offset = (lead < 0xA0) ? 0x81 : 0xC1;\n\n        // 3. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n        // to 0xFC, inclusive, set pointer to (lead − lead offset) ×\n        // 188 + byte − offset.\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0x80, 0xFC))\n          pointer = (lead - lead_offset) * 188 + bite - offset;\n\n        // 4. If pointer is in the range 8836 to 10715, inclusive,\n        // return a code point whose value is 0xE000 − 8836 + pointer.\n        if (inRange(pointer, 8836, 10715))\n          return 0xE000 - 8836 + pointer;\n\n        // 5. Let code point be null, if pointer is null, and the\n        // index code point for pointer in index jis0208 otherwise.\n        var code_point = (pointer === null) ? null :\n              indexCodePointFor(pointer, index('jis0208'));\n\n        // 6. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 7. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 8. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte or 0x80, return a code point\n      // whose value is byte.\n      if (isASCIIByte(bite) || bite === 0x80)\n        return bite;\n\n      // 5. If byte is in the range 0xA1 to 0xDF, inclusive, return a\n      // code point whose value is 0xFF61 − 0xA1 + byte.\n      if (inRange(bite, 0xA1, 0xDF))\n        return 0xFF61 - 0xA1 + bite;\n\n      // 6. If byte is in the range 0x81 to 0x9F, inclusive, or 0xE0\n      // to 0xFC, inclusive, set Shift_JIS lead to byte and return\n      // continue.\n      if (inRange(bite, 0x81, 0x9F) || inRange(bite, 0xE0, 0xFC)) {\n        Shift_JIS_lead = bite;\n        return null;\n      }\n\n      // 7. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 13.3.2 Shift_JIS encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ShiftJISEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point or U+0080, return a\n      // byte whose value is code point.\n      if (isASCIICodePoint(code_point) || code_point === 0x0080)\n        return code_point;\n\n      // 3. If code point is U+00A5, return byte 0x5C.\n      if (code_point === 0x00A5)\n        return 0x5C;\n\n      // 4. If code point is U+203E, return byte 0x7E.\n      if (code_point === 0x203E)\n        return 0x7E;\n\n      // 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n      // return a byte whose value is code point − 0xFF61 + 0xA1.\n      if (inRange(code_point, 0xFF61, 0xFF9F))\n        return code_point - 0xFF61 + 0xA1;\n\n      // 6. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 7. Let pointer be the index Shift_JIS pointer for code point.\n      var pointer = indexShiftJISPointerFor(code_point);\n\n      // 8. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 9. Let lead be floor(pointer / 188).\n      var lead = floor(pointer / 188);\n\n      // 10. Let lead offset be 0x81, if lead is less than 0x1F, and\n      // 0xC1 otherwise.\n      var lead_offset = (lead < 0x1F) ? 0x81 : 0xC1;\n\n      // 11. Let trail be pointer % 188.\n      var trail = pointer % 188;\n\n      // 12. Let offset be 0x40, if trail is less than 0x3F, and 0x41\n      // otherwise.\n      var offset = (trail < 0x3F) ? 0x40 : 0x41;\n\n      // 13. Return two bytes whose values are lead + lead offset and\n      // trail + offset.\n      return [lead + lead_offset, trail + offset];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['Shift_JIS'] = function(options) {\n    return new ShiftJISEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['Shift_JIS'] = function(options) {\n    return new ShiftJISDecoder(options);\n  };\n\n  //\n  // 14. Legacy multi-byte Korean encodings\n  //\n\n  // 14.1 euc-kr\n\n  // 14.1.1 euc-kr decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCKRDecoder(options) {\n    var fatal = options.fatal;\n\n    // euc-kr's decoder has an associated euc-kr lead (initially 0x00).\n    var /** @type {number} */ euckr_lead = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and euc-kr lead is not 0x00, set\n      // euc-kr lead to 0x00 and return error.\n      if (bite === end_of_stream && euckr_lead !== 0) {\n        euckr_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and euc-kr lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && euckr_lead === 0)\n        return finished;\n\n      // 3. If euc-kr lead is not 0x00, let lead be euc-kr lead, let\n      // pointer be null, set euc-kr lead to 0x00, and then run these\n      // substeps:\n      if (euckr_lead !== 0x00) {\n        var lead = euckr_lead;\n        var pointer = null;\n        euckr_lead = 0x00;\n\n        // 1. If byte is in the range 0x41 to 0xFE, inclusive, set\n        // pointer to (lead − 0x81) × 190 + (byte − 0x41).\n        if (inRange(bite, 0x41, 0xFE))\n          pointer = (lead - 0x81) * 190 + (bite - 0x41);\n\n        // 2. Let code point be null, if pointer is null, and the\n        // index code point for pointer in index euc-kr otherwise.\n        var code_point = (pointer === null)\n              ? null : indexCodePointFor(pointer, index('euc-kr'));\n\n        // 3. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (pointer === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 4. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 5. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 5. If byte is in the range 0x81 to 0xFE, inclusive, set\n      // euc-kr lead to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        euckr_lead = bite;\n        return null;\n      }\n\n      // 6. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 14.1.2 euc-kr encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCKREncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index pointer for code point in index\n      // euc-kr.\n      var pointer = indexPointerFor(code_point, index('euc-kr'));\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 5. Let lead be floor(pointer / 190) + 0x81.\n      var lead = floor(pointer / 190) + 0x81;\n\n      // 6. Let trail be pointer % 190 + 0x41.\n      var trail = (pointer % 190) + 0x41;\n\n      // 7. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['EUC-KR'] = function(options) {\n    return new EUCKREncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['EUC-KR'] = function(options) {\n    return new EUCKRDecoder(options);\n  };\n\n\n  //\n  // 15. Legacy miscellaneous encodings\n  //\n\n  // 15.1 replacement\n\n  // Not needed - API throws RangeError\n\n  // 15.2 Common infrastructure for utf-16be and utf-16le\n\n  /**\n   * @param {number} code_unit\n   * @param {boolean} utf16be\n   * @return {!Array.<number>} bytes\n   */\n  function convertCodeUnitToBytes(code_unit, utf16be) {\n    // 1. Let byte1 be code unit >> 8.\n    var byte1 = code_unit >> 8;\n\n    // 2. Let byte2 be code unit & 0x00FF.\n    var byte2 = code_unit & 0x00FF;\n\n    // 3. Then return the bytes in order:\n        // utf-16be flag is set: byte1, then byte2.\n    if (utf16be)\n      return [byte1, byte2];\n    // utf-16be flag is unset: byte2, then byte1.\n    return [byte2, byte1];\n  }\n\n  // 15.2.1 shared utf-16 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */\n  function UTF16Decoder(utf16_be, options) {\n    var fatal = options.fatal;\n    var /** @type {?number} */ utf16_lead_byte = null,\n        /** @type {?number} */ utf16_lead_surrogate = null;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and either utf-16 lead byte or\n      // utf-16 lead surrogate is not null, set utf-16 lead byte and\n      // utf-16 lead surrogate to null, and return error.\n      if (bite === end_of_stream && (utf16_lead_byte !== null ||\n                                utf16_lead_surrogate !== null)) {\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and utf-16 lead byte and utf-16\n      // lead surrogate are null, return finished.\n      if (bite === end_of_stream && utf16_lead_byte === null &&\n          utf16_lead_surrogate === null) {\n        return finished;\n      }\n\n      // 3. If utf-16 lead byte is null, set utf-16 lead byte to byte\n      // and return continue.\n      if (utf16_lead_byte === null) {\n        utf16_lead_byte = bite;\n        return null;\n      }\n\n      // 4. Let code unit be the result of:\n      var code_unit;\n      if (utf16_be) {\n        // utf-16be decoder flag is set\n        //   (utf-16 lead byte << 8) + byte.\n        code_unit = (utf16_lead_byte << 8) + bite;\n      } else {\n        // utf-16be decoder flag is unset\n        //   (byte << 8) + utf-16 lead byte.\n        code_unit = (bite << 8) + utf16_lead_byte;\n      }\n      // Then set utf-16 lead byte to null.\n      utf16_lead_byte = null;\n\n      // 5. If utf-16 lead surrogate is not null, let lead surrogate\n      // be utf-16 lead surrogate, set utf-16 lead surrogate to null,\n      // and then run these substeps:\n      if (utf16_lead_surrogate !== null) {\n        var lead_surrogate = utf16_lead_surrogate;\n        utf16_lead_surrogate = null;\n\n        // 1. If code unit is in the range U+DC00 to U+DFFF,\n        // inclusive, return a code point whose value is 0x10000 +\n        // ((lead surrogate − 0xD800) << 10) + (code unit − 0xDC00).\n        if (inRange(code_unit, 0xDC00, 0xDFFF)) {\n          return 0x10000 + (lead_surrogate - 0xD800) * 0x400 +\n              (code_unit - 0xDC00);\n        }\n\n        // 2. Prepend the sequence resulting of converting code unit\n        // to bytes using utf-16be decoder flag to stream and return\n        // error.\n        stream.prepend(convertCodeUnitToBytes(code_unit, utf16_be));\n        return decoderError(fatal);\n      }\n\n      // 6. If code unit is in the range U+D800 to U+DBFF, inclusive,\n      // set utf-16 lead surrogate to code unit and return continue.\n      if (inRange(code_unit, 0xD800, 0xDBFF)) {\n        utf16_lead_surrogate = code_unit;\n        return null;\n      }\n\n      // 7. If code unit is in the range U+DC00 to U+DFFF, inclusive,\n      // return error.\n      if (inRange(code_unit, 0xDC00, 0xDFFF))\n        return decoderError(fatal);\n\n      // 8. Return code point code unit.\n      return code_unit;\n    };\n  }\n\n  // 15.2.2 shared utf-16 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */\n  function UTF16Encoder(utf16_be, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is in the range U+0000 to U+FFFF, inclusive,\n      // return the sequence resulting of converting code point to\n      // bytes using utf-16be encoder flag.\n      if (inRange(code_point, 0x0000, 0xFFFF))\n        return convertCodeUnitToBytes(code_point, utf16_be);\n\n      // 3. Let lead be ((code point − 0x10000) >> 10) + 0xD800,\n      // converted to bytes using utf-16be encoder flag.\n      var lead = convertCodeUnitToBytes(\n        ((code_point - 0x10000) >> 10) + 0xD800, utf16_be);\n\n      // 4. Let trail be ((code point − 0x10000) & 0x3FF) + 0xDC00,\n      // converted to bytes using utf-16be encoder flag.\n      var trail = convertCodeUnitToBytes(\n        ((code_point - 0x10000) & 0x3FF) + 0xDC00, utf16_be);\n\n      // 5. Return a byte sequence of lead followed by trail.\n      return lead.concat(trail);\n    };\n  }\n\n  // 15.3 utf-16be\n  // 15.3.1 utf-16be decoder\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-16BE'] = function(options) {\n    return new UTF16Encoder(true, options);\n  };\n  // 15.3.2 utf-16be encoder\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-16BE'] = function(options) {\n    return new UTF16Decoder(true, options);\n  };\n\n  // 15.4 utf-16le\n  // 15.4.1 utf-16le decoder\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-16LE'] = function(options) {\n    return new UTF16Encoder(false, options);\n  };\n  // 15.4.2 utf-16le encoder\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-16LE'] = function(options) {\n    return new UTF16Decoder(false, options);\n  };\n\n  // 15.5 x-user-defined\n\n  // 15.5.1 x-user-defined decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function XUserDefinedDecoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 2. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 3. Return a code point whose value is 0xF780 + byte − 0x80.\n      return 0xF780 + bite - 0x80;\n    };\n  }\n\n  // 15.5.2 x-user-defined encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function XUserDefinedEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1.If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is in the range U+F780 to U+F7FF, inclusive,\n      // return a byte whose value is code point − 0xF780 + 0x80.\n      if (inRange(code_point, 0xF780, 0xF7FF))\n        return code_point - 0xF780 + 0x80;\n\n      // 4. Return error with code point.\n      return encoderError(code_point);\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['x-user-defined'] = function(options) {\n    return new XUserDefinedEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['x-user-defined'] = function(options) {\n    return new XUserDefinedDecoder(options);\n  };\n\n  if (!global['TextEncoder'])\n    global['TextEncoder'] = TextEncoder;\n  if (!global['TextDecoder'])\n    global['TextDecoder'] = TextDecoder;\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = {\n      TextEncoder: global['TextEncoder'],\n      TextDecoder: global['TextDecoder'],\n      EncodingIndexes: global[\"encoding-indexes\"]\n    };\n  }\n\n// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n}(this || {}));","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport const ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n} as const;\nexport type ProtocolMode = (typeof ProtocolMode)[keyof typeof ProtocolMode];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { OIDCOptions } from \"./OIDCOptions\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    OIDCOptions?: OIDCOptions | null;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n    authority?: string;\n};\n\nexport type StaticAuthorityOptions = Partial<\n    Pick<AuthorityOptions, \"knownAuthorities\">\n> & {\n    canonicalAuthority?: string;\n    cloudDiscoveryMetadata?: CloudInstanceDiscoveryResponse;\n};\n\nexport const AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n} as const;\nexport type AzureCloudInstance =\n    (typeof AzureCloudInstance)[keyof typeof AzureCloudInstance];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const clientInfoDecodingError = \"client_info_decoding_error\";\nexport const clientInfoEmptyError = \"client_info_empty_error\";\nexport const tokenParsingError = \"token_parsing_error\";\nexport const nullOrEmptyToken = \"null_or_empty_token\";\nexport const endpointResolutionError = \"endpoints_resolution_error\";\nexport const networkError = \"network_error\";\nexport const openIdConfigError = \"openid_config_error\";\nexport const hashNotDeserialized = \"hash_not_deserialized\";\nexport const invalidState = \"invalid_state\";\nexport const stateMismatch = \"state_mismatch\";\nexport const stateNotFound = \"state_not_found\";\nexport const nonceMismatch = \"nonce_mismatch\";\nexport const authTimeNotFound = \"auth_time_not_found\";\nexport const maxAgeTranspired = \"max_age_transpired\";\nexport const multipleMatchingTokens = \"multiple_matching_tokens\";\nexport const multipleMatchingAccounts = \"multiple_matching_accounts\";\nexport const multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nexport const requestCannotBeMade = \"request_cannot_be_made\";\nexport const cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nexport const cannotAppendScopeSet = \"cannot_append_scopeset\";\nexport const emptyInputScopeSet = \"empty_input_scopeset\";\nexport const deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nexport const deviceCodeExpired = \"device_code_expired\";\nexport const deviceCodeUnknownError = \"device_code_unknown_error\";\nexport const noAccountInSilentRequest = \"no_account_in_silent_request\";\nexport const invalidCacheRecord = \"invalid_cache_record\";\nexport const invalidCacheEnvironment = \"invalid_cache_environment\";\nexport const noAccountFound = \"no_account_found\";\nexport const noCryptoObject = \"no_crypto_object\";\nexport const unexpectedCredentialType = \"unexpected_credential_type\";\nexport const invalidAssertion = \"invalid_assertion\";\nexport const invalidClientCredential = \"invalid_client_credential\";\nexport const tokenRefreshRequired = \"token_refresh_required\";\nexport const userTimeoutReached = \"user_timeout_reached\";\nexport const tokenClaimsCnfRequiredForSignedJwt =\n    \"token_claims_cnf_required_for_signedjwt\";\nexport const authorizationCodeMissingFromServerResponse =\n    \"authorization_code_missing_from_server_response\";\nexport const bindingKeyNotRemoved = \"binding_key_not_removed\";\nexport const endSessionEndpointNotSupported =\n    \"end_session_endpoint_not_supported\";\nexport const keyIdMissing = \"key_id_missing\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const userCanceled = \"user_canceled\";\nexport const missingTenantIdError = \"missing_tenant_id_error\";\nexport const methodNotImplemented = \"method_not_implemented\";\nexport const nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientAuthErrorCodes from \"./ClientAuthErrorCodes\";\nexport { ClientAuthErrorCodes }; // Allow importing as \"ClientAuthErrorCodes\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\n\nexport const ClientAuthErrorMessages = {\n    [ClientAuthErrorCodes.clientInfoDecodingError]:\n        \"The client info could not be parsed/decoded correctly\",\n    [ClientAuthErrorCodes.clientInfoEmptyError]: \"The client info was empty\",\n    [ClientAuthErrorCodes.tokenParsingError]: \"Token cannot be parsed\",\n    [ClientAuthErrorCodes.nullOrEmptyToken]: \"The token is null or empty\",\n    [ClientAuthErrorCodes.endpointResolutionError]:\n        \"Endpoints cannot be resolved\",\n    [ClientAuthErrorCodes.networkError]: \"Network request failed\",\n    [ClientAuthErrorCodes.openIdConfigError]:\n        \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [ClientAuthErrorCodes.hashNotDeserialized]:\n        \"The hash parameters could not be deserialized\",\n    [ClientAuthErrorCodes.invalidState]: \"State was not the expected format\",\n    [ClientAuthErrorCodes.stateMismatch]: \"State mismatch error\",\n    [ClientAuthErrorCodes.stateNotFound]: \"State not found\",\n    [ClientAuthErrorCodes.nonceMismatch]: \"Nonce mismatch error\",\n    [ClientAuthErrorCodes.authTimeNotFound]:\n        \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [ClientAuthErrorCodes.maxAgeTranspired]:\n        \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [ClientAuthErrorCodes.multipleMatchingTokens]:\n        \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [ClientAuthErrorCodes.multipleMatchingAccounts]:\n        \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [ClientAuthErrorCodes.multipleMatchingAppMetadata]:\n        \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [ClientAuthErrorCodes.requestCannotBeMade]:\n        \"Token request cannot be made without authorization code or refresh token.\",\n    [ClientAuthErrorCodes.cannotRemoveEmptyScope]:\n        \"Cannot remove null or empty scope from ScopeSet\",\n    [ClientAuthErrorCodes.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [ClientAuthErrorCodes.emptyInputScopeSet]:\n        \"Empty input ScopeSet cannot be processed\",\n    [ClientAuthErrorCodes.deviceCodePollingCancelled]:\n        \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [ClientAuthErrorCodes.deviceCodeExpired]: \"Device code is expired.\",\n    [ClientAuthErrorCodes.deviceCodeUnknownError]:\n        \"Device code stopped polling for unknown reasons.\",\n    [ClientAuthErrorCodes.noAccountInSilentRequest]:\n        \"Please pass an account object, silent flow is not supported without account information\",\n    [ClientAuthErrorCodes.invalidCacheRecord]:\n        \"Cache record object was null or undefined.\",\n    [ClientAuthErrorCodes.invalidCacheEnvironment]:\n        \"Invalid environment when attempting to create cache entry\",\n    [ClientAuthErrorCodes.noAccountFound]:\n        \"No account found in cache for given key.\",\n    [ClientAuthErrorCodes.noCryptoObject]: \"No crypto object detected.\",\n    [ClientAuthErrorCodes.unexpectedCredentialType]:\n        \"Unexpected credential type.\",\n    [ClientAuthErrorCodes.invalidAssertion]:\n        \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [ClientAuthErrorCodes.invalidClientCredential]:\n        \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [ClientAuthErrorCodes.tokenRefreshRequired]:\n        \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [ClientAuthErrorCodes.userTimeoutReached]:\n        \"User defined timeout for device code polling reached\",\n    [ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt]:\n        \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse]:\n        \"Server response does not contain an authorization code to proceed\",\n    [ClientAuthErrorCodes.bindingKeyNotRemoved]:\n        \"Could not remove the credential's binding key from storage.\",\n    [ClientAuthErrorCodes.endSessionEndpointNotSupported]:\n        \"The provided authority does not support logout\",\n    [ClientAuthErrorCodes.keyIdMissing]:\n        \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [ClientAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [ClientAuthErrorCodes.userCanceled]: \"User cancelled the flow.\",\n    [ClientAuthErrorCodes.missingTenantIdError]:\n        \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [ClientAuthErrorCodes.methodNotImplemented]:\n        \"This method has not been implemented\",\n    [ClientAuthErrorCodes.nestedAppAuthBridgeDisabled]:\n        \"The nested app auth bridge is disabled\",\n};\n\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: ClientAuthErrorCodes.clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoDecodingError\n        ],\n    },\n    clientInfoEmptyError: {\n        code: ClientAuthErrorCodes.clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoEmptyError\n        ],\n    },\n    tokenParsingError: {\n        code: ClientAuthErrorCodes.tokenParsingError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: ClientAuthErrorCodes.nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: ClientAuthErrorCodes.endpointResolutionError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endpointResolutionError\n        ],\n    },\n    networkError: {\n        code: ClientAuthErrorCodes.networkError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: ClientAuthErrorCodes.openIdConfigError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: ClientAuthErrorCodes.hashNotDeserialized,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: ClientAuthErrorCodes.invalidState,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidState],\n    },\n    stateMismatchError: {\n        code: ClientAuthErrorCodes.stateMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateMismatch],\n    },\n    stateNotFoundError: {\n        code: ClientAuthErrorCodes.stateNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateNotFound],\n    },\n    nonceMismatchError: {\n        code: ClientAuthErrorCodes.nonceMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: ClientAuthErrorCodes.authTimeNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: ClientAuthErrorCodes.maxAgeTranspired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: ClientAuthErrorCodes.multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingTokens\n        ],\n    },\n    multipleMatchingAccounts: {\n        code: ClientAuthErrorCodes.multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAccounts\n        ],\n    },\n    multipleMatchingAppMetadata: {\n        code: ClientAuthErrorCodes.multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAppMetadata\n        ],\n    },\n    tokenRequestCannotBeMade: {\n        code: ClientAuthErrorCodes.requestCannotBeMade,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: ClientAuthErrorCodes.cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotRemoveEmptyScope\n        ],\n    },\n    appendScopeSetError: {\n        code: ClientAuthErrorCodes.cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotAppendScopeSet\n        ],\n    },\n    emptyInputScopeSetError: {\n        code: ClientAuthErrorCodes.emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: ClientAuthErrorCodes.deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodePollingCancelled\n        ],\n    },\n    DeviceCodeExpired: {\n        code: ClientAuthErrorCodes.deviceCodeExpired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: ClientAuthErrorCodes.deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodeUnknownError\n        ],\n    },\n    NoAccountInSilentRequest: {\n        code: ClientAuthErrorCodes.noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noAccountInSilentRequest\n        ],\n    },\n    invalidCacheRecord: {\n        code: ClientAuthErrorCodes.invalidCacheRecord,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: ClientAuthErrorCodes.invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidCacheEnvironment\n        ],\n    },\n    noAccountFound: {\n        code: ClientAuthErrorCodes.noAccountFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noAccountFound],\n    },\n    noCryptoObj: {\n        code: ClientAuthErrorCodes.noCryptoObject,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: ClientAuthErrorCodes.unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.unexpectedCredentialType\n        ],\n    },\n    invalidAssertion: {\n        code: ClientAuthErrorCodes.invalidAssertion,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: ClientAuthErrorCodes.invalidClientCredential,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidClientCredential\n        ],\n    },\n    tokenRefreshRequired: {\n        code: ClientAuthErrorCodes.tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenRefreshRequired\n        ],\n    },\n    userTimeoutReached: {\n        code: ClientAuthErrorCodes.userTimeoutReached,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n        ],\n    },\n    noAuthorizationCodeFromServer: {\n        code: ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n        ],\n    },\n    bindingKeyNotRemovedError: {\n        code: ClientAuthErrorCodes.bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.bindingKeyNotRemoved\n        ],\n    },\n    logoutNotSupported: {\n        code: ClientAuthErrorCodes.endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endSessionEndpointNotSupported\n        ],\n    },\n    keyIdMissing: {\n        code: ClientAuthErrorCodes.keyIdMissing,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: ClientAuthErrorCodes.noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    userCanceledError: {\n        code: ClientAuthErrorCodes.userCanceled,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userCanceled],\n    },\n    missingTenantIdError: {\n        code: ClientAuthErrorCodes.missingTenantIdError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.missingTenantIdError\n        ],\n    },\n    nestedAppAuthBridgeDisabled: {\n        code: ClientAuthErrorCodes.nestedAppAuthBridgeDisabled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.nestedAppAuthBridgeDisabled\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n    constructor(errorCode: string, additionalMessage?: string) {\n        super(\n            errorCode,\n            additionalMessage\n                ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n                : ClientAuthErrorMessages[errorCode]\n        );\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\n\nexport function createClientAuthError(\n    errorCode: string,\n    additionalMessage?: string\n): ClientAuthError {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { ShrOptions, SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string;\n    challenge: string;\n};\n\nexport type SignedHttpRequestParameters = Pick<\n    BaseAuthRequest,\n    | \"resourceRequestMethod\"\n    | \"resourceRequestUri\"\n    | \"shrClaims\"\n    | \"shrNonce\"\n    | \"shrOptions\"\n> & {\n    correlationId?: string;\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input\n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input\n     */\n    base64Decode(input: string): string;\n    /**\n     * base64 URL safe encoded string\n     */\n    base64UrlEncode(input: string): string;\n    /**\n     * Stringifies and base64Url encodes input public key\n     * @param inputKid\n     * @returns Base64Url encoded public key\n     */\n    encodeKid(inputKid: string): string;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /**\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken\n     */\n    signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Decode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Encode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64UrlEncode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    encodeKid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async clearKeystore(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async signJwt(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async hashString(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"14.14.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\n\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nexport function extractTokenClaims(\n    encodedToken: string,\n    base64Decode: (input: string) => string\n): TokenClaims {\n    const jswPayload = getJWSPayload(encodedToken);\n\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded) as TokenClaims;\n    } catch (err) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n}\n\n/**\n * decode a JWT\n *\n * @param authToken\n */\nexport function getJWSPayload(authToken: string): string {\n    if (!authToken) {\n        throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n\n    return matches[2];\n}\n\n/**\n * Determine if the token's max_age has transpired\n */\nexport function checkMaxAge(authTime: number, maxAge: number): void {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(ClientAuthErrorCodes.maxAgeTranspired);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility functions for managing date and time operations.\n */\n\n/**\n * return the current time in Unix time (seconds).\n */\nexport function nowSeconds(): number {\n    // Date.getTime() returns in milliseconds.\n    return Math.round(new Date().getTime() / 1000.0);\n}\n\n/**\n * check if a token is expired based on given UTC time in seconds.\n * @param expiresOn\n */\nexport function isTokenExpired(expiresOn: string, offset: number): boolean {\n    // check for access token expiry\n    const expirationSec = Number(expiresOn) || 0;\n    const offsetCurrentTimeSec = nowSeconds() + offset;\n\n    // If current time + offset is greater than token expiration time, then token is expired.\n    return offsetCurrentTimeSec > expirationSec;\n}\n\n/**\n * If the current time is earlier than the time that a token was cached at, we must discard the token\n * i.e. The system clock was turned back after acquiring the cached token\n * @param cachedAt\n * @param offset\n */\nexport function wasClockTurnedBack(cachedAt: string): boolean {\n    const cachedAtSec = Number(cachedAt);\n\n    return cachedAtSec > nowSeconds();\n}\n\n/**\n * Waits for t number of milliseconds\n * @param t number\n * @param value T\n */\nexport function delay<T>(t: number, value?: T): Promise<T | void> {\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { extractTokenClaims } from \"../../account/AuthToken\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../../error/ClientAuthError\";\nimport {\n    APP_METADATA,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    CredentialType,\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    ThrottlingConstants,\n} from \"../../utils/Constants\";\nimport * as TimeUtils from \"../../utils/TimeUtils\";\nimport { AccessTokenEntity } from \"../entities/AccessTokenEntity\";\nimport { AppMetadataEntity } from \"../entities/AppMetadataEntity\";\nimport { AuthorityMetadataEntity } from \"../entities/AuthorityMetadataEntity\";\nimport { CredentialEntity } from \"../entities/CredentialEntity\";\nimport { IdTokenEntity } from \"../entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"../entities/RefreshTokenEntity\";\n\n/**\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\n * @param credentialEntity\n * @returns\n */\nexport function generateCredentialKey(\n    credentialEntity: CredentialEntity\n): string {\n    const credentialKey = [\n        generateAccountId(credentialEntity),\n        generateCredentialId(credentialEntity),\n        generateTarget(credentialEntity),\n        generateClaimsHash(credentialEntity),\n        generateScheme(credentialEntity),\n    ];\n\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Create IdTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createIdTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    idToken: string,\n    clientId: string,\n    tenantId: string\n): IdTokenEntity {\n    const idTokenEntity: IdTokenEntity = {\n        credentialType: CredentialType.ID_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: idToken,\n        realm: tenantId,\n    };\n\n    return idTokenEntity;\n}\n\n/**\n * Create AccessTokenEntity\n * @param homeAccountId\n * @param environment\n * @param accessToken\n * @param clientId\n * @param tenantId\n * @param scopes\n * @param expiresOn\n * @param extExpiresOn\n */\nexport function createAccessTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    accessToken: string,\n    clientId: string,\n    tenantId: string,\n    scopes: string,\n    expiresOn: number,\n    extExpiresOn: number,\n    base64Decode: (input: string) => string,\n    refreshOn?: number,\n    tokenType?: AuthenticationScheme,\n    userAssertionHash?: string,\n    keyId?: string,\n    requestedClaims?: string,\n    requestedClaimsHash?: string\n): AccessTokenEntity {\n    const atEntity: AccessTokenEntity = {\n        homeAccountId: homeAccountId,\n        credentialType: CredentialType.ACCESS_TOKEN,\n        secret: accessToken,\n        cachedAt: TimeUtils.nowSeconds().toString(),\n        expiresOn: expiresOn.toString(),\n        extendedExpiresOn: extExpiresOn.toString(),\n        environment: environment,\n        clientId: clientId,\n        realm: tenantId,\n        target: scopes,\n        tokenType: tokenType || AuthenticationScheme.BEARER,\n    };\n\n    if (userAssertionHash) {\n        atEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (refreshOn) {\n        atEntity.refreshOn = refreshOn.toString();\n    }\n\n    if (requestedClaims) {\n        atEntity.requestedClaims = requestedClaims;\n        atEntity.requestedClaimsHash = requestedClaimsHash;\n    }\n\n    /*\n     * Create Access Token With Auth Scheme instead of regular access token\n     * Cast to lower to handle \"bearer\" from ADFS\n     */\n    if (\n        atEntity.tokenType?.toLowerCase() !==\n        AuthenticationScheme.BEARER.toLowerCase()\n    ) {\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        switch (atEntity.tokenType) {\n            case AuthenticationScheme.POP:\n                // Make sure keyId is present and add it to credential\n                const tokenClaims: TokenClaims | null = extractTokenClaims(\n                    accessToken,\n                    base64Decode\n                );\n                if (!tokenClaims?.cnf?.kid) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n                    );\n                }\n                atEntity.keyId = tokenClaims.cnf.kid;\n                break;\n            case AuthenticationScheme.SSH:\n                atEntity.keyId = keyId;\n        }\n    }\n\n    return atEntity;\n}\n\n/**\n * Create RefreshTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createRefreshTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    refreshToken: string,\n    clientId: string,\n    familyId?: string,\n    userAssertionHash?: string,\n    expiresOn?: number\n): RefreshTokenEntity {\n    const rtEntity: RefreshTokenEntity = {\n        credentialType: CredentialType.REFRESH_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: refreshToken,\n    };\n\n    if (userAssertionHash) {\n        rtEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (familyId) {\n        rtEntity.familyId = familyId;\n    }\n\n    if (expiresOn) {\n        rtEntity.expiresOn = expiresOn.toString();\n    }\n\n    return rtEntity;\n}\n\nexport function isCredentialEntity(entity: object): boolean {\n    return (\n        entity.hasOwnProperty(\"homeAccountId\") &&\n        entity.hasOwnProperty(\"environment\") &&\n        entity.hasOwnProperty(\"credentialType\") &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"secret\")\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAccessTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity.hasOwnProperty(\"target\") &&\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n            entity[\"credentialType\"] ===\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isIdTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isRefreshTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n    );\n}\n\n/**\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n */\nfunction generateAccountId(credentialEntity: CredentialEntity): string {\n    const accountId: Array<string> = [\n        credentialEntity.homeAccountId,\n        credentialEntity.environment,\n    ];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n */\nfunction generateCredentialId(credentialEntity: CredentialEntity): string {\n    const clientOrFamilyId =\n        credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\n            ? credentialEntity.familyId || credentialEntity.clientId\n            : credentialEntity.clientId;\n    const credentialId: Array<string> = [\n        credentialEntity.credentialType,\n        clientOrFamilyId,\n        credentialEntity.realm || \"\",\n    ];\n\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate target key component as per schema: <target>\n */\nfunction generateTarget(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.target || \"\").toLowerCase();\n}\n\n/**\n * Generate requested claims key component as per schema: <requestedClaims>\n */\nfunction generateClaimsHash(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\n}\n\n/**\n * Generate scheme key componenet as per schema: <scheme>\n */\nfunction generateScheme(credentialEntity: CredentialEntity): string {\n    /*\n     * PoP Tokens and SSH certs include scheme in cache key\n     * Cast to lowercase to handle \"bearer\" from ADFS\n     */\n    return credentialEntity.tokenType &&\n        credentialEntity.tokenType.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()\n        ? credentialEntity.tokenType.toLowerCase()\n        : \"\";\n}\n\n/**\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\n * @param key\n * @param entity\n */\nexport function isServerTelemetryEntity(key: string, entity?: object): boolean {\n    const validateKey: boolean =\n        key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    let validateEntity: boolean = true;\n\n    if (entity) {\n        validateEntity =\n            entity.hasOwnProperty(\"failedRequests\") &&\n            entity.hasOwnProperty(\"errors\") &&\n            entity.hasOwnProperty(\"cacheHits\");\n    }\n\n    return validateKey && validateEntity;\n}\n\n/**\n * validates if a given cache entry is \"Throttling\", parses <key,value>\n * @param key\n * @param entity\n */\nexport function isThrottlingEntity(key: string, entity?: object): boolean {\n    let validateKey: boolean = false;\n    if (key) {\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n\n    let validateEntity: boolean = true;\n    if (entity) {\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n\n    return validateKey && validateEntity;\n}\n\n/**\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n */\nexport function generateAppMetadataKey({\n    environment,\n    clientId,\n}: AppMetadataEntity): string {\n    const appMetaDataKeyArray: Array<string> = [\n        APP_METADATA,\n        environment,\n        clientId,\n    ];\n    return appMetaDataKeyArray\n        .join(Separators.CACHE_KEY_SEPARATOR)\n        .toLowerCase();\n}\n\n/*\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAppMetadataEntity(key: string, entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        key.indexOf(APP_METADATA) === 0 &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"environment\")\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAuthorityMetadataEntity(\n    key: string,\n    entity: object\n): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n        entity.hasOwnProperty(\"aliases\") &&\n        entity.hasOwnProperty(\"preferred_cache\") &&\n        entity.hasOwnProperty(\"preferred_network\") &&\n        entity.hasOwnProperty(\"canonical_authority\") &&\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\n        entity.hasOwnProperty(\"token_endpoint\") &&\n        entity.hasOwnProperty(\"issuer\") &&\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n        entity.hasOwnProperty(\"expiresAt\") &&\n        entity.hasOwnProperty(\"jwks_uri\")\n    );\n}\n\n/**\n * Reset the exiresAt value\n */\nexport function generateAuthorityMetadataExpiresAt(): number {\n    return (\n        TimeUtils.nowSeconds() +\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS\n    );\n}\n\nexport function updateAuthorityEndpointMetadata(\n    authorityMetadata: AuthorityMetadataEntity,\n    updatedValues: OpenIdConfigResponse,\n    fromNetwork: boolean\n): void {\n    authorityMetadata.authorization_endpoint =\n        updatedValues.authorization_endpoint;\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\n    authorityMetadata.issuer = updatedValues.issuer;\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\n}\n\nexport function updateCloudDiscoveryMetadata(\n    authorityMetadata: AuthorityMetadataEntity,\n    updatedValues: CloudDiscoveryMetadata,\n    fromNetwork: boolean\n): void {\n    authorityMetadata.aliases = updatedValues.aliases;\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\n}\n\n/**\n * Returns whether or not the data needs to be refreshed\n */\nexport function isAuthorityMetadataExpired(\n    metadata: AuthorityMetadataEntity\n): boolean {\n    return metadata.expiresAt <= TimeUtils.nowSeconds();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const redirectUriEmpty = \"redirect_uri_empty\";\nexport const claimsRequestParsingError = \"claims_request_parsing_error\";\nexport const authorityUriInsecure = \"authority_uri_insecure\";\nexport const urlParseError = \"url_parse_error\";\nexport const urlEmptyError = \"empty_url_error\";\nexport const emptyInputScopesError = \"empty_input_scopes_error\";\nexport const invalidPromptValue = \"invalid_prompt_value\";\nexport const invalidClaims = \"invalid_claims\";\nexport const tokenRequestEmpty = \"token_request_empty\";\nexport const logoutRequestEmpty = \"logout_request_empty\";\nexport const invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nexport const pkceParamsMissing = \"pkce_params_missing\";\nexport const invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nexport const invalidAuthorityMetadata = \"invalid_authority_metadata\";\nexport const untrustedAuthority = \"untrusted_authority\";\nexport const missingSshJwk = \"missing_ssh_jwk\";\nexport const missingSshKid = \"missing_ssh_kid\";\nexport const missingNonceAuthenticationHeader =\n    \"missing_nonce_authentication_header\";\nexport const invalidAuthenticationHeader = \"invalid_authentication_header\";\nexport const cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nexport const cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nexport const authorityMismatch = \"authority_mismatch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientConfigurationErrorCodes from \"./ClientConfigurationErrorCodes\";\nexport { ClientConfigurationErrorCodes };\n\nexport const ClientConfigurationErrorMessages = {\n    [ClientConfigurationErrorCodes.redirectUriEmpty]:\n        \"A redirect URI is required for all calls, and none has been set.\",\n    [ClientConfigurationErrorCodes.claimsRequestParsingError]:\n        \"Could not parse the given claims request object.\",\n    [ClientConfigurationErrorCodes.authorityUriInsecure]:\n        \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [ClientConfigurationErrorCodes.urlParseError]:\n        \"URL could not be parsed into appropriate segments.\",\n    [ClientConfigurationErrorCodes.urlEmptyError]: \"URL was empty or null.\",\n    [ClientConfigurationErrorCodes.emptyInputScopesError]:\n        \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [ClientConfigurationErrorCodes.invalidPromptValue]:\n        \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [ClientConfigurationErrorCodes.invalidClaims]:\n        \"Given claims parameter must be a stringified JSON object.\",\n    [ClientConfigurationErrorCodes.tokenRequestEmpty]:\n        \"Token request was empty and not found in cache.\",\n    [ClientConfigurationErrorCodes.logoutRequestEmpty]:\n        \"The logout request was null or undefined.\",\n    [ClientConfigurationErrorCodes.invalidCodeChallengeMethod]:\n        'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [ClientConfigurationErrorCodes.pkceParamsMissing]:\n        \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata]:\n        \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [ClientConfigurationErrorCodes.invalidAuthorityMetadata]:\n        \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [ClientConfigurationErrorCodes.untrustedAuthority]:\n        \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [ClientConfigurationErrorCodes.missingSshJwk]:\n        \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingSshKid]:\n        \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingNonceAuthenticationHeader]:\n        \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [ClientConfigurationErrorCodes.invalidAuthenticationHeader]:\n        \"Invalid authentication header provided\",\n    [ClientConfigurationErrorCodes.cannotSetOIDCOptions]:\n        \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [ClientConfigurationErrorCodes.cannotAllowNativeBroker]:\n        \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [ClientConfigurationErrorCodes.authorityMismatch]:\n        \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: ClientConfigurationErrorCodes.redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.redirectUriEmpty\n        ],\n    },\n    claimsRequestParsingError: {\n        code: ClientConfigurationErrorCodes.claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.claimsRequestParsingError\n        ],\n    },\n    authorityUriInsecure: {\n        code: ClientConfigurationErrorCodes.authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityUriInsecure\n        ],\n    },\n    urlParseError: {\n        code: ClientConfigurationErrorCodes.urlParseError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlParseError\n        ],\n    },\n    urlEmptyError: {\n        code: ClientConfigurationErrorCodes.urlEmptyError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlEmptyError\n        ],\n    },\n    emptyScopesError: {\n        code: ClientConfigurationErrorCodes.emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.emptyInputScopesError\n        ],\n    },\n    invalidPrompt: {\n        code: ClientConfigurationErrorCodes.invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidPromptValue\n        ],\n    },\n    invalidClaimsRequest: {\n        code: ClientConfigurationErrorCodes.invalidClaims,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidClaims\n        ],\n    },\n    tokenRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.tokenRequestEmpty\n        ],\n    },\n    logoutRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.logoutRequestEmpty\n        ],\n    },\n    invalidCodeChallengeMethod: {\n        code: ClientConfigurationErrorCodes.invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n        ],\n    },\n    invalidCodeChallengeParams: {\n        code: ClientConfigurationErrorCodes.pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        ],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n        ],\n    },\n    invalidAuthorityMetadata: {\n        code: ClientConfigurationErrorCodes.invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthorityMetadata\n        ],\n    },\n    untrustedAuthority: {\n        code: ClientConfigurationErrorCodes.untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.untrustedAuthority\n        ],\n    },\n    missingSshJwk: {\n        code: ClientConfigurationErrorCodes.missingSshJwk,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshJwk\n        ],\n    },\n    missingSshKid: {\n        code: ClientConfigurationErrorCodes.missingSshKid,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshKid\n        ],\n    },\n    missingNonceAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingNonceAuthenticationHeader\n        ],\n    },\n    invalidAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthenticationHeader\n        ],\n    },\n    cannotSetOIDCOptions: {\n        code: ClientConfigurationErrorCodes.cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotSetOIDCOptions\n        ],\n    },\n    cannotAllowNativeBroker: {\n        code: ClientConfigurationErrorCodes.cannotAllowNativeBroker,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        ],\n    },\n    authorityMismatch: {\n        code: ClientConfigurationErrorCodes.authorityMismatch,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityMismatch\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\n\nexport function createClientConfigurationError(\n    errorCode: string\n): ClientConfigurationError {\n    return new ClientConfigurationError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (\n            str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length\n        );\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map((entry) => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex: RegExp = new RegExp(\n            pattern\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\*/g, \"[^ ]*\")\n                .replace(/\\?/g, \"\\\\?\")\n        );\n\n        return regex.test(input);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString: Array<string>): ScopeSet {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        } else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n\n        return scopeSet;\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.emptyInputScopesError\n            );\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (\n            this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope))\n        );\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotAppendScopeSet\n            );\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (!scope) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotRemoveEmptyScope\n            );\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) =>\n            unionScopes.add(scope.toLowerCase())\n        );\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string;\n    utid: string;\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(\n    rawClientInfo: string,\n    base64Decode: (input: string) => string\n): ClientInfo {\n    if (!rawClientInfo) {\n        throw createClientAuthError(ClientAuthErrorCodes.clientInfoEmptyError);\n    }\n\n    try {\n        const decodedClientInfo: string = base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nexport function buildClientInfoFromHomeAccountId(\n    homeAccountId: string\n): ClientInfo {\n    if (!homeAccountId) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n    const clientInfoParts: string[] = homeAccountId.split(\n        Separators.CLIENT_INFO_SEPARATOR,\n        2\n    );\n    return {\n        uid: clientInfoParts[0],\n        utid:\n            clientInfoParts.length < 2\n                ? Constants.EMPTY_STRING\n                : clientInfoParts[1],\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\n/**\n * Account object with the following signature:\n * - homeAccountId          - Home account identifier for this account object\n * - environment            - Entity which issued the token represented by the domain of the issuer (e.g. login.microsoftonline.com)\n * - tenantId               - Full tenant or organizational id that this account belongs to\n * - username               - preferred_username claim of the id_token that represents this account\n * - localAccountId         - Local, tenant-specific account identifer for this account object, usually used in legacy cases\n * - name                   - Full name for the account, including given name and family name\n * - idToken                - raw ID token\n * - idTokenClaims          - Object contains claims from ID token\n * - nativeAccountId        - The user's native account ID\n * - tenantProfiles         - Map of tenant profile objects for each tenant that the account has authenticated with in the browser\n */\nexport type AccountInfo = {\n    homeAccountId: string;\n    environment: string;\n    tenantId: string;\n    username: string;\n    localAccountId: string;\n    name?: string;\n    idToken?: string;\n    idTokenClaims?: TokenClaims & {\n        [key: string]:\n            | string\n            | number\n            | string[]\n            | object\n            | undefined\n            | unknown;\n    };\n    nativeAccountId?: string;\n    authorityType?: string;\n    tenantProfiles?: Map<string, TenantProfile>;\n};\n\n/**\n * Account details that vary across tenants for the same user\n */\nexport type TenantProfile = Pick<\n    AccountInfo,\n    \"tenantId\" | \"localAccountId\" | \"name\"\n> & {\n    /**\n     * - isHomeTenant           - True if this is the home tenant profile of the account, false if it's a guest tenant profile\n     */\n    isHomeTenant?: boolean;\n};\n\nexport type ActiveAccountFilters = {\n    homeAccountId: string;\n    localAccountId: string;\n    tenantId?: string;\n};\n\n/**\n * Returns true if tenantId matches the utid portion of homeAccountId\n * @param tenantId\n * @param homeAccountId\n * @returns\n */\nexport function tenantIdMatchesHomeTenant(\n    tenantId?: string,\n    homeAccountId?: string\n): boolean {\n    return (\n        !!tenantId &&\n        !!homeAccountId &&\n        tenantId === homeAccountId.split(\".\")[1]\n    );\n}\n\n/**\n * Build tenant profile\n * @param homeAccountId - Home account identifier for this account object\n * @param localAccountId - Local account identifer for this account object\n * @param tenantId - Full tenant or organizational id that this account belongs to\n * @param idTokenClaims - Claims from the ID token\n * @returns\n */\nexport function buildTenantProfile(\n    homeAccountId: string,\n    localAccountId: string,\n    tenantId: string,\n    idTokenClaims?: TokenClaims\n): TenantProfile {\n    if (idTokenClaims) {\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\n\n        /**\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\n         */\n        const tenantId = tid || tfp || acr || \"\";\n\n        return {\n            tenantId: tenantId,\n            localAccountId: oid || sub || \"\",\n            name: name,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    } else {\n        return {\n            tenantId,\n            localAccountId,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    }\n}\n\n/**\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\n * @param baseAccountInfo\n * @param idTokenClaims\n * @returns\n */\nexport function updateAccountTenantProfileData(\n    baseAccountInfo: AccountInfo,\n    tenantProfile?: TenantProfile,\n    idTokenClaims?: TokenClaims,\n    idTokenSecret?: string\n): AccountInfo {\n    let updatedAccountInfo = baseAccountInfo;\n    // Tenant Profile overrides passed in account info\n    if (tenantProfile) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\n    }\n\n    // ID token claims override passed in account info and tenant profile\n    if (idTokenClaims) {\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...claimsSourcedTenantProfile } =\n            buildTenantProfile(\n                baseAccountInfo.homeAccountId,\n                baseAccountInfo.localAccountId,\n                baseAccountInfo.tenantId,\n                idTokenClaims\n            );\n\n        updatedAccountInfo = {\n            ...updatedAccountInfo,\n            ...claimsSourcedTenantProfile,\n            idTokenClaims: idTokenClaims,\n            idToken: idTokenSecret,\n        };\n\n        return updatedAccountInfo;\n    }\n\n    return updatedAccountInfo;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport const AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n} as const;\nexport type AuthorityType = (typeof AuthorityType)[keyof typeof AuthorityType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Type which describes Id Token claims known by MSAL.\n */\nexport type TokenClaims = {\n    /**\n     * Audience\n     */\n    aud?: string;\n    /**\n     * Issuer\n     */\n    iss?: string;\n    /**\n     * Issued at\n     */\n    iat?: number;\n    /**\n     * Not valid before\n     */\n    nbf?: number;\n    /**\n     * Immutable object identifier, this ID uniquely identifies the user across applications\n     */\n    oid?: string;\n    /**\n     * Immutable subject identifier, this is a pairwise identifier - it is unique to a particular application ID\n     */\n    sub?: string;\n    /**\n     * Users' tenant or '9188040d-6c67-4c5b-b112-36a304b66dad' for personal accounts.\n     */\n    tid?: string;\n    /**\n     * Trusted Framework Policy (B2C) The name of the policy that was used to acquire the ID token.\n     */\n    tfp?: string;\n    /**\n     * Authentication Context Class Reference (B2C) Used only with older policies.\n     */\n    acr?: string;\n    ver?: string;\n    upn?: string;\n    preferred_username?: string;\n    login_hint?: string;\n    emails?: string[];\n    name?: string;\n    nonce?: string;\n    /**\n     * Expiration\n     */\n    exp?: number;\n    home_oid?: string;\n    sid?: string;\n    cloud_instance_host_name?: string;\n    cnf?: {\n        kid: string;\n    };\n    x5c_ca?: string[];\n    ts?: number;\n    at?: string;\n    u?: string;\n    p?: string;\n    m?: string;\n    roles?: string[];\n    amr?: string[];\n    idp?: string;\n    auth_time?: number;\n    /**\n     * \tRegion of the resource tenant\n     */\n    tenant_region_scope?: string;\n    tenant_region_sub_scope?: string;\n};\n\n/**\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\n * Downcased to match the realm case-insensitive comparison requirements\n * @param idTokenClaims\n * @returns\n */\nexport function getTenantIdFromIdTokenClaims(\n    idTokenClaims?: TokenClaims\n): string | null {\n    if (idTokenClaims) {\n        const tenantId =\n            idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\n        return tenantId || null;\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CacheAccountType, Separators } from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { ClientInfo, buildClientInfo } from \"../../account/ClientInfo\";\nimport {\n    AccountInfo,\n    TenantProfile,\n    buildTenantProfile,\n} from \"../../account/AccountInfo\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport {\n    TokenClaims,\n    getTenantIdFromIdTokenClaims,\n} from \"../../account/TokenClaims\";\nimport { ProtocolMode } from \"../../authority/ProtocolMode\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      nativeAccountId: Account identifier on the native device\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\n * }\n * @internal\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    clientInfo?: string;\n    name?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    nativeAccountId?: string;\n    tenantProfiles?: Array<TenantProfile>;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n            // Deserialize tenant profiles array into a Map\n            tenantProfiles: new Map(\n                (this.tenantProfiles || []).map((tenantProfile) => {\n                    return [tenantProfile.tenantId, tenantProfile];\n                })\n            ),\n        };\n    }\n\n    /**\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\n     */\n    isSingleTenant(): boolean {\n        return !this.tenantProfiles;\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || \"\",\n            homeTenantId || accountInterface.tenantId || \"\",\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(\n        accountDetails: {\n            homeAccountId: string;\n            idTokenClaims?: TokenClaims;\n            clientInfo?: string;\n            cloudGraphHostName?: string;\n            msGraphHost?: string;\n            environment?: string;\n            nativeAccountId?: string;\n            tenantProfiles?: Array<TenantProfile>;\n        },\n        authority: Authority,\n        base64Decode?: (input: string) => string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        } else if (authority.protocolMode === ProtocolMode.AAD) {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        } else {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n\n        let clientInfo: ClientInfo | undefined;\n\n        if (accountDetails.clientInfo && base64Decode) {\n            clientInfo = buildClientInfo(\n                accountDetails.clientInfo,\n                base64Decode\n            );\n        }\n\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n\n        const env =\n            accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            clientInfo?.utid ||\n            getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\n            \"\";\n\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            clientInfo?.uid ||\n            accountDetails.idTokenClaims?.oid ||\n            accountDetails.idTokenClaims?.sub ||\n            \"\";\n\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername =\n            accountDetails.idTokenClaims?.preferred_username ||\n            accountDetails.idTokenClaims?.upn;\n        const email = accountDetails.idTokenClaims?.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n\n        account.username = preferredUsername || email || \"\";\n        account.name = accountDetails.idTokenClaims?.name || \"\";\n\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n\n        if (accountDetails.tenantProfiles) {\n            account.tenantProfiles = accountDetails.tenantProfiles;\n        } else {\n            const tenantProfile = buildTenantProfile(\n                accountDetails.homeAccountId,\n                account.localAccountId,\n                account.realm,\n                accountDetails.idTokenClaims\n            );\n            account.tenantProfiles = [tenantProfile];\n        }\n\n        return account;\n    }\n\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(\n        accountInfo: AccountInfo,\n        cloudGraphHostName?: string,\n        msGraphHost?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        // Serialize tenant profiles map into an array\n        account.tenantProfiles = Array.from(\n            accountInfo.tenantProfiles?.values() || []\n        );\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(\n        serverClientInfo: string,\n        authType: AuthorityType,\n        logger: Logger,\n        cryptoObj: ICrypto,\n        idTokenClaims?: TokenClaims\n    ): string {\n        // since ADFS/DSTS do not have tid and does not set client_info\n        if (\n            !(\n                authType === AuthorityType.Adfs ||\n                authType === AuthorityType.Dsts\n            )\n        ) {\n            // for cases where there is clientInfo\n            if (serverClientInfo) {\n                try {\n                    const clientInfo = buildClientInfo(\n                        serverClientInfo,\n                        cryptoObj.base64Decode\n                    );\n                    if (clientInfo.uid && clientInfo.utid) {\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\n                    }\n                } catch (e) {}\n            }\n            logger.warning(\"No client info in response\");\n        }\n\n        // default to \"sub\" claim\n        return idTokenClaims?.sub || \"\";\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(\n        accountA: AccountInfo | null,\n        accountB: AccountInfo | null,\n        compareClaims?: boolean\n    ): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims ||\n                {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                accountAClaims.nonce === accountBClaims.nonce;\n        }\n\n        return (\n            accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nexport function stripLeadingHashOrQuery(responseString: string): string {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    } else if (\n        responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")\n    ) {\n        return responseString.substring(1);\n    }\n\n    return responseString;\n}\n\n/**\n * Returns URL hash as server auth code response object.\n */\nexport function getDeserializedResponse(\n    responseString: string\n): ServerAuthorizationCodeResponse | null {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse =\n            Object.fromEntries(new URLSearchParams(normalizedResponse));\n\n        // Check for known response properties\n        if (\n            deserializedHash.code ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state\n        ) {\n            return deserializedHash;\n        }\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.hashNotDeserialized);\n    }\n\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants\";\nimport * as UrlUtils from \"../utils/UrlUtils\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        if (!url.includes(\"#\")) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if uri is insecure.\n        if (\n            !components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\"\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityUriInsecure\n            );\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (!queryString) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (\n            tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)\n        ) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\n            \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n        );\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (\n            urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")\n        ) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(\n                0,\n                urlComponents.QueryString.length - 1\n            );\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return (\n                baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl\n            );\n        }\n\n        return relativeUrl;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(\n            urlObject.Protocol +\n                \"//\" +\n                urlObject.HostNameAndPort +\n                \"/\" +\n                urlObject.PathSegments.join(\"/\")\n        );\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     * @deprecated This API will be removed in a future version\n     */\n    static hashContainsKnownProperties(response: string): boolean {\n        return !!UrlUtils.getDeserializedResponse(response);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger\";\nimport { UrlString } from \"../url/UrlString\";\nimport { AuthorityMetadataSource } from \"../utils/Constants\";\nimport { StaticAuthorityOptions } from \"./AuthorityOptions\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\nimport { OpenIdConfigResponse } from \"./OpenIdConfigResponse\";\n\ntype RawMetadata = {\n    endpointMetadata: { [key: string]: OpenIdConfigResponse };\n    instanceDiscoveryMetadata: CloudInstanceDiscoveryResponse;\n};\n\nexport const rawMetdataJSON: RawMetadata = {\n    endpointMetadata: {\n        \"login.microsoftonline.com\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.chinacloudapi.cn\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.microsoftonline.us\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri:\n                \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        tenant_discovery_endpoint:\n            \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\n        metadata: [\n            {\n                preferred_network: \"login.microsoftonline.com\",\n                preferred_cache: \"login.windows.net\",\n                aliases: [\n                    \"login.microsoftonline.com\",\n                    \"login.windows.net\",\n                    \"login.microsoft.com\",\n                    \"sts.windows.net\",\n                ],\n            },\n            {\n                preferred_network: \"login.partner.microsoftonline.cn\",\n                preferred_cache: \"login.partner.microsoftonline.cn\",\n                aliases: [\n                    \"login.partner.microsoftonline.cn\",\n                    \"login.chinacloudapi.cn\",\n                ],\n            },\n            {\n                preferred_network: \"login.microsoftonline.de\",\n                preferred_cache: \"login.microsoftonline.de\",\n                aliases: [\"login.microsoftonline.de\"],\n            },\n            {\n                preferred_network: \"login.microsoftonline.us\",\n                preferred_cache: \"login.microsoftonline.us\",\n                aliases: [\n                    \"login.microsoftonline.us\",\n                    \"login.usgovcloudapi.net\",\n                ],\n            },\n            {\n                preferred_network: \"login-us.microsoftonline.com\",\n                preferred_cache: \"login-us.microsoftonline.com\",\n                aliases: [\"login-us.microsoftonline.com\"],\n            },\n        ],\n    },\n};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata =\n    rawMetdataJSON.instanceDiscoveryMetadata;\n\nexport const InstanceDiscoveryMetadataAliases: Set<String> = new Set();\nInstanceDiscoveryMetadata.metadata.forEach(\n    (metadataEntry: CloudDiscoveryMetadata) => {\n        metadataEntry.aliases.forEach((alias: string) => {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        });\n    }\n);\n\n/**\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\n * @param staticAuthorityOptions\n * @param logger\n * @returns\n */\nexport function getAliasesFromStaticSources(\n    staticAuthorityOptions: StaticAuthorityOptions,\n    logger?: Logger\n): string[] {\n    let staticAliases: string[] | undefined;\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\n    if (canonicalAuthority) {\n        const authorityHost = new UrlString(\n            canonicalAuthority\n        ).getUrlComponents().HostNameAndPort;\n        staticAliases =\n            getAliasesFromMetadata(\n                authorityHost,\n                staticAuthorityOptions.cloudDiscoveryMetadata?.metadata,\n                AuthorityMetadataSource.CONFIG,\n                logger\n            ) ||\n            getAliasesFromMetadata(\n                authorityHost,\n                InstanceDiscoveryMetadata.metadata,\n                AuthorityMetadataSource.HARDCODED_VALUES,\n                logger\n            ) ||\n            staticAuthorityOptions.knownAuthorities;\n    }\n\n    return staticAliases || [];\n}\n\n/**\n * Returns aliases for from the raw cloud discovery metadata passed in\n * @param authorityHost\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nexport function getAliasesFromMetadata(\n    authorityHost?: string,\n    cloudDiscoveryMetadata?: CloudDiscoveryMetadata[],\n    source?: AuthorityMetadataSource,\n    logger?: Logger\n): string[] | null {\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\n    if (authorityHost && cloudDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n            cloudDiscoveryMetadata,\n            authorityHost\n        );\n\n        if (metadata) {\n            logger?.trace(\n                `getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`\n            );\n            return metadata.aliases;\n        } else {\n            logger?.trace(\n                `getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`\n            );\n        }\n    }\n\n    return null;\n}\n\n/**\n * Get cloud discovery metadata for common authorities\n */\nexport function getCloudDiscoveryMetadataFromHardcodedValues(\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n        InstanceDiscoveryMetadata.metadata,\n        authorityHost\n    );\n    return metadata;\n}\n\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nexport function getCloudDiscoveryMetadataFromNetworkResponse(\n    response: CloudDiscoveryMetadata[],\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authorityHost)) {\n            return metadata;\n        }\n    }\n\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\nexport const cacheUnknownErrorCode = \"cache_error_unknown\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as CacheErrorCodes from \"./CacheErrorCodes\";\nexport { CacheErrorCodes };\n\nexport const CacheErrorMessages = {\n    [CacheErrorCodes.cacheQuotaExceededErrorCode]:\n        \"Exceeded cache storage capacity.\",\n    [CacheErrorCodes.cacheUnknownErrorCode]:\n        \"Unexpected error occurred when using cache storage.\",\n};\n\n/**\n * Error thrown when there is an error with the cache\n */\nexport class CacheError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    constructor(errorCode: string, errorMessage?: string) {\n        const message =\n            errorMessage ||\n            (CacheErrorMessages[errorCode]\n                ? CacheErrorMessages[errorCode]\n                : CacheErrorMessages[CacheErrorCodes.cacheUnknownErrorCode]);\n\n        super(`${errorCode}: ${message}`);\n        Object.setPrototypeOf(this, CacheError.prototype);\n\n        this.name = \"CacheError\";\n        this.errorCode = errorCode;\n        this.errorMessage = message;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    CredentialFilter,\n    ValidCredentialType,\n    AppMetadataFilter,\n    AppMetadataCache,\n    TokenKeys,\n    TenantProfileFilter,\n} from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport {\n    CredentialType,\n    APP_METADATA,\n    THE_FAMILY_ID,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    Separators,\n} from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { generateCredentialKey } from \"./utils/CacheHelpers\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport {\n    AccountInfo,\n    TenantProfile,\n    tenantIdMatchesHomeTenant,\n    updateAccountTenantProfileData,\n} from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { extractTokenClaims } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { Logger } from \"../logger/Logger\";\nimport { name, version } from \"../packageMetadata\";\nimport { StoreInCache } from \"../request/StoreInCache\";\nimport { getAliasesFromStaticSources } from \"../authority/AuthorityMetadata\";\nimport { StaticAuthorityOptions } from \"../authority/AuthorityOptions\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { CacheError, CacheErrorCodes } from \"../error/CacheError\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n    // Instance of logger for functions defined in the msal-common layer\n    private commonLogger: Logger;\n    private staticAuthorityOptions?: StaticAuthorityOptions;\n\n    constructor(\n        clientId: string,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        staticAuthorityOptions?: StaticAuthorityOptions\n    ) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name, version);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(\n        accountKey: string,\n        logger?: Logger\n    ): AccountEntity | null;\n\n    /**\n     * Returns deserialized account if found in the cache, otherwiser returns null\n     */\n    abstract getCachedAccountEntity(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * remove account entity from the platform cache if it's outdated\n     */\n    abstract removeOutdatedAccount(accountKey: string): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(\n        accessTokenKey: string\n    ): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(\n        key: string,\n        value: AuthorityMetadataEntity\n    ): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(\n        throttlingCacheKey: string\n    ): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string): void;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which retrieves all account keys from the cache\n     */\n    abstract getAccountKeys(): string[];\n\n    /**\n     * Function which retrieves all token keys from the cache\n     */\n    abstract getTokenKeys(): TokenKeys;\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Function which updates an outdated credential cache key\n     */\n    abstract updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string;\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.buildTenantProfiles(\n            this.getAccountsFilteredBy(accountFilter || {}),\n            accountFilter\n        );\n    }\n\n    /**\n     * Gets first tenanted AccountInfo object found based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter: AccountFilter): AccountInfo | null {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 1) {\n            // If one or more accounts are found, prioritize accounts that have an ID token\n            const sortedAccounts = allAccounts.sort((account) => {\n                return account.idTokenClaims ? -1 : 1;\n            });\n            return sortedAccounts[0];\n        } else if (allAccounts.length === 1) {\n            // If only one account is found, return it regardless of whether a matching ID token was found\n            return allAccounts[0];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter: AccountFilter): AccountInfo | null {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\n     * and builds the account info objects from the matching ID token's claims\n     * @param cachedAccounts\n     * @param accountFilter\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\n     */\n    private buildTenantProfiles(\n        cachedAccounts: AccountEntity[],\n        accountFilter?: AccountFilter\n    ): AccountInfo[] {\n        return cachedAccounts.flatMap((accountEntity) => {\n            return this.getTenantProfilesFromAccountEntity(\n                accountEntity,\n                accountFilter?.tenantId,\n                accountFilter\n            );\n        });\n    }\n\n    private getTenantedAccountInfoByFilter(\n        accountInfo: AccountInfo,\n        tokenKeys: TokenKeys,\n        tenantProfile: TenantProfile,\n        tenantProfileFilter?: TenantProfileFilter\n    ): AccountInfo | null {\n        let tenantedAccountInfo: AccountInfo | null = null;\n        let idTokenClaims: TokenClaims | undefined;\n\n        if (tenantProfileFilter) {\n            if (\n                !this.tenantProfileMatchesFilter(\n                    tenantProfile,\n                    tenantProfileFilter\n                )\n            ) {\n                return null;\n            }\n        }\n\n        const idToken = this.getIdToken(\n            accountInfo,\n            tokenKeys,\n            tenantProfile.tenantId\n        );\n\n        if (idToken) {\n            idTokenClaims = extractTokenClaims(\n                idToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n\n            if (\n                !this.idTokenClaimsMatchTenantProfileFilter(\n                    idTokenClaims,\n                    tenantProfileFilter\n                )\n            ) {\n                // ID token sourced claims don't match so this tenant profile is not a match\n                return null;\n            }\n        }\n\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\n        tenantedAccountInfo = updateAccountTenantProfileData(\n            accountInfo,\n            tenantProfile,\n            idTokenClaims,\n            idToken?.secret\n        );\n\n        return tenantedAccountInfo;\n    }\n\n    private getTenantProfilesFromAccountEntity(\n        accountEntity: AccountEntity,\n        targetTenantId?: string,\n        tenantProfileFilter?: TenantProfileFilter\n    ): AccountInfo[] {\n        const accountInfo = accountEntity.getAccountInfo();\n        let searchTenantProfiles: Map<string, TenantProfile> =\n            accountInfo.tenantProfiles || new Map<string, TenantProfile>();\n        const tokenKeys = this.getTokenKeys();\n\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\n        if (targetTenantId) {\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\n            if (tenantProfile) {\n                // Reduce search field to just this tenant profile\n                searchTenantProfiles = new Map<string, TenantProfile>([\n                    [targetTenantId, tenantProfile],\n                ]);\n            } else {\n                // No tenant profile for search tenant ID, return empty array\n                return [];\n            }\n        }\n\n        const matchingTenantProfiles: AccountInfo[] = [];\n        searchTenantProfiles.forEach((tenantProfile: TenantProfile) => {\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(\n                accountInfo,\n                tokenKeys,\n                tenantProfile,\n                tenantProfileFilter\n            );\n            if (tenantedAccountInfo) {\n                matchingTenantProfiles.push(tenantedAccountInfo);\n            }\n        });\n\n        return matchingTenantProfiles;\n    }\n\n    private tenantProfileMatchesFilter(\n        tenantProfile: TenantProfile,\n        tenantProfileFilter: TenantProfileFilter\n    ): boolean {\n        if (\n            !!tenantProfileFilter.localAccountId &&\n            !this.matchLocalAccountIdFromTenantProfile(\n                tenantProfile,\n                tenantProfileFilter.localAccountId\n            )\n        ) {\n            return false;\n        }\n\n        if (\n            !!tenantProfileFilter.name &&\n            !(tenantProfile.name === tenantProfileFilter.name)\n        ) {\n            return false;\n        }\n\n        if (\n            tenantProfileFilter.isHomeTenant !== undefined &&\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private idTokenClaimsMatchTenantProfileFilter(\n        idTokenClaims: TokenClaims,\n        tenantProfileFilter?: TenantProfileFilter\n    ): boolean {\n        // Tenant Profile filtering\n        if (tenantProfileFilter) {\n            if (\n                !!tenantProfileFilter.localAccountId &&\n                !this.matchLocalAccountIdFromTokenClaims(\n                    idTokenClaims,\n                    tenantProfileFilter.localAccountId\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.loginHint &&\n                !this.matchLoginHintFromTokenClaims(\n                    idTokenClaims,\n                    tenantProfileFilter.loginHint\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.username &&\n                !this.matchUsername(\n                    idTokenClaims.preferred_username,\n                    tenantProfileFilter.username\n                )\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.name &&\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)\n            ) {\n                return false;\n            }\n\n            if (\n                !!tenantProfileFilter.sid &&\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord {CacheRecord}\n     * @param storeInCache {?StoreInCache}\n     * @param correlationId {?string} correlation id\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        storeInCache?: StoreInCache,\n        correlationId?: string\n    ): Promise<void> {\n        if (!cacheRecord) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheRecord\n            );\n        }\n\n        try {\n            if (!!cacheRecord.account) {\n                this.setAccount(cacheRecord.account);\n            }\n\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n                this.setIdTokenCredential(cacheRecord.idToken);\n            }\n\n            if (\n                !!cacheRecord.accessToken &&\n                storeInCache?.accessToken !== false\n            ) {\n                await this.saveAccessToken(cacheRecord.accessToken);\n            }\n\n            if (\n                !!cacheRecord.refreshToken &&\n                storeInCache?.refreshToken !== false\n            ) {\n                this.setRefreshTokenCredential(cacheRecord.refreshToken);\n            }\n\n            if (!!cacheRecord.appMetadata) {\n                this.setAppMetadata(cacheRecord.appMetadata);\n            }\n        } catch (e: unknown) {\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\n            if (e instanceof Error) {\n                this.commonLogger?.errorPii(\n                    `CacheManager.saveCacheRecord: ${e.message}`,\n                    correlationId\n                );\n\n                if (\n                    e.name === \"QuotaExceededError\" ||\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\n                    e.message.includes(\"exceeded the quota\")\n                ) {\n                    this.commonLogger?.error(\n                        `CacheManager.saveCacheRecord: exceeded storage quota`,\n                        correlationId\n                    );\n                    throw new CacheError(\n                        CacheErrorCodes.cacheQuotaExceededErrorCode\n                    );\n                } else {\n                    throw new CacheError(e.name, e.message);\n                }\n            } else {\n                this.commonLogger?.errorPii(\n                    `CacheManager.saveCacheRecord: ${e}`,\n                    correlationId\n                );\n                throw new CacheError(CacheErrorCodes.cacheUnknownErrorCode);\n            }\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(\n        credential: AccessTokenEntity\n    ): Promise<void> {\n        const accessTokenFilter: CredentialFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (\n                !this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)\n            ) {\n                return;\n            }\n\n            const tokenEntity = this.getAccessTokenCredential(key);\n\n            if (\n                tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)\n            ) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter: AccountFilter): AccountEntity[] {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts: AccountEntity[] = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n\n            const entity: AccountEntity | null = this.getAccount(\n                cacheKey,\n                this.commonLogger\n            );\n\n            // Match base account fields\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.username &&\n                !this.matchUsername(entity.username, accountFilter.username)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(\n                    entity,\n                    accountFilter.nativeAccountId\n                )\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)\n            ) {\n                return;\n            }\n\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\n            const tenantProfileFilter: TenantProfileFilter = {\n                localAccountId: accountFilter?.localAccountId,\n                name: accountFilter?.name,\n            };\n\n            const matchingTenantProfiles = entity.tenantProfiles?.filter(\n                (tenantProfile: TenantProfile) => {\n                    return this.tenantProfileMatchesFilter(\n                        tenantProfile,\n                        tenantProfileFilter\n                    );\n                }\n            );\n\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\n                return;\n            }\n\n            matchingAccounts.push(entity);\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(\n        key: string,\n        homeAccountId?: string,\n        tenantId?: string\n    ): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        if (\n            homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())\n        ) {\n            return false;\n        }\n\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n\n        // Do not check environment as aliasing can cause false negatives\n\n        return true;\n    }\n\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key: string): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (\n            lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n            ) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1\n        ) {\n            return false;\n        }\n\n        if (\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1\n        ) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (\n                lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1\n            ) {\n                return false;\n            }\n        } else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(\n        entity: ValidCredentialType,\n        filter: CredentialFilter\n    ): boolean {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n\n        if (\n            !!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)\n        ) {\n            return false;\n        }\n\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (\n            typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)\n        ) {\n            return false;\n        }\n\n        if (\n            !!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)\n        ) {\n            return false;\n        }\n\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n\n        if (\n            !!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)\n        ) {\n            return false;\n        }\n\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n\n        // Access Token with Auth Scheme specific matching\n        if (\n            entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n        ) {\n            if (\n                !!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)\n            ) {\n                return false;\n            }\n\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!filter.environment &&\n                !this.matchEnvironment(entity, filter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!filter.clientId &&\n                !this.matchClientId(entity, filter.clientId)\n            ) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (\n                !this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1\n            ) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<void> {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts: Array<Promise<void>> = [];\n\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n    }\n\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<void> {\n        const account = this.getAccount(accountKey, this.commonLogger);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<void> {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<void>> = [];\n\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n\n        await Promise.all(removedCredentials);\n    }\n\n    /**\n     * Migrates a single-tenant account and all it's associated alternate cross-tenant account objects in the\n     * cache into a condensed multi-tenant account object with tenant profiles.\n     * @param accountKey\n     * @param accountEntity\n     * @param logger\n     * @returns\n     */\n    protected updateOutdatedCachedAccount(\n        accountKey: string,\n        accountEntity: AccountEntity | null,\n        logger?: Logger\n    ): AccountEntity | null {\n        // Only update if account entity is defined and has no tenantProfiles object (is outdated)\n        if (accountEntity && accountEntity.isSingleTenant()) {\n            this.commonLogger?.verbose(\n                \"updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity\"\n            );\n\n            // Get keys of all accounts belonging to user\n            const matchingAccountKeys = this.getAccountKeys().filter(\n                (key: string) => {\n                    return key.startsWith(accountEntity.homeAccountId);\n                }\n            );\n\n            // Get all account entities belonging to user\n            const accountsToMerge: AccountEntity[] = [];\n            matchingAccountKeys.forEach((key: string) => {\n                const account = this.getCachedAccountEntity(key);\n                if (account) {\n                    accountsToMerge.push(account);\n                }\n            });\n\n            // Set base account to home account if available, any account if not\n            const baseAccount =\n                accountsToMerge.find((account) => {\n                    return tenantIdMatchesHomeTenant(\n                        account.realm,\n                        account.homeAccountId\n                    );\n                }) || accountsToMerge[0];\n\n            // Populate tenant profiles built from each account entity belonging to the user\n            baseAccount.tenantProfiles = accountsToMerge.map(\n                (account: AccountEntity) => {\n                    return {\n                        tenantId: account.realm,\n                        localAccountId: account.localAccountId,\n                        name: account.name,\n                        isHomeTenant: tenantIdMatchesHomeTenant(\n                            account.realm,\n                            account.homeAccountId\n                        ),\n                    };\n                }\n            );\n\n            const updatedAccount = CacheManager.toObject(new AccountEntity(), {\n                ...baseAccount,\n            });\n\n            const newAccountKey = updatedAccount.generateAccountKey();\n\n            // Clear cache of legacy account objects that have been collpsed into tenant profiles\n            matchingAccountKeys.forEach((key: string) => {\n                if (key !== newAccountKey) {\n                    this.removeOutdatedAccount(accountKey);\n                }\n            });\n\n            // Cache updated account object\n            this.setAccount(updatedAccount);\n            logger?.verbose(\"Updated an outdated account entity in the cache\");\n            return updatedAccount;\n        }\n\n        // No update is necessary\n        return accountEntity;\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (\n            credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n        ) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity =\n                    credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw createClientAuthError(\n                            ClientAuthErrorCodes.bindingKeyNotRemoved\n                        );\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string =\n            AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey, this.commonLogger);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param tokenKeys {?TokenKeys}\n     * @param targetRealm {?string}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getIdToken(\n        account: AccountInfo,\n        tokenKeys?: TokenKeys,\n        targetRealm?: string,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): IdTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: targetRealm,\n        };\n\n        const idTokenMap: Map<string, IdTokenEntity> = this.getIdTokensByFilter(\n            idTokenFilter,\n            tokenKeys\n        );\n\n        const numIdTokens = idTokenMap.size;\n\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        } else if (numIdTokens > 1) {\n            let tokensToBeRemoved: Map<string, IdTokenEntity> = idTokenMap;\n            // Multiple tenant profiles and no tenant specified, pick home account\n            if (!targetRealm) {\n                const homeIdTokenMap: Map<string, IdTokenEntity> = new Map<\n                    string,\n                    IdTokenEntity\n                >();\n                idTokenMap.forEach((idToken, key) => {\n                    if (idToken.realm === account.tenantId) {\n                        homeIdTokenMap.set(key, idToken);\n                    }\n                });\n                const numHomeIdTokens = homeIdTokenMap.size;\n                if (numHomeIdTokens < 1) {\n                    this.commonLogger.info(\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\"\n                    );\n                    return idTokenMap.values().next().value;\n                } else if (numHomeIdTokens === 1) {\n                    this.commonLogger.info(\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\"\n                    );\n                    return homeIdTokenMap.values().next().value;\n                } else {\n                    // Multiple ID tokens for home tenant profile, remove all and return null\n                    tokensToBeRemoved = homeIdTokenMap;\n                }\n            }\n            // Multiple tokens for a single tenant profile, remove all and return null\n            this.commonLogger.info(\n                \"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\"\n            );\n            tokensToBeRemoved.forEach((idToken, key) => {\n                this.removeIdToken(key);\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedID: idTokenMap.size },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\n        return idTokenMap.values().next().value;\n    }\n\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(\n        filter: CredentialFilter,\n        tokenKeys?: TokenKeys\n    ): Map<string, IdTokenEntity> {\n        const idTokenKeys =\n            (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n\n        const idTokens: Map<string, IdTokenEntity> = new Map<\n            string,\n            IdTokenEntity\n        >();\n        idTokenKeys.forEach((key) => {\n            if (\n                !this.idTokenKeyMatchesFilter(key, {\n                    clientId: this.clientId,\n                    ...filter,\n                })\n            ) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.set(key, idToken);\n            }\n        });\n\n        return idTokens;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getAccessToken(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        tokenKeys?: TokenKeys,\n        targetRealm?: string,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): AccessTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme =\n            request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType =\n            authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n                ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n                : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: targetRealm || account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const accessTokenKeys =\n            (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens: AccessTokenEntity[] = [];\n\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (\n                this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)\n            ) {\n                const accessToken = this.getAccessTokenCredential(key);\n\n                // Validate value\n                if (\n                    accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)\n                ) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - No token found\"\n            );\n            return null;\n        } else if (numAccessTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - Multiple access tokens found, clearing them\"\n            );\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(generateCredentialKey(accessToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedAT: accessTokens.length },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getAccessToken - Returning access token\"\n        );\n        return accessTokens[0];\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter,\n        keyMustContainAllScopes: boolean\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n\n        if (\n            filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (\n                    keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                } else if (\n                    !keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter: CredentialFilter): AccessTokenEntity[] {\n        const tokenKeys = this.getTokenKeys();\n\n        const accessTokens: AccessTokenEntity[] = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n\n            const accessToken = this.getAccessTokenCredential(key);\n            if (\n                accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)\n            ) {\n                accessTokens.push(accessToken);\n            }\n        });\n\n        return accessTokens;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param account {AccountInfo}\n     * @param familyRT {boolean}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getRefreshToken(\n        account: AccountInfo,\n        familyRT: boolean,\n        tokenKeys?: TokenKeys,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): RefreshTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n\n        const refreshTokenKeys =\n            (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens: RefreshTokenEntity[] = [];\n\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (\n                    refreshToken &&\n                    this.credentialMatchesFilter(\n                        refreshToken,\n                        refreshTokenFilter\n                    )\n                ) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getRefreshToken - No refresh token found.\"\n            );\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\n            performanceClient.addFields(\n                { multiMatchedRT: numRefreshTokens },\n                correlationId\n            );\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getRefreshToken - returning refresh token\"\n        );\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        // If familyId is used, clientId is not in the key\n        if (\n            !filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n\n        const appMetadata: AppMetadataCache =\n            this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(\n            appMetadata\n        ).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.multipleMatchingAppMetadata\n            );\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(\n        entity: AccountEntity | CredentialEntity,\n        homeAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId\n        );\n    }\n\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    private matchLocalAccountIdFromTokenClaims(\n        tokenClaims: TokenClaims,\n        localAccountId: string\n    ): boolean {\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\n        return localAccountId === idTokenLocalAccountId;\n    }\n\n    private matchLocalAccountIdFromTenantProfile(\n        tenantProfile: TenantProfile,\n        localAccountId: string\n    ): boolean {\n        return tenantProfile.localAccountId === localAccountId;\n    }\n\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    private matchName(claims: TokenClaims, name: string): boolean {\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\n    }\n\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    private matchUsername(\n        cachedUsername?: string,\n        filterUsername?: string\n    ): boolean {\n        return !!(\n            cachedUsername &&\n            typeof cachedUsername === \"string\" &&\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(\n        entity: CredentialEntity,\n        userAssertionHash: string\n    ): boolean {\n        return !!(\n            entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash\n        );\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(\n        entity: AccountEntity | CredentialEntity | AppMetadataEntity,\n        environment: string\n    ): boolean {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = getAliasesFromStaticSources(\n                this.staticAuthorityOptions,\n                this.commonLogger\n            );\n            if (\n                staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)\n            ) {\n                return true;\n            }\n        }\n\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (\n            cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(\n        entity: CredentialEntity,\n        credentialType: string\n    ): boolean {\n        return (\n            entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(\n        entity: CredentialEntity | AppMetadataEntity,\n        clientId: string\n    ): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(\n        entity: CredentialEntity | AppMetadataEntity,\n        familyId: string\n    ): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(\n        entity: AccountEntity | CredentialEntity,\n        realm: string\n    ): boolean {\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\n    }\n\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    private matchNativeAccountId(\n        entity: AccountEntity,\n        nativeAccountId: string\n    ): boolean {\n        return !!(\n            entity.nativeAccountId && nativeAccountId === entity.nativeAccountId\n        );\n    }\n\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    private matchLoginHintFromTokenClaims(\n        tokenClaims: TokenClaims,\n        loginHint: string\n    ): boolean {\n        if (tokenClaims.login_hint === loginHint) {\n            return true;\n        }\n\n        if (tokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n\n        if (tokenClaims.upn === loginHint) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Helper to match sid\n     * @param entity\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    private matchSid(idTokenClaims: TokenClaims, sid: string): boolean {\n        return idTokenClaims.sid === sid;\n    }\n\n    private matchAuthorityType(\n        entity: AccountEntity,\n        authorityType: string\n    ): boolean {\n        return !!(\n            entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase()\n        );\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: ScopeSet): boolean {\n        const isNotAccessTokenCredential =\n            entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n\n        return entityScopeSet.containsScopeSet(target);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(\n        entity: CredentialEntity,\n        tokenType: AuthenticationScheme\n    ): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param keyId\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\n/** @internal */\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccount(): AccountEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getCachedAccountEntity(): AccountEntity | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setIdTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAccessTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setRefreshTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAppMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setServerTelemetry(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAuthorityMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setThrottlingCache(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    removeItem(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccountKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getTokenKeys(): TokenKeys {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async clear(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    updateCredentialCacheKey(): string {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    removeOutdatedAccount(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { ILoggerCallback, Logger, LogLevel } from \"../logger/Logger\";\nimport {\n    Constants,\n    DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n} from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { ClientCredentials } from \"../account/ClientCredentials\";\nimport { ProtocolMode } from \"../authority/ProtocolMode\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n * @internal\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions;\n    systemOptions?: SystemOptions;\n    loggerOptions?: LoggerOptions;\n    cacheOptions?: CacheOptions;\n    storageInterface?: CacheManager;\n    networkInterface?: INetworkModule;\n    cryptoInterface?: ICrypto;\n    clientCredentials?: ClientCredentials;\n    libraryInfo?: LibraryInfo;\n    telemetry?: TelemetryOptions;\n    serverTelemetryManager?: ServerTelemetryManager | null;\n    persistencePlugin?: ICachePlugin | null;\n    serializableCache?: ISerializableTokenCache | null;\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>;\n    systemOptions: Required<SystemOptions>;\n    loggerOptions: Required<LoggerOptions>;\n    cacheOptions: Required<CacheOptions>;\n    storageInterface: CacheManager;\n    networkInterface: INetworkModule;\n    cryptoInterface: Required<ICrypto>;\n    libraryInfo: LibraryInfo;\n    telemetry: Required<TelemetryOptions>;\n    serverTelemetryManager: ServerTelemetryManager | null;\n    clientCredentials: ClientCredentials;\n    persistencePlugin: ICachePlugin | null;\n    serializableCache: ISerializableTokenCache | null;\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache      - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n * @internal\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback;\n    piiLoggingEnabled?: boolean;\n    logLevel?: LogLevel;\n    correlationId?: string;\n};\n\n/**\n *  Use this to configure credential cache preferences in the ClientConfiguration object\n *\n * - claimsBasedCachingEnabled   - Sets whether tokens should be cached based on the claims hash. Default is false.\n */\nexport type CacheOptions = {\n    claimsBasedCachingEnabled?: boolean;\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string;\n    version: string;\n    cpu: string;\n    os: string;\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string;\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n    claimsBasedCachingEnabled: false,\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration({\n    authOptions: userAuthOptions,\n    systemOptions: userSystemOptions,\n    loggerOptions: userLoggerOption,\n    cacheOptions: userCacheOptions,\n    storageInterface: storageImplementation,\n    networkInterface: networkImplementation,\n    cryptoInterface: cryptoImplementation,\n    clientCredentials: clientCredentials,\n    libraryInfo: libraryInfo,\n    telemetry: telemetry,\n    serverTelemetryManager: serverTelemetryManager,\n    persistencePlugin: persistencePlugin,\n    serializableCache: serializableCache,\n}: ClientConfiguration): CommonClientConfiguration {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface:\n            storageImplementation ||\n            new DefaultStorageClass(\n                userAuthOptions.clientId,\n                DEFAULT_CRYPTO_IMPLEMENTATION,\n                new Logger(loggerOptions)\n            ),\n        networkInterface:\n            networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nexport function isOidcProtocolMode(config: ClientConfiguration): boolean {\n    return (\n        config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>;\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions,\n        timeout?: number\n    ): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n\n    /**\n     * acquireTokenPreRedirect (msal-browser).\n     * First part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\n\n    /**\n     * acquireTokenRedirect (msal-browser).\n     * Second part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\", // Time spent waiting for a concurrent iframe to complete\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority:\n        \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    RefreshTokenClientExecutePostToTokenEndpoint:\n        \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint:\n        \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest:\n        \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken:\n        \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken:\n        \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody:\n        \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord:\n        \"silentFlowClientGenerateResultFromCacheRecord\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n\n    InitializeClientApplication: \"initializeClientApplication\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient:\n        \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration:\n        \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest:\n        \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest:\n        \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponse: \"handleCodeResponse\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    DeserializeResponse: \"deserializeResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance:\n        \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources:\n        \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork:\n        \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata:\n        \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork:\n        \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation:\n        \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement:\n        \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\n\n    UpdateCloudDiscoveryMetadataMeasurement:\n        \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n} as const;\nexport type PerformanceEvents =\n    (typeof PerformanceEvents)[keyof typeof PerformanceEvents];\n\nexport const PerformanceEventAbbreviations: ReadonlyMap<string, string> =\n    new Map([\n        [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\n        [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\n        [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\n        [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\n        [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\n        [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\n        [\n            PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n            \"CryptoGetPKThumb\",\n        ],\n        [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\n        [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\n        [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\n        [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\n        [PerformanceEvents.SsoSilent, \"SsoSlt\"],\n        [\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            \"StdIntClientGetDiscAuth\",\n        ],\n        [\n            PerformanceEvents.FetchAccountIdWithNativeBroker,\n            \"FetchAccIdWithNtvBroker\",\n        ],\n        [\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            \"NtvIntClientAT\",\n        ],\n        [\n            PerformanceEvents.BaseClientCreateTokenRequestHeaders,\n            \"BaseClientCreateTReqHead\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n            \"RTClientExecPost\",\n        ],\n        [\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n            \"AuthCodeClientExecPost\",\n        ],\n        [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\n        [\n            PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\n            \"ATByRTInBroker\",\n        ],\n        [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\n        [\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            \"RTClientExecTReq\",\n        ],\n        [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\n        [\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            \"RTClientATWithCachedRT\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            \"RTClientATByRT\",\n        ],\n        [\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            \"RTClientCreateTReqBody\",\n        ],\n        [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\n        [\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\n            \"SltFlowClientATCached\",\n        ],\n        [\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n            \"SltFlowClientGenResFromCache\",\n        ],\n        [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\n        [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\n        [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\n        [\n            PerformanceEvents.InitializeClientApplication,\n            \"InitClientApplication\",\n        ],\n        [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\n        [\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            \"SHandlerInitAuthReq\",\n        ],\n        [\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            \"SltHandlerMonitorIframeForHash\",\n        ],\n        [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\n        [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\n\n        [\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            \"StdIntClientCreateAuthCodeClient\",\n        ],\n        [\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            \"StdIntClientGetClientConf\",\n        ],\n        [\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            \"StdIntClientInitAuthReq\",\n        ],\n        [\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n            \"StdIntClientInitAuthCodeReq\",\n        ],\n\n        [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\n\n        [\n            PerformanceEvents.HandleCodeResponseFromServer,\n            \"HandleCodeResFromServer\",\n        ],\n        [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\n        [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\n\n        [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\n        [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\n        [\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            \"AuthClientCreateTReqBody\",\n        ],\n        [\n            PerformanceEvents.AuthClientCreateQueryString,\n            \"AuthClientCreateQueryStr\",\n        ],\n        [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\n        [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\n        [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\n        [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\n        [\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            \"AuthFactCreateDiscInst\",\n        ],\n        [\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            \"AuthResolveEndpointsAsync\",\n        ],\n        [\n            PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\n            \"AuthResolveEndpointsFromLocal\",\n        ],\n        [\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            \"AuthGetCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            \"AuthUpdCDMeta\",\n        ],\n        [\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            \"AuthUpdCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            \"AuthUpdEndpointMeta\",\n        ],\n        [\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            \"AuthUpdMetaWithRegInfo\",\n        ],\n        [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\n        [\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            \"RegDiscGetRegFromIMDS\",\n        ],\n        [\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            \"RegDiscGetCurrentVer\",\n        ],\n        [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\n        [\n            PerformanceEvents.GetEndpointMetadataFromNetwork,\n            \"GetEndpointMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\n            \"GetCDMetaFromNet\",\n        ],\n        [\n            PerformanceEvents.HandleRedirectPromiseMeasurement,\n            \"HandleRedirectPromise\",\n        ],\n        [\n            PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\n            \"HandleNtvRedirectPromise\",\n        ],\n        [\n            PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\n            \"UpdateCDMeta\",\n        ],\n        [\n            PerformanceEvents.UsernamePasswordClientAcquireToken,\n            \"UserPassClientAT\",\n        ],\n        [\n            PerformanceEvents.NativeMessageHandlerHandshake,\n            \"NtvMsgHandlerHandshake\",\n        ],\n        [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\n        [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\n        [\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\n            \"ClearTAndKeysWithClaims\",\n        ],\n        [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\n        [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\n        [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\n        [\n            PerformanceEvents.GenerateCodeChallengeFromVerifier,\n            \"GenCodeChallengeFromVerifier\",\n        ],\n        [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\n        [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\n    ]);\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n} as const;\nexport type PerformanceEventStatus =\n    (typeof PerformanceEventStatus)[keyof typeof PerformanceEventStatus];\n\nexport type SubMeasurement = {\n    name: string;\n    startTimeMs: number;\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string;\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus;\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string;\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string;\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string;\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null;\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null;\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null;\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number;\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null;\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string;\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string;\n\n    /**\n     * Server error number\n     */\n    serverErrorNo?: string;\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string;\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string;\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean;\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string;\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined;\n\n    /**\n     * Cache Outcome\n     * @type {?number}\n     */\n    cacheOutcome?: number;\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number;\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>;\n\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n\n    /**\n     * CorrelationId of the in progress iframe request that was awaited\n     */\n    awaitIframeCorrelationId?: string;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number;\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number;\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number;\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined;\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string;\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string;\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string;\n    extensionVersion?: string;\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number;\n    matsHttpEventCount?: number;\n    httpVerToken?: string;\n\n    /**\n     * Native broker fields\n     */\n    allowNativeBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n\n    /**\n     * Nested App Auth Fields\n     */\n    nestedAppAuthRequest?: boolean;\n\n    /**\n     * Multiple matched access/id/refresh tokens in the cache\n     */\n    multiMatchedAT?: number;\n    multiMatchedID?: number;\n    multiMatchedRT?: number;\n\n    errorName?: string;\n    errorStack?: string[];\n\n    // Event context as JSON string\n    context?: string;\n\n    // Number of tokens in the cache to be reported when cache quota is exceeded\n    cacheRtCount?: number;\n    cacheIdCount?: number;\n    cacheAtCount?: number;\n\n    // Scenario id to track custom user prompts\n    scenarioId?: string;\n\n    accountType?: \"AAD\" | \"MSA\" | \"B2C\";\n};\n\nexport type PerformanceEventContext = {\n    dur?: number;\n    err?: string;\n    subErr?: string;\n    fail?: number;\n};\n\nexport type PerformanceEventStackedContext = PerformanceEventContext & {\n    name?: string;\n    childErr?: string;\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n    \"multiMatchedAT\",\n    \"multiMatchedID\",\n    \"multiMatchedRT\",\n]);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    InProgressPerformanceEvent,\n} from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceEvent, PerformanceEventStatus } from \"./PerformanceEvent\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    startMeasurement(): void {\n        return;\n    }\n    endMeasurement(): void {\n        return;\n    }\n    flushMeasurement(): number | null {\n        return null;\n    }\n}\n\nexport class StubPerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n\n    startMeasurement(\n        measureName: string,\n        correlationId?: string | undefined\n    ): InProgressPerformanceEvent {\n        return {\n            end: () => null,\n            discard: () => {},\n            add: () => {},\n            increment: () => {},\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n    calculateQueuedTime(): number {\n        return 0;\n    }\n\n    addQueueMeasurement(): void {\n        return;\n    }\n\n    setPreQueueTime(): void {\n        return;\n    }\n\n    endMeasurement(): PerformanceEvent | null {\n        return null;\n    }\n\n    discardMeasurements(): void {\n        return;\n    }\n\n    removePerformanceCallback(): boolean {\n        return true;\n    }\n\n    addPerformanceCallback(): string {\n        return \"\";\n    }\n\n    emitEvents(): void {\n        return;\n    }\n\n    addFields(): void {\n        return;\n    }\n\n    incrementFields(): void {\n        return;\n    }\n\n    cacheEventByCorrelationId(): void {\n        return;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const pkceNotCreated = \"pkce_not_created\";\nexport const cryptoNonExistent = \"crypto_nonexistent\";\nexport const emptyNavigateUri = \"empty_navigate_uri\";\nexport const hashEmptyError = \"hash_empty_error\";\nexport const noStateInHash = \"no_state_in_hash\";\nexport const hashDoesNotContainKnownProperties =\n    \"hash_does_not_contain_known_properties\";\nexport const unableToParseState = \"unable_to_parse_state\";\nexport const stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nexport const interactionInProgress = \"interaction_in_progress\";\nexport const popupWindowError = \"popup_window_error\";\nexport const emptyWindowError = \"empty_window_error\";\nexport const userCancelled = \"user_cancelled\";\nexport const monitorPopupTimeout = \"monitor_popup_timeout\";\nexport const monitorWindowTimeout = \"monitor_window_timeout\";\nexport const redirectInIframe = \"redirect_in_iframe\";\nexport const blockIframeReload = \"block_iframe_reload\";\nexport const blockNestedPopups = \"block_nested_popups\";\nexport const iframeClosedPrematurely = \"iframe_closed_prematurely\";\nexport const silentLogoutUnsupported = \"silent_logout_unsupported\";\nexport const noAccountError = \"no_account_error\";\nexport const silentPromptValueError = \"silent_prompt_value_error\";\nexport const noTokenRequestCacheError = \"no_token_request_cache_error\";\nexport const unableToParseTokenRequestCacheError =\n    \"unable_to_parse_token_request_cache_error\";\nexport const noCachedAuthorityError = \"no_cached_authority_error\";\nexport const authRequestNotSetError = \"auth_request_not_set_error\";\nexport const invalidCacheType = \"invalid_cache_type\";\nexport const nonBrowserEnvironment = \"non_browser_environment\";\nexport const databaseNotOpen = \"database_not_open\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const postRequestFailed = \"post_request_failed\";\nexport const getRequestFailed = \"get_request_failed\";\nexport const failedToParseResponse = \"failed_to_parse_response\";\nexport const unableToLoadToken = \"unable_to_load_token\";\nexport const cryptoKeyNotFound = \"crypto_key_not_found\";\nexport const authCodeRequired = \"auth_code_required\";\nexport const authCodeOrNativeAccountIdRequired =\n    \"auth_code_or_nativeAccountId_required\";\nexport const spaCodeAndNativeAccountIdPresent =\n    \"spa_code_and_nativeAccountId_present\";\nexport const databaseUnavailable = \"database_unavailable\";\nexport const unableToAcquireTokenFromNativePlatform =\n    \"unable_to_acquire_token_from_native_platform\";\nexport const nativeHandshakeTimeout = \"native_handshake_timeout\";\nexport const nativeExtensionNotInstalled = \"native_extension_not_installed\";\nexport const nativeConnectionNotEstablished =\n    \"native_connection_not_established\";\nexport const uninitializedPublicClientApplication =\n    \"uninitialized_public_client_application\";\nexport const nativePromptNotSupported = \"native_prompt_not_supported\";\nexport const invalidBase64String = \"invalid_base64_string\";\nexport const invalidPopTokenRequest = \"invalid_pop_token_request\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserAuthErrorCodes from \"./BrowserAuthErrorCodes\";\nexport { BrowserAuthErrorCodes }; // Allow importing as \"BrowserAuthErrorCodes\"\n\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessages = {\n    [BrowserAuthErrorCodes.pkceNotCreated]:\n        \"The PKCE code challenge and verifier could not be generated.\",\n    [BrowserAuthErrorCodes.cryptoNonExistent]:\n        \"The crypto object or function is not available.\",\n    [BrowserAuthErrorCodes.emptyNavigateUri]:\n        \"Navigation URI is empty. Please check stack trace for more info.\",\n    [BrowserAuthErrorCodes.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [BrowserAuthErrorCodes.noStateInHash]:\n        \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.unableToParseState]:\n        \"Unable to parse state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.stateInteractionTypeMismatch]:\n        \"Hash contains state but the interaction type does not match the caller.\",\n    [BrowserAuthErrorCodes.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [BrowserAuthErrorCodes.popupWindowError]:\n        \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [BrowserAuthErrorCodes.emptyWindowError]:\n        \"window.open returned null or undefined window object.\",\n    [BrowserAuthErrorCodes.userCancelled]: \"User cancelled the flow.\",\n    [BrowserAuthErrorCodes.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.redirectInIframe]:\n        \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [BrowserAuthErrorCodes.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.blockNestedPopups]:\n        \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [BrowserAuthErrorCodes.iframeClosedPrematurely]:\n        \"The iframe being monitored was closed prematurely.\",\n    [BrowserAuthErrorCodes.silentLogoutUnsupported]:\n        \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [BrowserAuthErrorCodes.noAccountError]:\n        \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [BrowserAuthErrorCodes.silentPromptValueError]:\n        \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [BrowserAuthErrorCodes.noTokenRequestCacheError]:\n        \"No token request found in cache.\",\n    [BrowserAuthErrorCodes.unableToParseTokenRequestCacheError]:\n        \"The cached token request could not be parsed.\",\n    [BrowserAuthErrorCodes.noCachedAuthorityError]:\n        \"No cached authority found.\",\n    [BrowserAuthErrorCodes.authRequestNotSetError]:\n        \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [BrowserAuthErrorCodes.invalidCacheType]: \"Invalid cache type\",\n    [BrowserAuthErrorCodes.nonBrowserEnvironment]:\n        \"Login and token requests are not supported in non-browser environments.\",\n    [BrowserAuthErrorCodes.databaseNotOpen]: \"Database is not open!\",\n    [BrowserAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [BrowserAuthErrorCodes.postRequestFailed]:\n        \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [BrowserAuthErrorCodes.getRequestFailed]:\n        \"Network request failed. Please check the network trace to determine root cause.\",\n    [BrowserAuthErrorCodes.failedToParseResponse]:\n        \"Failed to parse network response. Check network trace.\",\n    [BrowserAuthErrorCodes.unableToLoadToken]: \"Error loading token to cache.\",\n    [BrowserAuthErrorCodes.cryptoKeyNotFound]:\n        \"Cryptographic Key or Keypair not found in browser storage.\",\n    [BrowserAuthErrorCodes.authCodeRequired]:\n        \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired]:\n        \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent]:\n        \"Request cannot contain both spa code and native account id.\",\n    [BrowserAuthErrorCodes.databaseUnavailable]:\n        \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativeHandshakeTimeout]:\n        \"Timed out while attempting to establish connection to browser extension\",\n    [BrowserAuthErrorCodes.nativeExtensionNotInstalled]:\n        \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [BrowserAuthErrorCodes.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativePromptNotSupported]:\n        \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [BrowserAuthErrorCodes.invalidBase64String]:\n        \"Invalid base64 encoded string.\",\n    [BrowserAuthErrorCodes.invalidPopTokenRequest]:\n        \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use exported BrowserAuthErrorCodes instead.\n * In your app you can do :\n * ```\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\n * ```\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: BrowserAuthErrorCodes.pkceNotCreated,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.pkceNotCreated],\n    },\n    cryptoDoesNotExist: {\n        code: BrowserAuthErrorCodes.cryptoNonExistent,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoNonExistent],\n    },\n    emptyNavigateUriError: {\n        code: BrowserAuthErrorCodes.emptyNavigateUri,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyNavigateUri],\n    },\n    hashEmptyError: {\n        code: BrowserAuthErrorCodes.hashEmptyError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.hashEmptyError],\n    },\n    hashDoesNotContainStateError: {\n        code: BrowserAuthErrorCodes.noStateInHash,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noStateInHash],\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: BrowserAuthErrorCodes.hashDoesNotContainKnownProperties,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n        ],\n    },\n    unableToParseStateError: {\n        code: BrowserAuthErrorCodes.unableToParseState,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseState\n        ],\n    },\n    stateInteractionTypeMismatchError: {\n        code: BrowserAuthErrorCodes.stateInteractionTypeMismatch,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        ],\n    },\n    interactionInProgress: {\n        code: BrowserAuthErrorCodes.interactionInProgress,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.interactionInProgress\n        ],\n    },\n    popupWindowError: {\n        code: BrowserAuthErrorCodes.popupWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.popupWindowError],\n    },\n    emptyWindowError: {\n        code: BrowserAuthErrorCodes.emptyWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyWindowError],\n    },\n    userCancelledError: {\n        code: BrowserAuthErrorCodes.userCancelled,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.userCancelled],\n    },\n    monitorPopupTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorPopupTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorPopupTimeout\n        ],\n    },\n    monitorIframeTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorWindowTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorWindowTimeout\n        ],\n    },\n    redirectInIframeError: {\n        code: BrowserAuthErrorCodes.redirectInIframe,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.redirectInIframe],\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: BrowserAuthErrorCodes.blockIframeReload,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockIframeReload],\n    },\n    blockAcquireTokenInPopupsError: {\n        code: BrowserAuthErrorCodes.blockNestedPopups,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockNestedPopups],\n    },\n    iframeClosedPrematurelyError: {\n        code: BrowserAuthErrorCodes.iframeClosedPrematurely,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.iframeClosedPrematurely\n        ],\n    },\n    silentLogoutUnsupportedError: {\n        code: BrowserAuthErrorCodes.silentLogoutUnsupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentLogoutUnsupported\n        ],\n    },\n    noAccountError: {\n        code: BrowserAuthErrorCodes.noAccountError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noAccountError],\n    },\n    silentPromptValueError: {\n        code: BrowserAuthErrorCodes.silentPromptValueError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentPromptValueError\n        ],\n    },\n    noTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.noTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noTokenRequestCacheError\n        ],\n    },\n    unableToParseTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.unableToParseTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n        ],\n    },\n    noCachedAuthorityError: {\n        code: BrowserAuthErrorCodes.noCachedAuthorityError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noCachedAuthorityError\n        ],\n    },\n    authRequestNotSet: {\n        code: BrowserAuthErrorCodes.authRequestNotSetError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authRequestNotSetError\n        ],\n    },\n    invalidCacheType: {\n        code: BrowserAuthErrorCodes.invalidCacheType,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.invalidCacheType],\n    },\n    notInBrowserEnvironment: {\n        code: BrowserAuthErrorCodes.nonBrowserEnvironment,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        ],\n    },\n    databaseNotOpen: {\n        code: BrowserAuthErrorCodes.databaseNotOpen,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.databaseNotOpen],\n    },\n    noNetworkConnectivity: {\n        code: BrowserAuthErrorCodes.noNetworkConnectivity,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    postRequestFailed: {\n        code: BrowserAuthErrorCodes.postRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.postRequestFailed],\n    },\n    getRequestFailed: {\n        code: BrowserAuthErrorCodes.getRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.getRequestFailed],\n    },\n    failedToParseNetworkResponse: {\n        code: BrowserAuthErrorCodes.failedToParseResponse,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.failedToParseResponse\n        ],\n    },\n    unableToLoadTokenError: {\n        code: BrowserAuthErrorCodes.unableToLoadToken,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.unableToLoadToken],\n    },\n    signingKeyNotFoundInStorage: {\n        code: BrowserAuthErrorCodes.cryptoKeyNotFound,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoKeyNotFound],\n    },\n    authCodeRequired: {\n        code: BrowserAuthErrorCodes.authCodeRequired,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.authCodeRequired],\n    },\n    authCodeOrNativeAccountRequired: {\n        code: BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n        ],\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n        ],\n    },\n    databaseUnavailable: {\n        code: BrowserAuthErrorCodes.databaseUnavailable,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.databaseUnavailable\n        ],\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n        ],\n    },\n    nativeHandshakeTimeout: {\n        code: BrowserAuthErrorCodes.nativeHandshakeTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeHandshakeTimeout\n        ],\n    },\n    nativeExtensionNotInstalled: {\n        code: BrowserAuthErrorCodes.nativeExtensionNotInstalled,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeExtensionNotInstalled\n        ],\n    },\n    nativeConnectionNotEstablished: {\n        code: BrowserAuthErrorCodes.nativeConnectionNotEstablished,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\n        ],\n    },\n    uninitializedPublicClientApplication: {\n        code: BrowserAuthErrorCodes.uninitializedPublicClientApplication,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        ],\n    },\n    nativePromptNotSupported: {\n        code: BrowserAuthErrorCodes.nativePromptNotSupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativePromptNotSupported\n        ],\n    },\n    invalidBase64StringError: {\n        code: BrowserAuthErrorCodes.invalidBase64String,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidBase64String\n        ],\n    },\n    invalidPopTokenRequest: {\n        code: BrowserAuthErrorCodes.invalidPopTokenRequest,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidPopTokenRequest\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\n\nexport function createBrowserAuthError(errorCode: string): BrowserAuthError {\n    return new BrowserAuthError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    INetworkModule,\n    NetworkRequestOptions,\n    NetworkResponse,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.getRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.postRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SystemOptions,\n    LoggerOptions,\n    INetworkModule,\n    DEFAULT_SYSTEM_OPTIONS,\n    Constants,\n    ProtocolMode,\n    OIDCOptions,\n    ServerResponseType,\n    LogLevel,\n    StubbedNetworkModule,\n    AzureCloudInstance,\n    AzureCloudOptions,\n    ApplicationTelemetry,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    IPerformanceClient,\n    StubPerformanceClient,\n    Logger,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheLocation,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\nimport { FetchClient } from \"../network/FetchClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 10000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that configures options for the OIDC protocol mode.\n     */\n    OIDCOptions?: OIDCOptions;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n    /**\n     * App supports nested app auth or not; defaults to\n     *\n     * @deprecated This flag is deprecated and will be removed in the next major version. createNestablePublicClientApplication should be used instead.\n     */\n    supportsNestedAppAuth?: boolean;\n};\n\n/** @internal */\nexport type InternalAuthOptions = Required<BrowserAuthOptions> & {\n    OIDCOptions: Required<OIDCOptions>;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * Used to specify the temporaryCacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    temporaryCacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n     */\n    secureCookies?: boolean;\n    /**\n     * If set, MSAL will attempt to migrate cache entries from older versions on initialization. By default this flag is set to true if cacheLocation is localStorage, otherwise false.\n     */\n    cacheMigrationEnabled?: boolean;\n    /**\n     * Flag that determines whether access tokens are stored based on requested claims\n     */\n    claimsBasedCachingEnabled?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     * @deprecated This was previously needed for older browsers which are no longer supported by MSAL.js. This option will be removed in the next major version\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows)\n     */\n    allowNativeBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n    /**\n     * Sets the interval length in milliseconds for polling the location attribute in popup windows (default is 30ms)\n     */\n    pollIntervalMilliseconds?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n\n    client?: IPerformanceClient;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions;\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions;\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions;\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions;\n};\n\n/** @internal */\nexport type BrowserConfiguration = {\n    auth: InternalAuthOptions;\n    cache: Required<CacheOptions>;\n    system: Required<BrowserSystemOptions>;\n    telemetry: Required<BrowserTelemetryOptions>;\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration(\n    {\n        auth: userInputAuth,\n        cache: userInputCache,\n        system: userInputSystem,\n        telemetry: userInputTelemetry,\n    }: Configuration,\n    isBrowserEnvironment: boolean\n): BrowserConfiguration {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: InternalAuthOptions = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n        supportsNestedAppAuth: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled:\n            userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n                ? true\n                : false,\n        claimsBasedCachingEnabled: false,\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout:\n            userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n\n    const providedSystemOptions: Required<BrowserSystemOptions> = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (\n        userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions\n    ) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(\n            JSON.stringify(\n                createClientConfigurationError(\n                    ClientConfigurationErrorCodes.cannotSetOIDCOptions\n                )\n            )\n        );\n    }\n\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (\n        userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker\n    ) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        );\n    }\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n\n    return overlayedConfig;\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"3.20.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger, LogLevel } from \"@azure/msal-common\";\nimport {\n    BrowserConfiguration,\n    buildConfiguration,\n    Configuration,\n} from \"../config/Configuration\";\nimport { version, name } from \"../packageMetadata\";\nimport {\n    BrowserCacheLocation,\n    LOG_LEVEL_CACHE_KEY,\n    LOG_PII_CACHE_KEY,\n} from \"../utils/BrowserConstants\";\n\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nexport abstract class BaseOperatingContext {\n    protected logger: Logger;\n    protected config: BrowserConfiguration;\n    protected available: boolean;\n    protected browserEnvironment: boolean;\n\n    protected static loggerCallback(level: LogLevel, message: string): void {\n        switch (level) {\n            case LogLevel.Error:\n                // eslint-disable-next-line no-console\n                console.error(message);\n                return;\n            case LogLevel.Info:\n                // eslint-disable-next-line no-console\n                console.info(message);\n                return;\n            case LogLevel.Verbose:\n                // eslint-disable-next-line no-console\n                console.debug(message);\n                return;\n            case LogLevel.Warning:\n                // eslint-disable-next-line no-console\n                console.warn(message);\n                return;\n            default:\n                // eslint-disable-next-line no-console\n                console.log(message);\n                return;\n        }\n    }\n\n    constructor(config: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n        this.config = buildConfiguration(config, this.browserEnvironment);\n\n        let sessionStorage: Storage | undefined;\n        try {\n            sessionStorage = window[BrowserCacheLocation.SessionStorage];\n            // Mute errors if it's a non-browser environment or cookies are blocked.\n        } catch (e) {}\n\n        const logLevelKey = sessionStorage?.getItem(LOG_LEVEL_CACHE_KEY);\n        const piiLoggingKey = sessionStorage\n            ?.getItem(LOG_PII_CACHE_KEY)\n            ?.toLowerCase();\n\n        const piiLoggingEnabled =\n            piiLoggingKey === \"true\"\n                ? true\n                : piiLoggingKey === \"false\"\n                ? false\n                : undefined;\n        const loggerOptions = { ...this.config.system.loggerOptions };\n\n        const logLevel =\n            logLevelKey && Object.keys(LogLevel).includes(logLevelKey)\n                ? LogLevel[logLevelKey]\n                : undefined;\n        if (logLevel) {\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\n            loggerOptions.logLevel = logLevel;\n        }\n        if (piiLoggingEnabled !== undefined) {\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\n        }\n\n        this.logger = new Logger(loggerOptions, name, version);\n        this.available = false;\n    }\n\n    /**\n     * returns the name of the module containing the API controller associated with this operating context\n     */\n    abstract getModuleName(): string;\n\n    /**\n     * returns the string identifier of this operating context\n     */\n    abstract getId(): string;\n\n    /**\n     * returns a boolean indicating whether this operating context is present\n     */\n    abstract initialize(): Promise<boolean>;\n\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    isAvailable(): boolean {\n        return this.available;\n    }\n\n    isBrowserEnvironment(): boolean {\n        return this.browserEnvironment;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseOperatingContext } from \"./BaseOperatingContext\";\n\nexport class StandardOperatingContext extends BaseOperatingContext {\n    /*\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n     * containing the implementation for this operating context\n     */\n    static readonly MODULE_NAME: string = \"\";\n\n    /**\n     * Unique identifier for the operating context\n     */\n    static readonly ID: string = \"StandardOperatingContext\";\n\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName(): string {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId(): string {\n        return StandardOperatingContext.ID;\n    }\n\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize(): Promise<boolean> {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const missingKidError = \"missing_kid_error\";\nexport const missingAlgError = \"missing_alg_error\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as JoseHeaderErrorCodes from \"./JoseHeaderErrorCodes\";\nexport { JoseHeaderErrorCodes };\n\nexport const JoseHeaderErrorMessages = {\n    [JoseHeaderErrorCodes.missingKidError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [JoseHeaderErrorCodes.missingAlgError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n\n/** Returns JoseHeaderError object */\nexport function createJoseHeaderError(code: string): JoseHeaderError {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    JoseHeaderErrorCodes,\n    createJoseHeaderError,\n} from \"../error/JoseHeaderError\";\nimport { JsonWebTokenTypes } from \"../utils/Constants\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonWebTokenTypes;\n    alg?: string;\n    kid?: string;\n};\n\n/** @internal */\nexport class JoseHeader {\n    public typ?: JsonWebTokenTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor(options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingKidError);\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingAlgError);\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nexport function urlEncode(input: string): string {\n    return encodeURIComponent(\n        base64Encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n    );\n}\n\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nexport function urlEncodeArr(inputArr: Uint8Array): string {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nexport function base64Encode(input: string): string {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes: Uint8Array): string {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\n        \"\"\n    );\n    return btoa(binString);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\n\n/**\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\n * @param input\n */\nexport function base64Decode(input: string): string {\n    return new TextDecoder().decode(base64DecToArr(input));\n}\n\n/**\n * Decodes base64 into Uint8Array\n * @param base64String\n */\nfunction base64DecToArr(base64String: string): Uint8Array {\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (encodedString.length % 4) {\n        case 0:\n            break;\n        case 2:\n            encodedString += \"==\";\n            break;\n        case 3:\n            encodedString += \"=\";\n            break;\n        default:\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.invalidBase64String\n            );\n    }\n    const binString = atob(encodedString);\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n} from \"@azure/msal-common\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\nimport { urlEncodeArr } from \"../encode/Base64Encode\";\n\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n// UUID hex digits\nconst UUID_CHARS = \"0123456789abcdef\";\n// Array to store UINT32 random value\nconst UINT32_ARR = new Uint32Array(1);\n\nconst keygenAlgorithmOptions: RsaHashedKeyGenParams = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n\n/**\n * Check whether browser crypto is available.\n */\nexport function validateCryptoAvailable(logger: Logger): void {\n    if (\"crypto\" in window) {\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n    } else {\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.cryptoNonExistent);\n    }\n}\n\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString {string} data string\n * @param performanceClient {?IPerformanceClient}\n * @param correlationId {?string} correlation id\n */\nexport async function sha256Digest(\n    dataString: string,\n    performanceClient?: IPerformanceClient,\n    correlationId?: string\n): Promise<ArrayBuffer> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.Sha256Digest,\n        correlationId\n    );\n    const encoder = new TextEncoder();\n    const data = encoder.encode(dataString);\n    return window.crypto.subtle.digest(\n        S256_HASH_ALG,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nexport function getRandomValues(dataBuffer: Uint8Array): Uint8Array {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n\n/**\n * Returns random Uint32 value.\n * @returns {number}\n */\nfunction getRandomUint32(): number {\n    window.crypto.getRandomValues(UINT32_ARR);\n    return UINT32_ARR[0];\n}\n\n/**\n * Creates a UUID v7 from the current timestamp.\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\n * @returns {number}\n */\nexport function createNewGuid(): string {\n    const currentTimestamp = Date.now();\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\n\n    // Result byte array\n    const bytes = new Uint8Array(16);\n    // A 12-bit `rand_a` field value\n    const randA = Math.trunc(baseRand / 2 ** 30);\n    // The higher 30 bits of 62-bit `rand_b` field value\n    const randBHi = baseRand & (2 ** 30 - 1);\n    // The lower 32 bits of 62-bit `rand_b` field value\n    const randBLo = getRandomUint32();\n\n    bytes[0] = currentTimestamp / 2 ** 40;\n    bytes[1] = currentTimestamp / 2 ** 32;\n    bytes[2] = currentTimestamp / 2 ** 24;\n    bytes[3] = currentTimestamp / 2 ** 16;\n    bytes[4] = currentTimestamp / 2 ** 8;\n    bytes[5] = currentTimestamp;\n    bytes[6] = 0x70 | (randA >>> 8);\n    bytes[7] = randA;\n    bytes[8] = 0x80 | (randBHi >>> 24);\n    bytes[9] = randBHi >>> 16;\n    bytes[10] = randBHi >>> 8;\n    bytes[11] = randBHi;\n    bytes[12] = randBLo >>> 24;\n    bytes[13] = randBLo >>> 16;\n    bytes[14] = randBLo >>> 8;\n    bytes[15] = randBLo;\n\n    let text = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\n            text += \"-\";\n        }\n    }\n    return text;\n}\n\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nexport async function generateKeyPair(\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKeyPair> {\n    return window.crypto.subtle.generateKey(\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKeyPair>;\n}\n\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nexport async function exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n    return window.crypto.subtle.exportKey(\n        KEY_FORMAT_JWK,\n        key\n    ) as Promise<JsonWebKey>;\n}\n\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nexport async function importJwk(\n    key: JsonWebKey,\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKey> {\n    return window.crypto.subtle.importKey(\n        KEY_FORMAT_JWK,\n        key,\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKey>;\n}\n\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nexport async function sign(\n    key: CryptoKey,\n    data: ArrayBuffer\n): Promise<ArrayBuffer> {\n    return window.crypto.subtle.sign(\n        keygenAlgorithmOptions,\n        key,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Returns the SHA-256 hash of an input string\n * @param plainText\n */\nexport async function hashString(plainText: string): Promise<string> {\n    const hashBuffer: ArrayBuffer = await sha256Digest(plainText);\n    const hashBytes = new Uint8Array(hashBuffer);\n    return urlEncodeArr(hashBytes);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase | undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\n                \"upgradeneeded\",\n                (e: IDBVersionChangeEvent) => {\n                    const event = e as IDBOpenOnUpgradeNeededEvent;\n                    event.target.result.createObjectStore(this.tableName);\n                }\n            );\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () =>\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseUnavailable\n                    )\n                )\n            );\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n\n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\n            deleteDbRequest.addEventListener(\"success\", () => {\n                clearTimeout(id);\n                return resolve(true);\n            });\n            deleteDbRequest.addEventListener(\"blocked\", () => {\n                clearTimeout(id);\n                return resolve(true);\n            });\n            deleteDbRequest.addEventListener(\"error\", () => {\n                clearTimeout(id);\n                return reject(false);\n            });\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear(): void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (\n            error instanceof BrowserAuthError &&\n            error.errorCode === BrowserAuthErrorCodes.databaseUnavailable\n        ) {\n            this.logger.error(\n                \"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n            );\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\n                    \"Queried item not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\n                    \"In-memory cache is empty, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\n                    \"Key not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory(): void {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore deleted`);\n    }\n\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n\n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    IPerformanceClient,\n    JoseHeader,\n    Logger,\n    PerformanceEvents,\n    ShrOptions,\n    SignedHttpRequest,\n    SignedHttpRequestParameters,\n} from \"@azure/msal-common\";\nimport { base64Encode, urlEncode, urlEncodeArr } from \"../encode/Base64Encode\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport * as BrowserCrypto from \"./BrowserCrypto\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey;\n    privateKey: CryptoKey;\n    requestMethod?: string;\n    requestUri?: string;\n};\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: AsyncMemoryStorage<CachedKeyPair>;\n\n    constructor(logger: Logger, performanceClient?: IPerformanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        BrowserCrypto.validateCryptoAvailable(logger);\n        this.cache = new AsyncMemoryStorage<CachedKeyPair>(this.logger);\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return BrowserCrypto.createNewGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input: string): string {\n        return base64Encode(input);\n    }\n\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input: string): string {\n        return base64Decode(input);\n    }\n\n    /**\n     * Encodes input string to base64 URL safe string.\n     * @param input\n     */\n    base64UrlEncode(input: string): string {\n        return urlEncode(input);\n    }\n\n    /**\n     * Stringifies and base64Url encodes input public key\n     * @param inputKid\n     * @returns Base64Url encoded public key\n     */\n    encodeKid(inputKid: string): string {\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        const publicKeyThumbMeasurement =\n            this.performanceClient?.startMeasurement(\n                PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n                request.correlationId\n            );\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await BrowserCrypto.generateKeyPair(\n            CryptoOps.EXTRACTABLE,\n            CryptoOps.POP_KEY_USAGES\n        );\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.publicKey\n        );\n\n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n\n        const publicJwkString: string =\n            getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.privateKey\n        );\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey =\n            await BrowserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.removeItem(kid);\n        const keyFound = await this.cache.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        // Delete in-memory keystores\n        this.cache.clearInMemory();\n\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.cache.clearPersistent();\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(\n                    `Clearing keystore failed with error: ${e.message}`\n                );\n            } else {\n                this.logger.error(\n                    \"Clearing keystore failed with unknown error\"\n                );\n            }\n\n            return false;\n        }\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(\n            PerformanceEvents.CryptoOptsSignJwt,\n            correlationId\n        );\n        const cachedKeyPair = await this.cache.getItem(kid);\n\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.cryptoKeyNotFound\n            );\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await BrowserCrypto.exportJwk(\n            cachedKeyPair.publicKey\n        );\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            ...shrOptions?.header,\n            alg: publicKeyJwk.alg,\n            kid: encodedKeyIdThumbprint,\n        });\n\n        const encodedShrHeader = urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const encoder = new TextEncoder();\n        const tokenBuffer = encoder.encode(tokenString);\n        const signatureBuffer = await BrowserCrypto.sign(\n            cachedKeyPair.privateKey,\n            tokenBuffer\n        );\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        return BrowserCrypto.hashString(plainText);\n    }\n}\n\nfunction getSortedObjectString(obj: object): string {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invoke = <T extends Array<any>, U>(\n    callback: (...args: T) => U,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): U => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields(\n                { [eventCount]: 1 },\n                correlationId\n            );\n        }\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        } catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            } catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end(\n                {\n                    success: false,\n                },\n                e\n            );\n            throw e;\n        }\n    };\n};\n\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invokeAsync = <T extends Array<any>, U>(\n    callback: (...args: T) => Promise<U>,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): Promise<U> => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields(\n                { [eventCount]: 1 },\n                correlationId\n            );\n        }\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n                logger.trace(`Returning result from ${eventName}`);\n                inProgressEvent?.end({\n                    success: true,\n                });\n                return response;\n            })\n            .catch((e) => {\n                logger.trace(`Error occurred in ${eventName}`);\n                try {\n                    logger.trace(JSON.stringify(e));\n                } catch (e) {\n                    logger.trace(\"Unable to print error message.\");\n                }\n                inProgressEvent?.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n                throw e;\n            });\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport {\n    Constants,\n    RegionDiscoverySources,\n    ResponseCodes,\n} from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Logger\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // CorrelationId\n    protected correlationId: string | undefined;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(\n        networkInterface: INetworkModule,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    public async detectRegion(\n        environmentRegion: string | undefined,\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryDetectRegion,\n            this.correlationId\n        );\n\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n\n            try {\n                const localIMDSVersionResponse = await invokeAsync(\n                    this.getRegionFromIMDS.bind(this),\n                    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(Constants.IMDS_VERSION, options);\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpSuccess\n                ) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpBadRequest\n                ) {\n                    const currentIMDSVersion = await invokeAsync(\n                        this.getCurrentVersion.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await invokeAsync(\n                        this.getRegionFromIMDS.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(currentIMDSVersion, options);\n                    if (\n                        currentIMDSVersionResponse.status ===\n                        ResponseCodes.httpSuccess\n                    ) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        } else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(\n        version: string,\n        options: ImdsOptions\n    ): Promise<NetworkResponse<string>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            this.correlationId\n        );\n        return this.networkInterface.sendGetRequestAsync<string>(\n            `${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`,\n            options,\n            Constants.IMDS_TIMEOUT\n        );\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(\n        options: ImdsOptions\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            this.correlationId\n        );\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(\n                    `${Constants.IMDS_ENDPOINT}?format=json`,\n                    options\n                );\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (\n                response.status === ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0\n            ) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport {\n    isOpenIdConfigResponse,\n    OpenIdConfigResponse,\n} from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    AADAuthorityConstants,\n    AuthorityMetadataSource,\n    Constants,\n    RegionDiscoveryOutcomes,\n} from \"../utils/Constants\";\nimport {\n    EndpointMetadata,\n    getCloudDiscoveryMetadataFromHardcodedValues,\n    getCloudDiscoveryMetadataFromNetworkResponse,\n    InstanceDiscoveryMetadataAliases,\n} from \"./AuthorityMetadata\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport {\n    AuthorityOptions,\n    AzureCloudInstance,\n    StaticAuthorityOptions,\n} from \"./AuthorityOptions\";\nimport {\n    CloudInstanceDiscoveryResponse,\n    isCloudInstanceDiscoveryResponse,\n} from \"./CloudInstanceDiscoveryResponse\";\nimport {\n    CloudInstanceDiscoveryErrorResponse,\n    isCloudInstanceDiscoveryErrorResponse,\n} from \"./CloudInstanceDiscoveryErrorResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { AzureCloudOptions } from \"../config/ClientConfiguration\";\nimport { Logger } from \"../logger/Logger\";\nimport { AuthError } from \"../error/AuthError\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nexport class Authority {\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Logger object\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // Correlation Id\n    protected correlationId: string;\n    // Indicates if the authority is fake, for the purpose of a Managed Identity Application\n    private managedIdentity: boolean;\n    // Reserved tenant domain names that will not be replaced with tenant id\n    private static reservedTenantDomains: Set<string> = new Set([\n        \"{tenant}\",\n        \"{tenantid}\",\n        AADAuthorityConstants.COMMON,\n        AADAuthorityConstants.CONSUMERS,\n        AADAuthorityConstants.ORGANIZATIONS,\n    ]);\n\n    constructor(\n        authority: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        correlationId: string,\n        performanceClient?: IPerformanceClient,\n        managedIdentity?: boolean\n    ) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.managedIdentity = managedIdentity || false;\n        this.regionDiscovery = new RegionDiscovery(\n            networkInterface,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private getAuthorityType(authorityUri: IUri): AuthorityType {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n                default:\n                    break;\n            }\n        }\n        return AuthorityType.Default;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(\n                this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\")\n            );\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.endSessionEndpointNotSupported\n                );\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private canReplaceTenant(authorityUri: IUri): boolean {\n        return (\n            authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(\n                authorityUri.PathSegments[0]\n            ) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode === ProtocolMode.AAD\n        );\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(\n            this.metadata.canonical_authority\n        );\n        const cachedAuthorityUrlComponents =\n            cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts =\n            this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (\n                index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)\n            ) {\n                const tenantId = new UrlString(\n                    this.metadata.authorization_endpoint\n                ).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(\n                        `Replacing tenant domain name ${cachedPart} with id ${tenantId}`\n                    );\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(\n                    `/${cachedPart}/`,\n                    `/${currentPart}/`\n                );\n            }\n        });\n\n        return this.replaceTenant(endpoint);\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (\n            this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode !== ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))\n        ) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whether or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            this.correlationId\n        );\n\n        const metadataEntity = this.getCurrentMetadataEntity();\n\n        const cloudDiscoverySource = await invokeAsync(\n            this.updateCloudDiscoveryMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(\n            this.hostnameAndPort,\n            metadataEntity.preferred_network\n        );\n        const endpointSource = await invokeAsync(\n            this.updateEndpointMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n        this.performanceClient?.addFields(\n            {\n                cloudDiscoverySource: cloudDiscoverySource,\n                authorityEndpointSource: endpointSource,\n            },\n            this.correlationId\n        );\n    }\n\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    private getCurrentMetadataEntity(): AuthorityMetadataEntity {\n        let metadataEntity: AuthorityMetadataEntity | null =\n            this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n\n        if (!metadataEntity) {\n            metadataEntity = {\n                aliases: [],\n                preferred_cache: this.hostnameAndPort,\n                preferred_network: this.hostnameAndPort,\n                canonical_authority: this.canonicalAuthority,\n                authorization_endpoint: \"\",\n                token_endpoint: \"\",\n                end_session_endpoint: \"\",\n                issuer: \"\",\n                aliasesFromNetwork: false,\n                endpointsFromNetwork: false,\n                expiresAt: CacheHelpers.generateAuthorityMetadataExpiresAt(),\n                jwks_uri: \"\",\n            };\n        }\n        return metadataEntity;\n    }\n\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    private updateCachedMetadata(\n        metadataEntity: AuthorityMetadataEntity,\n        cloudDiscoverySource: AuthorityMetadataSource | null,\n        endpointMetadataResult: {\n            source: AuthorityMetadataSource;\n            metadata?: OpenIdConfigResponse;\n        } | null\n    ): void {\n        if (\n            cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE\n        ) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.expiresAt =\n                CacheHelpers.generateAuthorityMetadataExpiresAt();\n            metadataEntity.canonical_authority = this.canonicalAuthority;\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(\n            metadataEntity.preferred_cache\n        );\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.correlationId\n        );\n\n        const localMetadata =\n            this.updateEndpointMetadataFromLocalSources(metadataEntity);\n\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (\n                localMetadata.source ===\n                AuthorityMetadataSource.HARDCODED_VALUES\n            ) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (\n                    this.authorityOptions.azureRegionConfiguration?.azureRegion\n                ) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await invokeAsync(\n                            this.updateMetadataWithRegionalInformation.bind(\n                                this\n                            ),\n                            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                            this.logger,\n                            this.performanceClient,\n                            this.correlationId\n                        )(localMetadata.metadata);\n                        CacheHelpers.updateAuthorityEndpointMetadata(\n                            metadataEntity,\n                            hardcodedMetadata,\n                            false\n                        );\n                        metadataEntity.canonical_authority =\n                            this.canonicalAuthority;\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n\n        // Get metadata from network if local sources aren't available\n        let metadata = await invokeAsync(\n            this.getEndpointMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(\n                    this.updateMetadataWithRegionalInformation.bind(this),\n                    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(metadata);\n            }\n\n            CacheHelpers.updateAuthorityEndpointMetadata(\n                metadataEntity,\n                metadata,\n                true\n            );\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(\n                ClientAuthErrorCodes.openIdConfigError,\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    private updateEndpointMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): {\n        source: AuthorityMetadataSource;\n        metadata?: OpenIdConfigResponse;\n    } | null {\n        this.logger.verbose(\n            \"Attempting to get endpoint metadata from authority configuration\"\n        );\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\n                \"Found endpoint metadata in authority configuration\"\n            );\n            CacheHelpers.updateAuthorityEndpointMetadata(\n                metadataEntity,\n                configMetadata,\n                false\n            );\n            return {\n                source: AuthorityMetadataSource.CONFIG,\n            };\n        }\n\n        this.logger.verbose(\n            \"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\"\n        );\n\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                CacheHelpers.updateAuthorityEndpointMetadata(\n                    metadataEntity,\n                    hardcodedMetadata,\n                    false\n                );\n                return {\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            } else {\n                this.logger.verbose(\n                    \"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\"\n                );\n            }\n        }\n\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired =\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: AuthorityMetadataSource.CACHE };\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(\n        metadataEntity: AuthorityMetadataEntity\n    ): boolean {\n        const cachedAuthorityUrl = new UrlString(\n            metadataEntity.canonical_authority\n        );\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return (\n            cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length\n        );\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(\n                    this.authorityOptions.authorityMetadata\n                ) as OpenIdConfigResponse;\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidAuthorityMetadata\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.correlationId\n        );\n\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        const openIdConfigurationEndpoint =\n            this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(\n            `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`\n        );\n\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(\n                    openIdConfigurationEndpoint,\n                    options\n                );\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            } else {\n                this.logger.verbose(\n                    `Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`\n                );\n                return null;\n            }\n        } catch (e) {\n            this.logger.verbose(\n                `Authority.getEndpointMetadataFromNetwork: ${e}`\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.hostnameAndPort in EndpointMetadata) {\n            return EndpointMetadata[this.hostnameAndPort];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    private async updateMetadataWithRegionalInformation(\n        metadata: OpenIdConfigResponse\n    ): Promise<OpenIdConfigResponse> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            this.correlationId\n        );\n\n        const userConfiguredAzureRegion =\n            this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (userConfiguredAzureRegion) {\n            if (\n                userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    userConfiguredAzureRegion\n                );\n            }\n\n            const autodetectedRegionName = await invokeAsync(\n                this.regionDiscovery.detectRegion.bind(this.regionDiscovery),\n                PerformanceEvents.RegionDiscoveryDetectRegion,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                this.authorityOptions.azureRegionConfiguration\n                    ?.environmentRegion,\n                this.regionDiscoveryMetadata\n            );\n\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    autodetectedRegionName\n                );\n            }\n\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    private async updateCloudDiscoveryMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.correlationId\n        );\n        const localMetadataSource =\n            this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n\n        // Fallback to network as metadata source\n        const metadata = await invokeAsync(\n            this.getCloudDiscoveryMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n\n        if (metadata) {\n            CacheHelpers.updateCloudDiscoveryMetadata(\n                metadataEntity,\n                metadata,\n                true\n            );\n            return AuthorityMetadataSource.NETWORK;\n        }\n\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.untrustedAuthority\n        );\n    }\n\n    private updateCloudDiscoveryMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): AuthorityMetadataSource | null {\n        this.logger.verbose(\n            \"Attempting to get cloud discovery metadata  from authority configuration\"\n        );\n        this.logger.verbosePii(\n            `Known Authorities: ${\n                this.authorityOptions.knownAuthorities ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Authority Metadata: ${\n                this.authorityOptions.authorityMetadata ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Canonical Authority: ${\n                metadataEntity.canonical_authority || Constants.NOT_APPLICABLE\n            }`\n        );\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\n                \"Found cloud discovery metadata in authority configuration\"\n            );\n            CacheHelpers.updateCloudDiscoveryMetadata(\n                metadataEntity,\n                metadata,\n                false\n            );\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\n            \"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\"\n        );\n\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                getCloudDiscoveryMetadataFromHardcodedValues(\n                    this.hostnameAndPort\n                );\n            if (hardcodedMetadata) {\n                this.logger.verbose(\n                    \"Found cloud discovery metadata from hardcoded values.\"\n                );\n                CacheHelpers.updateCloudDiscoveryMetadata(\n                    metadataEntity,\n                    hardcodedMetadata,\n                    false\n                );\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n\n            this.logger.verbose(\n                \"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        }\n\n        const metadataEntityExpired =\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\n                \"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\n                \"The cloud discovery metadata has been provided as a network response, in the config.\"\n            );\n            try {\n                this.logger.verbose(\n                    \"Attempting to parse the cloud discovery metadata.\"\n                );\n                const parsedResponse = JSON.parse(\n                    this.authorityOptions.cloudDiscoveryMetadata\n                ) as CloudInstanceDiscoveryResponse;\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n                    parsedResponse.metadata,\n                    this.hostnameAndPort\n                );\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\n                        \"There is returnable metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                    return metadata;\n                } else {\n                    this.logger.verbose(\n                        \"There is no metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                }\n            } catch (e) {\n                this.logger.verbose(\n                    \"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\"\n                );\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n                );\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\n                \"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.correlationId\n        );\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse\n            >(instanceDiscoveryEndpoint, options);\n            let typedResponseBody:\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse;\n            let metadata: Array<CloudDiscoveryMetadata>;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryResponse;\n                metadata = typedResponseBody.metadata;\n\n                this.logger.verbosePii(\n                    `tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`\n                );\n            } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(\n                    `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`\n                );\n\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryErrorResponse;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\n                        \"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\"\n                    );\n                    return null;\n                }\n\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`\n                );\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`\n                );\n\n                this.logger.warning(\n                    \"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\"\n                );\n                metadata = [];\n            } else {\n                this.logger.error(\n                    \"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\"\n                );\n                return null;\n            }\n\n            this.logger.verbose(\n                \"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            match = getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(\n                    `There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`\n                );\n            } else {\n                const typedError = error as Error;\n                this.logger.error(\n                    `A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`\n                );\n            }\n\n            return null;\n        }\n\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\n                \"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            this.logger.verbose(\n                \"Creating custom Authority for custom domain scenario.\"\n            );\n\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter(\n            (authority) => {\n                return (\n                    authority &&\n                    UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                        this.hostnameAndPort\n                );\n            }\n        );\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(\n        authorityString: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): string {\n        let authorityAzureCloudInstance;\n\n        if (\n            azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None\n        ) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(\n        host: string\n    ): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if (this.managedIdentity) {\n            return Constants.DEFAULT_AUTHORITY_HOST;\n        } else if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host: string): boolean {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(\n        host: string,\n        region: string,\n        queryString?: string\n    ): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(\n        metadata: OpenIdConfigResponse,\n        azureRegion: string\n    ): OpenIdConfigResponse {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.authorization_endpoint,\n                azureRegion\n            );\n\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.token_endpoint,\n                azureRegion\n            );\n\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(\n                    regionalMetadata.end_session_endpoint,\n                    azureRegion\n                );\n        }\n\n        return regionalMetadata;\n    }\n\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority: string): string {\n        let ciamAuthority = authority;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n\n        // check if transformation is needed\n        if (\n            authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(\n                Constants.CIAM_AUTH_URL\n            )\n        ) {\n            const tenantIdOrDomain =\n                authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n\n        return ciamAuthority;\n    }\n}\n\n/**\n * Extract tenantId from authority\n */\nexport function getTenantFromAuthorityString(\n    authority: string\n): string | undefined {\n    const authorityUrl = new UrlString(authority);\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\n    /**\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\n     *\n     * Note that we may not have any path segments in certain OIDC scenarios.\n     */\n    const tenantId =\n        authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\n\n    switch (tenantId) {\n        case AADAuthorityConstants.COMMON:\n        case AADAuthorityConstants.ORGANIZATIONS:\n        case AADAuthorityConstants.CONSUMERS:\n            return undefined;\n        default:\n            return tenantId;\n    }\n}\n\nexport function formatAuthorityUri(authorityUri: string): string {\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\n}\n\nexport function buildStaticAuthorityOptions(\n    authOptions: Partial<AuthorityOptions>\n): StaticAuthorityOptions {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata: CloudInstanceDiscoveryResponse | undefined =\n        undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n            );\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryErrorResponse = {\n    error: String;\n    error_description: String;\n    error_codes?: Array<Number>;\n    timestamp?: String;\n    trace_id?: String;\n    correlation_id?: String;\n    error_uri?: String;\n};\n\nexport function isCloudInstanceDiscoveryErrorResponse(\n    response: object\n): boolean {\n    return (\n        response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string;\n    meta?: Record<string, string>;\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string;\n    libraryState: LibraryStateObject;\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(\n        cryptoObj: ICrypto,\n        userState?: string,\n        meta?: Record<string, string>\n    ): string {\n        const libraryState = ProtocolUtils.generateLibraryState(\n            cryptoObj,\n            meta\n        );\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(\n        cryptoObj: ICrypto,\n        meta?: Record<string, string>\n    ): string {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid(),\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(\n        cryptoObj: ICrypto,\n        state: string\n    ): RequestStateObject {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        if (!state) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState =\n                splitState.length > 1\n                    ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                    : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(\n                libraryStateString\n            ) as LibraryStateObject;\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        } catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string;\n    type: CcsCredentialType;\n};\n\nexport const CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n} as const;\nexport type CcsCredentialType =\n    (typeof CcsCredentialType)[keyof typeof CcsCredentialType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (\n            (cacheLocation !== BrowserCacheLocation.LocalStorage &&\n                cacheLocation !== BrowserCacheLocation.SessionStorage) ||\n            !window[cacheLocation]\n        ) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\n            );\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport {\n    ICrypto,\n    RequestStateObject,\n    ProtocolUtils,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType;\n};\n\n/**\n * Extracts the BrowserStateObject from the state string.\n * @param browserCrypto\n * @param state\n */\nexport function extractBrowserRequestState(\n    browserCrypto: ICrypto,\n    state: string\n): BrowserStateObject | null {\n    if (!state) {\n        return null;\n    }\n\n    try {\n        const requestStateObj: RequestStateObject =\n            ProtocolUtils.parseRequestState(browserCrypto, state);\n        return requestStateObj.libraryState.meta as BrowserStateObject;\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    PersistentCacheKeys,\n    StringUtils,\n    CommonAuthorizationCodeRequest,\n    ICrypto,\n    AccountEntity,\n    IdTokenEntity,\n    AccessTokenEntity,\n    RefreshTokenEntity,\n    AppMetadataEntity,\n    CacheManager,\n    ServerTelemetryEntity,\n    ThrottlingEntity,\n    ProtocolUtils,\n    Logger,\n    AuthorityMetadataEntity,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AccountInfo,\n    ActiveAccountFilters,\n    CcsCredential,\n    CcsCredentialType,\n    AuthToken,\n    ValidCredentialType,\n    TokenKeys,\n    CredentialType,\n    CacheRecord,\n    AuthenticationScheme,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    PerformanceEvents,\n    IPerformanceClient,\n    StaticAuthorityOptions,\n    CacheHelpers,\n    StoreInCache,\n    CacheError,\n} from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    BrowserCacheLocation,\n    InteractionType,\n    TemporaryCacheKeys,\n    InMemoryCacheKeys,\n    StaticCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport { base64Encode } from \"../encode/Base64Encode\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Logger instance\n    protected logger: Logger;\n    // Telemetry perf client\n    protected performanceClient?: IPerformanceClient;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    protected readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(\n        clientId: string,\n        cacheConfig: Required<CacheOptions>,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        staticAuthorityOptions?: StaticAuthorityOptions,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(\n            this.cacheConfig.cacheLocation\n        );\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(\n            this.cacheConfig.temporaryCacheLocation,\n            this.cacheConfig.cacheLocation\n        );\n\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    protected setupBrowserStorage(\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    protected setupTemporaryCacheStorage(\n        temporaryCacheLocation: BrowserCacheLocation | string,\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(\n                        temporaryCacheLocation ||\n                            BrowserCacheLocation.SessionStorage\n                    );\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            PersistentCacheKeys.ID_TOKEN,\n            PersistentCacheKeys.CLIENT_INFO,\n            PersistentCacheKeys.ERROR,\n            PersistentCacheKeys.ERROR_DESC,\n        ];\n\n        keysToMigrate.forEach((cacheKey: string, index: number) => {\n            const value = values[index];\n            if (value) {\n                this.setTemporaryCache(cacheKey, value, true);\n            }\n        });\n    }\n\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    private createKeyMaps(): void {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\n                \"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\"\n            );\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case CredentialType.ID_TOKEN:\n                                if (CacheHelpers.isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const idTokenEntity =\n                                        credObj as IdTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            idTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ID_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.ACCESS_TOKEN:\n                            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (CacheHelpers.isAccessTokenEntity(credObj)) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const accessTokenEntity =\n                                        credObj as AccessTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            accessTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ACCESS_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.REFRESH_TOKEN:\n                                if (\n                                    CacheHelpers.isRefreshTokenEntity(credObj)\n                                ) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const refreshTokenEntity =\n                                        credObj as RefreshTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            refreshTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.REFRESH_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            default:\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (\n                        accountObj &&\n                        AccountEntity.isAccountEntity(accountObj)\n                    ) {\n                        this.logger.trace(\n                            \"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\"\n                        );\n                        this.logger.tracePii(\n                            `BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`\n                        );\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string, logger?: Logger): AccountEntity | null {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const accountEntity = this.getCachedAccountEntity(accountKey);\n\n        return this.updateOutdatedCachedAccount(\n            accountKey,\n            accountEntity,\n            logger\n        );\n    }\n\n    /**\n     * Reads account from cache, deserializes it into an account entity and returns it.\n     * If account is not found from the key, returns null and removes key from map.\n     * @param accountKey\n     * @returns\n     */\n    getCachedAccountEntity(accountKey: string): AccountEntity | null {\n        const serializedAccount = this.getItem(accountKey);\n        if (!serializedAccount) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(\n            new AccountEntity(),\n            parsedAccount\n        );\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys(): Array<string> {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n\n        this.logger.verbose(\n            \"BrowserCacheManager.getAccountKeys - No account keys found\"\n        );\n        return [];\n    }\n\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.addAccountKeyToMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key added\"\n            );\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key already exists in map\"\n            );\n        }\n    }\n\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap account key removed\"\n            );\n        } else {\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\"\n            );\n        }\n    }\n\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key: string): Promise<void> {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n\n    /**\n     * Remove account entity from the platform cache if it's outdated\n     * @param accountKey\n     */\n    removeOutdatedAccount(accountKey: string): void {\n        this.removeItem(accountKey);\n        this.removeAccountKeyFromMap(accountKey);\n    }\n\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys(): TokenKeys {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (\n                tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")\n            ) {\n                return tokenKeys as TokenKeys;\n            } else {\n                this.logger.error(\n                    \"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.getTokenKeys - No token keys found\"\n            );\n        }\n\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - idToken added to map\"\n                    );\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - accessToken added to map\"\n                    );\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - refreshToken added to map\"\n                    );\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`\n                );\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken removed from map\"\n                    );\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`\n                );\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken removed from map\"\n                    );\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`\n                );\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken removed from map\"\n                    );\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !CacheHelpers.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getIdTokenCredential: cache hit\"\n        );\n        return parsedIdToken as IdTokenEntity;\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = CacheHelpers.generateCredentialKey(idToken);\n\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (\n            !parsedAccessToken ||\n            !CacheHelpers.isAccessTokenEntity(parsedAccessToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getAccessTokenCredential: cache hit\"\n        );\n        return parsedAccessToken as AccessTokenEntity;\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setAccessTokenCredential called\"\n        );\n        const accessTokenKey = CacheHelpers.generateCredentialKey(accessToken);\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (\n            !parsedRefreshToken ||\n            !CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getRefreshTokenCredential: cache hit\"\n        );\n        return parsedRefreshToken as RefreshTokenEntity;\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setRefreshTokenCredential called\"\n        );\n        const refreshTokenKey =\n            CacheHelpers.generateCredentialKey(refreshToken);\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            !parsedMetadata ||\n            !CacheHelpers.isAppMetadataEntity(appMetadataKey, parsedMetadata)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return parsedMetadata as AppMetadataEntity;\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = CacheHelpers.generateAppMetadataKey(appMetadata);\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedEntity = this.validateAndParseJson(value);\n        if (\n            !parsedEntity ||\n            !CacheHelpers.isServerTelemetryEntity(\n                serverTelemetryKey,\n                parsedEntity\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return parsedEntity as ServerTelemetryEntity;\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string): AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            parsedMetadata &&\n            CacheHelpers.isAuthorityMetadataEntity(key, parsedMetadata)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: cache hit\"\n            );\n            return parsedMetadata as AuthorityMetadataEntity;\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(\n            InMemoryCacheKeys.WRAPPER_VER,\n            wrapperVersion\n        );\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountKeyFilters = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\"\n            );\n            const activeAccountKeyLocal = this.generateCacheKey(\n                PersistentCacheKeys.ACTIVE_ACCOUNT\n            );\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: No active account found\"\n                );\n                return null;\n            }\n            const activeAccount = this.getAccountInfoFilteredBy({\n                localAccountId: activeAccountValueLocal,\n            });\n            if (activeAccount) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\"\n                );\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\"\n                );\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(\n            activeAccountValueFilters\n        ) as AccountInfo;\n        if (activeAccountValueObj) {\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: Active account filters schema found\"\n            );\n            return this.getAccountInfoFilteredBy({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n                tenantId: activeAccountValueObj.tenantId,\n            });\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getActiveAccount: No active account found\"\n        );\n        return null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountKey = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountKeyLocal = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT\n        );\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue: ActiveAccountFilters = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n                tenantId: account.tenantId,\n            };\n            this.browserStorage.setItem(\n                activeAccountKey,\n                JSON.stringify(activeAccountValue)\n            );\n            this.browserStorage.setItem(\n                activeAccountKeyLocal,\n                account.localAccountId\n            );\n        } else {\n            this.logger.verbose(\n                \"setActiveAccount: No account passed, active account not set\"\n            );\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (\n            !parsedThrottlingCache ||\n            !CacheHelpers.isThrottlingEntity(\n                throttlingCacheKey,\n                parsedThrottlingCache\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return parsedThrottlingCache as ThrottlingEntity;\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\"\n                );\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (\n                this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage\n            ) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\n                        \"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\"\n                    );\n                    return item;\n                }\n            }\n            this.logger.trace(\n                \"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\"\n            );\n            return null;\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\"\n        );\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(\n        cacheKey: string,\n        value: string,\n        generateKey?: boolean\n    ): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\"\n            );\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * @param key\n     */\n    removeItem(key: string): void {\n        this.browserStorage.removeItem(key);\n    }\n\n    /**\n     * Removes the temporary cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeTemporaryItem(key: string): void {\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\"\n            );\n            this.clearItemCookie(key);\n        }\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return this.browserStorage.getKeys();\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Remove temp storage first to make sure any cookies are cleared\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey: string) => {\n            if (\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                cacheKey.indexOf(this.clientId) !== -1\n            ) {\n                this.removeTemporaryItem(cacheKey);\n            }\n        });\n\n        // Removes all remaining MSAL cache items\n        this.browserStorage.getKeys().forEach((cacheKey: string) => {\n            if (\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                cacheKey.indexOf(this.clientId) !== -1\n            ) {\n                this.browserStorage.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @param correlationId {string} correlation id\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(\n        performanceClient: IPerformanceClient,\n        correlationId: string\n    ): Promise<void> {\n        performanceClient.addQueueMeasurement(\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\n            correlationId\n        );\n\n        const tokenKeys = this.getTokenKeys();\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key: string) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (\n                credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())\n            ) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(\n                `${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`\n            );\n        }\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     * @deprecated\n     */\n    setItemCookie(\n        cookieName: string,\n        cookieValue: string,\n        expires?: number\n    ): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(\n            cookieValue\n        )};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     * @deprecated\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(\n                    cookie.substring(name.length, cookie.length)\n                );\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     * @deprecated\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     * @deprecated\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     * @deprecated\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(\n            today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER\n        );\n        return expr.toUTCString();\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (\n                StringUtils.startsWith(key, Constants.CACHE_PREFIX) ||\n                StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)\n            ) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.AUTHORITY}.${stateId}`\n        );\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`\n        );\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`\n        );\n    }\n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(\n        state: string,\n        nonce: string,\n        authorityInstance: string,\n        loginHint: string,\n        account: AccountInfo | null\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        } else if (loginHint) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (state) {\n            this.temporaryCacheStorage.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeTemporaryItem(key);\n                }\n            });\n\n            // delete generic interactive request parameters\n            this.removeTemporaryItem(this.generateStateKey(state));\n            this.removeTemporaryItem(this.generateNonceKey(state));\n            this.removeTemporaryItem(this.generateAuthorityKey(state));\n        }\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL)\n        );\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST)\n        );\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(\n                `BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`\n            );\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\n            \"BrowserCacheManager.cleanRequestByInteractionType called\"\n        );\n        // Loop through all keys to find state key\n        this.temporaryCacheStorage.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = extractBrowserRequestState(\n                this.cryptoImpl,\n                stateValue\n            );\n            if (\n                parsedState &&\n                parsedState.interactionType === interactionType\n            ) {\n                this.logger.infoPii(\n                    `BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`\n                );\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            encodedValue,\n            true\n        );\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            true\n        );\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noTokenRequestCacheError\n            );\n        }\n\n        let parsedRequest: CommonAuthorizationCodeRequest;\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n        } catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(\n                `Parsing cached token request threw with error: ${e}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n            );\n        }\n        this.removeTemporaryItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n\n        // Get cached authority and use if no authority is cached with request.\n        if (!parsedRequest.authority) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noCachedAuthorityError\n                );\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): NativeTokenRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            true\n        );\n        if (!cachedRequest) {\n            this.logger.trace(\n                \"BrowserCacheManager.getCachedNativeRequest: No cached native request found\"\n            );\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(\n            cachedRequest\n        ) as NativeTokenRequest;\n        if (!parsedRequest) {\n            this.logger.error(\n                \"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\"\n            );\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.interactionInProgress\n                );\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        } else if (\n            !inProgress &&\n            this.getInteractionInProgress() === this.clientId\n        ) {\n            this.removeTemporaryItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     * @deprecated\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ADAL_ID_TOKEN\n        );\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ID_TOKEN,\n            true\n        );\n        if (msalIdTokenString) {\n            this.browserStorage.removeItem(\n                this.generateCacheKey(PersistentCacheKeys.ID_TOKEN)\n            );\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const idTokenClaims = AuthToken.extractTokenClaims(\n                cachedIdTokenString,\n                base64Decode\n            );\n            if (idTokenClaims.preferred_username) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\"\n                );\n                return idTokenClaims.preferred_username;\n            } else if (idTokenClaims.upn) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\"\n                );\n                return idTokenClaims.upn;\n            } else {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string {\n        const updatedCacheKey = CacheHelpers.generateCredentialKey(credential);\n\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.browserStorage.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(\n                    `Updated an outdated ${credential.credentialType} cache key`\n                );\n                return updatedCacheKey;\n            } else {\n                this.logger.error(\n                    `Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`\n                );\n            }\n        }\n\n        return currentCacheKey;\n    }\n\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            result.account?.homeAccountId,\n            result.account?.environment,\n            result.idToken,\n            this.clientId,\n            result.tenantId\n        );\n\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n\n        /**\n         * meta data for cache stores time in seconds from epoch\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\n         * We need to map these for the cache when building tokens from AuthenticationResult\n         *\n         * The next MSAL VFuture should map these both to same value if possible\n         */\n\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            result.account?.homeAccountId,\n            result.account.environment,\n            result.accessToken,\n            this.clientId,\n            result.tenantId,\n            result.scopes.join(\" \"),\n            result.expiresOn ? result.expiresOn.getTime() / 1000 : 0,\n            result.extExpiresOn ? result.extExpiresOn.getTime() / 1000 : 0,\n            base64Decode,\n            undefined, // refreshOn\n            result.tokenType as AuthenticationScheme,\n            undefined, // userAssertionHash\n            request.sshKid,\n            request.claims,\n            claimsHash\n        );\n\n        const cacheRecord = {\n            idToken: idTokenEntity,\n            accessToken: accessTokenEntity,\n        };\n        return this.saveCacheRecord(cacheRecord);\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord {CacheRecord}\n     * @param storeInCache {?StoreInCache}\n     * @param correlationId {?string} correlation id\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        storeInCache?: StoreInCache,\n        correlationId?: string\n    ): Promise<void> {\n        try {\n            await super.saveCacheRecord(\n                cacheRecord,\n                storeInCache,\n                correlationId\n            );\n        } catch (e) {\n            if (\n                e instanceof CacheError &&\n                this.performanceClient &&\n                correlationId\n            ) {\n                try {\n                    const tokenKeys = this.getTokenKeys();\n\n                    this.performanceClient.addFields(\n                        {\n                            cacheRtCount: tokenKeys.refreshToken.length,\n                            cacheIdCount: tokenKeys.idToken.length,\n                            cacheAtCount: tokenKeys.accessToken.length,\n                        },\n                        correlationId\n                    );\n                } catch (e) {}\n            }\n\n            throw e;\n        }\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (\n    clientId: string,\n    logger: Logger\n): BrowserCacheManager => {\n    const cacheOptions: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(\n        clientId,\n        cacheOptions,\n        DEFAULT_CRYPTO_IMPLEMENTATION,\n        logger\n    );\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, invoke, invokeAsync } from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { BrowserConstants, BrowserCacheLocation } from \"./BrowserConstants\";\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\n\n/**\n * Clears hash from window url.\n */\nexport function clearHash(contentWindow: Window): void {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = \"\";\n    if (typeof contentWindow.history.replaceState === \"function\") {\n        // Full removes \"#\" from url\n        contentWindow.history.replaceState(\n            null,\n            \"\",\n            `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`\n        );\n    }\n}\n\n/**\n * Replaces current hash with hash from provided url\n */\nexport function replaceHash(url: string): void {\n    const urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n}\n\n/**\n * Returns boolean of whether the current window is in an iframe or not.\n */\nexport function isInIframe(): boolean {\n    return window.parent !== window;\n}\n\n/**\n * Returns boolean of whether or not the current window is a popup opened by msal\n */\nexport function isInPopup(): boolean {\n    return (\n        typeof window !== \"undefined\" &&\n        !!window.opener &&\n        window.opener !== window &&\n        typeof window.name === \"string\" &&\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0\n    );\n}\n\n// #endregion\n\n/**\n * Returns current window URL as redirect uri\n */\nexport function getCurrentUri(): string {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n}\n\n/**\n * Gets the homepage url for the current window location.\n */\nexport function getHomepage(): string {\n    const currentUrl = new UrlString(window.location.href);\n    const urlComponents = currentUrl.getUrlComponents();\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n}\n\n/**\n * Throws error if we have completed an auth and are\n * attempting another auth request inside an iframe.\n */\nexport function blockReloadInHiddenIframes(): void {\n    const isResponseHash = UrlString.hashContainsKnownProperties(\n        window.location.hash\n    );\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && isInIframe()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockIframeReload);\n    }\n}\n\n/**\n * Block redirect operations in iframes unless explicitly allowed\n * @param interactionType Interaction type for the request\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n */\nexport function blockRedirectInIframe(allowRedirectInIframe: boolean): void {\n    if (isInIframe() && !allowRedirectInIframe) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw createBrowserAuthError(BrowserAuthErrorCodes.redirectInIframe);\n    }\n}\n\n/**\n * Block redirectUri loaded in popup from calling AcquireToken APIs\n */\nexport function blockAcquireTokenInPopups(): void {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (isInPopup()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockNestedPopups);\n    }\n}\n\n/**\n * Throws error if token requests are made in non-browser environment\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\n */\nexport function blockNonBrowserEnvironment(): void {\n    if (typeof window === \"undefined\") {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        );\n    }\n}\n\n/**\n * Throws error if initialize hasn't been called\n * @param initialized\n */\nexport function blockAPICallsBeforeInitialize(initialized: boolean): void {\n    if (!initialized) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        );\n    }\n}\n\n/**\n * Helper to validate app environment before making an auth request\n * @param initialized\n */\nexport function preflightCheck(initialized: boolean): void {\n    // Block request if not in browser environment\n    blockNonBrowserEnvironment();\n\n    // Block auth requests inside a hidden iframe\n    blockReloadInHiddenIframes();\n\n    // Block redirectUri opened in a popup from calling MSAL APIs\n    blockAcquireTokenInPopups();\n\n    // Block token acquisition before initialize has been called\n    blockAPICallsBeforeInitialize(initialized);\n}\n\n/**\n * Helper to validate app enviornment before making redirect request\n * @param initialized\n * @param config\n */\nexport function redirectPreflightCheck(\n    initialized: boolean,\n    config: BrowserConfiguration\n): void {\n    preflightCheck(initialized);\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n    if (\n        config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\n        !config.cache.storeAuthStateInCookie\n    ) {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        );\n    }\n}\n\n/**\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\n * @returns\n */\nexport function preconnect(authority: string): void {\n    const link = document.createElement(\"link\");\n    link.rel = \"preconnect\";\n    link.href = new URL(authority).origin;\n    link.crossOrigin = \"anonymous\";\n    document.head.appendChild(link);\n\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\n    window.setTimeout(() => {\n        try {\n            document.head.removeChild(link);\n        } catch {}\n    }, 10000); // 10s Timeout\n}\n\n/**\n * Wrapper function that creates a UUID v7 from the current timestamp.\n * @returns {string}\n */\nexport function createGuid(): string {\n    return BrowserCrypto.createNewGuid();\n}\n\nexport { invoke };\nexport { invokeAsync };\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    AccountEntity,\n    CacheManager,\n    PersistentCacheKeys,\n} from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport {\n    EventCallbackFunction,\n    EventError,\n    EventMessage,\n    EventPayload,\n} from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(\n                `Event callback registered with id: ${callbackId}`\n            );\n\n            return callbackId;\n        }\n\n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\n                \"storage\",\n                this.handleAccountCacheChange\n            );\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(\n        eventType: EventType,\n        interactionType?: InteractionType,\n        payload?: EventPayload,\n        error?: EventError\n    ): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach(\n                (callback: EventCallbackFunction, callbackId: string) => {\n                    this.logger.verbose(\n                        `Emitting event to callback ${callbackId}: ${eventType}`\n                    );\n                    callback.apply(null, [message]);\n                }\n            );\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            // Handle active account filter change\n            if (e.key?.includes(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS)) {\n                // This event has no payload, it only signals cross-tab app instances that the results of calling getActiveAccount() will have changed\n                this.emitEvent(EventType.ACTIVE_ACCOUNT_CHANGED);\n            }\n\n            // Handle account object change\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (\n                typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)\n            ) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(\n                new AccountEntity(),\n                parsedValue\n            );\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\n                    \"Account was added to cache in a different window\"\n                );\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\n                    \"Account was removed from cache in a different window\"\n                );\n                this.emitEvent(\n                    EventType.ACCOUNT_REMOVED,\n                    undefined,\n                    accountInfo\n                );\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n    /**\n     * Server error number;\n     */\n    readonly errorNo?: string;\n\n    /**\n     * Http status number;\n     */\n    readonly status?: number;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        errorNo?: string,\n        status?: number\n    ) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        this.errorNo = errorNo;\n        this.status = status;\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport {\n    HeaderNames,\n    ThrottlingConstants,\n    Constants,\n} from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/** @internal */\nexport class ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(\n            thumbprint\n        )}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint\n    ): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(\n                value.errorCodes?.join(\" \") || Constants.EMPTY_STRING,\n                value.errorMessage,\n                value.subError\n            );\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint,\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): void {\n        if (\n            ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)\n        ) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(\n                    parseInt(response.headers[HeaderNames.RETRY_AFTER])\n                ),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        return (\n            response.status === 429 ||\n            (response.status >= 500 && response.status < 600)\n        );\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        if (response.headers) {\n            return (\n                response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300)\n            );\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(\n            Math.min(\n                currentSeconds +\n                    (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n                currentSeconds +\n                    ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n            ) * 1000\n        );\n    }\n\n    static removeThrottle(\n        cacheManager: CacheManager,\n        clientId: string,\n        request: BaseAuthRequest,\n        homeAccountIdentifier?: string\n    ): void {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { AuthError } from \"../error/AuthError\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport type UrlToHttpRequestOptions = {\n    protocol: string;\n    hostname: string;\n    hash: string;\n    search: string;\n    pathname: string;\n    path: string;\n    href: string;\n    port?: number;\n    auth?: string;\n};\n\n/** @internal */\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T extends ServerAuthorizationTokenResponse>(\n        thumbprint: RequestThumbprint,\n        tokenEndpoint: string,\n        options: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(\n                tokenEndpoint,\n                options\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const CLIENT_ID = \"client_id\";\nexport const REDIRECT_URI = \"redirect_uri\";\nexport const RESPONSE_TYPE = \"response_type\";\nexport const RESPONSE_MODE = \"response_mode\";\nexport const GRANT_TYPE = \"grant_type\";\nexport const CLAIMS = \"claims\";\nexport const SCOPE = \"scope\";\nexport const ERROR = \"error\";\nexport const ERROR_DESCRIPTION = \"error_description\";\nexport const ACCESS_TOKEN = \"access_token\";\nexport const ID_TOKEN = \"id_token\";\nexport const REFRESH_TOKEN = \"refresh_token\";\nexport const EXPIRES_IN = \"expires_in\";\nexport const REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\nexport const STATE = \"state\";\nexport const NONCE = \"nonce\";\nexport const PROMPT = \"prompt\";\nexport const SESSION_STATE = \"session_state\";\nexport const CLIENT_INFO = \"client_info\";\nexport const CODE = \"code\";\nexport const CODE_CHALLENGE = \"code_challenge\";\nexport const CODE_CHALLENGE_METHOD = \"code_challenge_method\";\nexport const CODE_VERIFIER = \"code_verifier\";\nexport const CLIENT_REQUEST_ID = \"client-request-id\";\nexport const X_CLIENT_SKU = \"x-client-SKU\";\nexport const X_CLIENT_VER = \"x-client-VER\";\nexport const X_CLIENT_OS = \"x-client-OS\";\nexport const X_CLIENT_CPU = \"x-client-CPU\";\nexport const X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\nexport const X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\nexport const X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\nexport const X_APP_NAME = \"x-app-name\";\nexport const X_APP_VER = \"x-app-ver\";\nexport const POST_LOGOUT_URI = \"post_logout_redirect_uri\";\nexport const ID_TOKEN_HINT = \"id_token_hint\";\nexport const DEVICE_CODE = \"device_code\";\nexport const CLIENT_SECRET = \"client_secret\";\nexport const CLIENT_ASSERTION = \"client_assertion\";\nexport const CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\nexport const TOKEN_TYPE = \"token_type\";\nexport const REQ_CNF = \"req_cnf\";\nexport const OBO_ASSERTION = \"assertion\";\nexport const REQUESTED_TOKEN_USE = \"requested_token_use\";\nexport const ON_BEHALF_OF = \"on_behalf_of\";\nexport const FOCI = \"foci\";\nexport const CCS_HEADER = \"X-AnchorMailbox\";\nexport const RETURN_SPA_CODE = \"return_spa_code\";\nexport const NATIVE_BROKER = \"nativebroker\";\nexport const LOGOUT_HINT = \"logout_hint\";\nexport const SID = \"sid\";\nexport const LOGIN_HINT = \"login_hint\";\nexport const DOMAIN_HINT = \"domain_hint\";\nexport const X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues } from \"../utils/Constants\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string): void {\n        if (!redirectUri) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.redirectUriEmpty\n            );\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string): void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidPromptValue\n            );\n        }\n    }\n\n    static validateClaims(claims: string): void {\n        try {\n            JSON.parse(claims);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidClaims\n            );\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string): void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256,\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n            );\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    ResponseMode,\n    CLIENT_INFO,\n    AuthenticationScheme,\n    ClaimsRequestKeys,\n    PasswordGrantConstants,\n    OIDC_DEFAULT_SCOPES,\n    ThrottlingConstants,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport {\n    ApplicationTelemetry,\n    LibraryInfo,\n} from \"../config/ClientConfiguration\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\n/** @internal */\nexport class RequestParameterBuilder {\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(\n                `${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`\n            )\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker(): void {\n        this.parameters.set(\n            AADServerParamKeys.NATIVE_BROKER,\n            encodeURIComponent(\"1\")\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(\n        scopes: string[],\n        addOidcScopes: boolean = true,\n        defaultScopes: Array<string> = OIDC_DEFAULT_SCOPES\n    ): void {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (\n            addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")\n        ) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(\n            AADServerParamKeys.SCOPE,\n            encodeURIComponent(scopeSet.printScopes())\n        );\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_ID,\n            encodeURIComponent(clientId)\n        );\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.REDIRECT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.POST_LOGOUT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.ID_TOKEN_HINT,\n            encodeURIComponent(idTokenHint)\n        );\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.DOMAIN_HINT,\n            encodeURIComponent(domainHint)\n        );\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.LOGIN_HINT,\n            encodeURIComponent(loginHint)\n        );\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`UPN:${loginHint}`)\n        );\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`)\n        );\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(AADServerParamKeys.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(\n            claims,\n            clientCapabilities\n        );\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(\n            AADServerParamKeys.CLAIMS,\n            encodeURIComponent(mergedClaims)\n        );\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_REQUEST_ID,\n            encodeURIComponent(correlationId)\n        );\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_VER,\n            libraryInfo.version\n        );\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(\n                AADServerParamKeys.X_CLIENT_CPU,\n                libraryInfo.cpu\n            );\n        }\n    }\n\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\n        if (appTelemetry?.appName) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_NAME,\n                appTelemetry.appName\n            );\n        }\n\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_VER,\n                appTelemetry.appVersion\n            );\n        }\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(\n            `${AADServerParamKeys.PROMPT}`,\n            encodeURIComponent(prompt)\n        );\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (state) {\n            this.parameters.set(\n                AADServerParamKeys.STATE,\n                encodeURIComponent(state)\n            );\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(\n            AADServerParamKeys.NONCE,\n            encodeURIComponent(nonce)\n        );\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(\n            codeChallenge,\n            codeChallengeMethod\n        );\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE,\n                encodeURIComponent(codeChallenge)\n            );\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE_METHOD,\n                encodeURIComponent(codeChallengeMethod)\n            );\n        } else {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(\n            AADServerParamKeys.DEVICE_CODE,\n            encodeURIComponent(code)\n        );\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REFRESH_TOKEN,\n            encodeURIComponent(refreshToken)\n        );\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CODE_VERIFIER,\n            encodeURIComponent(codeVerifier)\n        );\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_SECRET,\n            encodeURIComponent(clientSecret)\n        );\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        if (clientAssertion) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION,\n                encodeURIComponent(clientAssertion)\n            );\n        }\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        if (clientAssertionType) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION_TYPE,\n                encodeURIComponent(clientAssertionType)\n            );\n        }\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(\n            AADServerParamKeys.OBO_ASSERTION,\n            encodeURIComponent(oboAssertion)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REQUESTED_TOKEN_USE,\n            encodeURIComponent(tokenUse)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(\n            AADServerParamKeys.GRANT_TYPE,\n            encodeURIComponent(grantType)\n        );\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams: StringDict): void {\n        Object.entries(eQParams).forEach(([key, value]) => {\n            if (!this.parameters.has(key) && value) {\n                this.parameters.set(key, value);\n            }\n        });\n    }\n\n    addClientCapabilitiesToClaims(\n        claims?: string,\n        clientCapabilities?: Array<string>\n    ): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidClaims\n                );\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][\n                ClaimsRequestKeys.XMS_CC\n            ] = {\n                values: clientCapabilities,\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.username,\n            encodeURIComponent(username)\n        );\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.password,\n            encodeURIComponent(password)\n        );\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (cnfString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.POP\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(cnfString)\n            );\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString: string): void {\n        if (sshJwkString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.SSH\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(sshJwkString)\n            );\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_CURR_TELEM,\n            serverTelemetryManager.generateCurrentRequestHeaderValue()\n        );\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_LAST_TELEM,\n            serverTelemetryManager.generateLastRequestHeaderValue()\n        );\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(\n            AADServerParamKeys.X_MS_LIB_CAPABILITY,\n            ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE\n        );\n    }\n\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.LOGOUT_HINT,\n            encodeURIComponent(logoutHint)\n        );\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority, formatAuthorityUri } from \"./Authority\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/**\n * Create an authority object of the correct type based on the url\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n *\n * Also performs endpoint discovery.\n *\n * @param authorityUri\n * @param networkClient\n * @param protocolMode\n * @internal\n */\nexport async function createDiscoveredInstance(\n    authorityUri: string,\n    networkClient: INetworkModule,\n    cacheManager: ICacheManager,\n    authorityOptions: AuthorityOptions,\n    logger: Logger,\n    correlationId: string,\n    performanceClient?: IPerformanceClient\n): Promise<Authority> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n        correlationId\n    );\n    const authorityUriFinal = Authority.transformCIAMAuthority(\n        formatAuthorityUri(authorityUri)\n    );\n\n    // Initialize authority and perform discovery endpoint check.\n    const acquireTokenAuthority: Authority = new Authority(\n        authorityUriFinal,\n        networkClient,\n        cacheManager,\n        authorityOptions,\n        logger,\n        correlationId,\n        performanceClient\n    );\n\n    try {\n        await invokeAsync(\n            acquireTokenAuthority.resolveEndpointsAsync.bind(\n                acquireTokenAuthority\n            ),\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            logger,\n            performanceClient,\n            correlationId\n        )();\n        return acquireTokenAuthority;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.endpointResolutionError\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    buildClientConfiguration,\n    CommonClientConfiguration,\n} from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { createDiscoveredInstance } from \"../authority/AuthorityFactory\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    // Performance telemetry client\n    protected performanceClient?: IPerformanceClient;\n\n    protected constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(\n            this.networkClient,\n            this.cacheManager\n        );\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(\n        ccsCred?: CcsCredential\n    ): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        headers[\n                            HeaderNames.CCS_HEADER\n                        ] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[\n                        HeaderNames.CCS_HEADER\n                    ] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(\n        tokenEndpoint: string,\n        queryString: string,\n        headers: Record<string, string>,\n        thumbprint: RequestThumbprint,\n        correlationId: string,\n        queuedEvent?: string\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(\n                queuedEvent,\n                correlationId\n            );\n        }\n\n        const response =\n            await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n                thumbprint,\n                tokenEndpoint,\n                { body: queryString, headers: headers }\n            );\n        this.performanceClient?.addFields(\n            {\n                refreshTokenSize: response.body.refresh_token?.length || 0,\n                httpVerToken:\n                    response.headers?.[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n            },\n            correlationId\n        );\n\n        if (\n            this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429\n        ) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    async updateAuthority(\n        cloudInstanceHostname: string,\n        correlationId: string\n    ): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.UpdateTokenEndpointAuthority,\n            correlationId\n        );\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\n        const cloudInstanceAuthority = await createDiscoveredInstance(\n            cloudInstanceAuthorityUri,\n            this.networkClient,\n            this.cacheManager,\n            this.authority.options,\n            this.logger,\n            correlationId,\n            this.performanceClient\n        );\n        this.authority = cloudInstanceAuthority;\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request: BaseAuthRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport * as TimeUtils from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n};\n\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n} as const;\nexport type KeyLocation = (typeof KeyLocation)[keyof typeof KeyLocation];\n\n/** @internal */\nexport class PopTokenGenerator {\n    private cryptoUtils: ICrypto;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(cryptoUtils: ICrypto, performanceClient?: IPerformanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(\n        request: SignedHttpRequestParameters,\n        logger: Logger\n    ): Promise<ReqCnfData> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateCnf,\n            request.correlationId\n        );\n\n        const reqCnf = await invokeAsync(\n            this.generateKid.bind(this),\n            PerformanceEvents.PopTokenGenerateCnf,\n            logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const reqCnfString: string = this.cryptoUtils.base64UrlEncode(\n            JSON.stringify(reqCnf)\n        );\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateKid,\n            request.correlationId\n        );\n\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(\n            request\n        );\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(\n        accessToken: string,\n        keyId: string,\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(\n        payload: string,\n        keyId: string,\n        request: SignedHttpRequestParameters,\n        claims?: object\n    ): Promise<string> {\n        // Deconstruct request to extract SHR parameters\n        const {\n            resourceRequestMethod,\n            resourceRequestUri,\n            shrClaims,\n            shrNonce,\n            shrOptions,\n        } = request;\n\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return this.cryptoUtils.signJwt(\n            {\n                at: payload,\n                ts: TimeUtils.nowSeconds(),\n                m: resourceRequestMethod?.toUpperCase(),\n                u: resourceUrlComponents?.HostNameAndPort,\n                nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n                p: resourceUrlComponents?.AbsolutePath,\n                q: resourceUrlComponents?.QueryString\n                    ? [[], resourceUrlComponents.QueryString]\n                    : undefined,\n                client_claims: shrClaims || undefined,\n                ...claims,\n            },\n            keyId,\n            shrOptions,\n            request.correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport {\n    InteractionRequiredAuthError,\n    isInteractionRequiredError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport {\n    AuthenticationScheme,\n    Constants,\n    THE_FAMILY_ID,\n    HttpStatus,\n} from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport {\n    TokenClaims,\n    getTenantIdFromIdTokenClaims,\n} from \"../account/TokenClaims\";\nimport {\n    AccountInfo,\n    buildTenantProfile,\n    updateAccountTenantProfileData,\n} from \"../account/AccountInfo\";\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers\";\n\nfunction parseServerErrorNo(\n    serverResponse: ServerAuthorizationCodeResponse\n): string | undefined {\n    const errorCodePrefix = \"code=\";\n    const errorCodePrefixIndex =\n        serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\n        ? serverResponse.error_uri?.substring(\n              errorCodePrefixIndex + errorCodePrefix.length\n          )\n        : undefined;\n}\n\n/**\n * Class that handles response parsing.\n * @internal\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(\n        clientId: string,\n        cacheStorage: CacheManager,\n        cryptoObj: ICrypto,\n        logger: Logger,\n        serializableCache: ISerializableTokenCache | null,\n        persistencePlugin: ICachePlugin | null,\n        performanceClient?: IPerformanceClient\n    ) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param requestState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(\n        serverResponse: ServerAuthorizationCodeResponse,\n        requestState: string\n    ): void {\n        if (!serverResponse.state || !requestState) {\n            throw serverResponse.state\n                ? createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Cached State\"\n                  )\n                : createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Server State\"\n                  );\n        }\n\n        let decodedServerResponseState: string;\n        let decodedRequestState: string;\n\n        try {\n            decodedServerResponseState = decodeURIComponent(\n                serverResponse.state\n            );\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponse.state\n            );\n        }\n\n        try {\n            decodedRequestState = decodeURIComponent(requestState);\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponse.state\n            );\n        }\n\n        if (decodedServerResponseState !== decodedRequestState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\n        }\n\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            const serverErrorNo = parseServerErrorNo(serverResponse);\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error || \"\",\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || \"\",\n                    serverResponse.trace_id || \"\",\n                    serverResponse.correlation_id || \"\",\n                    serverResponse.claims || \"\",\n                    serverErrorNo\n                );\n            }\n\n            throw new ServerError(\n                serverResponse.error || \"\",\n                serverResponse.error_description,\n                serverResponse.suberror,\n                serverErrorNo\n            );\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(\n        serverResponse: ServerAuthorizationTokenResponse,\n        refreshAccessToken?: boolean\n    ): void {\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            const errString = `Error(s): ${\n                serverResponse.error_codes || Constants.NOT_AVAILABLE\n            } - Timestamp: ${\n                serverResponse.timestamp || Constants.NOT_AVAILABLE\n            } - Description: ${\n                serverResponse.error_description || Constants.NOT_AVAILABLE\n            } - Correlation ID: ${\n                serverResponse.correlation_id || Constants.NOT_AVAILABLE\n            } - Trace ID: ${\n                serverResponse.trace_id || Constants.NOT_AVAILABLE\n            }`;\n            const serverErrorNo = serverResponse.error_codes?.length\n                ? serverResponse.error_codes[0]\n                : undefined;\n            const serverError = new ServerError(\n                serverResponse.error,\n                errString,\n                serverResponse.suberror,\n                serverErrorNo,\n                serverResponse.status\n            );\n\n            // check if 500 error\n            if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            } else if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || Constants.EMPTY_STRING,\n                    serverResponse.trace_id || Constants.EMPTY_STRING,\n                    serverResponse.correlation_id || Constants.EMPTY_STRING,\n                    serverResponse.claims || Constants.EMPTY_STRING,\n                    serverErrorNo\n                );\n            }\n\n            throw serverError;\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean,\n        forceCacheRefreshTokenResponse?: boolean,\n        serverRequestId?: string\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.HandleServerTokenResponse,\n            serverTokenResponse.correlation_id\n        );\n\n        // create an idToken object (not entity)\n        let idTokenClaims: TokenClaims | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.cryptoObj.base64Decode\n            );\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.nonceMismatch\n                    );\n                }\n            }\n\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.authTimeNotFound\n                    );\n                }\n\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            serverTokenResponse.client_info || Constants.EMPTY_STRING,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(\n                this.cryptoObj,\n                authCodePayload.state\n            );\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(\n            serverTokenResponse,\n            authority,\n            reqTimestamp,\n            request,\n            idTokenClaims,\n            userAssertionHash,\n            authCodePayload\n        );\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling beforeCacheAccess\"\n                );\n                cacheContext = new TokenCacheContext(\n                    this.serializableCache,\n                    true\n                );\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (\n                handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account\n            ) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key, this.logger);\n                if (!account) {\n                    this.logger.warning(\n                        \"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\"\n                    );\n                    return await ResponseHandler.generateAuthenticationResult(\n                        this.cryptoObj,\n                        authority,\n                        cacheRecord,\n                        false,\n                        request,\n                        idTokenClaims,\n                        requestStateObj,\n                        undefined,\n                        serverRequestId\n                    );\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(\n                cacheRecord,\n                request.storeInCache,\n                request.correlationId\n            );\n        } finally {\n            if (\n                this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext\n            ) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling afterCacheAccess\"\n                );\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoObj,\n            authority,\n            cacheRecord,\n            false,\n            request,\n            idTokenClaims,\n            requestStateObj,\n            serverTokenResponse,\n            serverRequestId\n        );\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        userAssertionHash?: string,\n        authCodePayload?: AuthorizationCodePayload\n    ): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = CacheHelpers.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token,\n                this.clientId,\n                claimsTenantId || \"\"\n            );\n\n            cachedAccount = buildAccountToCache(\n                this.cacheStorage,\n                authority,\n                this.homeAccountIdentifier,\n                this.cryptoObj.base64Decode,\n                idTokenClaims,\n                serverTokenResponse.client_info,\n                env,\n                claimsTenantId,\n                authCodePayload,\n                undefined, // nativeAccountId\n                this.logger\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number =\n                (typeof serverTokenResponse.expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.expires_in, 10)\n                    : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number =\n                (typeof serverTokenResponse.ext_expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                    : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined =\n                (typeof serverTokenResponse.refresh_in === \"string\"\n                    ? parseInt(serverTokenResponse.refresh_in, 10)\n                    : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds =\n                tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds =\n                refreshIn && refreshIn > 0\n                    ? reqTimestamp + refreshIn\n                    : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = CacheHelpers.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token,\n                this.clientId,\n                claimsTenantId || authority.tenant || \"\",\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj.base64Decode,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (serverTokenResponse.refresh_token) {\n            let rtExpiresOn: number | undefined;\n            if (serverTokenResponse.refresh_token_expires_in) {\n                const rtExpiresIn: number =\n                    typeof serverTokenResponse.refresh_token_expires_in ===\n                    \"string\"\n                        ? parseInt(\n                              serverTokenResponse.refresh_token_expires_in,\n                              10\n                          )\n                        : serverTokenResponse.refresh_token_expires_in;\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\n            }\n            cachedRefreshToken = CacheHelpers.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash,\n                rtExpiresOn\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = {\n                clientId: this.clientId,\n                environment: env,\n                familyId: serverTokenResponse.foci,\n            };\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        requestState?: RequestStateObject,\n        serverTokenResponse?: ServerAuthorizationTokenResponse,\n        requestId?: string\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let refreshOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            /*\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\n             * the token will be returned unsigned\n             */\n            if (\n                cacheRecord.accessToken.tokenType ===\n                    AuthenticationScheme.POP &&\n                !request.popKid\n            ) {\n                const popTokenGenerator: PopTokenGenerator =\n                    new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.keyIdMissing\n                    );\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(\n                    secret,\n                    keyId,\n                    request\n                );\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(\n                    Number(cacheRecord.accessToken.refreshOn) * 1000\n                );\n            }\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n\n        const accountInfo: AccountInfo | null = cacheRecord.account\n            ? updateAccountTenantProfileData(\n                  cacheRecord.account.getAccountInfo(),\n                  undefined, // tenantProfile optional\n                  idTokenClaims,\n                  cacheRecord.idToken?.secret\n              )\n            : null;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType:\n                cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost:\n                cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n\nexport function buildAccountToCache(\n    cacheStorage: CacheManager,\n    authority: Authority,\n    homeAccountId: string,\n    base64Decode: (input: string) => string,\n    idTokenClaims?: TokenClaims,\n    clientInfo?: string,\n    environment?: string,\n    claimsTenantId?: string | null,\n    authCodePayload?: AuthorizationCodePayload,\n    nativeAccountId?: string,\n    logger?: Logger\n): AccountEntity {\n    logger?.verbose(\"setCachedAccount called\");\n\n    // Check if base account is already cached\n    const accountKeys = cacheStorage.getAccountKeys();\n    const baseAccountKey = accountKeys.find((accountKey: string) => {\n        return accountKey.startsWith(homeAccountId);\n    });\n\n    let cachedAccount: AccountEntity | null = null;\n    if (baseAccountKey) {\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, logger);\n    }\n\n    const baseAccount =\n        cachedAccount ||\n        AccountEntity.createAccount(\n            {\n                homeAccountId,\n                idTokenClaims,\n                clientInfo,\n                environment,\n                cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                msGraphHost: authCodePayload?.msgraph_host,\n                nativeAccountId: nativeAccountId,\n            },\n            authority,\n            base64Decode\n        );\n\n    const tenantProfiles = baseAccount.tenantProfiles || [];\n    const tenantId = claimsTenantId || baseAccount.realm;\n    if (\n        tenantId &&\n        !tenantProfiles.find((tenantProfile) => {\n            return tenantProfile.tenantId === tenantId;\n        })\n    ) {\n        const newTenantProfile = buildTenantProfile(\n            homeAccountId,\n            baseAccount.localAccountId,\n            tenantId,\n            idTokenClaims\n        );\n        tenantProfiles.push(newTenantProfile);\n    }\n    baseAccount.tenantProfiles = tenantProfiles;\n\n    return baseAccount;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAssertionCallback,\n    ClientAssertionConfig,\n} from \"../account/ClientCredentials\";\n\nexport async function getClientAssertion(\n    clientAssertion: string | ClientAssertionCallback,\n    clientId: string,\n    tokenEndpoint?: string\n): Promise<string> {\n    if (typeof clientAssertion === \"string\") {\n        return clientAssertion;\n    } else {\n        const config: ClientAssertionConfig = {\n            clientId: clientId,\n            tokenEndpoint: tokenEndpoint,\n        };\n        return clientAssertion(config);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    PromptValue,\n    Separators,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys\";\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport * as TimeUtils from \"../utils/TimeUtils\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport {\n    buildClientInfoFromHomeAccountId,\n    buildClientInfo,\n} from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { RequestValidator } from \"../request/RequestValidator\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { ClientAssertion } from \"../account/ClientCredentials\";\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils\";\n\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n    private oidcDefaultScopes;\n\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.GetAuthCodeUrl,\n            request.correlationId\n        );\n\n        const queryString = await invokeAsync(\n            this.createAuthCodeUrlQueryString.bind(this),\n            PerformanceEvents.AuthClientCreateQueryString,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        return UrlString.appendQueryString(\n            this.authority.authorizationEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(\n        request: CommonAuthorizationCodeRequest,\n        authCodePayload?: AuthorizationCodePayload\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientAcquireToken,\n            request.correlationId\n        );\n\n        if (!request.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.requestCannotBeMade\n            );\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authority, request);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin,\n            this.performanceClient\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            authCodePayload,\n            undefined,\n            undefined,\n            undefined,\n            requestId\n        );\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(\n        serverParams: ServerAuthorizationCodeResponse,\n        cachedState: string\n    ): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            null,\n            null\n        );\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(\n            serverParams,\n            cachedState\n        );\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n            );\n        }\n\n        return serverParams as AuthorizationCodePayload;\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.logoutRequestEmpty\n            );\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI\n        return UrlString.appendQueryString(\n            this.authority.endSessionEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(\n        authority: Authority,\n        request: CommonAuthorizationCodeRequest\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils.base64Decode\n                );\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            ccsCredential || request.ccsCredential\n        );\n\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonAuthorizationCodeRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.oidcDefaultScopes\n        );\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion: ClientAssertion =\n                this.config.clientCredentials.clientAssertion;\n\n            parameterBuilder.addClientAssertion(\n                await getClientAssertion(\n                    clientAssertion.assertion,\n                    this.config.authOptions.clientId,\n                    request.resourceRequestUri\n                )\n            );\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            } else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils.base64Decode\n                );\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (\n            request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[\n                    AADServerParamKeys.RETURN_SPA_CODE\n                ])\n        ) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private async createAuthCodeUrlQueryString(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateQueryString,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!isOidcProtocolMode(this.config)) {\n            parameterBuilder.addApplicationTelemetry(\n                this.config.telemetry.application\n            );\n        }\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(\n                request.codeChallenge,\n                request.codeChallengeMethod\n            );\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\"\n                );\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                let accountLoginHintClaim = this.extractLoginHint(\n                    request.account\n                );\n\n                if (accountLoginHintClaim && request.domainHint) {\n                    this.logger.warning(\n                        `AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`\n                    );\n                    accountLoginHintClaim = null;\n                }\n\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: login_hint claim present on account\"\n                    );\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\"\n                    );\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from request\"\n                    );\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from account\"\n                    );\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: No account, adding login_hint from request\"\n                );\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\n                \"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\"\n            );\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (\n            request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(\n                    this.cryptoUtils\n                );\n\n                // req_cnf is always sent as a string for SPAs\n                let reqCnfData;\n                if (!request.popKid) {\n                    const generatedReqCnfData = await invokeAsync(\n                        popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                        PerformanceEvents.PopTokenGenerateCnf,\n                        this.logger,\n                        this.performanceClient,\n                        request.correlationId\n                    )(request, this.logger);\n                    reqCnfData = generatedReqCnfData.reqCnfString;\n                } else {\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n                }\n                parameterBuilder.addPopToken(reqCnfData);\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(\n        request: CommonEndSessionRequest\n    ): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(\n                request.postLogoutRedirectUri\n            );\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        return account.idTokenClaims?.sid || null;\n    }\n\n    private extractLoginHint(account: AccountInfo): string | null {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    CacheOutcome,\n    Constants,\n    RegionDiscoverySources,\n    RegionDiscoveryOutcomes,\n} from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\nconst skuGroupSeparator = \",\";\nconst skuValueSeparator = \"|\";\n\ntype SkuParams = {\n    libraryName?: string;\n    libraryVersion?: string;\n    extensionName?: string;\n    extensionVersion?: string;\n    skus?: string;\n};\n\nfunction makeExtraSkuString(params: SkuParams): string {\n    const {\n        skus,\n        libraryName,\n        libraryVersion,\n        extensionName,\n        extensionVersion,\n    } = params;\n    const skuMap: Map<number, (string | undefined)[]> = new Map([\n        [0, [libraryName, libraryVersion]],\n        [2, [extensionName, extensionVersion]],\n    ]);\n    let skuArr: string[] = [];\n\n    if (skus?.length) {\n        skuArr = skus.split(skuGroupSeparator);\n\n        // Ignore invalid input sku param\n        if (skuArr.length < 4) {\n            return skus;\n        }\n    } else {\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\n    }\n\n    skuMap.forEach((value, key) => {\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\n            setSku({\n                skuArr,\n                index: key,\n                skuName: value[0],\n                skuVersion: value[1],\n            });\n        }\n    });\n\n    return skuArr.join(skuGroupSeparator);\n}\n\nfunction setSku(params: {\n    skuArr: string[];\n    index: number;\n    skuName: string;\n    skuVersion: string;\n}): void {\n    const { skuArr, index, skuName, skuVersion } = params;\n    if (index >= skuArr.length) {\n        return;\n    }\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\n}\n\n/** @internal */\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n    constructor(\n        telemetryRequest: ServerTelemetryRequest,\n        cacheManager: CacheManager\n    ) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n            Separators.CACHE_KEY_SEPARATOR +\n            telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\n        if (nativeBrokerErrorCode?.length) {\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\n        }\n        const platformFields = platformFieldsArr.join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow =\n            maxErrors < errorCount\n                ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n                : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: unknown): void {\n        const lastRequests = this.getLastRequests();\n        if (\n            lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS\n        ) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                } else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                } else {\n                    lastRequests.errors.push(error.toString());\n                }\n            } else {\n                lastRequests.errors.push(error.toString());\n            }\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = {\n            failedRequests: [],\n            errors: [],\n            cacheHits: 0,\n        };\n        const lastRequests = this.cacheManager.getServerTelemetry(\n            this.telemetryCacheKey\n        ) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed =\n            ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity: ServerTelemetryEntity = {\n                failedRequests: lastRequests.failedRequests.slice(\n                    numErrorsFlushed * 2\n                ), // failedRequests contains 2 items for each error\n                errors: lastRequests.errors.slice(numErrorsFlushed),\n                cacheHits: 0,\n            };\n\n            this.cacheManager.setServerTelemetry(\n                this.telemetryCacheKey,\n                serverTelemEntity\n            );\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(\n        serverTelemetryEntity: ServerTelemetryEntity\n    ): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId =\n                serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId =\n                serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode =\n                serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                correlationId.toString().length +\n                errorCode.length +\n                3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(\n            this.regionOutcome || Constants.EMPTY_STRING\n        );\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n\n    setNativeBrokerErrorCode(errorCode: string): void {\n        const lastRequests = this.getLastRequests();\n        lastRequests.nativeBrokerErrorCode = errorCode;\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n    }\n\n    getNativeBrokerErrorCode(): string | undefined {\n        return this.getLastRequests().nativeBrokerErrorCode;\n    }\n\n    clearNativeBrokerErrorCode(): void {\n        const lastRequests = this.getLastRequests();\n        delete lastRequests.nativeBrokerErrorCode;\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n    }\n\n    static makeExtraSkuString(params: SkuParams): string {\n        return makeExtraSkuString(params);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    INetworkModule,\n    Logger,\n    AccountInfo,\n    AccountEntity,\n    UrlString,\n    ServerTelemetryManager,\n    ServerTelemetryRequest,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    Authority,\n    AuthorityOptions,\n    AuthorityFactory,\n    IPerformanceClient,\n    PerformanceEvents,\n    AzureCloudOptions,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport abstract class BaseInteractionClient {\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(\n            BrowserConstants.MSAL_SKU,\n            version,\n            this.correlationId\n        );\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult | void>;\n\n    abstract logout(\n        request: EndSessionRequest | ClearCacheRequest | undefined\n    ): Promise<void>;\n\n    protected async clearCacheOnLogout(\n        account?: AccountInfo | null\n    ): Promise<void> {\n        if (account) {\n            if (\n                AccountEntity.accountInfoIsEqual(\n                    account,\n                    this.browserStorage.getActiveAccount(),\n                    false\n                )\n            ) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(\n                    AccountEntity.generateAccountCacheKey(account)\n                );\n                this.logger.verbose(\n                    \"Cleared cache items belonging to the account provided in the logout request.\"\n                );\n            } catch (error) {\n                this.logger.error(\n                    \"Account provided in logout request was not found. Local cache unchanged.\"\n                );\n            }\n        } else {\n            try {\n                this.logger.verbose(\n                    \"No account provided in logout request, clearing all cache items.\",\n                    this.correlationId\n                );\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch (e) {\n                this.logger.error(\n                    \"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\"\n                );\n            }\n        }\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri =\n            requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(\n            redirectUri,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(\n        apiId: number,\n        forceRefresh?: boolean\n    ): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n\n        return new ServerTelemetryManager(\n            telemetryPayload,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestAzureCloudOptions\n     * @param account\n     */\n    protected async getDiscoveredAuthority(\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions,\n        account?: AccountInfo\n    ): Promise<Authority> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.correlationId\n        );\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(\n            userAuthority,\n            requestAzureCloudOptions || this.config.auth.azureCloudOptions\n        );\n        const discoveredAuthority = await invokeAsync(\n            AuthorityFactory.createDiscoveredInstance,\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            builtAuthority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger,\n            this.correlationId,\n            this.performanceClient\n        );\n\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityMismatch\n            );\n        }\n\n        return discoveredAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    PkceCodes,\n    invoke,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { urlEncodeArr } from \"../encode/Base64Encode\";\nimport { getRandomValues, sha256Digest } from \"./BrowserCrypto\";\n\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * This file defines APIs to generate PKCE codes and code verifiers.\n */\n\n/**\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n */\nexport async function generatePkceCodes(\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): Promise<PkceCodes> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.GeneratePkceCodes,\n        correlationId\n    );\n    const codeVerifier = invoke(\n        generateCodeVerifier,\n        PerformanceEvents.GenerateCodeVerifier,\n        logger,\n        performanceClient,\n        correlationId\n    )(performanceClient, logger, correlationId);\n    const codeChallenge = await invokeAsync(\n        generateCodeChallengeFromVerifier,\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\n        logger,\n        performanceClient,\n        correlationId\n    )(codeVerifier, performanceClient, logger, correlationId);\n    return {\n        verifier: codeVerifier,\n        challenge: codeChallenge,\n    };\n}\n\n/**\n * Generates a random 32 byte buffer and returns the base64\n * encoded string to be used as a PKCE Code Verifier\n */\nfunction generateCodeVerifier(\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): string {\n    try {\n        // Generate random values as utf-8\n        const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n        invoke(\n            getRandomValues,\n            PerformanceEvents.GetRandomValues,\n            logger,\n            performanceClient,\n            correlationId\n        )(buffer);\n        // encode verifier as base64\n        const pkceCodeVerifierB64: string = urlEncodeArr(buffer);\n        return pkceCodeVerifierB64;\n    } catch (e) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\n    }\n}\n\n/**\n * Creates a base64 encoded PKCE Code Challenge string from the\n * hash created from the PKCE Code Verifier supplied\n */\nasync function generateCodeChallengeFromVerifier(\n    pkceCodeVerifier: string,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string\n): Promise<string> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\n        correlationId\n    );\n    try {\n        // hashed verifier\n        const pkceHashedCodeVerifier = await invokeAsync(\n            sha256Digest,\n            PerformanceEvents.Sha256Digest,\n            logger,\n            performanceClient,\n            correlationId\n        )(pkceCodeVerifier, performanceClient, correlationId);\n        // encode hash as base64\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n    } catch (e) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountInfo,\n    AuthenticationScheme,\n    BaseAuthRequest,\n    ClientConfigurationErrorCodes,\n    CommonSilentFlowRequest,\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n    StringUtils,\n    createClientConfigurationError,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"./SilentRequest\";\nimport { hashString } from \"../crypto/BrowserCrypto\";\n\n/**\n * Initializer function for all request APIs\n * @param request\n */\nexport async function initializeBaseRequest(\n    request: Partial<BaseAuthRequest> & { correlationId: string },\n    config: BrowserConfiguration,\n    performanceClient: IPerformanceClient,\n    logger: Logger\n): Promise<BaseAuthRequest> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.InitializeBaseRequest,\n        request.correlationId\n    );\n    const authority = request.authority || config.auth.authority;\n\n    const scopes = [...((request && request.scopes) || [])];\n\n    const validatedRequest: BaseAuthRequest = {\n        ...request,\n        correlationId: request.correlationId,\n        authority,\n        scopes,\n    };\n\n    // Set authenticationScheme to BEARER if not explicitly set in the request\n    if (!validatedRequest.authenticationScheme) {\n        validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n        logger.verbose(\n            'Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request'\n        );\n    } else {\n        if (\n            validatedRequest.authenticationScheme === AuthenticationScheme.SSH\n        ) {\n            if (!request.sshJwk) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n            if (!request.sshKid) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshKid\n                );\n            }\n        }\n        logger.verbose(\n            `Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`\n        );\n    }\n\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\n    if (\n        config.cache.claimsBasedCachingEnabled &&\n        request.claims &&\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n        !StringUtils.isEmptyObj(request.claims)\n    ) {\n        validatedRequest.requestedClaimsHash = await hashString(request.claims);\n    }\n\n    return validatedRequest;\n}\n\nexport async function initializeSilentRequest(\n    request: SilentRequest & { correlationId: string },\n    account: AccountInfo,\n    config: BrowserConfiguration,\n    performanceClient: IPerformanceClient,\n    logger: Logger\n): Promise<CommonSilentFlowRequest> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.InitializeSilentRequest,\n        request.correlationId\n    );\n\n    const baseRequest = await invokeAsync(\n        initializeBaseRequest,\n        PerformanceEvents.InitializeBaseRequest,\n        logger,\n        performanceClient,\n        request.correlationId\n    )(request, config, performanceClient, logger);\n    return {\n        ...request,\n        ...baseRequest,\n        account: account,\n        forceRefresh: request.forceRefresh || false,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ServerTelemetryManager,\n    CommonAuthorizationCodeRequest,\n    Constants,\n    AuthorizationCodeClient,\n    ClientConfiguration,\n    UrlString,\n    CommonEndSessionRequest,\n    ProtocolUtils,\n    ResponseMode,\n    IdTokenClaims,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    BaseAuthRequest,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\nimport { initializeBaseRequest } from \"../request/RequestHelpers\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(\n        request: AuthorizationUrlRequest\n    ): Promise<CommonAuthorizationCodeRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n            this.correlationId\n        );\n        const generatedPkceParams = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(this.performanceClient, this.logger, this.correlationId);\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(\n        logoutRequest?: EndSessionRequest\n    ): CommonEndSessionRequest {\n        this.logger.verbose(\n            \"initializeLogoutRequest called\",\n            logoutRequest?.correlationId\n        );\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(\n                        logoutRequest.account\n                    );\n                    if (logoutHint) {\n                        this.logger.verbose(\n                            \"Setting logoutHint to login_hint ID Token Claim value for the account provided\"\n                        );\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\n                        \"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\"\n                    );\n                }\n            } else {\n                this.logger.verbose(\n                    \"logoutHint has already been set in logoutRequest\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"logoutHint will not be set since no logout request was configured\"\n            );\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to uri set on logout request\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        logoutRequest.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\n                    \"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\",\n                    validLogoutRequest.correlationId\n                );\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to configured uri\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        this.config.auth.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to current page\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        BrowserUtils.getCurrentUri(),\n                        BrowserUtils.getCurrentUri()\n                    );\n            }\n        } else {\n            this.logger.verbose(\n                \"postLogoutRedirectUri passed as null, not setting post logout redirect uri\",\n                validLogoutRequest.correlationId\n            );\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(\n        account: AccountInfo\n    ): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\n                    \"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\"\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        requestAzureCloudOptions?: AzureCloudOptions,\n        account?: AccountInfo\n    ): Promise<AuthorizationCodeClient> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.correlationId\n        );\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            serverTelemetryManager,\n            authorityUrl,\n            requestAzureCloudOptions,\n            account\n        );\n        return new AuthorizationCodeClient(\n            clientConfig,\n            this.performanceClient\n        );\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(\n        serverTelemetryManager: ServerTelemetryManager,\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions,\n        account?: AccountInfo\n    ): Promise<ClientConfiguration> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.correlationId\n        );\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(requestAuthority, requestAzureCloudOptions, account);\n        const logger = this.config.system.loggerOptions;\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds:\n                    this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled:\n                    this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        interactionType: InteractionType\n    ): Promise<AuthorizationUrlRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.correlationId\n        );\n\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state) || Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const baseRequest: BaseAuthRequest = await invokeAsync(\n            initializeBaseRequest,\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            { ...request, correlationId: this.correlationId },\n            this.config,\n            this.performanceClient,\n            this.logger\n        );\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType as ResponseMode,\n        };\n\n        const account =\n            request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\n                \"Setting validated request account\",\n                this.correlationId\n            );\n            this.logger.verbosePii(\n                `Setting validated request account: ${account.homeAccountId}`,\n                this.correlationId\n            );\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (!validatedRequest.loginHint && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const contentError = \"ContentError\";\nexport const userSwitch = \"user_switch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthError,\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"./BrowserAuthError\";\n\nimport * as NativeAuthErrorCodes from \"./NativeAuthErrorCodes\";\nimport * as NativeStatusCodes from \"../broker/nativeBroker/NativeStatusCodes\";\nexport { NativeAuthErrorCodes };\n\nexport type OSError = {\n    error?: number;\n    protocol_error?: string;\n    properties?: object;\n    status?: string;\n    retryable?: boolean;\n};\n\nconst INVALID_METHOD_ERROR = -2147186943;\n\nexport const NativeAuthErrorMessages = {\n    [NativeAuthErrorCodes.userSwitch]:\n        \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description?: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nexport function isFatalNativeAuthError(error: NativeAuthError): boolean {\n    if (\n        error.ext &&\n        error.ext.status &&\n        (error.ext.status === NativeStatusCodes.PERSISTENT_ERROR ||\n            error.ext.status === NativeStatusCodes.DISABLED)\n    ) {\n        return true;\n    }\n\n    if (\n        error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR\n    ) {\n        return true;\n    }\n\n    switch (error.errorCode) {\n        case NativeAuthErrorCodes.contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nexport function createNativeAuthError(\n    code: string,\n    description?: string,\n    ext?: OSError\n): AuthError {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case NativeStatusCodes.ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(\n                    InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n                );\n            case NativeStatusCodes.USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case NativeStatusCodes.USER_CANCEL:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            case NativeStatusCodes.NO_NETWORK:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n        }\n    }\n\n    return new NativeAuthError(\n        code,\n        NativeAuthErrorMessages[code] || description,\n        ext\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Status Codes that can be thrown by WAM\nexport const USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nexport const USER_CANCEL = \"USER_CANCEL\";\nexport const NO_NETWORK = \"NO_NETWORK\";\nexport const TRANSIENT_ERROR = \"TRANSIENT_ERROR\";\nexport const PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nexport const DISABLED = \"DISABLED\";\nexport const ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    Errors,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport * as TimeUtils from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport {\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { invoke, invokeAsync } from \"../utils/FunctionWrappers\";\nimport { generateCredentialKey } from \"../cache/utils/CacheHelpers\";\nimport { ClientAssertion } from \"../account/ClientCredentials\";\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils\";\n\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\n\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nexport class RefreshTokenClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n    public async acquireToken(\n        request: CommonRefreshTokenRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            request.correlationId\n        );\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.authority);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true,\n            request.forceCache,\n            requestId\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.tokenRequestEmpty\n            );\n        }\n\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            request.correlationId\n        );\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(\n            request.account.environment\n        );\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return await invokeAsync(\n                    this.acquireTokenWithCachedRefreshToken.bind(this),\n                    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, true);\n            } catch (e) {\n                const noFamilyRTInCache =\n                    e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        InteractionRequiredAuthErrorCodes.noTokensFound;\n                const clientMismatchErrorWithFamilyRT =\n                    e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(\n                        this.acquireTokenWithCachedRefreshToken.bind(this),\n                        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        request.correlationId\n                    )(request, false);\n                    // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(\n            this.acquireTokenWithCachedRefreshToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(\n        request: CommonSilentFlowRequest,\n        foci: boolean\n    ) {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            request.correlationId\n        );\n\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = invoke(\n            this.cacheManager.getRefreshToken.bind(this.cacheManager),\n            PerformanceEvents.CacheManagerGetRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            request.account,\n            foci,\n            undefined,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.noTokensFound\n            );\n        }\n\n        if (\n            refreshToken.expiresOn &&\n            TimeUtils.isTokenExpired(\n                refreshToken.expiresOn,\n                request.refreshTokenExpirationOffsetSeconds ||\n                    DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS\n            )\n        ) {\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.refreshTokenExpired\n            );\n        }\n        // attach cached RT size to the current measurement\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme:\n                request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n\n        try {\n            return await invokeAsync(\n                this.acquireToken.bind(this),\n                PerformanceEvents.RefreshTokenClientAcquireToken,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(refreshTokenRequest);\n        } catch (e) {\n            if (\n                e instanceof InteractionRequiredAuthError &&\n                e.subError === InteractionRequiredAuthErrorCodes.badToken\n            ) {\n                // Remove bad refresh token from cache\n                this.logger.verbose(\n                    \"acquireTokenWithRefreshToken: bad refresh token, removing from cache\"\n                );\n                const badRefreshTokenKey = generateCredentialKey(refreshToken);\n                this.cacheManager.removeRefreshToken(badRefreshTokenKey);\n            }\n\n            throw e;\n        }\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(\n        request: CommonRefreshTokenRequest,\n        authority: Authority\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            request.ccsCredential\n        );\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonRefreshTokenRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const correlationId = request.correlationId;\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes\n        );\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion: ClientAssertion =\n                this.config.clientCredentials.clientAssertion;\n\n            parameterBuilder.addClientAssertion(\n                await getClientAssertion(\n                    clientAssertion.assertion,\n                    this.config.authOptions.clientId,\n                    request.resourceRequestUri\n                )\n            );\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            } else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (\n            this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential\n        ) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.ccsCredential.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(\n                        request.ccsCredential.credential\n                    );\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport * as TimeUtils from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport {\n    ClientAuthError,\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheOutcome, OIDC_DEFAULT_SCOPES } from \"../utils/Constants\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { getTenantFromAuthorityString } from \"../authority/Authority\";\n\n/** @internal */\nexport class SilentFlowClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken({\n                ...request,\n                scopes: request.scopes?.length\n                    ? request.scopes\n                    : [...OIDC_DEFAULT_SCOPES],\n            });\n\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\n                    \"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\"\n                );\n\n                // refresh the access token in the background\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                        // do nothing, this is running in the background and no action is to be taken upon success or failure\n                    });\n            }\n\n            // return the cached token\n            return authResponse;\n        } catch (e) {\n            if (\n                e instanceof ClientAuthError &&\n                e.errorCode === ClientAuthErrorCodes.tokenRefreshRequired\n            ) {\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(\n        request: CommonSilentFlowRequest\n    ): Promise<[AuthenticationResult, CacheOutcome]> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\n            request.correlationId\n        );\n        let lastCacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n        if (\n            request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !StringUtils.isEmptyObj(request.claims))\n        ) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(\n                CacheOutcome.FORCE_REFRESH_OR_CLAIMS,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        const requestTenantId =\n            request.account.tenantId ||\n            getTenantFromAuthorityString(request.authority);\n        const tokenKeys = this.cacheManager.getTokenKeys();\n        const cachedAccessToken = this.cacheManager.getAccessToken(\n            request.account,\n            request,\n            tokenKeys,\n            requestTenantId,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!cachedAccessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(\n                CacheOutcome.NO_CACHED_ACCESS_TOKEN,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(\n                cachedAccessToken.expiresOn,\n                this.config.systemOptions.tokenRenewalOffsetSeconds\n            )\n        ) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(\n                CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            cachedAccessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cachedAccessToken.refreshOn, 0)\n        ) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n\n        const environment =\n            request.authority || this.authority.getPreferredCache();\n        const cacheRecord: CacheRecord = {\n            account: this.cacheManager.readAccountFromCache(request.account),\n            accessToken: cachedAccessToken,\n            idToken: this.cacheManager.getIdToken(\n                request.account,\n                tokenKeys,\n                requestTenantId,\n                this.performanceClient,\n                request.correlationId\n            ),\n            refreshToken: null,\n            appMetadata:\n                this.cacheManager.readAppMetadataFromCache(environment),\n        };\n\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return [\n            await invokeAsync(\n                this.generateResultFromCacheRecord.bind(this),\n                PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n\n    private setCacheOutcome(\n        cacheOutcome: CacheOutcome,\n        correlationId: string\n    ): void {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields(\n            {\n                cacheOutcome: cacheOutcome,\n            },\n            correlationId\n        );\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\n            this.logger.info(\n                `Token refresh is required due to cache outcome: ${cacheOutcome}`\n            );\n        }\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(\n        cacheRecord: CacheRecord,\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n            request.correlationId\n        );\n        let idTokenClaims: TokenClaims | undefined;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(\n                cacheRecord.idToken.secret,\n                this.config.cryptoInterface.base64Decode\n            );\n        }\n\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.authTimeNotFound\n                );\n            }\n\n            checkMaxAge(authTime, request.maxAge);\n        }\n\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenClaims\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    SilentFlowClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(\n        silentRequest: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentCacheClientAcquireToken,\n            silentRequest.correlationId\n        );\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions,\n            silentRequest.account\n        );\n        const silentAuthClient = new SilentFlowClient(\n            clientConfig,\n            this.performanceClient\n        );\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const response = await invokeAsync(\n                silentAuthClient.acquireCachedToken.bind(silentAuthClient),\n                PerformanceEvents.SilentFlowClientAcquireCachedToken,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest);\n            const authResponse = response[0] as AuthenticationResult;\n\n            this.performanceClient.addFields(\n                {\n                    fromCache: true,\n                },\n                silentRequest.correlationId\n            );\n            return authResponse;\n        } catch (error) {\n            if (\n                error instanceof BrowserAuthError &&\n                error.errorCode === BrowserAuthErrorCodes.cryptoKeyNotFound\n            ) {\n                this.logger.verbose(\n                    \"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\"\n                );\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: ClearCacheRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    ICrypto,\n    PromptValue,\n    AuthToken,\n    Constants,\n    AccountEntity,\n    AuthorityType,\n    ScopeSet,\n    TimeUtils,\n    AuthenticationScheme,\n    UrlString,\n    OIDC_DEFAULT_SCOPES,\n    PopTokenGenerator,\n    SignedHttpRequestParameters,\n    IPerformanceClient,\n    PerformanceEvents,\n    IdTokenEntity,\n    AccessTokenEntity,\n    AuthError,\n    CommonSilentFlowRequest,\n    AccountInfo,\n    AADServerParamKeys,\n    TokenClaims,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    invokeAsync,\n    createAuthError,\n    AuthErrorCodes,\n    updateAccountTenantProfileData,\n    CacheHelpers,\n    buildAccountToCache,\n    InProgressPerformanceEvent,\n    ServerTelemetryManager,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    NativeExtensionMethod,\n    ApiId,\n    TemporaryCacheKeys,\n    NativeConstants,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport {\n    NativeExtensionRequestBody,\n    NativeTokenRequest,\n} from \"../broker/nativeBroker/NativeRequest\";\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport {\n    NativeAuthError,\n    NativeAuthErrorCodes,\n    createNativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { SilentCacheClient } from \"./SilentCacheClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport { version } from \"../packageMetadata\";\n\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n    protected silentCacheClient: SilentCacheClient;\n    protected nativeStorageManager: BrowserCacheManager;\n    protected skus: string;\n    protected serverTelemetryManager: ServerTelemetryManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        browserStorage: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        provider: NativeMessageHandler,\n        accountId: string,\n        nativeStorageImpl: BrowserCacheManager,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            browserStorage,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(\n            config,\n            this.nativeStorageManager,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n        this.serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        const extensionName =\n            this.nativeMessageHandler.getExtensionId() ===\n            NativeConstants.PREFERRED_EXTENSION_ID\n                ? \"chrome\"\n                : this.nativeMessageHandler.getExtensionId()?.length\n                ? \"unknown\"\n                : undefined;\n        this.skus = ServerTelemetryManager.makeExtraSkuString({\n            libraryName: BrowserConstants.MSAL_SKU,\n            libraryVersion: version,\n            extensionName: extensionName,\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n        });\n    }\n\n    /**\n     * Adds SKUs to request extra query parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    private addRequestSKUs(request: NativeTokenRequest) {\n        request.extraParameters = {\n            ...request.extraParameters,\n            [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\n        };\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(\n        request: PopupRequest | SilentRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            // initialize native request\n            const nativeRequest = await this.initializeNativeRequest(request);\n\n            // check if the tokens can be retrieved from internal cache\n            try {\n                const result = await this.acquireTokensFromCache(\n                    this.accountId,\n                    nativeRequest\n                );\n                nativeATMeasurement.end({\n                    success: true,\n                    isNativeBroker: false, // Should be true only when the result is coming directly from the broker\n                    fromCache: true,\n                });\n                return result;\n            } catch (e) {\n                // continue with a native call for any and all errors\n                this.logger.info(\n                    \"MSAL internal Cache does not contain tokens, proceed to make a native call\"\n                );\n            }\n\n            const { ...nativeTokenRequest } = nativeRequest;\n\n            // fall back to native calls\n            const messageBody: NativeExtensionRequestBody = {\n                method: NativeExtensionMethod.GetToken,\n                request: nativeTokenRequest,\n            };\n\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            const validatedResponse: NativeResponse =\n                this.validateNativeResponse(response);\n\n            return await this.handleNativeResponse(\n                validatedResponse,\n                nativeRequest,\n                reqTimestamp\n            )\n                .then((result: AuthenticationResult) => {\n                    nativeATMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        requestId: result.requestId,\n                    });\n                    this.serverTelemetryManager.clearNativeBrokerErrorCode();\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    nativeATMeasurement.end({\n                        success: false,\n                        errorCode: error.errorCode,\n                        subErrorCode: error.subError,\n                        isNativeBroker: true,\n                    });\n                    throw error;\n                });\n        } catch (e) {\n            if (e instanceof NativeAuthError) {\n                this.serverTelemetryManager.setNativeBrokerErrorCode(\n                    e.errorCode\n                );\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    private createSilentCacheRequest(\n        request: NativeTokenRequest,\n        cachedAccount: AccountInfo\n    ): CommonSilentFlowRequest {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    protected async acquireTokensFromCache(\n        nativeAccountId: string,\n        request: NativeTokenRequest\n    ): Promise<AuthenticationResult> {\n        if (!nativeAccountId) {\n            this.logger.warning(\n                \"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\"\n            );\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getBaseAccountInfo({\n            nativeAccountId,\n        });\n\n        if (!account) {\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(\n                request,\n                account\n            );\n            const result = await this.silentCacheClient.acquireToken(\n                silentRequest\n            );\n\n            const fullAccount = {\n                ...account,\n                idTokenClaims: result?.idTokenClaims as TokenClaims,\n                idToken: result?.idToken,\n            };\n\n            return {\n                ...result,\n                account: fullAccount,\n            };\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param {RedirectRequest} request\n     * @param {InProgressPerformanceEvent} rootMeasurement\n     */\n    async acquireTokenRedirect(\n        request: RedirectRequest,\n        rootMeasurement: InProgressPerformanceEvent\n    ): Promise<void> {\n        this.logger.trace(\n            \"NativeInteractionClient - acquireTokenRedirect called.\"\n        );\n\n        const { ...remainingParameters } = request;\n        delete remainingParameters.onRedirectNavigate;\n\n        const nativeRequest = await this.initializeNativeRequest(\n            remainingParameters\n        );\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n\n        try {\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError) {\n                this.serverTelemetryManager.setNativeBrokerErrorCode(\n                    e.errorCode\n                );\n                if (isFatalNativeAuthError(e)) {\n                    throw e;\n                }\n            }\n        }\n        this.browserStorage.setTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            JSON.stringify(nativeRequest),\n            true\n        );\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        rootMeasurement.end({ success: true });\n        await this.navigationClient.navigateExternal(\n            redirectUri,\n            navigationOptions\n        ); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     * @param performanceClient {IPerformanceClient?}\n     * @param correlationId {string?} correlation identifier\n     */\n    async handleRedirectPromise(\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleRedirectPromise called.\"\n        );\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n            );\n            return null;\n        }\n\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\"\n            );\n            if (performanceClient && correlationId) {\n                performanceClient?.addFields(\n                    { errorCode: \"no_cached_request\" },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\"\n            );\n        }\n\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(\n                TemporaryCacheKeys.NATIVE_REQUEST\n            )\n        );\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise sending message to native broker.\"\n            );\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(\n                response as NativeResponse,\n                request,\n                reqTimestamp\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            const res = await result;\n            this.serverTelemetryManager.clearNativeBrokerErrorCode();\n            return res;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleNativeResponse called.\"\n        );\n\n        // generate identifiers\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(\n            response,\n            idTokenClaims\n        );\n\n        const cachedhomeAccountId =\n            this.browserStorage.getAccountInfoFilteredBy({\n                nativeAccountId: request.accountId,\n            })?.homeAccountId;\n\n        if (\n            homeAccountIdentifier !== cachedhomeAccountId &&\n            response.account.id !== request.accountId\n        ) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(NativeAuthErrorCodes.userSwitch);\n        }\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n\n        const baseAccount = buildAccountToCache(\n            this.browserStorage,\n            authority,\n            homeAccountIdentifier,\n            base64Decode,\n            idTokenClaims,\n            response.client_info,\n            undefined, // environment\n            idTokenClaims.tid,\n            undefined, // auth code payload\n            response.account.id,\n            this.logger\n        );\n\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(\n            response,\n            request,\n            idTokenClaims,\n            baseAccount,\n            authority.canonicalAuthority,\n            reqTimestamp\n        );\n\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(baseAccount);\n        this.cacheNativeTokens(\n            response,\n            request,\n            homeAccountIdentifier,\n            idTokenClaims,\n            response.access_token,\n            result.tenantId,\n            reqTimestamp\n        );\n\n        return result;\n    }\n\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    protected createHomeAccountIdentifier(\n        response: NativeResponse,\n        idTokenClaims: TokenClaims\n    ): string {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            response.client_info || Constants.EMPTY_STRING,\n            AuthorityType.Default,\n            this.logger,\n            this.browserCrypto,\n            idTokenClaims\n        );\n\n        return homeAccountIdentifier;\n    }\n\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): ScopeSet {\n        return response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n    }\n\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): Promise<string> {\n        if (\n            request.tokenType === AuthenticationScheme.POP &&\n            request.signPopToken\n        ) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\n                    \"handleNativeServerResponse: SHR is enabled in native layer\"\n                );\n                return response.shr;\n            }\n\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(\n                this.browserCrypto\n            );\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\n            }\n            return popTokenGenerator.signPopToken(\n                response.access_token,\n                request.keyId,\n                shrParameters\n            );\n        } else {\n            return response.access_token;\n        }\n    }\n\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    protected async generateAuthenticationResult(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        idTokenClaims: TokenClaims,\n        accountEntity: AccountEntity,\n        authority: string,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n\n        const accountProperties = response.account.properties || {};\n        const uid =\n            accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid =\n            accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n\n        const accountInfo: AccountInfo | null = updateAccountTenantProfileData(\n            accountEntity.getAccountInfo(),\n            undefined, // tenantProfile optional\n            idTokenClaims,\n            response.id_token\n        );\n\n        /**\n         * In pairwise broker flows, this check prevents the broker's native account id\n         * from being returned over the embedded app's account id.\n         */\n        if (accountInfo.nativeAccountId !== response.account.id) {\n            accountInfo.nativeAccountId = response.account.id;\n        }\n\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(\n            response,\n            request\n        );\n        const tokenType =\n            request.tokenType === AuthenticationScheme.POP\n                ? AuthenticationScheme.POP\n                : AuthenticationScheme.BEARER;\n\n        const result: AuthenticationResult = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountInfo,\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(\n                Number(reqTimestamp + response.expires_in) * 1000\n            ),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n\n        return result;\n    }\n\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity: AccountEntity): void {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(\n                `Error occurred while removing account context from browser storage. ${e}`\n            );\n        });\n    }\n\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        homeAccountIdentifier: string,\n        idTokenClaims: TokenClaims,\n        responseAccessToken: string,\n        tenantId: string,\n        reqTimestamp: number\n    ): void {\n        const cachedIdToken: IdTokenEntity | null =\n            CacheHelpers.createIdTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                response.id_token || \"\",\n                request.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n        // cache accessToken in inmemory storage\n        const expiresIn: number =\n            request.tokenType === AuthenticationScheme.POP\n                ? Constants.SHR_NONCE_VALIDITY\n                : (typeof response.expires_in === \"string\"\n                      ? parseInt(response.expires_in, 10)\n                      : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n\n        const cachedAccessToken: AccessTokenEntity | null =\n            CacheHelpers.createAccessTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                responseAccessToken,\n                request.clientId,\n                idTokenClaims.tid || tenantId,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                0,\n                base64Decode,\n                undefined,\n                request.tokenType as AuthenticationScheme,\n                undefined,\n                request.keyId\n            );\n\n        const nativeCacheRecord = {\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n        };\n\n        void this.nativeStorageManager.saveCacheRecord(\n            nativeCacheRecord,\n            request.storeInCache\n        );\n    }\n\n    protected addTelemetryFromNativeResponse(\n        response: NativeResponse\n    ): MATS | null {\n        const mats = this.getMATSFromResponse(response);\n\n        if (!mats) {\n            return null;\n        }\n\n        this.performanceClient.addFields(\n            {\n                extensionId: this.nativeMessageHandler.getExtensionId(),\n                extensionVersion:\n                    this.nativeMessageHandler.getExtensionVersion(),\n                matsBrokerVersion: mats.broker_version,\n                matsAccountJoinOnStart: mats.account_join_on_start,\n                matsAccountJoinOnEnd: mats.account_join_on_end,\n                matsDeviceJoin: mats.device_join,\n                matsPromptBehavior: mats.prompt_behavior,\n                matsApiErrorCode: mats.api_error_code,\n                matsUiVisible: mats.ui_visible,\n                matsSilentCode: mats.silent_code,\n                matsSilentBiSubCode: mats.silent_bi_sub_code,\n                matsSilentMessage: mats.silent_message,\n                matsSilentStatus: mats.silent_status,\n                matsHttpStatus: mats.http_status,\n                matsHttpEventCount: mats.http_event_count,\n            },\n            this.correlationId\n        );\n\n        return mats;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw createAuthError(\n                AuthErrorCodes.unexpectedError,\n                \"Response missing expected properties.\"\n            );\n        }\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    private getMATSFromResponse(response: NativeResponse): MATS | null {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            } catch (e) {\n                this.logger.error(\n                    \"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    protected isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\n                \"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\"\n            );\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(\n        request: PopupRequest | SsoSilentRequest\n    ): Promise<NativeTokenRequest> {\n        this.logger.trace(\n            \"NativeInteractionClient - initializeNativeRequest called\"\n        );\n\n        const authority = request.authority || this.config.auth.authority;\n\n        if (request.account) {\n            // validate authority\n            await this.getDiscoveredAuthority(\n                authority,\n                request.azureCloudOptions,\n                request.account\n            );\n        }\n\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\n                        \"initializeNativeRequest: silent request sets prompt to none\"\n                    );\n                    return PromptValue.NONE;\n                default:\n                    break;\n            }\n\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\n                    \"initializeNativeRequest: prompt was not provided\"\n                );\n                return undefined;\n            }\n\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"initializeNativeRequest: prompt is compatible with native flow\"\n                    );\n                    return request.prompt;\n                default:\n                    this.logger.trace(\n                        `initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`\n                    );\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativePromptNotSupported\n                    );\n            }\n        };\n\n        const validatedRequest: NativeTokenRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n            keyId: request.popKid,\n        };\n\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\n        if (validatedRequest.signPopToken && !!request.popKid) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.invalidPopTokenRequest\n            );\n        }\n\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            NativeConstants.MATS_TELEMETRY;\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n\n            // generate reqCnf if not provided in the request\n            let reqCnfData;\n            if (!validatedRequest.keyId) {\n                const generatedReqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(shrParameters, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n                validatedRequest.keyId = generatedReqCnfData.kid;\n                validatedRequest.signPopToken = true;\n            } else {\n                reqCnfData = this.browserCrypto.base64UrlEncode(\n                    JSON.stringify({ kid: validatedRequest.keyId })\n                );\n                validatedRequest.signPopToken = false;\n            }\n\n            // SPAs require whole string to be passed to broker\n            validatedRequest.reqCnf = reqCnfData;\n        }\n        this.addRequestSKUs(validatedRequest);\n\n        return validatedRequest;\n    }\n\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    private handleExtraBrokerParams(request: NativeTokenRequest): void {\n        if (!request.extraParameters) {\n            return;\n        }\n\n        if (\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_CLIENT_ID\n            ) &&\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_REDIRECT_URI\n            ) &&\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.CLIENT_ID)\n        ) {\n            const child_client_id =\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri =\n                request.extraParameters[\n                    BrokerServerParamKeys.BROKER_REDIRECT_URI\n                ];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    NativeConstants,\n    NativeExtensionMethod,\n} from \"../../utils/BrowserConstants\";\nimport {\n    Logger,\n    AuthError,\n    createAuthError,\n    AuthErrorCodes,\n    AuthenticationScheme,\n    InProgressPerformanceEvent,\n    PerformanceEvents,\n    IPerformanceClient,\n} from \"@azure/msal-common\";\nimport {\n    NativeExtensionRequest,\n    NativeExtensionRequestBody,\n} from \"./NativeRequest\";\nimport { createNativeAuthError } from \"../../error/NativeAuthError\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../../error/BrowserAuthError\";\nimport { BrowserConfiguration } from \"../../config/Configuration\";\nimport { createNewGuid } from \"../../crypto/BrowserCrypto\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (\n        value: AuthError | Error | PromiseLike<Error> | PromiseLike<AuthError>\n    ) => void;\n};\n\nexport class NativeMessageHandler {\n    private extensionId: string | undefined;\n    private extensionVersion: string | undefined;\n    private logger: Logger;\n    private readonly handshakeTimeoutMs: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<string, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<string, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private readonly windowListener: (event: MessageEvent) => void;\n    private readonly performanceClient: IPerformanceClient;\n    private readonly handshakeEvent: InProgressPerformanceEvent;\n\n    constructor(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient,\n        extensionId?: string\n    ) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(\n            PerformanceEvents.NativeMessageHandlerHandshake\n        );\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: body,\n        };\n\n        this.logger.trace(\n            \"NativeMessageHandler - Sending request to browser extension\"\n        );\n        this.logger.tracePii(\n            `NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(\n                req\n            )}`\n        );\n        this.messageChannel.port1.postMessage(req);\n\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient\n    ): Promise<NativeMessageHandler> {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient,\n                NativeConstants.PREFERRED_EXTENSION_ID\n            );\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient\n            );\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\n            \"NativeMessageHandler - sendHandshakeRequest called.\"\n        );\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                );\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeHandshakeTimeout\n                    )\n                );\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (\n            !request.channel ||\n            request.channel !== NativeConstants.CHANNEL_ID\n        ) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(\n                request.responseId\n            );\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(\n                    `NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`\n                );\n                return;\n            }\n\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(\n                request.extensionId\n                    ? `Extension with id: ${request.extensionId} not installed`\n                    : \"No extension installed\"\n            );\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeExtensionNotInstalled\n                )\n            );\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(\n            request.responseId\n        );\n\n        try {\n            const method = request.body.method;\n\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\n                    \"NativeMessageHandler - Received response from browser extension\"\n                );\n                this.logger.tracePii(\n                    `NativeMessageHandler - Received response from browser extension: ${JSON.stringify(\n                        response\n                    )}`\n                );\n                if (response.status !== \"Success\") {\n                    resolver.reject(\n                        createNativeAuthError(\n                            response.code,\n                            response.description,\n                            response.ext\n                        )\n                    );\n                } else if (response.result) {\n                    if (\n                        response.result[\"code\"] &&\n                        response.result[\"description\"]\n                    ) {\n                        resolver.reject(\n                            createNativeAuthError(\n                                response.result[\"code\"],\n                                response.result[\"description\"],\n                                response.result[\"ext\"]\n                            )\n                        );\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw createAuthError(\n                        AuthErrorCodes.unexpectedError,\n                        \"Event does not contain result.\"\n                    );\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(\n                        `NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`\n                    );\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                ); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(\n                    `NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`\n                );\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(\n                `Error parsing response from WAM Extension: ${err as string}`\n            );\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId(): string | undefined {\n        return this.extensionId;\n    }\n\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion(): string | undefined {\n        return this.extensionVersion;\n    }\n\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(\n        config: BrowserConfiguration,\n        logger: Logger,\n        nativeExtensionProvider?: NativeMessageHandler,\n        authenticationScheme?: AuthenticationScheme\n    ): boolean {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\n                \"isNativeAvailable: allowNativeBroker is not enabled, returning false\"\n            );\n            // Developer disabled WAM\n            return false;\n        }\n\n        if (!nativeExtensionProvider) {\n            logger.trace(\n                \"isNativeAvailable: WAM extension provider is not initialized, returning false\"\n            );\n            // Extension is not available\n            return false;\n        }\n\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is supported, returning true\"\n                    );\n                    return true;\n                default:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is not supported, returning false\"\n                    );\n                    return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodePayload,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    CcsCredential,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    CcsCredentialType,\n    ServerAuthorizationCodeResponse,\n} from \"@azure/msal-common\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponse(\n        response: ServerAuthorizationCodeResponse,\n        request: AuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponse,\n            request.correlationId\n        );\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                response,\n                request.state\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        return invokeAsync(\n            this.handleCodeResponseFromServer.bind(this),\n            PerformanceEvents.HandleCodeResponseFromServer,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(authCodeResponse, request);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(\n        authCodeResponse: AuthorizationCodePayload,\n        request: AuthorizationUrlRequest,\n        validateNonce: boolean = true\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponseFromServer,\n            request.correlationId\n        );\n        this.logger.trace(\n            \"InteractionHandler.handleCodeResponseFromServer called\"\n        );\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.authModule.updateAuthority.bind(this.authModule),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authCodeResponse.cloud_instance_host_name, request.correlationId);\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\n            authCodeResponse.nonce = request.nonce || undefined;\n        }\n\n        authCodeResponse.state = request.state;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const ccsCred = this.createCcsCredentials(request);\n            if (ccsCred) {\n                this.authCodeRequest.ccsCredential = ccsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(\n            this.authModule.acquireToken.bind(this.authModule),\n            PerformanceEvents.AuthClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authCodeRequest, authCodeResponse)) as AuthenticationResult;\n        return tokenResponse;\n    }\n\n    /**\n     * Build ccs creds if available\n     */\n    protected createCcsCredentials(\n        request: AuthorizationUrlRequest\n    ): CcsCredential | null {\n        if (request.account) {\n            return {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n        } else if (request.loginHint) {\n            return {\n                credential: request.loginHint,\n                type: CcsCredentialType.UPN,\n            };\n        }\n\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    ServerAuthorizationCodeResponse,\n    UrlUtils,\n} from \"@azure/msal-common\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError\";\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\n\nexport function deserializeResponse(\n    responseString: string,\n    responseLocation: string,\n    logger: Logger\n): ServerAuthorizationCodeResponse {\n    // Deserialize hash fragment response parameters.\n    const serverParams = UrlUtils.getDeserializedResponse(responseString);\n    if (!serverParams) {\n        if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\n            // Hash or Query string is empty\n            logger.error(\n                `The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`\n            );\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\n        } else {\n            logger.error(\n                `A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`\n            );\n            logger.errorPii(\n                `The ${responseLocation} detected is: ${responseString}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n            );\n        }\n    }\n    return serverParams;\n}\n\n/**\n * Returns the interaction type that the response object belongs to\n */\nexport function validateInteractionType(\n    response: ServerAuthorizationCodeResponse,\n    browserCrypto: ICrypto,\n    interactionType: InteractionType\n): void {\n    if (!response.state) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n    }\n\n    const platformStateObj = extractBrowserRequestState(\n        browserCrypto,\n        response.state\n    );\n    if (!platformStateObj) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.unableToParseState);\n    }\n\n    if (platformStateObj.interactionType !== interactionType) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    ThrottlingUtils,\n    CommonEndSessionRequest,\n    UrlString,\n    AuthError,\n    OIDC_DEFAULT_SCOPES,\n    ProtocolUtils,\n    PerformanceEvents,\n    IPerformanceClient,\n    Logger,\n    ICrypto,\n    ProtocolMode,\n    ServerResponseType,\n    invokeAsync,\n    invoke,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { EventType } from \"../event/EventType\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport type PopupParams = {\n    popup?: Window | null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes;\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window | undefined;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(\n                request.scopes || OIDC_DEFAULT_SCOPES,\n                request.authority || this.config.auth.authority\n            );\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\n                    \"asyncPopup set to false, opening popup before acquiring token\"\n                );\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes,\n                    popup\n                );\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest =\n                this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri =\n                logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes =\n                logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    undefined,\n                    mainWindowRedirectUri\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    popup,\n                    mainWindowRedirectUri\n                );\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(\n        request: PopupRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        popup?: Window | null\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenPopup\n        );\n\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Popup);\n\n        BrowserUtils.preconnect(validRequest.authority);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await invokeAsync(\n                    this.initializeAuthorizationCodeRequest.bind(this),\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                validRequest.authority,\n                validRequest.azureCloudOptions,\n                validRequest.account\n            );\n\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                request.authenticationScheme\n            );\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(\n                        PerformanceEvents.FetchAccountIdWithNativeBroker,\n                        request.correlationId\n                    );\n            }\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow: Window = this.initiateAuthRequest(\n                navigateUrl,\n                popupParameters\n            );\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const responseString = await this.monitorPopupForHash(popupWindow);\n\n            const serverParams = invoke(\n                ResponseHandler.deserializeResponse,\n                PerformanceEvents.DeserializeResponse,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                responseString,\n                this.config.auth.OIDCOptions.serverResponseType,\n                this.logger\n            );\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(\n                this.browserStorage,\n                this.config.auth.clientId,\n                authCodeRequest\n            );\n\n            if (serverParams.accountId) {\n                this.logger.verbose(\n                    \"Account id found in hash, calling WAM for token\"\n                );\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n\n                if (!this.nativeMessageHandler) {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                    );\n                }\n                const nativeInteractionClient = new NativeInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.acquireTokenPopup,\n                    this.performanceClient,\n                    this.nativeMessageHandler,\n                    serverParams.accountId,\n                    this.nativeStorage,\n                    validRequest.correlationId\n                );\n                const { userRequestState } = ProtocolUtils.parseRequestState(\n                    this.browserCrypto,\n                    validRequest.state\n                );\n                return await nativeInteractionClient.acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                });\n            }\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponse(\n                serverParams,\n                validRequest\n            );\n\n            return result;\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(\n        validRequest: CommonEndSessionRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        requestAuthority?: string,\n        popup?: Window | null,\n        mainWindowRedirectUri?: string\n    ): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_START,\n            InteractionType.Popup,\n            validRequest\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logoutPopup\n        );\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                requestAuthority,\n                undefined, // AzureCloudOptions\n                validRequest.account || undefined\n            );\n\n            try {\n                authClient.authority.endSessionEndpoint;\n            } catch {\n                if (\n                    validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC\n                ) {\n                    void this.browserStorage.removeAccount(\n                        validRequest.account?.homeAccountId\n                    );\n\n                    this.eventHandler.emitEvent(\n                        EventType.LOGOUT_SUCCESS,\n                        InteractionType.Popup,\n                        validRequest\n                    );\n\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions: NavigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout:\n                                this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(\n                            mainWindowRedirectUri,\n                            BrowserUtils.getCurrentUri()\n                        );\n                        await this.navigationClient.navigateInternal(\n                            absoluteUrl,\n                            navigationOptions\n                        );\n                    }\n\n                    if (popup) {\n                        popup.close();\n                    }\n\n                    return;\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Popup,\n                validRequest\n            );\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            await this.monitorPopupForHash(popupWindow).catch(() => {\n                // Swallow any errors related to monitoring the window. Server logout is best effort\n            });\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(\n                    mainWindowRedirectUri,\n                    BrowserUtils.getCurrentUri()\n                );\n\n                this.logger.verbose(\n                    \"Redirecting main window to url specified in the request\"\n                );\n                this.logger.verbosePii(\n                    `Redirecting main window to: ${absoluteUrl}`\n                );\n                await this.navigationClient.navigateInternal(\n                    absoluteUrl,\n                    navigationOptions\n                );\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Popup,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Popup\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Popup\n        );\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            this.logger.verbose(\n                \"PopupHandler.monitorPopupForHash - polling started\"\n            );\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\n                        \"PopupHandler.monitorPopupForHash - window closed\"\n                    );\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.userCancelled\n                        )\n                    );\n                    return;\n                }\n\n                let href = \"\";\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                clearInterval(intervalId);\n\n                let responseString = \"\";\n                const responseType =\n                    this.config.auth.OIDCOptions.serverResponseType;\n                if (popupWindow) {\n                    if (responseType === ServerResponseType.QUERY) {\n                        responseString = popupWindow.location.search;\n                    } else {\n                        responseString = popupWindow.location.hash;\n                    }\n                }\n\n                this.logger.verbose(\n                    \"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\"\n                );\n\n                resolve(responseString);\n            }, this.config.system.pollIntervalMilliseconds);\n        }).finally(() => {\n            this.cleanPopup(popupWindow);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(\n                    `Navigating popup window to: ${urlNavigate}`\n                );\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(\n                    `Opening popup window to: ${urlNavigate}`\n                );\n                popupWindow = this.openSizedPopup(\n                    urlNavigate,\n                    popupParams.popupName,\n                    popupParams.popupWindowAttributes\n                );\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.emptyWindowError\n                );\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\n                \"error opening popup \" + (e as AuthError).message\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.popupWindowError\n            );\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(\n        urlNavigate: string,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes\n    ): Window | null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth =\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight =\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\n                \"Default popup window width used. Window width not configured or invalid.\"\n            );\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\n                \"Default popup window height used. Window height not configured or invalid.\"\n            );\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\n                \"Default popup window top position used. Window top not configured or invalid.\"\n            );\n            top = Math.max(\n                0,\n                winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop\n            );\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\n                \"Default popup window left position used. Window left not configured or invalid.\"\n            );\n            left = Math.max(\n                0,\n                winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft\n            );\n        }\n\n        return window.open(\n            urlNavigate,\n            popupName,\n            `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`\n        );\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(\n            InteractionType.Popup\n        );\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${\n            this.config.auth.clientId\n        }.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    CommonAuthorizationCodeRequest,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    CcsCredential,\n    invokeAsync,\n    PerformanceEvents,\n    ServerAuthorizationCodeResponse,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport type RedirectParams = {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler {\n    authModule: AuthorizationCodeClient;\n    browserStorage: BrowserCacheManager;\n    authCodeRequest: CommonAuthorizationCodeRequest;\n    logger: Logger;\n    performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(\n        requestUrl: string,\n        params: RedirectParams\n    ): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\"\n                );\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    params.redirectStartPage,\n                    true\n                );\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(\n                TemporaryCacheKeys.CORRELATION_ID,\n                this.authCodeRequest.correlationId,\n                true\n            );\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\n            this.logger.infoPii(\n                `RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`\n            );\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\"\n                );\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\"\n                    );\n                    await params.navigationClient.navigateExternal(\n                        requestUrl,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\"\n                    );\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\"\n                );\n                await params.navigationClient.navigateExternal(\n                    requestUrl,\n                    navigationOptions\n                );\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\n                \"RedirectHandler.initiateAuthRequest: Navigate url is empty\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponse(\n        response: ServerAuthorizationCodeResponse,\n        state: string\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.stateNotFound,\n                \"Cached State\"\n            );\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                response,\n                requestState\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.authModule.updateAuthority.bind(this.authModule),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                this.authCodeRequest.correlationId\n            )(\n                authCodeResponse.cloud_instance_host_name,\n                this.authCodeRequest.correlationId\n            );\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(\n            this.authCodeRequest,\n            authCodeResponse\n        )) as AuthenticationResult;\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.CCS_CREDENTIAL,\n            true\n        );\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\n                    \"Cache credential could not be parsed\"\n                );\n                this.authModule.logger.errorPii(\n                    `Cache credential could not be parsed: ${cachedCcsCred}`\n                );\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    UrlString,\n    AuthError,\n    ServerTelemetryManager,\n    Constants,\n    ProtocolUtils,\n    ServerAuthorizationCodeResponse,\n    ThrottlingUtils,\n    ICrypto,\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    ProtocolMode,\n    invokeAsync,\n    ServerResponseType,\n    UrlUtils,\n    InProgressPerformanceEvent,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    ApiId,\n    InteractionType,\n    TemporaryCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport class RedirectClient extends StandardInteractionClient {\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Redirect);\n\n        this.browserStorage.updateCacheEntries(\n            validRequest.state,\n            validRequest.nonce,\n            validRequest.authority,\n            validRequest.loginHint || \"\",\n            validRequest.account || null\n        );\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenRedirect\n        );\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\n                    \"Page was restored from back/forward cache. Clearing temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(\n                    EventType.RESTORE_FROM_BFCACHE,\n                    InteractionType.Redirect\n                );\n            }\n        };\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await invokeAsync(\n                    this.initializeAuthorizationCodeRequest.bind(this),\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                validRequest.authority,\n                validRequest.azureCloudOptions,\n                validRequest.account\n            );\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(\n                    this.config,\n                    this.logger,\n                    this.nativeMessageHandler,\n                    request.authenticationScheme\n                ),\n            });\n\n            const redirectStartPage = this.getRedirectStartPage(\n                request.redirectStartPage\n            );\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash {string} url hash\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\n     */\n    async handleRedirectPromise(\n        hash: string = \"\",\n        parentMeasurement: InProgressPerformanceEvent\n    ): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.handleRedirectPromise\n        );\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\n                    \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n                );\n                return null;\n            }\n            const [serverParams, responseString] = this.getRedirectResponse(\n                hash || \"\"\n            );\n            if (!serverParams) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\n                    \"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByInteractionType(\n                    InteractionType.Redirect\n                );\n                parentMeasurement.event.errorCode = \"no_server_response\";\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl =\n                this.browserStorage.getTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    true\n                ) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized =\n                UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(\n                window.location.href\n            );\n\n            if (\n                loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl\n            ) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\n                    \"Current page is loginRequestUrl, handling response\"\n                );\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                const handleHashResult = await this.handleResponse(\n                    serverParams,\n                    serverTelemetryManager\n                );\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\n                    \"NavigateToLoginRequestUrl set to false, handling response\"\n                );\n                return await this.handleResponse(\n                    serverParams,\n                    serverTelemetryManager\n                );\n            } else if (\n                !BrowserUtils.isInIframe() ||\n                this.config.system.allowRedirectInIframe\n            ) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.URL_HASH,\n                    responseString,\n                    true\n                );\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(\n                        TemporaryCacheKeys.ORIGIN_URI,\n                        homepage,\n                        true\n                    );\n                    this.logger.warning(\n                        \"Unable to get valid login request url from cache, redirecting to home page\"\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            homepage,\n                            navigationOptions\n                        );\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(\n                        `Navigating to loginRequestUrl: ${loginRequestUrl}`\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            loginRequestUrl,\n                            navigationOptions\n                        );\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return await this.handleResponse(\n                        serverParams,\n                        serverTelemetryManager\n                    );\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponse(\n        userProvidedResponse: string\n    ): [ServerAuthorizationCodeResponse | null, string] {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        let responseString = userProvidedResponse;\n        if (!responseString) {\n            if (\n                this.config.auth.OIDCOptions.serverResponseType ===\n                ServerResponseType.QUERY\n            ) {\n                responseString = window.location.search;\n            } else {\n                responseString = window.location.hash;\n            }\n        }\n        let response = UrlUtils.getDeserializedResponse(responseString);\n\n        if (response) {\n            try {\n                ResponseHandler.validateInteractionType(\n                    response,\n                    this.browserCrypto,\n                    InteractionType.Redirect\n                );\n            } catch (e) {\n                if (e instanceof AuthError) {\n                    this.logger.error(\n                        `Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`\n                    );\n                }\n                return [null, \"\"];\n            }\n\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\n                \"Hash contains known properties, returning response hash\"\n            );\n            return [response, responseString];\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.URL_HASH,\n            true\n        );\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n\n        if (cachedHash) {\n            response = UrlUtils.getDeserializedResponse(cachedHash);\n            if (response) {\n                this.logger.verbose(\n                    \"Hash does not contain known properties, returning cached hash\"\n                );\n                return [response, cachedHash];\n            }\n        }\n\n        return [null, \"\"];\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleResponse(\n        serverParams: ServerAuthorizationCodeResponse,\n        serverTelemetryManager: ServerTelemetryManager\n    ): Promise<AuthenticationResult> {\n        const state = serverParams.state;\n        if (!state) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n        }\n\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.acquireTokenPopup,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.nativeStorage,\n                cachedRequest.correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                state\n            );\n            return nativeInteractionClient\n                .acquireToken({\n                    ...cachedRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                })\n                .finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n        }\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noCachedAuthorityError\n            );\n        }\n\n        const authClient = await invokeAsync(\n            this.createAuthCodeClient.bind(this),\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, currentAuthority);\n\n        ThrottlingUtils.removeThrottle(\n            this.browserStorage,\n            this.config.auth.clientId,\n            cachedRequest\n        );\n        const interactionHandler = new RedirectHandler(\n            authClient,\n            this.browserStorage,\n            cachedRequest,\n            this.logger,\n            this.performanceClient\n        );\n        return interactionHandler.handleCodeResponse(serverParams, state);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logout\n        );\n\n        try {\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_START,\n                InteractionType.Redirect,\n                logoutRequest\n            );\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                logoutRequest && logoutRequest.authority,\n                undefined, // AzureCloudOptions\n                (logoutRequest && logoutRequest.account) || undefined\n            );\n\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                } catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(\n                            validLogoutRequest.account?.homeAccountId\n                        );\n\n                        this.eventHandler.emitEvent(\n                            EventType.LOGOUT_SUCCESS,\n                            InteractionType.Redirect,\n                            validLogoutRequest\n                        );\n\n                        return;\n                    }\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string =\n                authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Redirect,\n                validLogoutRequest\n            );\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (\n                logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\"\n            ) {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate did not return false, navigating\"\n                    );\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(\n                        logoutUri,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate returned false, stopping navigation\"\n                    );\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(\n                    logoutUri,\n                    navigationOptions\n                );\n                return;\n            }\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Redirect,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Redirect\n        );\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(\n            redirectStartPage,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n    ServerResponseType,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\n\n/**\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\n * @param urlNavigate\n * @param userRequestScopes\n */\nexport async function initiateAuthRequest(\n    requestUrl: string,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    navigateFrameWait?: number\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\n        correlationId\n    );\n\n    if (!requestUrl) {\n        // Throw error if request URL is empty.\n        logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.emptyNavigateUri);\n    }\n    if (navigateFrameWait) {\n        return invokeAsync(\n            loadFrame,\n            PerformanceEvents.SilentHandlerLoadFrame,\n            logger,\n            performanceClient,\n            correlationId\n        )(requestUrl, navigateFrameWait, performanceClient, correlationId);\n    }\n    return invoke(\n        loadFrameSync,\n        PerformanceEvents.SilentHandlerLoadFrameSync,\n        logger,\n        performanceClient,\n        correlationId\n    )(requestUrl);\n}\n\n/**\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n * @param iframe\n * @param timeout\n */\nexport async function monitorIframeForHash(\n    iframe: HTMLIFrameElement,\n    timeout: number,\n    pollIntervalMilliseconds: number,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    responseType: ServerResponseType\n): Promise<string> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\n        correlationId\n    );\n\n    return new Promise<string>((resolve, reject) => {\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n            logger.warning(\n                `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`\n            );\n        }\n\n        /*\n         * Polling for iframes can be purely timing based,\n         * since we don't need to account for interaction.\n         */\n        const timeoutId = window.setTimeout(() => {\n            window.clearInterval(intervalId);\n            reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.monitorWindowTimeout\n                )\n            );\n        }, timeout);\n\n        const intervalId = window.setInterval(() => {\n            let href: string = \"\";\n            const contentWindow = iframe.contentWindow;\n            try {\n                /*\n                 * Will throw if cross origin,\n                 * which should be caught and ignored\n                 * since we need the interval to keep running while on STS UI.\n                 */\n                href = contentWindow ? contentWindow.location.href : \"\";\n            } catch (e) {}\n\n            if (!href || href === \"about:blank\") {\n                return;\n            }\n\n            let responseString = \"\";\n            if (contentWindow) {\n                if (responseType === ServerResponseType.QUERY) {\n                    responseString = contentWindow.location.search;\n                } else {\n                    responseString = contentWindow.location.hash;\n                }\n            }\n            window.clearTimeout(timeoutId);\n            window.clearInterval(intervalId);\n            resolve(responseString);\n        }, pollIntervalMilliseconds);\n    }).finally(() => {\n        invoke(\n            removeHiddenIframe,\n            PerformanceEvents.RemoveHiddenIframe,\n            logger,\n            performanceClient,\n            correlationId\n        )(iframe);\n    });\n}\n\n/**\n * @hidden\n * Loads iframe with authorization endpoint URL\n * @ignore\n * @deprecated\n */\nfunction loadFrame(\n    urlNavigate: string,\n    navigateFrameWait: number,\n    performanceClient: IPerformanceClient,\n    correlationId: string\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerLoadFrame,\n        correlationId\n    );\n\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n\n    return new Promise((resolve, reject) => {\n        const frameHandle = createHiddenIframe();\n\n        window.setTimeout(() => {\n            if (!frameHandle) {\n                reject(\"Unable to load iframe\");\n                return;\n            }\n\n            frameHandle.src = urlNavigate;\n\n            resolve(frameHandle);\n        }, navigateFrameWait);\n    });\n}\n/**\n * @hidden\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n * @param urlNavigate\n * @param frameName\n * @param logger\n */\nfunction loadFrameSync(urlNavigate: string): HTMLIFrameElement {\n    const frameHandle = createHiddenIframe();\n\n    frameHandle.src = urlNavigate;\n\n    return frameHandle;\n}\n\n/**\n * @hidden\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\n * @ignore\n */\nfunction createHiddenIframe(): HTMLIFrameElement {\n    const authFrame = document.createElement(\"iframe\");\n\n    authFrame.className = \"msalSilentIframe\";\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\n        \"sandbox\",\n        \"allow-scripts allow-same-origin allow-forms\"\n    );\n    document.body.appendChild(authFrame);\n\n    return authFrame;\n}\n\n/**\n * @hidden\n * Removes a hidden iframe from the page.\n * @ignore\n */\nfunction removeHiddenIframe(iframe: HTMLIFrameElement): void {\n    if (document.body === iframe.parentNode) {\n        document.body.removeChild(iframe);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    PromptValue,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    AuthError,\n    ProtocolUtils,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport {\n    initiateAuthRequest,\n    monitorIframeForHash,\n} from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(\n        request: SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            request.correlationId\n        );\n        // Check that we have some SSO data\n        if (\n            !request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)\n        ) {\n            this.logger.warning(\n                \"No user hint provided. The authorization server may need more information to complete this request.\"\n            );\n        }\n\n        // Check the prompt value\n        const inputRequest = { ...request };\n        if (inputRequest.prompt) {\n            if (\n                inputRequest.prompt !== PromptValue.NONE &&\n                inputRequest.prompt !== PromptValue.NO_SESSION\n            ) {\n                this.logger.warning(\n                    `SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${PromptValue.NONE}`\n                );\n                inputRequest.prompt = PromptValue.NONE;\n            }\n        } else {\n            inputRequest.prompt = PromptValue.NONE;\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(inputRequest, InteractionType.Silent);\n        BrowserUtils.preconnect(silentRequest.authority);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                serverTelemetryManager,\n                silentRequest.authority,\n                silentRequest.azureCloudOptions,\n                silentRequest.account\n            );\n\n            return await invokeAsync(\n                this.silentTokenHelper.bind(this),\n                PerformanceEvents.SilentIframeClientTokenHelper,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authClient, silentRequest);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(\n        authClient: AuthorizationCodeClient,\n        silentRequest: AuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = silentRequest.correlationId;\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientTokenHelper,\n            correlationId\n        );\n\n        // Create auth code request and generate PKCE params\n        const authCodeRequest: CommonAuthorizationCodeRequest =\n            await invokeAsync(\n                this.initializeAuthorizationCodeRequest.bind(this),\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(silentRequest);\n\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(\n            authClient.getAuthCodeUrl.bind(authClient),\n            PerformanceEvents.GetAuthCodeUrl,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                silentRequest.authenticationScheme\n            ),\n        });\n\n        // Create silent handler\n        const interactionHandler = new InteractionHandler(\n            authClient,\n            this.browserStorage,\n            authCodeRequest,\n            this.logger,\n            this.performanceClient\n        );\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(\n            initiateAuthRequest,\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            navigateUrl,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            this.config.system.navigateFrameWait\n        );\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(\n            monitorIframeForHash,\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            msalFrame,\n            this.config.system.iframeHashTimeout,\n            this.config.system.pollIntervalMilliseconds,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            responseType\n        );\n        const serverParams = invoke(\n            ResponseHandler.deserializeResponse,\n            PerformanceEvents.DeserializeResponse,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(responseString, responseType, this.logger);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                this.apiId,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.browserStorage,\n                correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                silentRequest.state\n            );\n            return invokeAsync(\n                nativeInteractionClient.acquireToken.bind(\n                    nativeInteractionClient\n                ),\n                PerformanceEvents.NativeInteractionClientAcquireToken,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE,\n            });\n        }\n\n        // Handle response from hash string\n        return invokeAsync(\n            interactionHandler.handleCodeResponse.bind(interactionHandler),\n            PerformanceEvents.HandleCodeResponse,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(serverParams, silentRequest);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    ServerTelemetryManager,\n    RefreshTokenClient,\n    AuthError,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    AccountInfo,\n} from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { initializeBaseRequest } from \"../request/RequestHelpers\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentRefreshClientAcquireToken,\n            request.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            initializeBaseRequest,\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.config, this.performanceClient, this.logger);\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...baseRequest,\n        };\n\n        if (request.redirectUri) {\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\n            silentRequest.redirectUri = this.getRedirectUri(\n                request.redirectUri\n            );\n        }\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const refreshTokenClient = await this.createRefreshTokenClient(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions,\n            silentRequest.account\n        );\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(\n            refreshTokenClient.acquireTokenByRefreshToken.bind(\n                refreshTokenClient\n            ),\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(silentRequest).catch((e: AuthError) => {\n            (e as AuthError).setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }) as Promise<AuthenticationResult>;\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        azureCloudOptions?: AzureCloudOptions,\n        account?: AccountInfo\n    ): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, azureCloudOptions, account);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccessTokenEntity,\n    ICrypto,\n    IdTokenEntity,\n    Logger,\n    ScopeSet,\n    Authority,\n    AuthorityOptions,\n    ExternalTokenResponse,\n    AccountEntity,\n    AuthToken,\n    RefreshTokenEntity,\n    CacheRecord,\n    TokenClaims,\n    CacheHelpers,\n    buildAccountToCache,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string;\n    expiresOn?: number;\n    extendedExpiresOn?: number;\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(\n        configuration: BrowserConfiguration,\n        storage: BrowserCacheManager,\n        logger: Logger,\n        cryptoObj: ICrypto\n    ) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        options: LoadTokenOptions\n    ): AuthenticationResult {\n        if (!this.isBrowserEnvironment) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nonBrowserEnvironment\n            );\n        }\n\n        const idTokenClaims = response.id_token\n            ? AuthToken.extractTokenClaims(response.id_token, base64Decode)\n            : undefined;\n\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n        const authority = request.authority\n            ? new Authority(\n                  Authority.generateAuthority(\n                      request.authority,\n                      request.azureCloudOptions\n                  ),\n                  this.config.system.networkClient,\n                  this.storage,\n                  authorityOptions,\n                  this.logger,\n                  request.correlationId || BrowserCrypto.createNewGuid()\n              )\n            : undefined;\n\n        const cacheRecordAccount: AccountEntity = this.loadAccount(\n            request,\n            options.clientInfo || response.client_info || \"\",\n            idTokenClaims,\n            authority\n        );\n\n        const idToken = this.loadIdToken(\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment,\n            cacheRecordAccount.realm\n        );\n\n        const accessToken = this.loadAccessToken(\n            request,\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment,\n            cacheRecordAccount.realm,\n            options\n        );\n\n        const refreshToken = this.loadRefreshToken(\n            response,\n            cacheRecordAccount.homeAccountId,\n            cacheRecordAccount.environment\n        );\n\n        return this.generateAuthenticationResult(\n            request,\n            {\n                account: cacheRecordAccount,\n                idToken,\n                accessToken,\n                refreshToken,\n            },\n            idTokenClaims,\n            authority\n        );\n    }\n\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    private loadAccount(\n        request: SilentRequest,\n        clientInfo: string,\n        idTokenClaims?: TokenClaims,\n        authority?: Authority\n    ): AccountEntity {\n        this.logger.verbose(\"TokenCache - loading account\");\n\n        if (request.account) {\n            const accountEntity = AccountEntity.createFromAccountInfo(\n                request.account\n            );\n            this.storage.setAccount(accountEntity);\n            return accountEntity;\n        } else if (!authority || (!clientInfo && !idTokenClaims)) {\n            this.logger.error(\n                \"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const homeAccountId = AccountEntity.generateHomeAccountId(\n            clientInfo,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        const claimsTenantId = idTokenClaims?.tid;\n\n        const cachedAccount = buildAccountToCache(\n            this.storage,\n            authority,\n            homeAccountId,\n            base64Decode,\n            idTokenClaims,\n            clientInfo,\n            authority.hostnameAndPort,\n            claimsTenantId,\n            undefined, // authCodePayload\n            undefined, // nativeAccountId\n            this.logger\n        );\n\n        this.storage.setAccount(cachedAccount);\n        return cachedAccount;\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    private loadIdToken(\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string\n    ): IdTokenEntity | null {\n        if (!response.id_token) {\n            this.logger.verbose(\"TokenCache - no id token found in response\");\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading id token\");\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            homeAccountId,\n            environment,\n            response.id_token,\n            this.config.auth.clientId,\n            tenantId\n        );\n\n        this.storage.setIdTokenCredential(idTokenEntity);\n        return idTokenEntity;\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    private loadAccessToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string,\n        options: LoadTokenOptions\n    ): AccessTokenEntity | null {\n        if (!response.access_token) {\n            this.logger.verbose(\n                \"TokenCache - no access token found in response\"\n            );\n            return null;\n        } else if (!response.expires_in) {\n            this.logger.error(\n                \"TokenCache - no expiration set on the access token. Cannot add it to the cache.\"\n            );\n            return null;\n        } else if (\n            !response.scope &&\n            (!request.scopes || !request.scopes.length)\n        ) {\n            this.logger.error(\n                \"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\"\n            );\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading access token\");\n\n        const scopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : new ScopeSet(request.scopes);\n        const expiresOn =\n            options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n\n        const extendedExpiresOn =\n            options.extendedExpiresOn ||\n            (response.ext_expires_in || response.expires_in) +\n                new Date().getTime() / 1000;\n\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            homeAccountId,\n            environment,\n            response.access_token,\n            this.config.auth.clientId,\n            tenantId,\n            scopes.printScopes(),\n            expiresOn,\n            extendedExpiresOn,\n            base64Decode\n        );\n\n        this.storage.setAccessTokenCredential(accessTokenEntity);\n        return accessTokenEntity;\n    }\n\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    private loadRefreshToken(\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string\n    ): RefreshTokenEntity | null {\n        if (!response.refresh_token) {\n            this.logger.verbose(\n                \"TokenCache - no refresh token found in response\"\n            );\n            return null;\n        }\n\n        this.logger.verbose(\"TokenCache - loading refresh token\");\n        const refreshTokenEntity = CacheHelpers.createRefreshTokenEntity(\n            homeAccountId,\n            environment,\n            response.refresh_token,\n            this.config.auth.clientId,\n            response.foci,\n            undefined, // userAssertionHash\n            response.refresh_token_expires_in\n        );\n\n        this.storage.setRefreshTokenCredential(refreshTokenEntity);\n        return refreshTokenEntity;\n    }\n\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    private generateAuthenticationResult(\n        request: SilentRequest,\n        cacheRecord: CacheRecord & { account: AccountEntity },\n        idTokenClaims?: TokenClaims,\n        authority?: Authority\n    ): AuthenticationResult {\n        let accessToken: string = \"\";\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n        }\n\n        const accountEntity = cacheRecord.account;\n\n        return {\n            authority: authority ? authority.canonicalAuthority : \"\",\n            uniqueId: cacheRecord.account.localAccountId,\n            tenantId: cacheRecord.account.realm,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || \"\",\n            requestId: \"\",\n            extExpiresOn: extExpiresOn,\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\n            state: request.state || \"\",\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\n            msGraphHost: accountEntity.msGraphHost || \"\",\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    ClientConfiguration,\n} from \"@azure/msal-common\";\n\nexport class HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config: ClientConfiguration) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    CommonAuthorizationCodeRequest,\n    AuthError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.authCodeRequired\n            );\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, InteractionType.Silent);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n\n            // Initialize the client\n            const clientConfig = await invokeAsync(\n                this.getClientConfiguration.bind(this),\n                PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                serverTelemetryManager,\n                silentRequest.authority,\n                silentRequest.azureCloudOptions,\n                silentRequest.account\n            );\n            const authClient: HybridSpaAuthorizationCodeClient =\n                new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Handle auth code parameters from request\n            return await invokeAsync(\n                interactionHandler.handleCodeResponseFromServer.bind(\n                    interactionHandler\n                ),\n                PerformanceEvents.HandleCodeResponseFromServer,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName,\n                },\n                silentRequest,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport {\n    InteractionRequiredAuthError,\n    AccountInfo,\n    Constants,\n    INetworkModule,\n    Logger,\n    CommonSilentFlowRequest,\n    ICrypto,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AuthError,\n    PerformanceEvents,\n    PerformanceCallbackFunction,\n    IPerformanceClient,\n    BaseAuthRequest,\n    PromptValue,\n    InProgressPerformanceEvent,\n    RequestThumbprint,\n    AccountEntity,\n    invokeAsync,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    AccountFilter,\n    buildStaticAuthorityOptions,\n    InteractionRequiredAuthErrorCodes,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheManager,\n    DEFAULT_BROWSER_CACHE_MANAGER,\n} from \"../cache/BrowserCacheManager\";\nimport * as AccountManager from \"../cache/AccountManager\";\nimport { BrowserConfiguration, CacheOptions } from \"../config/Configuration\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserCacheLocation,\n    WrapperSKU,\n    TemporaryCacheKeys,\n    CacheLookupPolicy,\n    DEFAULT_REQUEST,\n    BrowserConstants,\n    iFrameRenewalPolicies,\n} from \"../utils/BrowserConstants\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport {\n    NativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { BaseOperatingContext } from \"../operatingcontext/BaseOperatingContext\";\nimport { IController } from \"./IController\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\nimport { initializeSilentRequest } from \"../request/RequestHelpers\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest\";\n\nfunction getAccountType(\n    account?: AccountInfo\n): \"AAD\" | \"MSA\" | \"B2C\" | undefined {\n    const idTokenClaims = account?.idTokenClaims;\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\n        return \"B2C\";\n    }\n\n    if (!idTokenClaims?.tid) {\n        return undefined;\n    } else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\n        return \"MSA\";\n    }\n    return \"AAD\";\n}\n\nfunction preflightCheck(\n    initialized: boolean,\n    performanceEvent: InProgressPerformanceEvent\n) {\n    try {\n        BrowserUtils.preflightCheck(initialized);\n    } catch (e) {\n        performanceEvent.end({ success: false }, e);\n        throw e;\n    }\n}\n\nexport class StandardController implements IController {\n    // OperatingContext\n    protected readonly operatingContext: StandardOperatingContext;\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Native Cache in memory storage implementation\n    protected readonly nativeInternalStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected readonly config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected readonly eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected readonly redirectResponse: Map<\n        string,\n        Promise<AuthenticationResult | null>\n    >;\n\n    // Native Extension Provider\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected readonly performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    // Active requests\n    private activeSilentTokenRequests: Map<\n        string,\n        Promise<AuthenticationResult>\n    >;\n\n    // Active Iframe request\n    private activeIframeRequest: [Promise<boolean>, string] | undefined;\n\n    private ssoSilentMeasurement?: InProgressPerformanceEvent;\n    private acquireTokenByCodeAsyncMeasurement?: InProgressPerformanceEvent;\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext: StandardOperatingContext) {\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(\n                  this.config.auth.clientId,\n                  this.config.cache,\n                  this.browserCrypto,\n                  this.logger,\n                  buildStaticAuthorityOptions(this.config.auth),\n                  this.performanceClient\n              )\n            : DEFAULT_BROWSER_CACHE_MANAGER(\n                  this.config.auth.clientId,\n                  this.logger\n              );\n\n        // initialize in memory storage for native flows\n        const nativeCacheOptions: Required<CacheOptions> = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(\n            this.config.auth.clientId,\n            nativeCacheOptions,\n            this.browserCrypto,\n            this.logger,\n            undefined,\n            this.performanceClient\n        );\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(\n            this.config,\n            this.browserStorage,\n            this.logger,\n            this.browserCrypto\n        );\n\n        this.activeSilentTokenRequests = new Map();\n\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n\n    static async createController(\n        operatingContext: BaseOperatingContext,\n        request?: InitializeApplicationRequest\n    ): Promise<IController> {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize(request);\n        return controller;\n    }\n\n    private trackPageVisibility(correlationId?: string): void {\n        if (!correlationId) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.performanceClient.incrementFields(\n            { visibilityChangeCount: 1 },\n            correlationId\n        );\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     * @param request {?InitializeApplicationRequest} correlation id\n     */\n    async initialize(request?: InitializeApplicationRequest): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\n                \"initialize has already been called, exiting early.\"\n            );\n            return;\n        }\n\n        const initCorrelationId =\n            request?.correlationId || this.getRequestCorrelationId();\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.InitializeClientApplication,\n            initCorrelationId\n        );\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await NativeMessageHandler.createProvider(\n                        this.logger,\n                        this.config.system.nativeBrokerHandshakeTimeout,\n                        this.performanceClient\n                    );\n            } catch (e) {\n                this.logger.verbose(e as string);\n            }\n        }\n\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\n                \"Claims-based caching is disabled. Clearing the previous cache with claims\"\n            );\n\n            await invokeAsync(\n                this.browserStorage.clearTokensAndKeysWithClaims.bind(\n                    this.browserStorage\n                ),\n                PerformanceEvents.ClearTokensAndKeysWithClaims,\n                this.logger,\n                this.performanceClient,\n                initCorrelationId\n            )(this.performanceClient, initCorrelationId);\n        }\n\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || \"\";\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                response = this.handleRedirectPromiseInternal(hash);\n                this.redirectResponse.set(redirectResponseKey, response);\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called for the first time, storing the promise\"\n                );\n            } else {\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called previously, returning the result from the first call\"\n                );\n            }\n\n            return response;\n        }\n        this.logger.verbose(\n            \"handleRedirectPromise returns null, not browser environment\"\n        );\n        return null;\n    }\n\n    /**\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\n     * @param hash\n     * @returns\n     */\n    private async handleRedirectPromiseInternal(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        const loggedInAccounts = this.getAllAccounts();\n        const request: NativeTokenRequest | null =\n            this.browserStorage.getCachedNativeRequest();\n        const useNative =\n            request &&\n            NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider\n            ) &&\n            this.nativeExtensionProvider &&\n            !hash;\n        const correlationId = useNative\n            ? request?.correlationId\n            : this.browserStorage.getTemporaryCache(\n                  TemporaryCacheKeys.CORRELATION_ID,\n                  true\n              ) || \"\";\n        const rootMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenRedirect,\n            correlationId\n        );\n        this.eventHandler.emitEvent(\n            EventType.HANDLE_REDIRECT_START,\n            InteractionType.Redirect\n        );\n\n        let redirectResponse: Promise<AuthenticationResult | null>;\n        if (useNative && this.nativeExtensionProvider) {\n            this.logger.trace(\n                \"handleRedirectPromise - acquiring token from native platform\"\n            );\n            const nativeClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.handleRedirectPromise,\n                this.performanceClient,\n                this.nativeExtensionProvider,\n                request.accountId,\n                this.nativeInternalStorage,\n                request.correlationId\n            );\n\n            redirectResponse = invokeAsync(\n                nativeClient.handleRedirectPromise.bind(nativeClient),\n                PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\n                this.logger,\n                this.performanceClient,\n                rootMeasurement.event.correlationId\n            )(this.performanceClient, rootMeasurement.event.correlationId);\n        } else {\n            this.logger.trace(\n                \"handleRedirectPromise - acquiring token from web flow\"\n            );\n            const redirectClient = this.createRedirectClient(correlationId);\n            redirectResponse = invokeAsync(\n                redirectClient.handleRedirectPromise.bind(redirectClient),\n                PerformanceEvents.HandleRedirectPromiseMeasurement,\n                this.logger,\n                this.performanceClient,\n                rootMeasurement.event.correlationId\n            )(hash, rootMeasurement);\n        }\n\n        return redirectResponse\n            .then((result: AuthenticationResult | null) => {\n                if (result) {\n                    // Emit login event if number of accounts change\n\n                    const isLoggingIn =\n                        loggedInAccounts.length < this.getAllAccounts().length;\n                    if (isLoggingIn) {\n                        this.eventHandler.emitEvent(\n                            EventType.LOGIN_SUCCESS,\n                            InteractionType.Redirect,\n                            result\n                        );\n                        this.logger.verbose(\n                            \"handleRedirectResponse returned result, login success\"\n                        );\n                    } else {\n                        this.eventHandler.emitEvent(\n                            EventType.ACQUIRE_TOKEN_SUCCESS,\n                            InteractionType.Redirect,\n                            result\n                        );\n                        this.logger.verbose(\n                            \"handleRedirectResponse returned result, acquire token success\"\n                        );\n                    }\n                    rootMeasurement.end({\n                        success: true,\n                        accountType: getAccountType(result.account),\n                    });\n                } else {\n                    /*\n                     * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\n                     * is empty and the error code is missing.\n                     */\n                    if (rootMeasurement.event.errorCode) {\n                        rootMeasurement.end({ success: false });\n                    } else {\n                        rootMeasurement.discard();\n                    }\n                }\n\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_END,\n                    InteractionType.Redirect\n                );\n\n                return result;\n            })\n            .catch((e) => {\n                const eventError = e as EventError;\n                // Emit login event if there is an account\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Redirect,\n                        null,\n                        eventError\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Redirect,\n                        null,\n                        eventError\n                    );\n                }\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_END,\n                    InteractionType.Redirect\n                );\n\n                rootMeasurement.end(\n                    {\n                        success: false,\n                    },\n                    eventError\n                );\n\n                throw e;\n            });\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n\n        const atrMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPreRedirect,\n            correlationId\n        );\n        atrMeasurement.add({\n            accountType: getAccountType(request.account),\n            scenarioId: request.scenarioId,\n        });\n\n        const onRedirectNavigateCb = request.onRedirectNavigate;\n        request.onRedirectNavigate = (url: string) => {\n            const navigate =\n                typeof onRedirectNavigateCb === \"function\"\n                    ? onRedirectNavigateCb(url)\n                    : undefined;\n            if (navigate !== false) {\n                atrMeasurement.end({ success: true });\n            } else {\n                atrMeasurement.discard();\n            }\n            return navigate;\n        };\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        try {\n            BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\n            this.browserStorage.setInteractionInProgress(true);\n\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_START,\n                    InteractionType.Redirect,\n                    request\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_START,\n                    InteractionType.Redirect,\n                    request\n                );\n            }\n\n            let result: Promise<void>;\n\n            if (this.nativeExtensionProvider && this.canUseNative(request)) {\n                const nativeClient = new NativeInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.acquireTokenRedirect,\n                    this.performanceClient,\n                    this.nativeExtensionProvider,\n                    this.getNativeAccountId(request),\n                    this.nativeInternalStorage,\n                    correlationId\n                );\n                result = nativeClient\n                    .acquireTokenRedirect(request, atrMeasurement)\n                    .catch((e: AuthError) => {\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                            const redirectClient =\n                                this.createRedirectClient(correlationId);\n                            return redirectClient.acquireToken(request);\n                        } else if (e instanceof InteractionRequiredAuthError) {\n                            this.logger.verbose(\n                                \"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                            );\n                            const redirectClient =\n                                this.createRedirectClient(correlationId);\n                            return redirectClient.acquireToken(request);\n                        }\n                        this.browserStorage.setInteractionInProgress(false);\n                        throw e;\n                    });\n            } else {\n                const redirectClient = this.createRedirectClient(correlationId);\n                result = redirectClient.acquireToken(request);\n            }\n\n            return await result;\n        } catch (e) {\n            atrMeasurement.end({ success: false }, e);\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e as EventError\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e as EventError\n                );\n            }\n            throw e;\n        }\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPopup,\n            correlationId\n        );\n\n        atPopupMeasurement.add({\n            scenarioId: request.scenarioId,\n            accountType: getAccountType(request.account),\n        });\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            preflightCheck(this.initialized, atPopupMeasurement);\n            this.browserStorage.setInteractionInProgress(true);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Popup,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Popup,\n                request\n            );\n        }\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(\n                {\n                    ...request,\n                    correlationId,\n                },\n                ApiId.acquireTokenPopup\n            )\n                .then((response) => {\n                    this.browserStorage.setInteractionInProgress(false);\n                    atPopupMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        requestId: response.requestId,\n                        accountType: getAccountType(response.account),\n                    });\n                    return response;\n                })\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request);\n                    }\n                    this.browserStorage.setInteractionInProgress(false);\n                    throw e;\n                });\n        } else {\n            const popupClient = this.createPopupClient(correlationId);\n            result = popupClient.acquireToken(request);\n        }\n\n        return result\n            .then((result) => {\n                /*\n                 *  If logged in, emit acquire token events\n                 */\n                const isLoggingIn =\n                    loggedInAccounts.length < this.getAllAccounts().length;\n                if (isLoggingIn) {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                }\n\n                atPopupMeasurement.end({\n                    success: true,\n                    requestId: result.requestId,\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                    accountType: getAccountType(result.account),\n                });\n                return result;\n            })\n            .catch((e: Error) => {\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                }\n\n                atPopupMeasurement.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n\n                // Since this function is syncronous we need to reject\n                return Promise.reject(e);\n            });\n    }\n\n    private trackPageVisibilityWithMeasurement(): void {\n        const measurement =\n            this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n\n        this.logger.info(\n            \"Perf: Visibility change detected in \",\n            measurement.event.name\n        );\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.SsoSilent,\n            correlationId\n        );\n        this.ssoSilentMeasurement?.add({\n            scenarioId: request.scenarioId,\n            accountType: getAccountType(request.account),\n        });\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.SSO_SILENT_START,\n            InteractionType.Silent,\n            validRequest\n        );\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(\n                validRequest,\n                ApiId.ssoSilent\n            ).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(\n                        validRequest.correlationId\n                    );\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(\n                validRequest.correlationId\n            );\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.ssoSilentMeasurement?.end({\n                    success: true,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                    accessTokenSize: response.accessToken.length,\n                    idTokenSize: response.idToken.length,\n                    accountType: getAccountType(response.account),\n                });\n                return response;\n            })\n            .catch((e: Error) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    e\n                );\n                this.ssoSilentMeasurement?.end(\n                    {\n                        success: false,\n                    },\n                    e\n                );\n                throw e;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        const atbcMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenByCode,\n            correlationId\n        );\n        preflightCheck(this.initialized, atbcMeasurement);\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_BY_CODE_START,\n            InteractionType.Silent,\n            request\n        );\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\n\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n                );\n            } else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\n                        \"Initiating new acquireTokenByCode request\",\n                        correlationId\n                    );\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS,\n                                InteractionType.Silent,\n                                result\n                            );\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.end({\n                                success: true,\n                                isNativeBroker: result.fromNativeBroker,\n                                requestId: result.requestId,\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                                accountType: getAccountType(result.account),\n                            });\n                            return result;\n                        })\n                        .catch((error: Error) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                                InteractionType.Silent,\n                                null,\n                                error\n                            );\n                            atbcMeasurement.end(\n                                {\n                                    success: false,\n                                },\n                                error\n                            );\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\n                        \"Existing acquireTokenByCode request found\",\n                        correlationId\n                    );\n                    atbcMeasurement.discard();\n                }\n                return await response;\n            } else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    const result = await this.acquireTokenNative(\n                        {\n                            ...request,\n                            correlationId,\n                        },\n                        ApiId.acquireTokenByCode,\n                        request.nativeAccountId\n                    ).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                    atbcMeasurement.end({\n                        accountType: getAccountType(result.account),\n                        success: true,\n                    });\n                    return result;\n                } else {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n                    );\n                }\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n                );\n            }\n        } catch (e) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                InteractionType.Silent,\n                null,\n                e as EventError\n            );\n            atbcMeasurement.end(\n                {\n                    success: false,\n                },\n                e\n            );\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"acquireTokenByCodeAsync called\",\n            request.correlationId\n        );\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(\n                PerformanceEvents.AcquireTokenByCodeAsync,\n                request.correlationId\n            );\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(\n            request.correlationId\n        );\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: Error) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end(\n                    {\n                        success: false,\n                    },\n                    tokenRenewalError\n                );\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n        return silentTokenResult;\n    }\n\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenFromCache(\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenFromCache,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                const silentCacheClient = this.createSilentCacheClient(\n                    commonRequest.correlationId\n                );\n                return invokeAsync(\n                    silentCacheClient.acquireToken.bind(silentCacheClient),\n                    PerformanceEvents.SilentCacheClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param cacheLookupPolicy CacheLookupPolicy\n     * @returns A promise that, when resolved, returns the access token\n     */\n    public async acquireTokenByRefreshToken(\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenByRefreshToken,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(\n                    commonRequest.correlationId\n                );\n\n                return invokeAsync(\n                    silentRefreshClient.acquireToken.bind(silentRefreshClient),\n                    PerformanceEvents.SilentRefreshClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenBySilentIframe(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenBySilentIframe,\n            request.correlationId\n        );\n\n        const silentIframeClient = this.createSilentIframeClient(\n            request.correlationId\n        );\n\n        return invokeAsync(\n            silentIframeClient.acquireToken.bind(silentIframeClient),\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\n            \"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\",\n            correlationId\n        );\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\n        this.browserStorage.setInteractionInProgress(true);\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            BrowserUtils.preflightCheck(this.initialized);\n            this.browserStorage.setInteractionInProgress(true);\n\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return AccountManager.getAllAccounts(\n            this.logger,\n            this.browserStorage,\n            this.isBrowserEnvironment,\n            accountFilter\n        );\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return AccountManager.getAccount(\n            accountFilter,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username: string): AccountInfo | null {\n        return AccountManager.getAccountByUsername(\n            username,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return AccountManager.getAccountByHomeId(\n            homeAccountId,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        return AccountManager.getAccountByLocalId(\n            localAccountId,\n            this.logger,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        AccountManager.setActiveAccount(account, this.browserStorage);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return AccountManager.getActiveAccount(this.browserStorage);\n    }\n\n    // #endregion\n\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        this.logger.verbose(\"hydrateCache called\");\n\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(\n            result.account,\n            result.cloudGraphHostName,\n            result.msGraphHost\n        );\n        this.browserStorage.setAccount(accountEntity);\n\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\n                \"Response was from native broker, storing in-memory\"\n            );\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        } else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n\n    // #region Helpers\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    public async acquireTokenNative(\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\n        apiId: ApiId,\n        accountId?: string\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nativeConnectionNotEstablished\n            );\n        }\n\n        const nativeClient = new NativeInteractionClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            apiId,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            accountId || this.getNativeAccountId(request),\n            this.nativeInternalStorage,\n            request.correlationId\n        );\n\n        return nativeClient.acquireToken(request);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    public canUseNative(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        accountId?: string\n    ): boolean {\n        this.logger.trace(\"canUseNative called\");\n        if (\n            !NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                request.authenticationScheme\n            )\n        ) {\n            this.logger.trace(\n                \"canUseNative: isNativeAvailable returned false, returning false\"\n            );\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"canUseNative: prompt is compatible with native flow\"\n                    );\n                    break;\n                default:\n                    this.logger.trace(\n                        `canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`\n                    );\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\n                \"canUseNative: nativeAccountId is not available, returning false\"\n            );\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    public getNativeAccountId(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): string {\n        const account =\n            request.account ||\n            this.getAccount({\n                loginHint: request.loginHint,\n                sid: request.sid,\n            }) ||\n            this.getActiveAccount();\n\n        return (account && account.nativeAccountId) || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    public createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    public createSilentIframeClient(\n        correlationId?: string\n    ): SilentIframeClient {\n        return new SilentIframeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.ssoSilent,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(\n        correlationId?: string\n    ): SilentCacheClient {\n        return new SilentCacheClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(\n        correlationId?: string\n    ): SilentRefreshClient {\n        return new SilentRefreshClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(\n        correlationId?: string\n    ): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.acquireTokenByCode,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    public getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    public getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the performance client\n     */\n    public getPerformanceClient(): IPerformanceClient {\n        return this.performanceClient;\n    }\n\n    /**\n     * Returns the browser env indicator\n     */\n    public isBrowserEnv(): boolean {\n        return this.isBrowserEnvironment;\n    }\n\n    /**\n     * Returns the event handler\n     */\n    getEventHandler(): EventHandler {\n        return this.eventHandler;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(\n        request?: Partial<BaseAuthRequest>\n    ): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(\n        request: SilentRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilent,\n            correlationId\n        );\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n            scenarioId: request.scenarioId,\n        });\n\n        preflightCheck(this.initialized, atsMeasurement);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noAccountError);\n        }\n        atsMeasurement.add({ accountType: getAccountType(account) });\n\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n            shrOptions: request.shrOptions,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n\n        const cachedResponse =\n            this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\n                \"acquireTokenSilent called for the first time, storing active request\",\n                correlationId\n            );\n\n            const response = invokeAsync(\n                this.acquireTokenSilentAsync.bind(this),\n                PerformanceEvents.AcquireTokenSilentAsync,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                {\n                    ...request,\n                    correlationId,\n                },\n                account\n            )\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.end({\n                        success: true,\n                        fromCache: result.fromCache,\n                        isNativeBroker: result.fromNativeBroker,\n                        cacheLookupPolicy: request.cacheLookupPolicy,\n                        requestId: result.requestId,\n                        accessTokenSize: result.accessToken.length,\n                        idTokenSize: result.idToken.length,\n                    });\n                    return result;\n                })\n                .catch((error: Error) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.end(\n                        {\n                            success: false,\n                        },\n                        error\n                    );\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return {\n                ...(await response),\n                state: request.state,\n            };\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent has been called previously, returning the result from the first call\",\n                correlationId\n            );\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return {\n                ...(await cachedResponse),\n                state: request.state,\n            };\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    protected async acquireTokenSilentAsync(\n        request: SilentRequest & { correlationId: string },\n        account: AccountInfo\n    ): Promise<AuthenticationResult> {\n        const trackPageVisibility = () =>\n            this.trackPageVisibility(request.correlationId);\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Silent,\n            request\n        );\n\n        if (request.correlationId) {\n            this.performanceClient.incrementFields(\n                { visibilityChangeCount: 0 },\n                request.correlationId\n            );\n        }\n\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\n\n        const silentRequest = await invokeAsync(\n            initializeSilentRequest,\n            PerformanceEvents.InitializeSilentRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, account, this.config, this.performanceClient, this.logger);\n        const cacheLookupPolicy =\n            request.cacheLookupPolicy || CacheLookupPolicy.Default;\n\n        const result = this.acquireTokenSilentNoIframe(\n            silentRequest,\n            cacheLookupPolicy\n        ).catch(async (refreshTokenError: AuthError) => {\n            const shouldTryToResolveSilently =\n                checkIfRefreshTokenErrorCanBeResolvedSilently(\n                    refreshTokenError,\n                    cacheLookupPolicy\n                );\n\n            if (shouldTryToResolveSilently) {\n                if (!this.activeIframeRequest) {\n                    let _resolve: (result: boolean) => void;\n                    // Always set the active request tracker immediately after checking it to prevent races\n                    this.activeIframeRequest = [\n                        new Promise((resolve) => {\n                            _resolve = resolve;\n                        }),\n                        silentRequest.correlationId,\n                    ];\n                    this.logger.verbose(\n                        \"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\",\n                        silentRequest.correlationId\n                    );\n                    return invokeAsync(\n                        this.acquireTokenBySilentIframe.bind(this),\n                        PerformanceEvents.AcquireTokenBySilentIframe,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest)\n                        .then((iframeResult) => {\n                            _resolve(true);\n                            return iframeResult;\n                        })\n                        .catch((e) => {\n                            _resolve(false);\n                            throw e;\n                        })\n                        .finally(() => {\n                            this.activeIframeRequest = undefined;\n                        });\n                } else if (cacheLookupPolicy !== CacheLookupPolicy.Skip) {\n                    const [activePromise, activeCorrelationId] =\n                        this.activeIframeRequest;\n                    this.logger.verbose(\n                        `Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`,\n                        silentRequest.correlationId\n                    );\n                    const awaitConcurrentIframeMeasure =\n                        this.performanceClient.startMeasurement(\n                            PerformanceEvents.AwaitConcurrentIframe,\n                            silentRequest.correlationId\n                        );\n                    awaitConcurrentIframeMeasure.add({\n                        awaitIframeCorrelationId: activeCorrelationId,\n                    });\n\n                    const activePromiseResult = await activePromise;\n                    awaitConcurrentIframeMeasure.end({\n                        success: activePromiseResult,\n                    });\n                    if (activePromiseResult) {\n                        this.logger.verbose(\n                            `Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`,\n                            silentRequest.correlationId\n                        );\n                        // Retry cache lookup and/or RT exchange after iframe completes\n                        return this.acquireTokenSilentNoIframe(\n                            silentRequest,\n                            cacheLookupPolicy\n                        );\n                    } else {\n                        this.logger.info(\n                            `Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`\n                        );\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\n                        throw refreshTokenError;\n                    }\n                } else {\n                    // Cache policy set to skip and another iframe request is already in progress\n                    this.logger.warning(\n                        \"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\",\n                        silentRequest.correlationId\n                    );\n                    return invokeAsync(\n                        this.acquireTokenBySilentIframe.bind(this),\n                        PerformanceEvents.AcquireTokenBySilentIframe,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest);\n                }\n            } else {\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\n                throw refreshTokenError;\n            }\n        });\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                if (request.correlationId) {\n                    this.performanceClient.addFields(\n                        {\n                            fromCache: response.fromCache,\n                            isNativeBroker: response.fromNativeBroker,\n                            requestId: response.requestId,\n                        },\n                        request.correlationId\n                    );\n                }\n\n                return response;\n            })\n            .catch((tokenRenewalError: Error) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    tokenRenewalError\n                );\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    trackPageVisibility\n                );\n            });\n    }\n\n    /**\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\n     * @param silentRequest\n     * @param cacheLookupPolicy\n     * @returns\n     */\n    private async acquireTokenSilentNoIframe(\n        silentRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        if (\n            NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                silentRequest.authenticationScheme\n            ) &&\n            silentRequest.account.nativeAccountId\n        ) {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from native platform\"\n            );\n            return this.acquireTokenNative(\n                silentRequest,\n                ApiId.acquireTokenSilent_silentFlow\n            ).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\n                        \"acquireTokenSilent - native platform unavailable, falling back to web flow\"\n                    );\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.tokenRefreshRequired\n                    );\n                }\n                throw e;\n            });\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from web flow\"\n            );\n            return invokeAsync(\n                this.acquireTokenFromCache.bind(this),\n                PerformanceEvents.AcquireTokenFromCache,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest, cacheLookupPolicy).catch(\n                (cacheError: AuthError) => {\n                    if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\n                        throw cacheError;\n                    }\n\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_NETWORK_START,\n                        InteractionType.Silent,\n                        silentRequest\n                    );\n\n                    return invokeAsync(\n                        this.acquireTokenByRefreshToken.bind(this),\n                        PerformanceEvents.AcquireTokenByRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest, cacheLookupPolicy);\n                }\n            );\n        }\n    }\n}\n\n/**\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\n * @param refreshTokenError\n * @param silentRequest\n * @param cacheLookupPolicy\n * @returns\n */\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(\n    refreshTokenError: AuthError,\n    cacheLookupPolicy: CacheLookupPolicy\n): boolean {\n    const noInteractionRequired = !(\n        refreshTokenError instanceof InteractionRequiredAuthError &&\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\n        refreshTokenError.subError !==\n            InteractionRequiredAuthErrorCodes.badToken\n    );\n\n    // Errors that result when the refresh token needs to be replaced\n    const refreshTokenRefreshRequired =\n        refreshTokenError.errorCode === BrowserConstants.INVALID_GRANT_ERROR ||\n        refreshTokenError.errorCode ===\n            ClientAuthErrorCodes.tokenRefreshRequired;\n\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\n    const isSilentlyResolvable =\n        (noInteractionRequired && refreshTokenRefreshRequired) ||\n        refreshTokenError.errorCode ===\n            InteractionRequiredAuthErrorCodes.noTokensFound ||\n        refreshTokenError.errorCode ===\n            InteractionRequiredAuthErrorCodes.refreshTokenExpired;\n\n    // Only these policies allow for an iframe renewal attempt\n    const tryIframeRenewal = iFrameRenewalPolicies.includes(cacheLookupPolicy);\n\n    return isSilentlyResolvable && tryIframeRenewal;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountInfo, AccountFilter, Logger } from \"@azure/msal-common\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\n\n/**\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\n * @returns Array of AccountInfo objects in cache\n */\nexport function getAllAccounts(\n    logger: Logger,\n    browserStorage: BrowserCacheManager,\n    isInBrowser: boolean,\n    accountFilter?: AccountFilter\n): AccountInfo[] {\n    logger.verbose(\"getAllAccounts called\");\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\n}\n\n/**\n * Returns the first account found in the cache that matches the account filter passed in.\n * @param accountFilter\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n */\nexport function getAccount(\n    accountFilter: AccountFilter,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccount called\");\n    if (Object.keys(accountFilter).length === 0) {\n        logger.warning(\"getAccount: No accountFilter provided\");\n        return null;\n    }\n\n    const account: AccountInfo | null =\n        browserStorage.getAccountInfoFilteredBy(accountFilter);\n\n    if (account) {\n        logger.verbose(\n            \"getAccount: Account matching provided filter found, returning\"\n        );\n        return account;\n    } else {\n        logger.verbose(\"getAccount: No matching account found, returning null\");\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching username.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found.\n * This API is provided for convenience but getAccountById should be used for best reliability\n * @param username\n * @returns The account object stored in MSAL\n */\nexport function getAccountByUsername(\n    username: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByUsername called\");\n    if (!username) {\n        logger.warning(\"getAccountByUsername: No username provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        username,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByUsername: Account matching username found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByUsername: Returning signed-in accounts matching username: ${username}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByUsername: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching homeAccountId.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found\n * @param homeAccountId\n * @returns The account object stored in MSAL\n */\nexport function getAccountByHomeId(\n    homeAccountId: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByHomeId called\");\n    if (!homeAccountId) {\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        homeAccountId,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByHomeId: Account matching homeAccountId found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByHomeId: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Returns the signed in account matching localAccountId.\n * (the account object is created at the time of successful login)\n * or null when no matching account is found\n * @param localAccountId\n * @returns The account object stored in MSAL\n */\nexport function getAccountByLocalId(\n    localAccountId: string,\n    logger: Logger,\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    logger.trace(\"getAccountByLocalId called\");\n    if (!localAccountId) {\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\n        return null;\n    }\n\n    const account = browserStorage.getAccountInfoFilteredBy({\n        localAccountId,\n    });\n    if (account) {\n        logger.verbose(\n            \"getAccountByLocalId: Account matching localAccountId found, returning\"\n        );\n        logger.verbosePii(\n            `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`\n        );\n        return account;\n    } else {\n        logger.verbose(\n            \"getAccountByLocalId: No matching account found, returning null\"\n        );\n        return null;\n    }\n}\n\n/**\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n * @param account\n */\nexport function setActiveAccount(\n    account: AccountInfo | null,\n    browserStorage: BrowserCacheManager\n): void {\n    browserStorage.setActiveAccount(account);\n}\n\n/**\n * Gets the currently active account\n */\nexport function getActiveAccount(\n    browserStorage: BrowserCacheManager\n): AccountInfo | null {\n    return browserStorage.getActiveAccount();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { IController } from \"../controllers/IController\";\nimport {\n    PerformanceCallbackFunction,\n    AccountInfo,\n    AccountFilter,\n    Logger,\n} from \"@azure/msal-common\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport * as ControllerFactory from \"../controllers/ControllerFactory\";\nimport { StandardController } from \"../controllers/StandardController\";\nimport { BrowserConfiguration, Configuration } from \"../config/Configuration\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NestedAppAuthController } from \"../controllers/NestedAppAuthController\";\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication implements IPublicClientApplication {\n    protected controller: IController;\n\n    /**\n     * Creates StandardController and passes it to the PublicClientApplication\n     *\n     * @param configuration {Configuration}\n     */\n    public static async createPublicClientApplication(\n        configuration: Configuration\n    ): Promise<IPublicClientApplication> {\n        const controller = await ControllerFactory.createV3Controller(\n            configuration\n        );\n        const pca = new PublicClientApplication(configuration, controller);\n\n        return pca;\n    }\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    public constructor(configuration: Configuration, controller?: IController) {\n        this.controller =\n            controller ||\n            new StandardController(new StandardOperatingContext(configuration));\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     * @param request {?InitializeApplicationRequest}\n     */\n    async initialize(request?: InitializeApplicationRequest): Promise<void> {\n        return this.controller.initialize(request);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(\n        request: PopupRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenPopup(request);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        return this.controller.acquireTokenRedirect(request);\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenByCode(request);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.controller.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        return this.controller.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.controller.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.controller.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.controller.disableAccountStorageEvents();\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return this.controller.getAccount(accountFilter);\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId: string): AccountInfo | null {\n        return this.controller.getAccountByLocalId(localId);\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName: string): AccountInfo | null {\n        return this.controller.getAccountByUsername(userName);\n    }\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(\n        hash?: string | undefined\n    ): Promise<AuthenticationResult | null> {\n        return this.controller.handleRedirectPromise(hash);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(\n        request?: PopupRequest | undefined\n    ): Promise<AuthenticationResult> {\n        return this.controller.loginPopup(request);\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\n        return this.controller.loginRedirect(request);\n    }\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logout(logoutRequest);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        return this.controller.ssoSilent(request);\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.controller.getTokenCache();\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.controller.getLogger();\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.controller.setLogger(logger);\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.controller.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.controller.getActiveAccount();\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.controller.setNavigationClient(navigationClient);\n    }\n\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.controller.getConfiguration();\n    }\n\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        return this.controller.hydrateCache(result, request);\n    }\n\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n\n/**\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\n * falls back to StandardController if NestedAppAuthController is not available\n *\n * @param configuration\n * @returns IPublicClientApplication\n *\n */\nexport async function createNestablePublicClientApplication(\n    configuration: Configuration\n): Promise<IPublicClientApplication> {\n    const nestedAppAuth = new NestedAppOperatingContext(configuration);\n    await nestedAppAuth.initialize();\n\n    if (nestedAppAuth.isAvailable()) {\n        const controller = new NestedAppAuthController(nestedAppAuth);\n        return new PublicClientApplication(configuration, controller);\n    }\n\n    return createStandardPublicClientApplication(configuration);\n}\n\n/**\n * creates PublicClientApplication using StandardController\n *\n * @param configuration\n * @returns IPublicClientApplication\n *\n */\nexport async function createStandardPublicClientApplication(\n    configuration: Configuration\n): Promise<IPublicClientApplication> {\n    const pca = new PublicClientApplication(configuration);\n    await pca.initialize();\n    return pca;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { IController } from \"./IController\";\nimport { Configuration } from \"../config/Configuration\";\nimport { StandardController } from \"./StandardController\";\nimport { NestedAppAuthController } from \"./NestedAppAuthController\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest\";\n\nexport async function createV3Controller(\n    config: Configuration,\n    request?: InitializeApplicationRequest\n): Promise<IController> {\n    const standard = new StandardOperatingContext(config);\n\n    await standard.initialize();\n    return StandardController.createController(standard, request);\n}\n\nexport async function createController(\n    config: Configuration\n): Promise<IController | null> {\n    const standard = new StandardOperatingContext(config);\n    const nestedApp = new NestedAppOperatingContext(config);\n\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\n\n    await Promise.all(operatingContexts);\n\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\n        return NestedAppAuthController.createController(nestedApp);\n    } else if (standard.isAvailable()) {\n        return StandardController.createController(standard);\n    } else {\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes\";\nexport { BrowserConfigurationAuthErrorCodes };\n\nexport const BrowserConfigurationAuthErrorMessages = {\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\n        \"Given storage configuration option was not supported.\",\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\n        ],\n    },\n    stubPcaInstanceCalled: {\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes\n                .stubbedPublicClientApplicationCalled\n        ],\n    },\n    inMemRedirectUnavailable: {\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\n\nexport function createBrowserConfigurationAuthError(\n    errorCode: string\n): BrowserConfigurationAuthError {\n    return new BrowserConfigurationAuthError(\n        errorCode,\n        BrowserConfigurationAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const storageNotSupported = \"storage_not_supported\";\nexport const stubbedPublicClientApplicationCalled =\n    \"stubbed_public_client_application_called\";\nexport const inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n} as const;\nexport type EventType = (typeof EventType)[keyof typeof EventType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\n\nexport const NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n} as const;\nexport type NativeExtensionMethod =\n    (typeof NativeExtensionMethod)[keyof typeof NativeExtensionMethod];\n\nexport const BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n} as const;\nexport type BrowserCacheLocation =\n    (typeof BrowserCacheLocation)[keyof typeof BrowserCacheLocation];\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport const HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n} as const;\nexport type HTTP_REQUEST_TYPE =\n    (typeof HTTP_REQUEST_TYPE)[keyof typeof HTTP_REQUEST_TYPE];\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport const TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n} as const;\nexport type TemporaryCacheKeys =\n    (typeof TemporaryCacheKeys)[keyof typeof TemporaryCacheKeys];\n\nexport const StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n} as const;\nexport type StaticCacheKeys =\n    (typeof StaticCacheKeys)[keyof typeof StaticCacheKeys];\n\n/**\n * Cache keys stored in-memory\n */\nexport const InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n} as const;\nexport type InMemoryCacheKeys =\n    (typeof InMemoryCacheKeys)[keyof typeof InMemoryCacheKeys];\n\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport const ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n} as const;\nexport type ApiId = (typeof ApiId)[keyof typeof ApiId];\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\",\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport const InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n} as const;\nexport type InteractionStatus =\n    (typeof InteractionStatus)[keyof typeof InteractionStatus];\n\nexport const DEFAULT_REQUEST: RedirectRequest | PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport const WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n} as const;\nexport type WrapperSKU = (typeof WrapperSKU)[keyof typeof WrapperSKU];\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n\nexport const CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0, // 0 is falsy, is equivalent to not passing in a CacheLookupPolicy\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n} as const;\nexport type CacheLookupPolicy =\n    (typeof CacheLookupPolicy)[keyof typeof CacheLookupPolicy];\n\nexport const iFrameRenewalPolicies: CacheLookupPolicy[] = [\n    CacheLookupPolicy.Default,\n    CacheLookupPolicy.Skip,\n    CacheLookupPolicy.RefreshTokenAndNetwork,\n];\n\nexport const LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\nexport const LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\n\nexport const BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const unexpectedError = \"unexpected_error\";\nexport const postRequestFailed = \"post_request_failed\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport { AuthError } from \"./AuthError\";\nimport * as InteractionRequiredAuthErrorCodes from \"./InteractionRequiredAuthErrorCodes\";\nexport { InteractionRequiredAuthErrorCodes };\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    InteractionRequiredAuthErrorCodes.interactionRequired,\n    InteractionRequiredAuthErrorCodes.consentRequired,\n    InteractionRequiredAuthErrorCodes.loginRequired,\n    InteractionRequiredAuthErrorCodes.badToken,\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n    \"bad_token\",\n];\n\nconst InteractionRequiredAuthErrorMessages = {\n    [InteractionRequiredAuthErrorCodes.noTokensFound]:\n        \"No refresh token found in the cache. Please sign-in.\",\n    [InteractionRequiredAuthErrorCodes.nativeAccountUnavailable]:\n        \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n    [InteractionRequiredAuthErrorCodes.refreshTokenExpired]:\n        \"Refresh token has expired.\",\n    [InteractionRequiredAuthErrorCodes.badToken]:\n        \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\n};\n\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: InteractionRequiredAuthErrorCodes.noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.noTokensFound\n        ],\n    },\n    native_account_unavailable: {\n        code: InteractionRequiredAuthErrorCodes.nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n        ],\n    },\n    bad_token: {\n        code: InteractionRequiredAuthErrorCodes.badToken,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.badToken\n        ],\n    },\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n    /**\n     * The time the error occured at\n     */\n    timestamp: string;\n\n    /**\n     * TraceId associated with the error\n     */\n    traceId: string;\n\n    /**\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\n     *\n     * A string with extra claims needed for the token request to succeed\n     * web site: redirect the user to the authorization page and set the extra claims\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\n     * desktop application or browser context: include the claims when acquiring the token interactively\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\n     */\n    claims: string;\n\n    /**\n     * Server error number;\n     */\n    readonly errorNo?: string;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        timestamp?: string,\n        traceId?: string,\n        correlationId?: string,\n        claims?: string,\n        errorNo?: string\n    ) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n        this.errorNo = errorNo;\n    }\n}\n\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nexport function isInteractionRequiredError(\n    errorCode?: string,\n    errorString?: string,\n    subError?: string\n): boolean {\n    const isInteractionRequiredErrorCode =\n        !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError =\n        !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc =\n        !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n    return (\n        isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError\n    );\n}\n\n/**\n * Creates an InteractionRequiredAuthError\n */\nexport function createInteractionRequiredAuthError(\n    errorCode: string\n): InteractionRequiredAuthError {\n    return new InteractionRequiredAuthError(\n        errorCode,\n        InteractionRequiredAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Codes defined by MSAL\nexport const noTokensFound = \"no_tokens_found\";\nexport const nativeAccountUnavailable = \"native_account_unavailable\";\nexport const refreshTokenExpired = \"refresh_token_expired\";\n\n// Codes potentially returned by server\nexport const interactionRequired = \"interaction_required\";\nexport const consentRequired = \"consent_required\";\nexport const loginRequired = \"login_required\";\nexport const badToken = \"bad_token\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel;\n    containsPii?: boolean;\n    context?: string;\n    correlationId?: string;\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace,\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(\n        loggerOptions: LoggerOptions,\n        packageName?: string,\n        packageVersion?: string\n    ) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions =\n            loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    private static createDefaultLoggerOptions(): LoggerOptions {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(\n        packageName: string,\n        packageVersion: string,\n        correlationId?: string\n    ): Logger {\n        return new Logger(\n            {\n                loggerCallback: this.localCallback,\n                piiLoggingEnabled: this.piiLoggingEnabled,\n                logLevel: this.level,\n                correlationId: correlationId || this.correlationId,\n            },\n            packageName,\n            packageVersion\n        );\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(\n        logMessage: string,\n        options: LoggerMessageOptions\n    ): void {\n        if (\n            options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)\n        ) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${\n            options.correlationId || this.correlationId || \"\"\n        }]`;\n\n        const log = `${logHeader} : ${this.packageName}@${\n            this.packageVersion\n        } : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(\n            options.logLevel,\n            log,\n            options.containsPii || false\n        );\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(\n        level: LogLevel,\n        message: string,\n        containsPii: boolean\n    ): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT:\n        \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    NOT_AVAILABLE: \"Not Available\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\n\nexport const HttpStatus = {\n    SUCCESS: 200,\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR: 400,\n    CLIENT_ERROR_RANGE_START: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    REQUEST_TIMEOUT: 408,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR: 500,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVICE_UNAVAILABLE: 503,\n    GATEWAY_TIMEOUT: 504,\n    SERVER_ERROR_RANGE_END: 599,\n    MULTI_SIDED_ERROR: 600,\n} as const;\nexport type HttpStatus = (typeof HttpStatus)[keyof typeof HttpStatus];\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\n\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n\n/**\n * Request header names\n */\nexport const HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n} as const;\nexport type HeaderNames = (typeof HeaderNames)[keyof typeof HeaderNames];\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport const PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\", // Legacy active-account cache key, use new key instead\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n} as const;\nexport type PersistentCacheKeys =\n    (typeof PersistentCacheKeys)[keyof typeof PersistentCacheKeys];\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n} as const;\nexport type AADAuthorityConstants =\n    (typeof AADAuthorityConstants)[keyof typeof AADAuthorityConstants];\n\n/**\n * Claims request keys\n */\nexport const ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n} as const;\nexport type ClaimsRequestKeys =\n    (typeof ClaimsRequestKeys)[keyof typeof ClaimsRequestKeys];\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n\n/**\n * allowed values for server response type\n */\nexport const ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n} as const;\nexport type ServerResponseType =\n    (typeof ServerResponseType)[keyof typeof ServerResponseType];\n\n/**\n * allowed values for response_mode\n */\nexport const ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n} as const;\nexport type ResponseMode = (typeof ResponseMode)[keyof typeof ResponseMode];\n\n/**\n * allowed grant_type\n */\nexport const GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n} as const;\nexport type GrantType = (typeof GrantType)[keyof typeof GrantType];\n\n/**\n * Account types in Cache\n */\nexport const CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n} as const;\nexport type CacheAccountType =\n    (typeof CacheAccountType)[keyof typeof CacheAccountType];\n\n/**\n * Separators used in cache\n */\nexport const Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n} as const;\nexport type Separators = (typeof Separators)[keyof typeof Separators];\n\n/**\n * Credential Type stored in the cache\n */\nexport const CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n} as const;\nexport type CredentialType =\n    (typeof CredentialType)[keyof typeof CredentialType];\n\n/**\n * Combine all cache types\n */\nexport const CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n} as const;\nexport type CacheType = (typeof CacheType)[keyof typeof CacheType];\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\n\nexport const AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n} as const;\nexport type AuthorityMetadataSource =\n    (typeof AuthorityMetadataSource)[keyof typeof AuthorityMetadataSource];\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n\n/**\n * Type of the authentication request\n */\nexport const AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n} as const;\nexport type AuthenticationScheme =\n    (typeof AuthenticationScheme)[keyof typeof AuthenticationScheme];\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport const PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n} as const;\nexport type PasswordGrantConstants =\n    (typeof PasswordGrantConstants)[keyof typeof PasswordGrantConstants];\n\n/**\n * Response codes\n */\nexport const ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n} as const;\nexport type ResponseCodes = (typeof ResponseCodes)[keyof typeof ResponseCodes];\n\n/**\n * Region Discovery Sources\n */\nexport const RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n} as const;\nexport type RegionDiscoverySources =\n    (typeof RegionDiscoverySources)[keyof typeof RegionDiscoverySources];\n\n/**\n * Region Discovery Outcomes\n */\nexport const RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n} as const;\nexport type RegionDiscoveryOutcomes =\n    (typeof RegionDiscoveryOutcomes)[keyof typeof RegionDiscoveryOutcomes];\n\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nexport const CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n} as const;\nexport type CacheOutcome = (typeof CacheOutcome)[keyof typeof CacheOutcome];\n\nexport const JsonWebTokenTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n} as const;\nexport type JsonWebTokenTypes =\n    (typeof JsonWebTokenTypes)[keyof typeof JsonWebTokenTypes];\n\nexport const ONE_DAY_IN_MS = 86400000;\n\n// Token renewal offset default in seconds\nexport const DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    AccountInfo,\n    Logger,\n    PerformanceCallbackFunction,\n} from \"@azure/msal-common\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest\";\n\nexport interface IPublicClientApplication {\n    // TODO: Make request mandatory in the next major version?\n    initialize(request?: InitializeApplicationRequest): Promise<void>;\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult>;\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult>;\n    addEventCallback(callback: EventCallbackFunction): string | null;\n    removeEventCallback(callbackId: string): void;\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\n    removePerformanceCallback(callbackId: string): boolean;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccount(accountFilter: AccountFilter): AccountInfo | null;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    /** @internal */\n    getConfiguration(): BrowserConfiguration;\n    hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void>;\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void>;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccount: () => {\n        return null;\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logout: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    ssoSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    getLogger: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    hydrateCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    clearCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as React from \"react\";\nimport {\n    IPublicClientApplication,\n    stubbedPublicClientApplication,\n    Logger,\n    InteractionStatus,\n    AccountInfo,\n} from \"@azure/msal-browser\";\n\nexport interface IMsalContext {\n    instance: IPublicClientApplication;\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n    logger: Logger;\n}\n\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext: IMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({}),\n};\n\nexport const MsalContext =\n    React.createContext<IMsalContext>(defaultMsalContext);\nexport const MsalConsumer = MsalContext.Consumer;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, AccountInfo } from \"@azure/msal-common\";\nimport { EventType } from \"./EventType\";\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\nimport {\n    PopupRequest,\n    RedirectRequest,\n    SilentRequest,\n    SsoSilentRequest,\n    EndSessionRequest,\n    AuthenticationResult,\n} from \"..\";\n\nexport type EventMessage = {\n    eventType: EventType;\n    interactionType: InteractionType | null;\n    payload: EventPayload;\n    error: EventError;\n    timestamp: number;\n};\n\nexport type PopupEvent = {\n    popupWindow: Window;\n};\n\nexport type EventPayload =\n    | AccountInfo\n    | PopupRequest\n    | RedirectRequest\n    | SilentRequest\n    | SsoSilentRequest\n    | EndSessionRequest\n    | AuthenticationResult\n    | PopupEvent\n    | null;\n\nexport type EventError = AuthError | Error | null;\n\nexport type EventCallbackFunction = (message: EventMessage) => void;\n\nexport class EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(\n        message: EventMessage,\n        currentStatus?: InteractionStatus\n    ): InteractionStatus | null {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (\n                    message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup\n                ) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.SsoSilent\n                ) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.Logout\n                ) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (\n                    currentStatus &&\n                    currentStatus !== InteractionStatus.HandleRedirect\n                ) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n            case EventType.RESTORE_FROM_BFCACHE:\n                if (\n                    message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup\n                ) {\n                    if (\n                        currentStatus &&\n                        currentStatus !== InteractionStatus.Login &&\n                        currentStatus !== InteractionStatus.AcquireToken\n                    ) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n            default:\n                break;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { AccountInfo } from \"@azure/msal-browser\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\nexport type SetDifference<A, B> = A extends B ? never : A;\nexport type SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<\n    T,\n    SetComplement<keyof T, keyof T1>\n>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nexport function accountArraysAreEqual(\n    arrayA: Array<AccountIdentifiers>,\n    arrayB: Array<AccountIdentifiers>\n): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (\n            elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username\n        );\n    });\n}\n\nexport function getAccountByIdentifiers(\n    allAccounts: AccountInfo[],\n    accountIdentifiers: AccountIdentifiers\n): AccountInfo | null {\n    if (\n        allAccounts.length > 0 &&\n        (accountIdentifiers.homeAccountId ||\n            accountIdentifiers.localAccountId ||\n            accountIdentifiers.username)\n    ) {\n        const matchedAccounts = allAccounts.filter((accountObj) => {\n            if (\n                accountIdentifiers.username &&\n                accountIdentifiers.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.homeAccountId &&\n                accountIdentifiers.homeAccountId.toLowerCase() !==\n                    accountObj.homeAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.localAccountId &&\n                accountIdentifiers.localAccountId.toLowerCase() !==\n                    accountObj.localAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-react\";\nexport const version = \"2.0.22\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, {\n    useEffect,\n    useReducer,\n    PropsWithChildren,\n    useMemo,\n} from \"react\";\nimport {\n    IPublicClientApplication,\n    EventMessage,\n    EventMessageUtils,\n    InteractionStatus,\n    Logger,\n    WrapperSKU,\n    AccountInfo,\n} from \"@azure/msal-browser\";\nimport { MsalContext, IMsalContext } from \"./MsalContext\";\nimport { accountArraysAreEqual } from \"./utils/utilities\";\nimport { name as SKU, version } from \"./packageMetadata\";\n\nexport type MsalProviderProps = PropsWithChildren<{\n    instance: IPublicClientApplication;\n}>;\n\ntype MsalState = {\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n};\n\nconst MsalProviderActionType = {\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\n    EVENT: \"EVENT\",\n} as const;\ntype MsalProviderActionType =\n    (typeof MsalProviderActionType)[keyof typeof MsalProviderActionType];\n\ntype MsalProviderReducerAction = {\n    type: MsalProviderActionType;\n    payload: {\n        logger: Logger;\n        instance: IPublicClientApplication;\n        message?: EventMessage;\n    };\n};\n\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState\n * @param action\n */\nconst reducer = (\n    previousState: MsalState,\n    action: MsalProviderReducerAction\n): MsalState => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup) {\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\n                    \"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\"\n                );\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message as EventMessage;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(\n                message,\n                previousState.inProgress\n            );\n            if (status) {\n                payload.logger.info(\n                    `MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`\n                );\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n\n    const currentAccounts = payload.instance.getAllAccounts();\n    if (\n        newInProgress !== previousState.inProgress &&\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\n    ) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts,\n        };\n    } else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n        };\n    } else if (\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\n    ) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts,\n        };\n    } else {\n        // Nothing changed\n        return previousState;\n    }\n};\n\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nexport function MsalProvider({\n    instance,\n    children,\n}: MsalProviderProps): React.ReactElement {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: instance.getAllAccounts(),\n        };\n    });\n\n    useEffect(() => {\n        const callbackId = instance.addEventCallback(\n            (message: EventMessage) => {\n                updateState({\n                    payload: {\n                        instance,\n                        logger,\n                        message,\n                    },\n                    type: MsalProviderActionType.EVENT,\n                });\n            }\n        );\n        logger.verbose(\n            `MsalProvider - Registered event callback with id: ${callbackId}`\n        );\n\n        instance\n            .initialize()\n            .then(() => {\n                instance\n                    .handleRedirectPromise()\n                    .catch(() => {\n                        // Errors should be handled by listening to the LOGIN_FAILURE event\n                        return;\n                    })\n                    .finally(() => {\n                        /*\n                         * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                         * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                         */\n                        updateState({\n                            payload: {\n                                instance,\n                                logger,\n                            },\n                            type: MsalProviderActionType.UNBLOCK_INPROGRESS,\n                        });\n                    });\n            })\n            .catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            });\n\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(\n                    `MsalProvider - Removing event callback ${callbackId}`\n                );\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    const contextValue: IMsalContext = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger,\n    };\n\n    return (\n        <MsalContext.Provider value={contextValue}>\n            {children}\n        </MsalContext.Provider>\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useContext } from \"react\";\nimport { IMsalContext, MsalContext } from \"../MsalContext\";\n\n/**\n * Returns Msal Context values\n */\nexport const useMsal = (): IMsalContext => useContext(MsalContext);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useMemo } from \"react\";\nimport { useMsal } from \"./useMsal\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { AccountInfo, InteractionStatus } from \"@azure/msal-browser\";\nimport { getAccountByIdentifiers } from \"../utils/utilities\";\n\nfunction isAuthenticated(\n    allAccounts: AccountInfo[],\n    matchAccount?: AccountIdentifiers\n): boolean {\n    if (\n        matchAccount &&\n        (matchAccount.username ||\n            matchAccount.homeAccountId ||\n            matchAccount.localAccountId)\n    ) {\n        return !!getAccountByIdentifiers(allAccounts, matchAccount);\n    }\n\n    return allAccounts.length > 0;\n}\n\n/**\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\n * @param matchAccount\n */\nexport function useIsAuthenticated(matchAccount?: AccountIdentifiers): boolean {\n    const { accounts: allAccounts, inProgress } = useMsal();\n\n    const isUserAuthenticated = useMemo(() => {\n        if (inProgress === InteractionStatus.Startup) {\n            return false;\n        }\n        return isAuthenticated(allAccounts, matchAccount);\n    }, [allAccounts, inProgress, matchAccount]);\n\n    return isUserAuthenticated;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type AuthenticatedTemplateProps = PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is authenticated\n * @param props\n */\nexport function AuthenticatedTemplate({\n    username,\n    homeAccountId,\n    localAccountId,\n    children,\n}: AuthenticatedTemplateProps): React.ReactElement | null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId,\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (isAuthenticated && context.inProgress !== InteractionStatus.Startup) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type UnauthenticatedTemplateProps =\n    PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is unauthenticated\n * @param props\n */\nexport function UnauthenticatedTemplate({\n    username,\n    homeAccountId,\n    localAccountId,\n    children,\n}: UnauthenticatedTemplateProps): React.ReactElement | null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId,\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (\n        !isAuthenticated &&\n        context.inProgress !== InteractionStatus.Startup &&\n        context.inProgress !== InteractionStatus.HandleRedirect\n    ) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-browser\";\n\nexport const ReactAuthErrorMessage = {\n    invalidInteractionType: {\n        code: \"invalid_interaction_type\",\n        desc: \"The provided interaction type is invalid.\",\n    },\n    unableToFallbackToInteraction: {\n        code: \"unable_to_fallback_to_interaction\",\n        desc: \"Interaction is required but another interaction is already in progress. Please try again when the current interaction is complete.\",\n    },\n};\n\nexport class ReactAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, ReactAuthError.prototype);\n        this.name = \"ReactAuthError\";\n    }\n\n    static createInvalidInteractionTypeError(): ReactAuthError {\n        return new ReactAuthError(\n            ReactAuthErrorMessage.invalidInteractionType.code,\n            ReactAuthErrorMessage.invalidInteractionType.desc\n        );\n    }\n\n    static createUnableToFallbackToInteractionError(): ReactAuthError {\n        return new ReactAuthError(\n            ReactAuthErrorMessage.unableToFallbackToInteraction.code,\n            ReactAuthErrorMessage.unableToFallbackToInteraction.desc\n        );\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(974);\n"],"names":["MainContent","instance","useMsal","activeAccount","getActiveAccount","_jsxs","className","children","_jsx","AuthenticatedTemplate","Container","IdTokenData","idTokenClaims","UnauthenticatedTemplate","Button","onClick","handleRedirect","loginRedirect","loginRequest","prompt","catch","error","console","log","variant","_ref","MsalProvider","PageLayout","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","uuid","options","buf","native","rnds","random","rng","Error","RangeError","uuidv4","api_key","async","sendMessageToBot","message","group_id","_await$response$body$","_response$body3","method","headers","response","fetch","JSON","parse","TextDecoder","decode","body","getReader","read","value","data","roles","groupId","getGroupId","model_name","_await$response$body$2","_response$body4","model_id","getModelId","stringify","conversation_id","content","prompts","files","workspace","model","config","max_tokens","top_p","top_k","temperature","Chatbox","isOpen","setIsOpen","useState","messages","setMessages","input","setInput","toggleChat","map","msg","index","sender","text","type","onChange","e","target","placeholder","trim","request","scopes","name","password","_response$body2","username","userPassport","document","cookie","accessToken","refreshToken","authenticateChatbot","resMessage","InteractionRequiredAuthError","msalInstance","acquireTokenRedirect","msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","containsPii","LogLevel","Info","info","Verbose","debug","Warning","warn","PublicClientApplication","_content$buttonGroup","imageObject","defaultHost","endpoint","diImage","image","imageUrl","style","textAlign","padding","src","alt","title","whiteSpace","heroText","display","justifyContent","gap","marginTop","buttonGroup","btn","href","link","internalLink","backgroundColor","color","textDecoration","borderRadius","fontSize","fontWeight","transition","minWidth","onMouseOver","currentTarget","onMouseOut","linkText","React","ref","bsPrefix","striped","bordered","borderless","hover","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","populateClaim","claim","description","claimsObject","changeDateFormat","date","Date","default_format","formatters","RFC1738","v","String","replace","RFC3986","is_array","Object","prototype","hasOwnProperty","Array","isArray","hex_table","array","toUpperCase","limit","maybe_map","val","fn","mapped","has","array_prefix_generators","brackets","prefix","comma","indices","key","repeat","push_to_array","value_or_array","apply","to_ISO","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","str","_defaultEncoder","_kind","format","string","Symbol","call","escape","$0","parseInt","out","j","segment","c","charCodeAt","charAt","join","encodeValuesOnly","formatter","serializeDate","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","obj","tmp_sc","step","find_flag","get","pos","constructor","isBuffer","is_buffer","key_value","values","obj_keys","keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","set","valueSideChannel","WeakMap","opts","TypeError","normalize_stringify_options","joined","VERSION","kind","FormData","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","auto","Request","Response","Headers","Blob","MultipartBody","toStringTag","shims","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","form","url","OpenAIError","APIError","status","super","makeMessage","this","request_id","code","param","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","LineDecoder","_LineDecoder_carriageReturnIndex","buffer","__classPrivateFieldSet","chunk","binaryChunk","ArrayBuffer","TextEncoder","newData","lines","patternIndex","findNewlineIndex","__classPrivateFieldGet","carriage","decodeText","endIndex","preceding","line","bytes","Buffer","from","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","next","result","done","releaseLock","return","cancelPromise","cancel","NEWLINE_CHARS","Set","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","iterSSEChunks","_iterSSEMessages","startsWith","event","raw","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","self","start","pull","ctrl","close","enqueue","err","chunks","endsWith","substring","fieldname","_","indexOf","partition","isResponseLike","blob","isFileLike","lastModified","isBlobLike","arrayBuffer","isUploadable","toFile","URL","pathname","split","pop","bits","parts","isView","isAsyncIterableIterator","getOwnPropertyNames","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","isMultipartBody","multipartFormRequestOptions","createForm","Promise","all","entries","addFormValue","append","file","entry","_ref2","prop","defaultParseResponse","__streamClass","__binaryResponse","contentType","includes","json","_addRequestID","defineProperty","enumerable","APIPromise","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","withResponse","parsedPromise","onfulfilled","onrejected","finally","onfinally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","delete","DataView","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","shimsKind","getHeader","prepareOptions","prepareRequest","_ref3","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","createResponseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","_ref4","_ref5","encodeURIComponent","init","ms","addEventListener","setTimeout","fetchOptions","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","now","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","AbstractPage","client","_AbstractPage_client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","item","Proxy","requestOptionsKeys","__metadata","isRequestOptions","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","platform","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","_platformHeaders","startsWithSchemeRegexp","test","n","isInteger","readEnv","env","_k","targetHeaders","newHeaders","lowerKey","SENSITIVE_HEADERS","action","_len","args","_key","modifiedArgs","arg","modifiedArg","r","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","isObj","APIResource","_client","Completions","create","Messages","list","completionId","ChatCompletionStoreMessagesPage","nextPageParams","CursorPage","has_more","id","after","MessagesAPI","retrieve","update","ChatCompletionsPage","del","Chat","completions","CompletionsAPI","Embeddings","Files","Core","fileId","FileObjectsPage","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Images","createVariation","edit","Speech","Transcriptions","Translations","Audio","transcriptions","TranscriptionsAPI","translations","TranslationsAPI","speech","SpeechAPI","Moderations","Models","ModelsPage","Checkpoints","fineTuningJobId","FineTuningJobCheckpointsPage","Jobs","checkpoints","CheckpointsAPI","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","JobsAPI","Assistants","assistantId","AssistantsPage","isRunnableFunctionWithParse","isAssistantMessage","role","isFunctionMessage","isToolMessage","EventStream","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","reject","_run","executor","_emitFinal","_emit","_EventStream_instances","_EventStream_handleError","_connected","ended","errored","on","listener","off","listeners","findIndex","l","splice","once","emitted","forEach","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","choices","choice","finish_reason","tool_calls","toolCall","inputTool","tools","find","function","parsed_arguments","$parseRaw","strict","parseToolCall","parsed","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","openAIError","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","_addChatCompletion","chatCompletion","_addMessage","emit","function_call","tool_call","finalChatCompletion","finalContent","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","finalMessage","_AbstractChatCompletionRunner_getFinalMessage","finalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCall","finalFunctionCallResult","_AbstractChatCompletionRunner_getFinalFunctionCallResult","totalUsage","_AbstractChatCompletionRunner_calculateTotalUsage","allChatCompletions","usage","_createChatCompletion","_AbstractChatCompletionRunner_validateParams","chat","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","f","functions","parameters","rawContent","_AbstractChatCompletionRunner_stringifyFunctionCallResult","_runTools","tool_choice","inputTools","$callback","tool_call_id","rest","ret","at","y","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runner","runTools","Allow","STR","NUM","ARR","OBJ","NULL","BOOL","NAN","INFINITY","MINUS_INFINITY","INF","SPECIAL","ATOM","COLLECTION","ALL","PartialJSON","MalformedJSON","_parseJSON","jsonString","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","lastIndexOf","writable","configurable","partialParse","allowPartial","parseJSON","ChatCompletionStream","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","_ChatCompletionStream_instances","_ChatCompletionStream_beginRequest","_ChatCompletionStream_addChunk","_ChatCompletionStream_endRequest","chatId","WeakSet","_ChatCompletionStream_getChoiceEventState","state","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","_ChatCompletionStream_accumulateChatCompletion","choiceSnapshot","delta","snapshot","logprobs","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_emitToolCallDoneEvent","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","_ChatCompletionStream_getAutoParseableResponseFormat","created","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","assign","other","_a","_b","_c","_d","pushQueue","readQueue","ChatCompletionStreamingRunner","validateInputTools","Sessions","Realtime","sessions","SessionsAPI","AssistantStream","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_instances","_AssistantStream_addEvent","_addRun","_AssistantStream_endRequest","createToolAssistantStream","threadId","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","acc","deltaValue","accValue","deltaEntry","accEntry","_AssistantStream_handleEvent","_AssistantStream_handleRun","_AssistantStream_handleRunStep","_AssistantStream_handleMessage","accumulatedMessage","newContent","_AssistantStream_accumulateMessage","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","_AssistantStream_accumulateRunStep","step_details","accumulated","contentElement","_AssistantStream_accumulateContent","messageId","MessagesPage","Steps","stepId","RunStepsPage","Runs","steps","StepsAPI","include","RunsPage","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","RunsAPI","createAndRunPoll","thread_id","createAndRunStream","vectorStoreId","VectorStoreFilesPage","fileResponse","upload","fileInfo","purpose","file_id","uploadAndPoll","FileBatches","batchId","batch","listFiles","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","results","allSettled","promises","rejected","reason","allSettledWithThrow","file_ids","VectorStores","FilesAPI","fileBatches","FileBatchesAPI","VectorStoresPage","Beta","realtime","RealtimeAPI","vectorStores","VectorStoresAPI","ChatAPI","assistants","AssistantsAPI","ThreadsAPI","Batches","BatchesPage","Parts","uploadId","Uploads","PartsAPI","complete","OpenAI","apiKey","organization","project","Errors","dangerouslyAllowBrowser","window","API","embeddings","images","audio","moderations","models","fineTuning","batches","uploads","_options","Authorization","qs","DEFAULT_TIMEOUT","UploadsAPIUploads","openai","ChatComponent","setResponse","reply","chatWithGPT","tokenClaims","claims","claimsObj","descriptions","aud","iss","iat","nbf","exp","preferred_username","nonce","oid","tid","upn","email","acct","sid","sub","ver","createClaimsTable","tableRow","claimItem","_Fragment","Table","defaultKey","substr","_toPropertyKey","hint","prim","toPrimitive","res","_toPrimitive","useUncontrolled","reduce","fieldName","_extends2","defaultValue","Utils","propsValue","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","useRef","_useState","stateValue","setState","isProp","wasProp","current","useCallback","concat","useUncontrolledProp","_extends","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","__suppressDeprecationWarning","NavbarBrand","as","Component","displayName","ownerDocument","node","getComputedStyle","psuedoElement","doc","defaultView","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","_setPrototypeOf","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","o","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","_proto","componentDidMount","updateStatus","componentDidUpdate","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","mounting","nodeRef","ReactDOM","scrollTop","forceReflow","performEnter","performExit","_this2","appearing","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","callback","setNextCallback","_this4","active","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","render","_this$props","childProps","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps","createElement","optionsSupported","onceSupported","passive","canUseDOM","removeEventListener","eventName","capture","wrappedHandler","__once","onceHandler","emulateTransitionEnd","element","duration","called","handle","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","remove","listen","transitionEnd","mult","parseDuration","removeEmulate","transitionEndListener","delay","funcs","_len2","_key2","triggerBrowserReflow","offsetHeight","toFnRef","refA","refB","useMemo","a","b","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","componentOrElement","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","margins","collapseStyles","Collapse","inProp","getDimensionValue","computedDimension","createChainedFunction","scroll","TransitionWrapper","NavbarCollapse","useContext","NavbarContext","expanded","useEffect","useEventCallback","useCommittedRef","NavbarToggle","label","onToggle","handleClick","isReactNative","global","product","useLayoutEffect","matchersByWindow","getMatcher","targetWindow","matchers","Map","mql","matchMedia","refCount","media","useMediaQuery","matches","setMatches","handleChange","addListener","removeListener","breakpointValues","names","and","getMaxQuery","breakpoint","getNext","breakpointOrMap","direction","breakpointMap","getMinQuery","createBreakpointHook","xs","sm","md","lg","xl","xxl","activeElement","nodeName","contains","compareDocumentPosition","useWillUnmount","onUnmount","valueRef","useUpdatedRef","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","container","scrollBarWidth","setAttribute","reset","m","removeContainerStyle","removeAttribute","add","modal","modalIdx","isTopModal","Context","createContext","useWindow","resolveContainerRef","getBoundingClientRect","hasEnteredRef","combinedRef","child","cloneElement","_excluded","useRTGTransitionProps","major","minor","getReactVersion","component","transitionProps","ImperativeTransition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","useTransition","onFinish","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","forwardRef","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","mounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","backdropElement","Manager","fadeStyles","Fade","transitionClasses","isAppearing","OffcanvasBody","transitionStyles","OffcanvasToggling","PropTypes","CloseButton","ariaLabel","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","OffcanvasHeader","DivStyledAsH5","OffcanvasTitle","toArray","Function","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","RegExp","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","dataset","restore","classList","baseVal","hasClass","addClass","marginProp","el","removeClass","sharedManager","DialogTransition","BackdropTransition","Offcanvas","ariaLabelledby","placement","backdropClassName","propsManager","renderStaticNode","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","modalContext","backdropProps","BaseModal","visibility","getSharedManager","Body","Header","Title","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","bg","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","NavigationBar","handleLogoutRedirect","logoutRedirect","handleLoginRedirect","HeroWithImage","accounts","getAllAccounts","setActiveAccount","addEventCallback","_event$payload","eventType","EventType","LOGIN_SUCCESS","payload","account","createRoot","getElementById","App","deliveryKey","fetchAmplienceContent","_meta","ContentClient","hubName","setContent","banner","getContentItemByKey","fetchBanner","Banner","exports","d","s","getStartDate","getEndDate","end","toJSON","isExpired","expiryTime","getTime","contentClient","renderContentItem","getQueryParams","locale","edition","lifecycle","u","nextCursor","cursor","requestConfig","filterBy","filterByService","filterByContentType","SCHEMA_PATH","filterByParentId","PARENT_PATH","sortBy","order","beforeWalk","afterWalk","g","contentItem","R","C","S","mapper","getContentItem","getContentItemById","getUrl","processResponse","deliveryId","hydrateContentItem","toMappedContent","upgradeLegacyContent","injectMetaData","removeJsonLD","schema","_title","T","isFragment","A","hierarchy","isContentMeta","isContentBody","I","getHost","stagingEnvironment","secureMediaHost","mediaHost","mimeType","P","N","B","_protocol","_query","protocol","host","_host","_format","seoFileName","_seoFileName","template","parameter","quality","sharpen","D","isImage","U","thumbnail","isVideo","F","L","isContentReference","M","mappers","registerBuiltInMappers","addSchema","addCustomMapper","mapFragment","convertContentReference","convertContentMeta","convertImage","convertVideo","q","H","getContentItemsByKey","getContentItems","getContentItemsById","fetchContentItems","requests","depth","J","K","z","getOwnPropertySymbols","getOwnPropertyDescriptor","V","W","getOwnPropertyDescriptors","defineProperties","G","X","Boolean","$","Y","Q","Z","tt","et","nt","rt","ot","it","interceptors","use","lastRequestTime","retries","retryCondition","retryDelay","shouldResetTimeout","httpsAgent","max","transformRequest","st","isNetworkError","isSafeRequestError","isIdempotentRequestError","isNetworkOrIdempotentRequestError","exponentialDelay","isRetryableError","getPrototypeOf","ct","ut","lt","ft","ht","pt","dt","mt","yt","gt","bt","wt","Et","Ot","_t","Rt","Ct","vt","St","Tt","At","It","Nt","allOwnKeys","Pt","jt","globalThis","xt","Bt","Dt","Ut","Ft","Lt","Mt","reduceDescriptors","qt","kt","Ht","DIGIT","ALPHA","ALPHA_DIGIT","$t","Jt","Kt","setImmediate","zt","postMessage","Vt","Wt","source","Gt","queueMicrotask","nextTick","Xt","isArrayBuffer","isFormData","isArrayBufferView","isString","isNumber","isBoolean","isObject","isPlainObject","isReadableStream","isRequest","isResponse","isHeaders","isUndefined","isDate","isFile","isBlob","isRegExp","isFunction","isStream","pipe","isURLSearchParams","isTypedArray","isFileList","merge","caseless","assignValue","extend","stripBOM","inherits","toFlatObject","kindOf","kindOfTest","forEachEntry","matchAll","isHTMLForm","hasOwnProp","freezeMethods","toObjectSet","toCamelCase","toFiniteNumber","isFinite","findKey","isContextDefined","ALPHABET","generateString","isSpecCompliantForm","toJSONObject","visit","isAsyncFn","isThenable","asap","Yt","captureStackTrace","stack","number","fileName","lineNumber","columnNumber","Qt","Zt","te","ee","ne","re","oe","ie","metaTokens","dots","indexes","visitor","defaultVisitor","convertValue","isVisitable","se","ae","_pairs","ce","ue","le","fe","serialize","he","handlers","fulfilled","synchronous","runWhen","eject","clear","pe","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","de","isBrowser","URLSearchParams","protocols","me","ye","ge","be","WorkerGlobalScope","importScripts","we","location","Ee","Oe","_e","transitional","adapter","getContentType","setContentType","isNode","formSerializer","transformResponse","responseType","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Re","Ce","ve","Se","Te","Ae","Ie","setHeaders","accessor","accessors","Ne","Pe","je","__CANCEL__","xe","ERR_CANCELED","Be","De","ERR_BAD_REQUEST","floor","Ue","h","round","_len3","_key3","loaded","lengthComputable","progress","rate","estimated","Fe","progressEventDecorator","Le","_len4","_key4","Me","hasStandardBrowserEnv","hash","hostname","port","qe","write","toGMTString","decodeURIComponent","ke","He","$e","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","cancelToken","socketPath","responseEncoding","Je","btoa","unescape","hasStandardBrowserWebWorkerEnv","Ke","XMLHttpRequest","unsubscribe","getAllResponseHeaders","responseText","statusText","open","onloadend","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","subscribe","send","ze","Ve","We","trackStream","highWaterMark","Ge","Xe","Ye","Qe","Ze","_len5","_key5","tn","origin","duplex","en","nn","rn","ERR_NOT_SUPPORT","http","xhr","toAbortSignal","getContentLength","credentials","sn","an","cn","_ref6","un","throwIfRequested","ln","hn","ERR_DEPRECATED","pn","assertOptions","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","dn","mn","_request","boolean","unshift","getUri","yn","gn","promise","_listeners","token","bn","wn","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","_ref7","En","On","Axios","CanceledError","CancelToken","isCancel","toFormData","AxiosError","Cancel","spread","isAxiosError","mergeConfig","AxiosHeaders","formToJSON","getAdapter","HttpStatusCode","default","_n","Rn","adaptor","baseUrl","Cn","jn","Sn","Tn","An","xn","Bn","Dn","buildUrl","maximumDepth","MAXIMUM_DEPTH_PARAM","maximumPageSize","MAXIMUM_PAGE_SIZE_PARAM","pageCursor","LAST_EVALUATED_PARAM","sortKey","SORT_KEY_PARAM","sortOrder","SORT_ORDER_PARAM","HIERARCHY_URL","rootId","Un","assembler","hierarchyUrlBuilder","getByHierarchy","responses","getHierarchyByRoot","assembleRoot","Fn","parentId","Ln","filterFunction","assembleChildren","Mn","qn","mutationFunction","kn","Hn","contentMapper","createContentMapper","retryConfig","vn","filterContentItems","getHierarchyRootItem","rootItem","getByHierarchyAndFilter","getByHierarchyAndMutate","getByHierarchyFilterAndMutate","$n","Jn","createClient","generateDomain","_ref8","Kn","JPEG","PNG","GIF","WEBP","BITMAP","module","condition","argIndex","framesToPop","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","useButtonProps","tagName","disabled","rel","meta","isTrivialHref","preventDefault","stopPropagation","onKeyDown","asProp","buttonProps","fluid","suffix","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","defaultPrefix","aa","ca","da","ea","fa","ha","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","qa","oa","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","prepareStackTrace","Reflect","construct","Pa","tag","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","Va","_valueTracker","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","eb","fb","selected","defaultSelected","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","setProperty","tb","menuitem","area","base","br","col","embed","hr","img","keygen","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","flags","Wb","memoizedState","dehydrated","Xb","Zb","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","fd","gd","hd","Uc","jd","kd","ld","nd","od","charCode","pd","qd","rd","_reactName","_targetInst","isDefaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","documentMode","datetime","month","range","tel","time","week","oninput","detachEvent","attachEvent","nextSibling","HTMLIFrameElement","contentWindow","contentEditable","focusedElem","selectionRange","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","animationend","animationiteration","animationstart","transitionend","animation","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","of","pf","qf","rf","sf","w","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","char","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","deletions","Cg","pendingProps","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_owner","_stringRef","refs","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","O","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","Uh","Vh","Wh","lastRenderedReducer","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useInsertionEffect","useReducer","useDebugValue","useDeferredValue","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","updater","Hi","UNSAFE_componentWillReceiveProps","Ii","UNSAFE_componentWillMount","Ji","digest","Ki","Li","Mi","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onclick","createElementNS","createTextNode","Gj","Hj","Ij","Jj","Kj","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","Vk","lk","ceil","mk","nk","pk","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsx","jsxs","forceUpdate","_status","_result","Children","count","Profiler","PureComponent","StrictMode","Suspense","act","_currentValue2","_threadCount","_defaultValue","_globalName","createFactory","createRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","encoding","inRange","ToDictionary","isASCIIByte","isASCIICodePoint","end_of_stream","tokens","reverse","endOfStream","prepend","finished","decoderError","fatal","opt_code_point","encoderError","code_point","getEncoding","label_to_encoding","encodings","category","labels","shift_jis_index","big5_index_no_hkscs","encoders","decoders","indexCodePointFor","pointer","indexPointerFor","DEFAULT_ENCODING","_encoding","_decoder","_ignoreBOM","_BOMseen","_error_mode","_do_not_flush","dec","ignoreBOM","_encoder","_fatal","enc","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","bite","UTF8Encoder","temp","SingleByteDecoder","SingleByteEncoder","GB18030Decoder","gb18030_first","gb18030_second","gb18030_third","code_point_offset","idx","indexGB18030RangesCodePointFor","lead","GB18030Encoder","gbk_flag","trail","pointer_offset","indexGB18030RangesPointerFor","byte1","byte2","byte3","Big5Decoder","Big5_lead","Big5Encoder","index_","indexBig5PointerFor","EUCJPDecoder","eucjp_jis0212_flag","eucjp_lead","EUCJPEncoder","ISO2022JPDecoder","states","iso2022jp_decoder_state","iso2022jp_decoder_output_state","iso2022jp_lead","iso2022jp_output_flag","output_flag","ISO2022JPEncoder","iso2022jp_state","ShiftJISDecoder","Shift_JIS_lead","lead_offset","ShiftJISEncoder","indexShiftJISPointerFor","EUCKRDecoder","euckr_lead","EUCKREncoder","convertCodeUnitToBytes","code_unit","utf16be","UTF16Decoder","utf16_be","utf16_lead_byte","utf16_lead_surrogate","lead_surrogate","UTF16Encoder","XUserDefinedDecoder","XUserDefinedEncoder","byteOffset","input_stream","output","code_points","cp","codePointsToString","opt_string","stringToCodePoints","heading","EncodingIndexes","appendClass","parseValue","newClass","ProtocolMode","AzureCloudInstance","clientInfoDecodingError","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","stateNotFound","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","requestCannotBeMade","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","noCryptoObject","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","bindingKeyNotRemoved","endSessionEndpointNotSupported","keyIdMissing","noNetworkConnectivity","userCanceled","missingTenantIdError","methodNotImplemented","nestedAppAuthBridgeDisabled","ClientAuthErrorMessages","ClientAuthError","AuthError","errorCode","additionalMessage","createClientAuthError","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","base64UrlEncode","encodeKid","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString","extractTokenClaims","encodedToken","jswPayload","authToken","getJWSPayload","base64Decoded","checkMaxAge","authTime","maxAge","nowSeconds","isTokenExpired","expiresOn","expirationSec","generateCredentialKey","credentialEntity","generateAccountId","generateCredentialId","generateTarget","generateClaimsHash","generateScheme","Separators","CACHE_KEY_SEPARATOR","createIdTokenEntity","homeAccountId","environment","idToken","tenantId","credentialType","CredentialType","ID_TOKEN","realm","createAccessTokenEntity","extExpiresOn","refreshOn","tokenType","userAssertionHash","keyId","requestedClaims","requestedClaimsHash","atEntity","ACCESS_TOKEN","cachedAt","extendedExpiresOn","AuthenticationScheme","BEARER","ACCESS_TOKEN_WITH_AUTH_SCHEME","POP","cnf","kid","SSH","createRefreshTokenEntity","familyId","rtEntity","REFRESH_TOKEN","isCredentialEntity","entity","isAccessTokenEntity","isIdTokenEntity","isRefreshTokenEntity","clientOrFamilyId","generateAuthorityMetadataExpiresAt","AUTHORITY_METADATA_CONSTANTS","REFRESH_TIME_SECONDS","updateAuthorityEndpointMetadata","authorityMetadata","updatedValues","fromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","updateCloudDiscoveryMetadata","aliases","preferred_cache","preferred_network","aliasesFromNetwork","isAuthorityMetadataExpired","metadata","expiresAt","redirectUriEmpty","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidPromptValue","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","cannotSetOIDCOptions","cannotAllowNativeBroker","authorityMismatch","ClientConfigurationErrorMessages","ClientConfigurationError","createClientConfigurationError","StringUtils","strObj","queryStringToObject","pair","trimArrayEntries","removeEmptyStringsFromArray","jsonParseHelper","matchPattern","ScopeSet","inputScopes","scopeArr","filteredInput","validateInputScopes","scope","fromString","inputScopeString","Constants","EMPTY_STRING","createSearchScopes","scopeSet","containsOnlyOIDCScopes","removeScope","OFFLINE_ACCESS_SCOPE","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","containsScopeSet","asArray","defaultScopeCount","OIDC_SCOPES","defaultScope","appendScope","newScope","appendScopes","newScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","printScopes","buildClientInfo","rawClientInfo","decodedClientInfo","buildClientInfoFromHomeAccountId","clientInfoParts","CLIENT_INFO_SEPARATOR","uid","utid","tenantIdMatchesHomeTenant","buildTenantProfile","localAccountId","tfp","acr","isHomeTenant","updateAccountTenantProfileData","baseAccountInfo","tenantProfile","idTokenSecret","updatedAccountInfo","tenantProfileOverride","claimsSourcedTenantProfile","AuthorityType","getTenantIdFromIdTokenClaims","AccountEntity","generateAccountKey","generateAccountCacheKey","getAccountInfo","nativeAccountId","authorityType","tenantProfiles","isSingleTenant","accountInterface","homeTenantId","createAccount","accountDetails","clientInfo","CacheAccountType","ADFS_ACCOUNT_TYPE","protocolMode","MSSTS_ACCOUNT_TYPE","GENERIC_ACCOUNT_TYPE","getPreferredCache","preferredUsername","emails","cloudGraphHostName","msGraphHost","createFromAccountInfo","accountInfo","generateHomeAccountId","serverClientInfo","authType","logger","cryptoObj","warning","isAccountEntity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","stripLeadingHashOrQuery","responseString","getDeserializedResponse","normalizedResponse","deserializedHash","error_description","UrlString","urlString","_urlString","canonicalizeUri","lowerCaseUrl","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","queryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","AADAuthorityConstants","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","FORWARD_SLASH","baseComponents","hashContainsKnownProperties","EndpointMetadata","InstanceDiscoveryMetadata","tenant_discovery_endpoint","InstanceDiscoveryMetadataAliases","getAliasesFromMetadata","authorityHost","cloudDiscoveryMetadata","trace","getCloudDiscoveryMetadataFromNetworkResponse","metadataEntry","alias","cacheQuotaExceededErrorCode","cacheUnknownErrorCode","CacheErrorMessages","CacheError","errorMessage","CacheManager","cryptoImpl","staticAuthorityOptions","commonLogger","clone","accountFilter","buildTenantProfiles","getAccountsFilteredBy","getAccountInfoFilteredBy","allAccounts","getBaseAccountInfo","accountEntities","cachedAccounts","flatMap","accountEntity","getTenantProfilesFromAccountEntity","getTenantedAccountInfoByFilter","tokenKeys","tenantProfileFilter","tenantedAccountInfo","tenantProfileMatchesFilter","getIdToken","idTokenClaimsMatchTenantProfileFilter","targetTenantId","searchTenantProfiles","getTokenKeys","matchingTenantProfiles","matchLocalAccountIdFromTenantProfile","matchLocalAccountIdFromTokenClaims","loginHint","matchLoginHintFromTokenClaims","matchUsername","matchName","matchSid","saveCacheRecord","cacheRecord","storeInCache","correlationId","setAccount","setIdTokenCredential","saveAccessToken","setRefreshTokenCredential","appMetadata","setAppMetadata","errorPii","credential","accessTokenFilter","currentScopes","removedAccessTokens","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","removeAccessToken","setAccessTokenCredential","allAccountKeys","getAccountKeys","matchingAccounts","cacheKey","isAccountKey","getAccount","matchHomeAccountId","matchEnvironment","matchRealm","matchNativeAccountId","matchAuthorityType","isCredentialKey","lowerCaseKey","clientIdValidation","familyIdValidation","THE_FAMILY_ID","matchClientId","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","allCacheKeys","getKeys","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","removeAllAccounts","removedAccounts","removeAccount","accountKey","removeAccountContext","removeItem","allTokenKeys","accountId","removedCredentials","removeIdToken","removeRefreshToken","updateOutdatedCachedAccount","verbose","matchingAccountKeys","accountsToMerge","getCachedAccountEntity","baseAccount","updatedAccount","toObject","newAccountKey","removeOutdatedAccount","removeAppMetadata","readAccountFromCache","targetRealm","performanceClient","idTokenFilter","idTokenMap","getIdTokensByFilter","numIdTokens","tokensToBeRemoved","homeIdTokenMap","numHomeIdTokens","addFields","multiMatchedID","idTokenKeys","idTokens","idTokenKeyMatchesFilter","getIdTokenCredential","inputKey","getAccessToken","authScheme","authenticationScheme","sshKid","accessTokenKeys","accessTokens","numAccessTokens","multiMatchedAT","keyMustContainAllScopes","getAccessTokensByFilter","getRefreshToken","familyRT","refreshTokenFilter","refreshTokenKeys","refreshTokens","refreshTokenKeyMatchesFilter","getRefreshTokenCredential","numRefreshTokens","multiMatchedRT","readAppMetadataFromCache","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","cachedUsername","filterUsername","staticAliases","canonicalAuthority","AuthorityMetadataSource","CONFIG","HARDCODED_VALUES","knownAuthorities","getAliasesFromStaticSources","cloudMetadata","login_hint","APP_METADATA","CACHE_KEY","generateAuthorityMetadataCacheKey","DefaultStorageClass","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","updateCredentialCacheKey","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","piiLoggingEnabled","logLevel","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","SKU","cpu","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_COMMON_TENANT","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","isOidcProtocolMode","authOptions","StubbedNetworkModule","PerformanceEvents","AcquireTokenByCode","AcquireTokenByRefreshToken","AcquireTokenSilent","AcquireTokenSilentAsync","AcquireTokenPopup","AcquireTokenPreRedirect","AcquireTokenRedirect","CryptoOptsGetPublicKeyThumbprint","CryptoOptsSignJwt","SilentCacheClientAcquireToken","SilentIframeClientAcquireToken","AwaitConcurrentIframe","SilentRefreshClientAcquireToken","SsoSilent","StandardInteractionClientGetDiscoveredAuthority","FetchAccountIdWithNativeBroker","NativeInteractionClientAcquireToken","BaseClientCreateTokenRequestHeaders","RefreshTokenClientExecutePostToTokenEndpoint","AuthorizationCodeClientExecutePostToTokenEndpoint","BrokerHandhshake","AcquireTokenByRefreshTokenInBroker","AcquireTokenByBroker","RefreshTokenClientExecuteTokenRequest","RefreshTokenClientAcquireToken","RefreshTokenClientAcquireTokenWithCachedRefreshToken","RefreshTokenClientAcquireTokenByRefreshToken","RefreshTokenClientCreateTokenRequestBody","AcquireTokenFromCache","SilentFlowClientAcquireCachedToken","SilentFlowClientGenerateResultFromCacheRecord","AcquireTokenBySilentIframe","InitializeBaseRequest","InitializeSilentRequest","InitializeClientApplication","SilentIframeClientTokenHelper","SilentHandlerInitiateAuthRequest","SilentHandlerMonitorIframeForHash","SilentHandlerLoadFrame","SilentHandlerLoadFrameSync","StandardInteractionClientCreateAuthCodeClient","StandardInteractionClientGetClientConfiguration","StandardInteractionClientInitializeAuthorizationRequest","StandardInteractionClientInitializeAuthorizationCodeRequest","GetAuthCodeUrl","HandleCodeResponseFromServer","HandleCodeResponse","UpdateTokenEndpointAuthority","AuthClientAcquireToken","AuthClientExecuteTokenRequest","AuthClientCreateTokenRequestBody","AuthClientCreateQueryString","PopTokenGenerateCnf","PopTokenGenerateKid","HandleServerTokenResponse","DeserializeResponse","AuthorityFactoryCreateDiscoveredInstance","AuthorityResolveEndpointsAsync","AuthorityResolveEndpointsFromLocalSources","AuthorityGetCloudDiscoveryMetadataFromNetwork","AuthorityUpdateCloudDiscoveryMetadata","AuthorityGetEndpointMetadataFromNetwork","AuthorityUpdateEndpointMetadata","AuthorityUpdateMetadataWithRegionalInformation","RegionDiscoveryDetectRegion","RegionDiscoveryGetRegionFromIMDS","RegionDiscoveryGetCurrentVersion","AcquireTokenByCodeAsync","GetEndpointMetadataFromNetwork","GetCloudDiscoveryMetadataFromNetworkMeasurement","HandleRedirectPromiseMeasurement","HandleNativeRedirectPromiseMeasurement","UpdateCloudDiscoveryMetadataMeasurement","UsernamePasswordClientAcquireToken","NativeMessageHandlerHandshake","NativeGenerateAuthResult","RemoveHiddenIframe","ClearTokensAndKeysWithClaims","CacheManagerGetRefreshToken","GeneratePkceCodes","GenerateCodeVerifier","GenerateCodeChallengeFromVerifier","Sha256Digest","GetRandomValues","PerformanceEventStatus","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","discard","increment","eventId","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","addQueueMeasurement","setPreQueueTime","discardMeasurements","removePerformanceCallback","addPerformanceCallback","emitEvents","incrementFields","cacheEventByCorrelationId","NavigationClient","navigateInternal","defaultNavigateWindow","navigateExternal","noHistory","pkceNotCreated","cryptoNonExistent","emptyNavigateUri","hashEmptyError","noStateInHash","hashDoesNotContainKnownProperties","unableToParseState","stateInteractionTypeMismatch","interactionInProgress","popupWindowError","emptyWindowError","userCancelled","monitorPopupTimeout","monitorWindowTimeout","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","silentLogoutUnsupported","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","databaseNotOpen","postRequestFailed","getRequestFailed","failedToParseResponse","unableToLoadToken","cryptoKeyNotFound","authCodeRequired","authCodeOrNativeAccountIdRequired","spaCodeAndNativeAccountIdPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","uninitializedPublicClientApplication","nativePromptNotSupported","invalidBase64String","invalidPopTokenRequest","ErrorLink","BrowserAuthErrorMessages","BrowserAuthError","createBrowserAuthError","FetchClient","HTTP_REQUEST_TYPE","GET","getFetchHeaders","onLine","getHeaderDict","reqBody","POST","optionsHeaders","headerDict","DEFAULT_IFRAME_TIMEOUT_MS","BaseOperatingContext","sessionStorage","browserEnvironment","isBrowserEnvironment","userInputAuth","userInputCache","userInputSystem","telemetry","userInputTelemetry","DEFAULT_AUTH_OPTIONS","DEFAULT_AUTHORITY","clientCapabilities","OIDCOptions","serverResponseType","ServerResponseType","FRAGMENT","defaultScopes","OPENID_SCOPE","PROFILE_SCOPE","azureCloudOptions","skipAuthorityMetadataCache","supportsNestedAppAuth","BrowserCacheLocation","SessionStorage","temporaryCacheLocation","secureCookies","cacheMigrationEnabled","LocalStorage","DEFAULT_LOGGER_OPTIONS","providedSystemOptions","networkClient","navigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","redirectNavigationTimeout","asyncPopups","allowRedirectInIframe","allowNativeBroker","nativeBrokerHandshakeTimeout","pollIntervalMilliseconds","BrowserConstants","DEFAULT_POLL_INTERVAL_MS","Logger","ClientConfigurationErrorCodes","buildConfiguration","logLevelKey","getItem","LOG_LEVEL_CACHE_KEY","piiLoggingKey","LOG_PII_CACHE_KEY","available","getConfig","getLogger","isAvailable","StandardOperatingContext","getModuleName","MODULE_NAME","getId","ID","initialize","missingKidError","missingAlgError","JoseHeaderErrorMessages","JoseHeaderError","createJoseHeaderError","JoseHeader","typ","alg","getShrHeaderString","shrHeaderOptions","shrHeader","JsonWebTokenTypes","Pop","urlEncode","urlEncodeArr","inputArr","base64EncArr","aBytes","binString","fromCodePoint","base64String","encodedString","atob","codePointAt","base64DecToArr","S256_HASH_ALG","PUBLIC_EXPONENT","UUID_CHARS","UINT32_ARR","Uint32Array","keygenAlgorithmOptions","modulusLength","publicExponent","sha256Digest","dataString","subtle","dataBuffer","getRandomUint32","currentTimestamp","baseRand","randA","trunc","randBHi","randBLo","exportJwk","exportKey","KEY_FORMAT_JWK","plainText","hashBuffer","DatabaseStorage","dbName","DB_NAME","DB_VERSION","tableName","DB_TABLE_NAME","dbOpen","openDB","indexedDB","createObjectStore","closeConnection","validateDbIsOpen","dbGet","transaction","objectStore","setItem","dbPut","dbDelete","dbGetKeys","getAllKeys","containsKey","dbContainsKey","deleteDatabase","deleteDbRequest","MemoryStorage","cacheKeys","AsyncMemoryStorage","inMemoryCache","indexedDBCache","handleDatabaseAccessError","clearInMemory","clearPersistent","dbDeleted","CryptoOps","validateCryptoAvailable","inputKid","publicKeyThumbMeasurement","keyPair","extractable","usages","generateKey","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","publicKeyJwk","publicKey","publicJwkString","getSortedObjectString","kty","publicJwkHash","privateKeyJwk","privateKey","unextractablePrivateKey","importKey","importJwk","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","success","shrOptions","signJwtMeasurement","cachedKeyPair","publicKeyJwkString","encodedKeyIdThumbprint","encodedShrHeader","jwk","tokenString","tokenBuffer","signatureBuffer","sign","signedJwt","invoke","telemetryClient","inProgressEvent","eventCount","invokeAsync","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","region_source","RegionDiscoverySources","ENVIRONMENT_VARIABLE","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","IMDS_VERSION","ResponseCodes","httpSuccess","IMDS","httpBadRequest","currentIMDSVersion","getCurrentVersion","FAILED_AUTO_DETECTION","currentIMDSVersionResponse","IMDS_ENDPOINT","IMDS_TIMEOUT","Metadata","Authority","cacheManager","authorityOptions","managedIdentity","_canonicalAuthority","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","CIAM_AUTH_URL","ADFS","DSTS","canonicalAuthorityUrlComponents","_canonicalAuthorityUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","tokenEndpoint","deviceCodeEndpoint","endSessionEndpoint","selfSignedJwtAudience","jwksUri","canReplaceTenant","reservedTenantDomains","replaceTenant","cachedAuthorityUrlComponents","canonical_authority","cachedAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","endpointSource","updateEndpointMetadata","updateCachedMetadata","authorityEndpointSource","endpointMetadataResult","CACHE","localMetadata","updateEndpointMetadataFromLocalSources","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","NETWORK","configMetadata","getEndpointMetadataFromConfig","hardcodedMetadata","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isAuthoritySameType","openIdConfigurationEndpoint","isValidResponse","isOpenIdConfigResponse","userConfiguredAzureRegion","AZURE_REGION_AUTO_DISCOVER_FLAG","RegionDiscoveryOutcomes","CONFIGURED_NO_AUTO_DETECTION","replaceWithRegionalInformation","AUTO_DETECTION_REQUESTED_SUCCESSFUL","AUTO_DETECTION_REQUESTED_FAILED","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","verbosePii","NOT_APPLICABLE","getCloudDiscoveryMetadataFromConfig","createCloudDiscoveryMetadataFromHost","isInKnownAuthorities","instanceDiscoveryEndpoint","AAD_INSTANCE_DISCOVERY_ENDPT","typedResponseBody","isCloudInstanceDiscoveryResponse","isCloudInstanceDiscoveryErrorResponse","INVALID_INSTANCE","typedError","generateAuthority","authorityString","authorityAzureCloudInstance","DEFAULT_AUTHORITY_HOST","isAlias","isPublicCloudAuthority","KNOWN_PUBLIC_CLOUDS","buildRegionalAuthorityString","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","regionalMetadata","transformCIAMAuthority","ciamAuthority","authorityUrlComponents","AAD_TENANT_DOMAIN_SUFFIX","formatAuthorityUri","CONSUMERS","ProtocolUtils","setRequestState","userState","libraryState","generateLibraryState","RESOURCE_DELIM","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","CcsCredentialType","BrowserStorage","validateWindowStorage","windowStorage","createBrowserConfigurationAuthError","storageNotSupported","extractBrowserRequestState","browserCrypto","ClientAuthErrorCodes","BrowserCacheManager","cacheConfig","COOKIE_LIFE_MULTIPLIER","internalStorage","browserStorage","setupBrowserStorage","temporaryCacheStorage","setupTemporaryCacheStorage","migrateCacheEntries","createKeyMaps","idTokenKey","CACHE_PREFIX","PersistentCacheKeys","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","setTemporaryCache","accountKeys","StaticCacheKeys","ACCOUNT_KEYS","TOKEN_KEYS","credObj","validateAndParseJson","CacheHelpers","tracePii","idTokenEntity","newKey","addTokenKey","accessTokenEntity","refreshTokenEntity","accountObj","addAccountKeyToMap","jsonValue","parsedJson","serializedAccount","removeAccountKeyFromMap","parsedAccount","removalIndex","removeTokenKey","infoPii","idRemoval","accessRemoval","refreshRemoval","parsedIdToken","accessTokenKey","parsedAccessToken","refreshTokenKey","parsedRefreshToken","appMetadataKey","parsedMetadata","serverTelemetryKey","parsedEntity","validateKey","SERVER_TELEM_CONSTANTS","validateEntity","serverTelemetry","setWrapperMetadata","wrapperSKU","wrapperVersion","InMemoryCacheKeys","WRAPPER_SKU","WRAPPER_VER","getWrapperMetadata","activeAccountKeyFilters","generateCacheKey","ACTIVE_ACCOUNT_FILTERS","activeAccountValueFilters","activeAccountKeyLocal","ACTIVE_ACCOUNT","activeAccountValueLocal","activeAccountValueObj","activeAccountKey","activeAccountValue","throttlingCacheKey","parsedThrottlingCache","ThrottlingConstants","THROTTLING_PREFIX","throttlingCache","getTemporaryCache","itemCookie","getItemCookie","setItemCookie","removeTemporaryItem","clearItemCookie","clearTokensAndKeysWithClaims","cookieName","cookieValue","expires","cookieStr","getCookieExpirationTime","cookieList","clearMsalCookies","cookiePrefix","cookieKey","cookieLifeDays","today","toUTCString","ADAL_ID_TOKEN","generateAuthorityKey","stateId","TemporaryCacheKeys","AUTHORITY","generateNonceKey","NONCE_IDTOKEN","generateStateKey","REQUEST_STATE","getCachedAuthority","cachedState","stateCacheKey","authorityCacheKey","updateCacheEntries","authorityInstance","nonceCacheKey","ccsCredential","CCS_CREDENTIAL","resetRequestCache","REQUEST_PARAMS","ORIGIN_URI","URL_HASH","CORRELATION_ID","NATIVE_REQUEST","setInteractionInProgress","cleanRequestByState","stateKey","cleanRequestByInteractionType","interactionType","parsedState","cacheCodeRequest","authCodeRequest","encodedValue","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","getCachedNativeRequest","cachedRequest","isInteractionInProgress","getInteractionInProgress","INTERACTION_STATUS_KEY","inProgress","getLegacyLoginHint","adalIdTokenString","msalIdTokenString","cachedIdTokenString","AuthToken","currentCacheKey","updatedCacheKey","cacheItem","hydrateCache","claimsHash","cacheRtCount","cacheIdCount","cacheAtCount","isInIframe","parent","getCurrentUri","blockAcquireTokenInPopups","opener","POPUP_NAME_PREFIX","blockAPICallsBeforeInitialize","initialized","preflightCheck","blockNonBrowserEnvironment","blockReloadInHiddenIframes","redirectPreflightCheck","blockRedirectInIframe","inMemRedirectUnavailable","preconnect","crossOrigin","head","EventHandler","eventCallbacks","listeningToStorageEvents","handleAccountCacheChange","callbackId","removeEventCallback","enableAccountStorageEvents","disableAccountStorageEvents","emitEvent","timestamp","ACTIVE_ACCOUNT_CHANGED","cacheValue","newValue","oldValue","parsedValue","ACCOUNT_ADDED","ACCOUNT_REMOVED","ServerError","subError","errorNo","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","throttleTime","errorCodes","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","HeaderNames","RETRY_AFTER","error_codes","suberror","currentSeconds","DEFAULT_THROTTLE_TIME_SECONDS","DEFAULT_MAX_THROTTLE_TIME_SECONDS","removeThrottle","homeAccountIdentifier","shrClaims","NetworkManager","sendPostRequest","CLIENT_ID","RESPONSE_TYPE","TOKEN_TYPE","REQ_CNF","RETURN_SPA_CODE","X_CLIENT_EXTRA_SKU","RequestValidator","validateRedirectUri","validatePrompt","promptValues","PromptValue","validateClaims","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","CodeChallengeMethodValues","PLAIN","S256","RequestParameterBuilder","addResponseTypeCode","CODE_RESPONSE_TYPE","addResponseTypeForTokenAndIdToken","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","addResponseMode","responseMode","ResponseMode","QUERY","addNativeBroker","addScopes","addOidcScopes","OIDC_DEFAULT_SCOPES","requestScopes","addClientId","addRedirectUri","addPostLogoutRedirectUri","addIdTokenHint","idTokenHint","addDomainHint","domainHint","addLoginHint","addCcsUpn","CCS_HEADER","addCcsOid","addSid","addClaims","mergedClaims","addClientCapabilitiesToClaims","addCorrelationId","addLibraryInfo","libraryInfo","addApplicationTelemetry","appTelemetry","addPrompt","addState","addNonce","addCodeChallengeParams","addAuthorizationCode","addDeviceCode","addRefreshToken","addCodeVerifier","codeVerifier","addClientSecret","addClientAssertion","addClientAssertionType","clientAssertionType","addOboAssertion","oboAssertion","addRequestTokenUse","tokenUse","addGrantType","grantType","addClientInfo","addExtraQueryParameters","eQParams","ClaimsRequestKeys","XMS_CC","addUsername","PasswordGrantConstants","addPassword","addPopToken","cnfString","addSshJwk","sshJwkString","addServerTelemetry","serverTelemetryManager","generateCurrentRequestHeaderValue","generateLastRequestHeaderValue","addThrottling","X_MS_LIB_CAPABILITY_VALUE","addLogoutHint","logoutHint","createQueryString","queryParameterArray","createDiscoveredInstance","authorityUriFinal","acquireTokenAuthority","BaseClient","configuration","userAuthOptions","systemOptions","userSystemOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","persistencePlugin","serializableCache","buildClientConfiguration","cryptoUtils","networkManager","createTokenRequestHeaders","ccsCred","CONTENT_TYPE","URL_FORM_CONTENT_TYPE","executePostToTokenEndpoint","queuedEvent","refreshTokenSize","refresh_token","httpVerToken","X_MS_HTTP_VERSION","clearTelemetryCache","updateAuthority","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","KeyLocation","PopTokenGenerator","generateCnf","reqCnf","generateKid","reqCnfString","xms_ksl","signPopToken","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","ts","client_claims","TokenCacheContext","tokenCache","hasChanged","cacheHasChanged","ResponseHandler","cacheStorage","validateServerAuthorizationCodeResponse","serverResponse","requestState","decodedServerResponseState","decodedRequestState","serverErrorNo","errorCodePrefix","errorCodePrefixIndex","error_uri","parseServerErrorNo","isInteractionRequiredError","trace_id","correlation_id","validateTokenResponse","refreshAccessToken","errString","NOT_AVAILABLE","serverError","HttpStatus","SERVER_ERROR_RANGE_START","SERVER_ERROR_RANGE_END","CLIENT_ERROR_RANGE_START","CLIENT_ERROR_RANGE_END","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","id_token","auth_time","client_info","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","claimsTenantId","cachedIdToken","cachedAccount","buildAccountToCache","cachedAccessToken","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","token_type","cachedRefreshToken","rtExpiresOn","refresh_token_expires_in","foci","cachedAppMetadata","fromTokenCache","requestId","popKid","popTokenGenerator","spa_accountid","uniqueId","fromCache","spa_code","fromNativeBroker","baseAccountKey","cloud_graph_host_name","msgraph_host","newTenantProfile","getClientAssertion","AuthorizationCodeClient","includeRedirectUri","oidcDefaultScopes","getAuthCodeUrl","createAuthCodeUrlQueryString","acquireToken","executeTokenRequest","X_MS_REQUEST_ID","responseHandler","handleFragmentResponse","serverParams","getLogoutUri","logoutRequest","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","tokenBodyParameters","assertion","assertionType","GrantType","AUTHORIZATION_CODE_GRANT","reqCnfData","sshJwk","enableSpaAuthorizationCode","extraQueryParameters","extraScopesToConsent","SELECT_ACCOUNT","NONE","accountSid","extractAccountSid","accountLoginHintClaim","extractLoginHint","nativeBroker","skuValueSeparator","makeExtraSkuString","skus","extensionName","extensionVersion","skuMap","skuArr","skuName","skuVersion","setSku","ServerTelemetryManager","telemetryRequest","cacheOutcome","CacheOutcome","apiId","wrapperVer","telemetryCacheKey","VALUE_SEPARATOR","platformFieldsArr","nativeBrokerErrorCode","getNativeBrokerErrorCode","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","SCHEMA_VERSION","CATEGORY_SEPARATOR","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errors","errorCount","OVERFLOW_TRUE","OVERFLOW_FALSE","cacheHits","cacheFailedRequest","MAX_CACHED_ERRORS","UNKNOWN_ERROR","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","MAX_LAST_HEADER_BYTES","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","setNativeBrokerErrorCode","clearNativeBrokerErrorCode","BaseInteractionClient","storageImpl","eventHandler","nativeMessageHandler","MSAL_SKU","clearCacheOnLogout","getRedirectUri","requestRedirectUri","initializeServerTelemetryManager","forceRefresh","telemetryPayload","getDiscoveredAuthority","requestAuthority","requestAzureCloudOptions","userAuthority","builtAuthority","discoveredAuthority","AuthorityFactory","RANDOM_BYTE_ARR_LENGTH","generatePkceCodes","generateCodeVerifier","verifier","challenge","generateCodeChallengeFromVerifier","pkceCodeVerifier","pkceHashedCodeVerifier","initializeBaseRequest","validatedRequest","initializeSilentRequest","baseRequest","StandardInteractionClient","initializeAuthorizationCodeRequest","generatedPkceParams","S256_CODE_CHALLENGE_METHOD","initializeLogoutRequest","validLogoutRequest","getLogoutHintFromIdTokenClaims","createAuthCodeClient","authorityUrl","clientConfig","getClientConfiguration","initializeAuthorizationRequest","browserState","legacyLoginHint","userSwitch","NativeAuthErrorMessages","NativeAuthError","ext","isFatalNativeAuthError","createNativeAuthError","createInteractionRequiredAuthError","InteractionRequiredAuthErrorCodes","RefreshTokenClient","forceCache","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","noTokensFound","clientMismatchErrorWithFamilyRT","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","refreshTokenExpirationOffsetSeconds","refreshTokenExpired","refreshTokenRequest","badToken","badRefreshTokenKey","REFRESH_TOKEN_GRANT","SilentFlowClient","authResponse","acquireCachedToken","PROACTIVELY_REFRESHED","lastCacheOutcome","FORCE_REFRESH_OR_CLAIMS","requestTenantId","getTenantFromAuthorityString","NO_CACHED_ACCESS_TOKEN","CACHED_ACCESS_TOKEN_EXPIRED","generateResultFromCacheRecord","SilentCacheClient","silentRequest","ApiId","acquireTokenSilent_silentFlow","silentAuthClient","logout","BrokerServerParamKeys","NativeInteractionClient","provider","nativeStorageImpl","nativeStorageManager","silentCacheClient","getExtensionId","NativeConstants","PREFERRED_EXTENSION_ID","getExtensionVersion","addRequestSKUs","extraParameters","AADServerParamKeys","nativeATMeasurement","TimeUtils","nativeRequest","initializeNativeRequest","acquireTokensFromCache","isNativeBroker","nativeTokenRequest","messageBody","NativeExtensionMethod","GetToken","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","subErrorCode","createSilentCacheRequest","fullAccount","rootMeasurement","remainingParameters","onRedirectNavigate","navigationOptions","handleRedirectPromise","createHomeAccountIdentifier","cachedhomeAccountId","cacheAccount","cacheNativeTokens","generateScopes","generatePopAccessToken","shr","shrParameters","mats","addTelemetryFromNativeResponse","accountProperties","properties","responseAccessToken","isResponseFromCache","SHR_NONCE_VALIDITY","nativeCacheRecord","getMATSFromResponse","extensionId","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","createAuthError","AuthErrorCodes","MATS","is_cached","remainingProperties","getPrompt","ssoSilent","CONSENT","LOGIN","windowTitleSubstring","extendedExpiryToken","handleExtraBrokerParams","MATS_TELEMETRY","generatedReqCnfData","child_client_id","child_redirect_uri","brk_redirect_uri","NativeMessageHandler","handshakeTimeoutMs","resolvers","handshakeResolvers","messageChannel","windowListener","onWindowMessage","handshakeEvent","channel","CHANNEL_ID","responseId","createProvider","preferredProvider","sendHandshakeRequest","backupProvider","HandshakeRequest","extensionHandshakeTimeoutMs","onChannelMessage","timeoutId","extensionHandshakeTimedOut","handshakeResolver","extensionInstalled","resolver","HandshakeResponse","isNativeAvailable","nativeExtensionProvider","InteractionHandler","authCodeModule","authModule","handleCodeResponse","authCodeResponse","handleCodeResponseFromServer","validateNonce","cloud_instance_host_name","createCcsCredentials","deserializeResponse","responseLocation","UrlUtils","PopupClient","unloadWindow","nativeStorage","popupName","generatePopupName","popupWindowAttributes","acquireTokenPopupAsync","popup","openSizedPopup","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","acquireTokenPopup","validRequest","InteractionType","Popup","authClient","fetchNativeAccountIdMeasurement","navigateUrl","interactionHandler","popupParameters","popupWindow","initiateAuthRequest","POPUP_OPENED","monitorPopupForHash","nativeInteractionClient","setCorrelationId","LOGOUT_START","logoutPopup","LOGOUT_SUCCESS","absoluteUrl","logoutUri","openPopup","LOGOUT_FAILURE","LOGOUT_END","requestUrl","intervalId","setInterval","closed","clearInterval","cleanPopup","urlNavigate","popupParams","currentWindow","winLeft","screenLeft","winTop","screenTop","winWidth","winHeight","innerHeight","clientHeight","popupSize","popupPosition","POPUP_WIDTH","POPUP_HEIGHT","RedirectHandler","redirectStartPage","redirectTimeout","nonceKey","cachedNonce","cachedCcsCred","checkCcsCredentials","tokenResponse","RedirectClient","Redirect","handleBackButton","persisted","RESTORE_FROM_BFCACHE","getRedirectStartPage","parentMeasurement","getRedirectResponse","loginRequestUrl","loginRequestUrlNormalized","urlParts","replaceHash","handleResponse","processHashOnRedirect","homepage","getHomepage","userProvidedResponse","platformStateObj","validateInteractionType","history","replaceState","cachedHash","currentAuthority","requestStartPage","loadFrame","loadFrameSync","monitorIframeForHash","iframe","removeHiddenIframe","frameHandle","createHiddenIframe","authFrame","position","border","SilentIframeClient","inputRequest","NO_SESSION","Silent","silentTokenHelper","msalFrame","SilentRefreshClient","refreshTokenClient","createRefreshTokenClient","TokenCache","storage","loadExternalTokens","cacheRecordAccount","loadAccount","loadIdToken","loadAccessToken","loadRefreshToken","HybridSpaAuthorizationCodeClient","SilentAuthCodeClient","cloudInstanceHostName","getAccountType","performanceEvent","preflightCheck$1","StandardController","operatingContext","redirectResponse","hybridAuthCodeResponses","rawCloudDiscoveryMetadata","buildStaticAuthorityOptions","DEFAULT_BROWSER_CACHE_MANAGER","nativeCacheOptions","nativeInternalStorage","activeSilentTokenRequests","trackPageVisibility","trackPageVisibilityWithMeasurement","createController","visibilityChangeCount","initCorrelationId","getRequestCorrelationId","initMeasurement","INITIALIZE_START","INITIALIZE_END","redirectResponseKey","handleRedirectPromiseInternal","loggedInAccounts","useNative","HANDLE_REDIRECT_START","nativeClient","redirectClient","createRedirectClient","ACQUIRE_TOKEN_SUCCESS","accountType","HANDLE_REDIRECT_END","eventError","ACQUIRE_TOKEN_FAILURE","LOGIN_FAILURE","atrMeasurement","scenarioId","onRedirectNavigateCb","navigate","isLoggedIn","ACQUIRE_TOKEN_START","LOGIN_START","canUseNative","getNativeAccountId","atPopupMeasurement","acquireTokenNative","createPopupClient","accessTokenSize","idTokenSize","ssoSilentMeasurement","acquireTokenByCodeAsyncMeasurement","SSO_SILENT_START","createSilentIframeClient","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","acquireTokenByCode","atbcMeasurement","ACQUIRE_TOKEN_BY_CODE_START","hybridAuthCode","acquireTokenByCodeAsync","ACQUIRE_TOKEN_BY_CODE_SUCCESS","ACQUIRE_TOKEN_BY_CODE_FAILURE","silentAuthCodeClient","createSilentAuthCodeClient","tokenRenewalError","acquireTokenFromCache","commonRequest","cacheLookupPolicy","CacheLookupPolicy","Default","AccessToken","AccessTokenAndRefreshToken","createSilentCacheClient","RefreshToken","RefreshTokenAndNetwork","silentRefreshClient","createSilentRefreshClient","acquireTokenBySilentIframe","silentIframeClient","clearCache","isInBrowser","getAccountByUsername","getAccountByHomeId","getAccountByLocalId","getTokenCache","setLogger","initializeWrapperLibrary","setNavigationClient","getConfiguration","getPerformanceClient","isBrowserEnv","getEventHandler","DEFAULT_REQUEST","loginPopup","acquireTokenSilent","atsMeasurement","silentRequestKey","cachedResponse","acquireTokenSilentAsync","acquireTokenSilentNoIframe","shouldTryToResolveSilently","refreshTokenError","noInteractionRequired","refreshTokenRefreshRequired","isSilentlyResolvable","tryIframeRenewal","iFrameRenewalPolicies","checkIfRefreshTokenErrorCanBeResolvedSilently","activeIframeRequest","Skip","activePromise","activeCorrelationId","awaitConcurrentIframeMeasure","awaitIframeCorrelationId","activePromiseResult","_resolve","iframeResult","cacheError","ACQUIRE_TOKEN_NETWORK_START","createPublicClientApplication","standard","createV3Controller","localId","userName","BrowserConfigurationAuthErrorMessages","stubbedPublicClientApplicationCalled","BrowserConfigurationAuthError","INTERACTION_IN_PROGRESS_VALUE","ACQUIRE_TOKEN_ACCOUNT","SESSION_STATE","RENEW_STATUS","SCOPES","REDIRECT_CONTEXT","acquireTokenSilent_authCode","InteractionStatus","Startup","Login","Logout","AcquireToken","HandleRedirect","None","WrapperSKU","Angular","AuthErrorMessages","unexpectedError","InteractionRequiredServerErrorMessage","interactionRequired","consentRequired","loginRequired","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","nativeAccountUnavailable","traceId","errorString","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","packageName","packageVersion","setLoggerOptions","createDefaultLoggerOptions","localCallback","defaultLoggerCallback","logMessage","executeCallback","warningPii","Trace","isPiiLoggingEnabled","LIBRARY_NAME","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","EMAIL_SCOPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","AUTHORIZATION_PENDING","NOT_DEFINED","SUCCESS","SUCCESS_RANGE_START","SUCCESS_RANGE_END","REDIRECT","CLIENT_ERROR","BAD_REQUEST","UNAUTHORIZED","NOT_FOUND","REQUEST_TIMEOUT","TOO_MANY_REQUESTS","SERVER_ERROR","SERVICE_UNAVAILABLE","GATEWAY_TIMEOUT","MULTI_SIDED_ERROR","WWWAuthenticate","AuthenticationInfo","CREATE","FORM_POST","IMPLICIT_GRANT","CLIENT_CREDENTIALS_GRANT","RESOURCE_OWNER_PASSWORD_GRANT","DEVICE_CODE_GRANT","JWT_BEARER","MSAV1_ACCOUNT_TYPE","MAX_CUR_HEADER_BYTES","INTERNAL_CACHE","CONFIGURED_MATCHES_DETECTED","CONFIGURED_NOT_DETECTED","Jwt","Jwk","stubbedPublicClientApplication","defaultMsalContext","MsalContext","EventMessageUtils","getInteractionStatusFromEvent","currentStatus","getChildrenOrFunction","accountArraysAreEqual","arrayA","arrayB","comparisonArray","elementA","elementB","MsalProviderActionType","UNBLOCK_INPROGRESS","EVENT","reducer","previousState","newInProgress","currentAccounts","updateState","contextValue","React__default","useIsAuthenticated","matchAccount","isUserAuthenticated","accountIdentifiers","getAccountByIdentifiers","isAuthenticated","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","webpackQueues","webpackExports","webpackError","resolveQueue","hasAwait","currentDeps","outerResolve","depQueues","rej","dep","wrapDeps","getResult","fnQueue","getter","__esModule","definition"],"sourceRoot":""}